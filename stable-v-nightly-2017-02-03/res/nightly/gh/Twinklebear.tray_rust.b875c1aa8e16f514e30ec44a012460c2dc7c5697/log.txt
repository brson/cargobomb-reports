boom! testing https://github.com/Twinklebear/tray_rust#b875c1aa8e16f514e30ec44a012460c2dc7c5697 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! b479942e76e06f69817463f858946e360d09e8f2933cb32e7aa4f841ac89a40f
boom! running `docker start -a b479942e76e06f69817463f858946e360d09e8f2933cb32e7aa4f841ac89a40f`
kablam!    Compiling miniz-sys v0.1.7
kablam!    Compiling tobj v0.1.1
kablam!    Compiling bspline v0.2.2
kablam!    Compiling strsim v0.3.0
kablam!    Compiling serde v0.8.0
kablam!    Compiling nix v0.5.1
kablam!    Compiling rand v0.3.14
kablam!    Compiling memchr v0.1.11
kablam!    Compiling aho-corasick v0.5.2
kablam!    Compiling num-bigint v0.1.33
kablam!    Compiling deque v0.3.1
kablam!    Compiling net2 v0.2.26
kablam!    Compiling num_cpus v0.2.13
kablam!    Compiling serde_json v0.8.0
kablam!    Compiling rayon v0.4.0
kablam!    Compiling num_cpus v1.0.0
kablam!    Compiling bincode v0.6.0
kablam!    Compiling num-rational v0.1.32
kablam!    Compiling num v0.1.34
kablam!    Compiling flate2 v0.2.14
kablam!    Compiling jpeg-decoder v0.1.6
kablam!    Compiling enum_primitive v0.1.0
kablam!    Compiling la v0.2.0
kablam!    Compiling miow v0.1.3
kablam!    Compiling time v0.1.35
kablam!    Compiling thread-id v2.0.0
kablam!    Compiling thread_local v0.2.6
kablam!    Compiling png v0.5.2
kablam!    Compiling regex v0.1.73
kablam!    Compiling mio v0.5.1
kablam!    Compiling image v0.10.3
kablam!    Compiling docopt v0.6.82
kablam!    Compiling tray_rust v0.0.1 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 73.47 secs
boom! running `docker rm -f b479942e76e06f69817463f858946e360d09e8f2933cb32e7aa4f841ac89a40f`
blam! b479942e76e06f69817463f858946e360d09e8f2933cb32e7aa4f841ac89a40f
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! b7ce2e312145db3330913bf9812c4a50f4441127a949e57846abaa6d03008478
boom! running `docker start -a b7ce2e312145db3330913bf9812c4a50f4441127a949e57846abaa6d03008478`
kablam!    Compiling tray_rust v0.0.1 (file:///source)
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/linalg/transform.rs:321:16
kablam!     |
kablam! 321 |     assert_eq!(f32::abs_sub(p.y, 0.0), 0.0);
kablam!     |                ^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/linalg/transform.rs:325:16
kablam!     |
kablam! 325 |     assert_eq!(f32::abs_sub(v.y, 0.0), 0.0);
kablam!     |                ^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/linalg/transform.rs:329:16
kablam!     |
kablam! 329 |     assert_eq!(f32::abs_sub(n.y, 0.0), 0.0);
kablam!     |                ^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/linalg/transform.rs:339:16
kablam!     |
kablam! 339 |     assert_eq!(f32::abs_sub(p.x, 0.0), 0.0);
kablam!     |                ^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/linalg/transform.rs:343:16
kablam!     |
kablam! 343 |     assert_eq!(f32::abs_sub(v.x, 0.0), 0.0);
kablam!     |                ^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/linalg/transform.rs:347:16
kablam!     |
kablam! 347 |     assert_eq!(f32::abs_sub(n.x, 0.0), 0.0);
kablam!     |                ^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/linalg/transform.rs:358:16
kablam!     |
kablam! 358 |     assert_eq!(f32::abs_sub(p.x, 0.0), 0.0);
kablam!     |                ^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/linalg/transform.rs:362:16
kablam!     |
kablam! 362 |     assert_eq!(f32::abs_sub(v.x, 0.0), 0.0);
kablam!     |                ^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/linalg/transform.rs:366:16
kablam!     |
kablam! 366 |     assert_eq!(f32::abs_sub(n.x, 0.0), 0.0);
kablam!     |                ^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 18.28 secs
boom! running `docker rm -f b7ce2e312145db3330913bf9812c4a50f4441127a949e57846abaa6d03008478`
blam! b7ce2e312145db3330913bf9812c4a50f4441127a949e57846abaa6d03008478
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 8e0df5f3abec9d7aeb61ec9db6142c167943828f35a14074a1b3fc627be60f22
boom! running `docker start -a 8e0df5f3abec9d7aeb61ec9db6142c167943828f35a14074a1b3fc627be60f22`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/tray_rust-fd2bbb9290110239
blam! 
blam! running 17 tests
blam! test linalg::matrix4::test_mul ... ok
blam! test linalg::matrix4::test_sub ... ok
blam! test linalg::normal::test_face_fwd ... ok
blam! test linalg::matrix4::test_add ... ok
blam! test linalg::point::test_distance_sqr ... ok
blam! test linalg::test_cross ... ok
blam! test linalg::test_dot ... ok
blam! test linalg::transform::test_mult_sanity ... ok
blam! test linalg::transform::test_rotate_z ... ok
blam! test linalg::transform::test_rotate ... ok
blam! test linalg::transform::test_rotate_x ... ok
blam! test linalg::transform::test_rotate_y ... ok
blam! test linalg::transform::test_scale ... ok
blam! test linalg::vector::test_idx ... ok
blam! test linalg::transform::test_translate ... ok
blam! test partition::test_partition ... ok
blam! test linalg::vector::test_len_sqr ... ok
blam! 
blam! test result: ok. 17 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/tray_rust-910e447ae0caa38a
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests tray_rust
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 8e0df5f3abec9d7aeb61ec9db6142c167943828f35a14074a1b3fc627be60f22`
blam! 8e0df5f3abec9d7aeb61ec9db6142c167943828f35a14074a1b3fc627be60f22
