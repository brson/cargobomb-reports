boom! testing https://github.com/gadomski/riscan-pro#f132570e4ec34e68f8e7c91f6c0e1217b3c8fab3 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 8fa8de371c26b6351cc375c8e17b7611fc7ec42d9e929f17417c1e4edeaf6f27
boom! running `docker start -a 8fa8de371c26b6351cc375c8e17b7611fc7ec42d9e929f17417c1e4edeaf6f27`
kablam!    Compiling rand v0.3.15
kablam!    Compiling regex v0.2.1
kablam!    Compiling num-bigint v0.1.35
kablam!    Compiling num-rational v0.1.35
kablam!    Compiling num v0.1.36
kablam!    Compiling nalgebra v0.10.1
kablam!    Compiling docopt v0.7.0
kablam!    Compiling riscan-pro v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 31.94 secs
boom! running `docker rm -f 8fa8de371c26b6351cc375c8e17b7611fc7ec42d9e929f17417c1e4edeaf6f27`
blam! 8fa8de371c26b6351cc375c8e17b7611fc7ec42d9e929f17417c1e4edeaf6f27
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 651373b73c9cfac4d5bb0576ce82235737cf1388df3b3a8a84d7d7c2d08e69d6
boom! running `docker start -a 651373b73c9cfac4d5bb0576ce82235737cf1388df3b3a8a84d7d7c2d08e69d6`
kablam!    Compiling riscan-pro v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 4.86 secs
boom! running `docker rm -f 651373b73c9cfac4d5bb0576ce82235737cf1388df3b3a8a84d7d7c2d08e69d6`
blam! 651373b73c9cfac4d5bb0576ce82235737cf1388df3b3a8a84d7d7c2d08e69d6
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 2488b9a742c7023be046c881c87f3204cb9a9c662f667e4d623f276db5ccf619
boom! running `docker start -a 2488b9a742c7023be046c881c87f3204cb9a9c662f667e4d623f276db5ccf619`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/riscan_pro-9e8551b113196cf7
blam! 
blam! running 4 tests
blam! test project::tests::project_add_scan_position ... ok
blam! test project::tests::project_set_pop ... ok
blam! test project::tests::project_read_from ... ok
blam! test scan_position::tests::scan_position_glcs ... ok
blam! 
blam! test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/riscan_pro-b81e847cfc221262
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests riscan-pro
blam! 
blam! running 24 tests
blam! test project::Project::add_scan_position_0 ... ok
blam! warning: unused variable: `project`, #[warn(unused_variables)] on by default
blam!  --> <anon>:4:5
blam!   |
blam! 4 | let project = Project::from_path("data/project.RiSCAN").unwrap();
blam!   |     ^^^^^^^
blam! 
blam! test _0 ... ok
blam! warning: unused variable: `project`, #[warn(unused_variables)] on by default
blam!  --> <anon>:4:5
blam!   |
blam! 4 | let project = Project::from_path("data/project.RiSCAN/project.rsp").unwrap();
blam!   |     ^^^^^^^
blam! 
blam! test _1 ... ok
blam! warning: unused variable: `project`, #[warn(unused_variables)] on by default
blam!  --> <anon>:4:5
blam!   |
blam! 4 | let project = Project::from_path("data/project.RiSCAN").unwrap();
blam!   |     ^^^^^^^
blam! 
blam! warning: unused variable: `project`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let project = Project::from_path("data/project.RiSCAN/project.rsp").unwrap();
blam!   |     ^^^^^^^
blam! 
blam! test project::Project::from_path_0 ... ok
blam! warning: unused variable: `project`, #[warn(unused_variables)] on by default
blam!  --> <anon>:4:5
blam!   |
blam! 4 | let project = Project::new();
blam!   |     ^^^^^^^
blam! 
blam! test project::Project::new_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:4:5
blam!   |
blam! 4 | let mut project = Project::new();
blam!   |     ^^^^^^^^^^^
blam! 
blam! warning: unused variable: `pop`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let pop = project.pop();
blam!   |     ^^^
blam! 
blam! test project::Project::pop_0 ... ok
blam! test project::Project::path_0 ... ok
blam! test project::Project::scan_position_0 ... ok
blam! warning: unused variable: `scan_positions`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let scan_positions = project.scan_positions();
blam!   |     ^^^^^^^^^^^^^^
blam! 
blam! test project::Project::scan_positions_0 ... ok
blam! test project::Project::set_pop_0 ... ok
blam! test scan::Scan::name_0 ... ok
blam! warning: unused variable: `scan`, #[warn(unused_variables)] on by default
blam!  --> <anon>:4:5
blam!   |
blam! 4 | let scan = Scan::new();
blam!   |     ^^^^
blam! 
blam! test scan::Scan::new_0 ... ok
blam! test scan::Scan::set_name_0 ... ok
blam! test scan_position::ScanPosition::add_scan_0 ... ok
blam! test scan_position::ScanPosition::name_0 ... ok
blam! warning: unused variable: `scan_position`, #[warn(unused_variables)] on by default
blam!  --> <anon>:4:5
blam!   |
blam! 4 | let scan_position = ScanPosition::new();
blam!   |     ^^^^^^^^^^^^^
blam! 
blam! test scan_position::ScanPosition::new_0 ... ok
blam! warning: unused variable: `pop`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let pop = scan_position.pop();
blam!   |     ^^^
blam! 
blam! test scan_position::ScanPosition::pop_0 ... ok
blam! warning: unused variable: `scan_position`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let scan_position = ScanPosition::from_path(path).unwrap();
blam!   |     ^^^^^^^^^^^^^
blam! 
blam! test scan_position::ScanPosition::from_path_0 ... ok
blam! test scan_position::ScanPosition::set_name_0 ... ok
blam! test scan_position::ScanPosition::set_pop_0 ... ok
blam! test scan_position::ScanPosition::set_sop_0 ... ok
blam! warning: unused variable: `x`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:6
blam!   |
blam! 5 | let (x, y, z) = scan_position.socs_to_glcs((1., 2., 3.));
blam!   |      ^
blam! 
blam! warning: unused variable: `y`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:9
blam!   |
blam! 5 | let (x, y, z) = scan_position.socs_to_glcs((1., 2., 3.));
blam!   |         ^
blam! 
blam! warning: unused variable: `z`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:12
blam!   |
blam! 5 | let (x, y, z) = scan_position.socs_to_glcs((1., 2., 3.));
blam!   |            ^
blam! 
blam! test scan_position::ScanPosition::socs_to_glcs_0 ... ok
blam! warning: unused variable: `scan`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let scan = scan_position.scan("151120_150404").unwrap();
blam!   |     ^^^^
blam! 
blam! test scan_position::ScanPosition::scan_0 ... ok
blam! warning: unused variable: `sop`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let sop = scan_position.sop();
blam!   |     ^^^
blam! 
blam! test scan_position::ScanPosition::sop_0 ... ok
blam! 
blam! test result: ok. 24 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 2488b9a742c7023be046c881c87f3204cb9a9c662f667e4d623f276db5ccf619`
blam! 2488b9a742c7023be046c881c87f3204cb9a9c662f667e4d623f276db5ccf619
