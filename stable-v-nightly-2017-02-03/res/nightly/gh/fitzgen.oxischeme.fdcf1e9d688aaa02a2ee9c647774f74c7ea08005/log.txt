boom! testing https://github.com/fitzgen/oxischeme#fdcf1e9d688aaa02a2ee9c647774f74c7ea08005 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! c629accf59dd0b3755f81cf2bd1de42b4996b7038279c10aa1a0b44b0086f214
boom! running `docker start -a c629accf59dd0b3755f81cf2bd1de42b4996b7038279c10aa1a0b44b0086f214`
kablam!    Compiling oxischeme v0.0.3 (file:///source)
kablam! error[E0432]: unresolved import `std::old_io`
kablam!   --> src/main.rs:26:5
kablam!    |
kablam! 26 | use std::old_io;
kablam!    |     ^^^^^^^^^^^ no `old_io` in the root
kablam! 
kablam! error[E0432]: unresolved import `std::collections::BitVec`
kablam!    --> src/heap.rs:133:24
kablam!     |
kablam! 133 | use std::collections::{BitVec, HashMap};
kablam!     |                        ^^^^^^ no `BitVec` in `collections`
kablam! 
kablam! error[E0432]: unresolved import `std::old_io`
kablam!    --> src/primitives.rs:131:9
kablam!     |
kablam! 131 |     use std::old_io;
kablam!     |         ^^^^^^^^^^^ no `old_io` in the root
kablam! 
kablam! error[E0432]: unresolved import `std::old_io::BufferedReader`
kablam!   --> src/read.rs:20:19
kablam!    |
kablam! 20 | use std::old_io::{BufferedReader, File, IoError, IoErrorKind, IoResult, MemReader};
kablam!    |                   ^^^^^^^^^^^^^^ Could not find `old_io` in `std`
kablam! 
kablam! error[E0432]: unresolved import `std::old_io::File`
kablam!   --> src/read.rs:20:35
kablam!    |
kablam! 20 | use std::old_io::{BufferedReader, File, IoError, IoErrorKind, IoResult, MemReader};
kablam!    |                                   ^^^^ Could not find `old_io` in `std`
kablam! 
kablam! error[E0432]: unresolved import `std::old_io::IoError`
kablam!   --> src/read.rs:20:41
kablam!    |
kablam! 20 | use std::old_io::{BufferedReader, File, IoError, IoErrorKind, IoResult, MemReader};
kablam!    |                                         ^^^^^^^ Could not find `old_io` in `std`
kablam! 
kablam! error[E0432]: unresolved import `std::old_io::IoErrorKind`
kablam!   --> src/read.rs:20:50
kablam!    |
kablam! 20 | use std::old_io::{BufferedReader, File, IoError, IoErrorKind, IoResult, MemReader};
kablam!    |                                                  ^^^^^^^^^^^ Could not find `old_io` in `std`
kablam! 
kablam! error[E0432]: unresolved import `std::old_io::IoResult`
kablam!   --> src/read.rs:20:63
kablam!    |
kablam! 20 | use std::old_io::{BufferedReader, File, IoError, IoErrorKind, IoResult, MemReader};
kablam!    |                                                               ^^^^^^^^ Could not find `old_io` in `std`
kablam! 
kablam! error[E0432]: unresolved import `std::old_io::MemReader`
kablam!   --> src/read.rs:20:73
kablam!    |
kablam! 20 | use std::old_io::{BufferedReader, File, IoError, IoErrorKind, IoResult, MemReader};
kablam!    |                                                                         ^^^^^^^^^ Could not find `old_io` in `std`
kablam! 
kablam! error[E0425]: cannot find function `range` in this scope
kablam!    --> src/heap.rs:168:19
kablam!     |
kablam! 168 |             pool: range(0, capacity).map(|_| Default::default()).collect(),
kablam!     |                   ^^^^^ not found in this scope
kablam! 
kablam! error[E0425]: cannot find function `range` in this scope
kablam!    --> src/heap.rs:169:19
kablam!     |
kablam! 169 |             free: range(0, capacity).collect(),
kablam!     |                   ^^^^^ not found in this scope
kablam! 
kablam! error[E0425]: cannot find function `range` in this scope
kablam!    --> src/heap.rs:207:21
kablam!     |
kablam! 207 |         self.free = range(0, self.capacity())
kablam!     |                     ^^^^^ not found in this scope
kablam! 
kablam! error[E0405]: cannot find trait `Reader` in this scope
kablam!   --> src/read.rs:30:9
kablam!    |
kablam! 30 | impl<R: Reader> CharReader<R> {
kablam!    |         ^^^^^^ not found in this scope
kablam! 
kablam! error[E0405]: cannot find trait `Reader` in this scope
kablam!   --> src/read.rs:39:9
kablam!    |
kablam! 39 | impl<R: Reader> Iterator for CharReader<R> {
kablam!    |         ^^^^^^ not found in this scope
kablam! 
kablam! error[E0405]: cannot find trait `Reader` in this scope
kablam!    --> src/read.rs:146:20
kablam!     |
kablam! 146 | pub struct Read<R: Reader> {
kablam!     |                    ^^^^^^ not found in this scope
kablam! 
kablam! error[E0405]: cannot find trait `Reader` in this scope
kablam!    --> src/read.rs:154:13
kablam!     |
kablam! 154 | impl<'a, R: Reader> Read<R> {
kablam!     |             ^^^^^^ not found in this scope
kablam! 
kablam! error[E0405]: cannot find trait `Reader` in this scope
kablam!    --> src/read.rs:544:9
kablam!     |
kablam! 544 | impl<R: Reader> Iterator for Read<R> {
kablam!     |         ^^^^^^ not found in this scope
kablam! 
kablam! error[E0433]: failed to resolve. Use of undeclared type or module `Path`
kablam!    --> src/read.rs:606:16
kablam!     |
kablam! 606 |     let path = Path::new(path_name);
kablam!     |                ^^^^^^^^^ Use of undeclared type or module `Path`
kablam! 
kablam! error: The attribute `unsafe_destructor` is currently unknown to the compiler and may have meaning added to it in the future (see issue #29642)
kablam!    --> src/heap.rs:431:1
kablam!     |
kablam! 431 | #[unsafe_destructor]
kablam!     | ^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(custom_attribute)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!   --> src/primitives.rs:27:12
kablam!    |
kablam! 27 |     if let [ref car, ref cdr] = args.as_slice() {
kablam!    |            ^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!   --> src/primitives.rs:35:12
kablam!    |
kablam! 35 |     if let [ref arg] = args.as_slice() {
kablam!    |            ^^^^^^^^^
kablam!    |
kablam!    = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!   --> src/primitives.rs:45:12
kablam!    |
kablam! 45 |     if let [ref mut cons, ref val] = args.as_mut_slice() {
kablam!    |            ^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!   --> src/primitives.rs:57:12
kablam!    |
kablam! 57 |     if let [ref arg] = args.as_slice() {
kablam!    |            ^^^^^^^^^
kablam!    |
kablam!    = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!   --> src/primitives.rs:67:12
kablam!    |
kablam! 67 |     if let [ref mut cons, ref val] = args.as_mut_slice() {
kablam!    |            ^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!   --> src/primitives.rs:84:12
kablam!    |
kablam! 84 |     if let [ref arg] = args.as_slice() {
kablam!    |            ^^^^^^^^^
kablam!    |
kablam!    = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!   --> src/primitives.rs:99:12
kablam!    |
kablam! 99 |     if let [ref proc_val, ref args] = args.as_slice() {
kablam!    |            ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/primitives.rs:148:12
kablam!     |
kablam! 148 |     if let [ref arg] = args.as_slice() {
kablam!     |            ^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/primitives.rs:159:12
kablam!     |
kablam! 159 |     if let [ref arg] = args.as_slice() {
kablam!     |            ^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/primitives.rs:168:12
kablam!     |
kablam! 168 |     if let [ref arg] = args.as_slice() {
kablam!     |            ^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/primitives.rs:179:12
kablam!     |
kablam! 179 |     if let [ref arg] = args.as_slice() {
kablam!     |            ^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/primitives.rs:190:12
kablam!     |
kablam! 190 |     if let [ref a, ref b] = args.as_slice() {
kablam!     |            ^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/primitives.rs:198:12
kablam!     |
kablam! 198 |     if let [ref arg] = args.as_slice() {
kablam!     |            ^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/primitives.rs:209:12
kablam!     |
kablam! 209 |     if let [ref arg] = args.as_slice() {
kablam!     |            ^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/primitives.rs:220:12
kablam!     |
kablam! 220 |     if let [ref arg] = args.as_slice() {
kablam!     |            ^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/primitives.rs:231:12
kablam!     |
kablam! 231 |     if let [ref a, ref b] = args.as_slice() {
kablam!     |            ^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/primitives.rs:244:12
kablam!     |
kablam! 244 |     if let [ref a, ref b] = args.as_slice() {
kablam!     |            ^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/primitives.rs:257:12
kablam!     |
kablam! 257 |     if let [ref a, ref b] = args.as_slice() {
kablam!     |            ^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/primitives.rs:270:12
kablam!     |
kablam! 270 |     if let [ref a, ref b] = args.as_slice() {
kablam!     |            ^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/primitives.rs:283:12
kablam!     |
kablam! 283 |     if let [ref a, ref b] = args.as_slice() {
kablam!     |            ^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/primitives.rs:296:12
kablam!     |
kablam! 296 |     if let [ref a, ref b] = args.as_slice() {
kablam!     |            ^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/primitives.rs:312:12
kablam!     |
kablam! 312 |     if let [ref a, ref b] = args.as_slice() {
kablam!     |            ^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/read.rs:297:13
kablam!     |
kablam! 297 |             [Some(c), d] if is_eof_or_delimiter(&d) => {
kablam!     |             ^^^^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/read.rs:302:13
kablam!     |
kablam! 302 |             [Some('n'), Some('e')] => match [self.next_char(),
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/read.rs:309:17
kablam!     |
kablam! 309 |                   [Some('e'),
kablam!     |  _________________^ starting here...
kablam! 310 | |                  Some('w'),
kablam! 311 | |                  Some('l'),
kablam! 312 | |                  Some('i'),
kablam! 313 | |                  Some('n'),
kablam! 314 | |                  Some('e'),
kablam! 315 | |                  d] if is_eof_or_delimiter(&d) => {
kablam!     | |___________________^ ...ending here
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/read.rs:322:13
kablam!     |
kablam! 322 |             [Some('s'), Some('p')] => match [self.next_char(),
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/read.rs:327:17
kablam!     |
kablam! 327 |                   [Some('p'),
kablam!     |  _________________^ starting here...
kablam! 328 | |                  Some('a'),
kablam! 329 | |                  Some('c'),
kablam! 330 | |                  Some('e'),
kablam! 331 | |                  d] if is_eof_or_delimiter(&d) => {
kablam!     | |___________________^ ...ending here
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/read.rs:338:13
kablam!     |
kablam! 338 |             [Some('t'), Some('a')] => match [self.next_char(),
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/read.rs:341:17
kablam!     |
kablam! 341 |                   [Some('a'),
kablam!     |  _________________^ starting here...
kablam! 342 | |                  Some('b'),
kablam! 343 | |                  d] if is_eof_or_delimiter(&d) => {
kablam!     | |___________________^ ...ending here
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/read.rs:363:13
kablam!     |
kablam! 363 |             [Some('t'), d] if is_eof_or_delimiter(&d)  => {
kablam!     |             ^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/read.rs:366:13
kablam!     |
kablam! 366 |             [Some('f'), d] if is_eof_or_delimiter(&d)  => {
kablam!     |             ^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/read.rs:369:13
kablam!     |
kablam! 369 |             [Some('\\'), _]                            => {
kablam!     |             ^^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: slice pattern syntax is experimental (see issue #23121)
kablam!    --> src/read.rs:372:13
kablam!     |
kablam! 372 |             [Some(c), _]                               => {
kablam!     |             ^^^^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(slice_patterns)] to the crate attributes to enable
kablam! 
kablam! error: aborting due to 34 previous errors
kablam! 
kablam! error: Could not compile `oxischeme`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f c629accf59dd0b3755f81cf2bd1de42b4996b7038279c10aa1a0b44b0086f214`
blam! c629accf59dd0b3755f81cf2bd1de42b4996b7038279c10aa1a0b44b0086f214
