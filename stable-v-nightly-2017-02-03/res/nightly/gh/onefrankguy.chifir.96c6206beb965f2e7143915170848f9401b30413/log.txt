boom! testing https://github.com/onefrankguy/chifir#96c6206beb965f2e7143915170848f9401b30413 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 534e90530a07882f05bd02221ac4b33b058339095f730031f32dc216c043d343
boom! running `docker start -a 534e90530a07882f05bd02221ac4b33b058339095f730031f32dc216c043d343`
kablam!    Compiling termion v1.1.1
kablam!    Compiling chifir v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 6.19 secs
boom! running `docker rm -f 534e90530a07882f05bd02221ac4b33b058339095f730031f32dc216c043d343`
blam! 534e90530a07882f05bd02221ac4b33b058339095f730031f32dc216c043d343
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! ef060676c7924213d8a0b32283b2eb3f2087d8b34d513c01eb685a42370ffa1a
boom! running `docker start -a ef060676c7924213d8a0b32283b2eb3f2087d8b34d513c01eb685a42370ffa1a`
kablam!    Compiling chifir v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 4.8 secs
boom! running `docker rm -f ef060676c7924213d8a0b32283b2eb3f2087d8b34d513c01eb685a42370ffa1a`
blam! ef060676c7924213d8a0b32283b2eb3f2087d8b34d513c01eb685a42370ffa1a
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 28fce33aa0e42806d25c0925d60f9c09f8b858ca4379662c1ee71d08d8cbf86c
boom! running `docker start -a 28fce33aa0e42806d25c0925d60f9c09f8b858ca4379662c1ee71d08d8cbf86c`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/chifir-6ab399fbc34bb190
blam! 
blam! running 64 tests
blam! test compiler::tests::it_compiles_addresses_for_labels ... ok
blam! test compiler::tests::it_ignores_trailing_label_characters ... ok
blam! test compiler::tests::it_compiles_the_simple_ctrl_c_example ... ok
blam! test compiler::tests::it_lets_the_last_label_win ... ok
blam! test compiler::tests::it_parses_brk_as_opcode_0 ... ok
blam! test compiler::tests::it_ignors_trailing_separators ... ok
blam! test compiler::tests::it_parses_hex_for_opcode_0 ... ok
blam! test compiler::tests::it_parses_operand_a_as_a_label ... ok
blam! test compiler::tests::it_parses_operand_a_as_hex ... ok
blam! test compiler::tests::it_parses_operand_b_as_hex ... ok
blam! test compiler::tests::it_parses_operand_b_as_a_label ... ok
blam! test compiler::tests::it_parses_operand_c_as_a_label ... ok
blam! test compiler::tests::it_parses_operand_c_as_hex ... ok
blam! test compiler::tests::it_parses_operands_as_relative_addresses ... ok
blam! test compiler::tests::it_splits_lines_by_carriage_return ... ok
blam! test compiler::tests::it_splits_lines_by_carriage_return_line_feed ... ok
blam! test compiler::tests::it_splits_lines_by_form_feed ... ok
blam! test compiler::tests::it_splits_lines_by_line_feed ... ok
blam! test compiler::tests::it_returns_an_error_when_compiling_invalid_utf8 ... ok
blam! test compiler::tests::it_splits_lines_by_line_separator ... ok
blam! test compiler::tests::it_splits_lines_by_next_line ... ok
blam! test compiler::tests::it_splits_lines_by_vertical_tab ... ok
blam! test compiler::tests::it_compiles_the_complex_ctrl_c_example ... ok
blam! test compiler::tests::it_splits_lines_by_paragraph_separator ... ok
blam! test compiler::tests::it_strips_inline_comments ... ok
blam! test compiler::tests::it_strips_inline_comments_starting_with_spaces ... ok
blam! test compiler::tests::it_strips_inline_comments_starting_with_tabs ... ok
blam! test compiler::tests::it_strips_single_line_comments_starting_with_tabs ... ok
blam! test compiler::tests::it_trims_spaces_from_instructions ... ok
blam! test compiler::tests::it_trims_tabs_from_instructions ... ok
blam! test computer::tests::it_prevents_divide_by_zero_errors_when_running_opcode_10 ... ok
blam! test computer::tests::it_prevents_overflow_when_running_opcode_7 ... ok
blam! test computer::tests::it_prevents_overflow_when_running_opcode_9 ... ok
blam! test computer::tests::it_prevents_overflow_while_runing_opcode_8 ... ok
blam! test compiler::tests::it_strips_single_line_comments ... ok
blam! test computer::tests::it_prevents_divide_by_zero_errors_when_running_opcode_11 ... ok
blam! test computer::tests::it_runs_opcode_0 ... ok
blam! test computer::tests::it_runs_opcode_1 ... ok
blam! test compiler::tests::it_strips_single_line_comments_starting_with_spaces ... ok
blam! test computer::tests::it_runs_opcode_10 ... ok
blam! test computer::tests::it_runs_opcode_11 ... ok
blam! test computer::tests::it_runs_opcode_12_else_branch ... ok
blam! test computer::tests::it_runs_opcode_12_then_branch ... ok
blam! test computer::tests::it_provides_safe_memory_access_when_stepping ... ok
blam! test computer::tests::it_runs_opcode_13 ... ok
blam! test computer::tests::it_runs_opcode_15_blocking ... ok
blam! test computer::tests::it_runs_opcode_17 ... ok
blam! test computer::tests::it_runs_opcode_15_non_blocking ... ok
blam! test computer::tests::it_runs_opcode_16 ... ok
blam! test computer::tests::it_runs_opcode_3 ... ok
blam! test computer::tests::it_runs_opcode_4 ... ok
blam! test computer::tests::it_runs_opcode_2_else_branch ... ok
blam! test computer::tests::it_runs_opcode_2_then_branch ... ok
blam! test computer::tests::it_runs_opcode_5 ... ok
blam! test computer::tests::it_runs_opcode_6 ... ok
blam! test computer::tests::it_runs_opcode_7 ... ok
blam! test computer::tests::it_runs_opcode_9 ... ok
blam! test sixel::tests::it_converts_000000_to_question_mark ... ok
blam! test sixel::tests::it_converts_000111_to_w ... ok
blam! test sixel::tests::it_converts_111000_to_capital_f ... ok
blam! test sixel::tests::it_converts_111111_to_tilde ... ok
blam! test sixel::tests::it_displays_capital_a ... ok
blam! test computer::tests::it_runs_opcode_8 ... ok
blam! test computer::tests::it_runs_opcode_14 ... ok
blam! 
blam! test result: ok. 64 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/chifir-afb1ae971efd8882
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
kablam!    Doc-tests chifir
blam! 
blam! 
blam! running 15 tests
blam! warning: unused import: `chifir::computer::Computer`, #[warn(unused_imports)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | use chifir::computer::Computer;
blam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! test compiler_0 ... ok
blam! test compiler_2 ... ok
blam! test compiler_3 ... ok
blam! test compiler_1 ... ok
blam! test computer::Computer::input_1 ... ok
blam! test computer::Computer::dump_0 ... ok
blam! test compiler_4 ... ok
blam! test computer::Computer::input_0 ... ok
blam! test computer::Computer::load_0 ... ok
blam! test computer::Computer::load_from_slice_0 ... ok
blam! test computer::Computer::next_0 ... ok
blam! test computer::Computer::new_0 ... ok
blam! test computer::Computer::step_0 ... ok
blam! test computer::Computer::output_1 ... ok
blam! test computer::Computer::output_0 ... ok
blam! 
blam! test result: ok. 15 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 28fce33aa0e42806d25c0925d60f9c09f8b858ca4379662c1ee71d08d8cbf86c`
blam! 28fce33aa0e42806d25c0925d60f9c09f8b858ca4379662c1ee71d08d8cbf86c
