boom! testing https://github.com/millere/bf#cde8a51673f5b16771bd577a615cf474205dc20d against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! e4c41e2558ed0c1aeb0896898b6a3a24cb44f67c5e0ccf1defd59a63cda80173
boom! running `docker start -a e4c41e2558ed0c1aeb0896898b6a3a24cb44f67c5e0ccf1defd59a63cda80173`
kablam!    Compiling bf v0.0.1 (file:///source)
kablam! warning: unused import: `std::io::Read`, #[warn(unused_imports)] on by default
kablam!  --> src/main.rs:2:5
kablam!   |
kablam! 2 | use std::io::Read;
kablam!   |     ^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> src/main.rs:14:22
kablam!    |
kablam! 14 |             b'.' => {output.write(&mut buffer[mptr .. mptr+1]);},
kablam!    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.7 secs
boom! running `docker rm -f e4c41e2558ed0c1aeb0896898b6a3a24cb44f67c5e0ccf1defd59a63cda80173`
blam! e4c41e2558ed0c1aeb0896898b6a3a24cb44f67c5e0ccf1defd59a63cda80173
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! a79c17a1058cf86edaac8210e175d274d91240db03422803b1b79d5437142a07
boom! running `docker start -a a79c17a1058cf86edaac8210e175d274d91240db03422803b1b79d5437142a07`
kablam!    Compiling bf v0.0.1 (file:///source)
kablam! warning: unused import: `std::io::Read`, #[warn(unused_imports)] on by default
kablam!  --> src/main.rs:2:5
kablam!   |
kablam! 2 | use std::io::Read;
kablam!   |     ^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> src/main.rs:14:22
kablam!    |
kablam! 14 |             b'.' => {output.write(&mut buffer[mptr .. mptr+1]);},
kablam!    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.20 secs
boom! running `docker rm -f a79c17a1058cf86edaac8210e175d274d91240db03422803b1b79d5437142a07`
blam! a79c17a1058cf86edaac8210e175d274d91240db03422803b1b79d5437142a07
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 52f628475f384855fdfe53a2f3b130078071cbef649ff239b504eb769a48b05a
boom! running `docker start -a 52f628475f384855fdfe53a2f3b130078071cbef649ff239b504eb769a48b05a`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/bf-c8a1bd254795c37d
blam! 
blam! running 1 test
blam! test test_brainfuck ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- test_brainfuck stdout ----
blam! 	thread 'test_brainfuck' panicked at 'assertion failed: String::from_utf8(output).unwrap() == "Hello, world!"', src/main.rs:75
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! 
blam! failures:
blam!     test_brainfuck
blam! 
blam! test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f 52f628475f384855fdfe53a2f3b130078071cbef649ff239b504eb769a48b05a`
blam! 52f628475f384855fdfe53a2f3b130078071cbef649ff239b504eb769a48b05a
