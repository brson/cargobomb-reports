boom! testing geo-0.3.2 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 3e99fed270aff80854c2a8e4ed60025bb559b1acba365858a5ea9a2f20a91552
boom! running `docker start -a 3e99fed270aff80854c2a8e4ed60025bb559b1acba365858a5ea9a2f20a91552`
kablam!    Compiling geo v0.3.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.85 secs
boom! running `docker rm -f 3e99fed270aff80854c2a8e4ed60025bb559b1acba365858a5ea9a2f20a91552`
blam! 3e99fed270aff80854c2a8e4ed60025bb559b1acba365858a5ea9a2f20a91552
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 308febf43159e60ac64701b10dc8055a341a4ffd549ec24ff4f7366608203c52
boom! running `docker start -a 308febf43159e60ac64701b10dc8055a341a4ffd549ec24ff4f7366608203c52`
kablam!    Compiling geo v0.3.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 6.21 secs
boom! running `docker rm -f 308febf43159e60ac64701b10dc8055a341a4ffd549ec24ff4f7366608203c52`
blam! 308febf43159e60ac64701b10dc8055a341a4ffd549ec24ff4f7366608203c52
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 70749b3b6bde5472eb56ac9f6ecd2b59cd3a03ff6a9c01695f95b6da2340ed2f
boom! running `docker start -a 70749b3b6bde5472eb56ac9f6ecd2b59cd3a03ff6a9c01695f95b6da2340ed2f`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/geo-09545fa2924b6f5d
blam! 
blam! running 88 tests
blam! test algorithm::area::test::area_one_point_polygon_test ... ok
blam! test algorithm::area::test::area_multipolygon_test ... ok
blam! test algorithm::area::test::bbox_test ... ok
blam! test algorithm::area::test::area_polygon_test ... ok
blam! test algorithm::area::test::area_empty_polygon_test ... ok
blam! test algorithm::area::test::area_polygon_inner_test ... ok
blam! test algorithm::boundingbox::test::empty_linestring_test ... ok
blam! test algorithm::boundingbox::test::multilinestring_test ... ok
blam! test algorithm::boundingbox::test::multipoint_test ... ok
blam! test algorithm::boundingbox::test::linestring_one_point_test ... ok
blam! test algorithm::boundingbox::test::linestring_test ... ok
blam! test algorithm::centroid::test::bbox_test ... ok
blam! test algorithm::centroid::test::empty_linestring_test ... ok
blam! test algorithm::boundingbox::test::multipolygon_test ... ok
blam! test algorithm::boundingbox::test::polygon_test ... ok
blam! test algorithm::centroid::test::empty_multipolygon_polygon_test ... ok
blam! test algorithm::centroid::test::linestring_one_point_test ... ok
blam! test algorithm::centroid::test::linestring_test ... ok
blam! test algorithm::centroid::test::empty_polygon_test ... ok
blam! test algorithm::centroid::test::multipolygon_one_polygon_test ... ok
blam! test algorithm::centroid::test::multipolygon_two_polygons_test ... ok
blam! test algorithm::centroid::test::polygon_test ... ok
blam! test algorithm::centroid::test::polygon_one_point_test ... ok
blam! test algorithm::contains::test::empty_multipolygon_two_polygons_and_inner_test ... ok
blam! test algorithm::contains::test::empty_linestring_test ... ok
blam! test algorithm::contains::test::bbox_in_inner_bbox_test ... ok
blam! test algorithm::contains::test::empty_multipolygon_two_polygons_test ... ok
blam! test algorithm::contains::test::empty_multipolygon_test ... ok
blam! test algorithm::contains::test::empty_polygon_test ... ok
blam! test algorithm::contains::test::linestring_in_inner_polygon_test ... ok
blam! test algorithm::contains::test::linestring_in_polygon_with_linestring_is_boundary_test ... ok
blam! test algorithm::contains::test::linestring_test ... ok
blam! test algorithm::contains::test::point_out_polygon_test ... ok
blam! test algorithm::contains::test::linestring_outside_polygon_test ... ok
blam! test algorithm::contains::test::linestring_point_is_vertex_test ... ok
blam! test algorithm::contains::test::point_in_polygon_test ... ok
blam! test algorithm::contains::test::point_polygon_with_inner_test ... ok
blam! test algorithm::distance::test::distance1_test ... ok
blam! test algorithm::contains::test::polygon_with_one_point_is_vertex_test ... ok
blam! test algorithm::contains::test::polygon_with_one_point_test ... ok
blam! test algorithm::contains::test::polygon_with_point_on_boundary_test ... ok
blam! test algorithm::distance::test::distance2_test ... ok
blam! test algorithm::distance::test::line_segment_distance_test ... ok
blam! test algorithm::distance::test::point_linestring_contains_test ... ok
blam! test algorithm::distance::test::point_linestring_distance_test ... ok
blam! test algorithm::distance::test::point_polygon_distance_boundary_test ... ok
blam! test algorithm::distance::test::point_polygon_distance_outside_test ... ok
blam! test algorithm::distance::test::point_polygon_distance_inside_test ... ok
blam! test algorithm::distance::test::point_linestring_empty_test ... ok
blam! test algorithm::distance::test::point_linestring_triangle_test ... ok
blam! test algorithm::distance::test::point_polygon_interior_cutout_test ... ok
blam! test algorithm::intersects::test::bbox_test ... ok
blam! test algorithm::distance::test::point_polygon_empty_test ... ok
blam! test algorithm::intersects::test::empty_all_linestring_test ... ok
blam! test algorithm::intersects::test::empty_linestring2_test ... ok
blam! test algorithm::intersects::test::empty_linestring1_test ... ok
blam! test algorithm::intersects::test::intersect_linestring_polygon_test ... ok
blam! test algorithm::intersects::test::intersect_linestring_test ... ok
blam! test algorithm::intersects::test::linestring_in_inner_polygon_test ... ok
blam! test algorithm::intersects::test::linestring_in_inner_with_2_inner_polygon_test ... ok
blam! test algorithm::intersects::test::linestring_on_boundary_polygon_test ... ok
blam! test algorithm::intersects::test::linestring_in_polygon_test ... ok
blam! test algorithm::intersects::test::linestring_outside_polygon_test ... ok
blam! test algorithm::intersects::test::linestring_traverse_polygon_test ... ok
blam! test algorithm::intersects::test::polygon_contained ... ok
blam! test algorithm::intersects::test::parallel_linestrings_test ... ok
blam! test algorithm::intersects::test::polygons_overlap ... ok
blam! test algorithm::length::test::empty_linestring_test ... ok
blam! test algorithm::length::test::linestring_one_point_test ... ok
blam! test algorithm::length::test::linestring_test ... ok
blam! test algorithm::intersects::test::polygon_intersects_bbox_test ... ok
blam! test algorithm::simplify::test::perpdistance_test ... ok
blam! test algorithm::simplify::test::rdp_test ... ok
blam! test algorithm::length::test::multilinestring_test ... ok
blam! test algorithm::simplify::test::rdp_test_two_point_linestring ... ok
blam! test algorithm::simplify::test::rdp_test_empty_linestring ... ok
blam! test algorithm::intersects::test::polygons_conincident ... ok
blam! test algorithm::intersects::test::polygons_do_not_intersect ... ok
blam! test algorithm::simplifyvw::test::visvalingam_test ... ok
blam! test algorithm::simplifyvw::test::visvalingam_test_empty_linestring ... ok
blam! test test_helpers::within_epsilon_false_if_floats_far ... ok
blam! test test_helpers::within_epsilon_false_if_floats_infinite_or_nan ... ok
blam! test algorithm::simplifyvw::test::visvalingam_test_two_point_linestring ... ok
blam! test test_helpers::within_epsilon_true_if_floats_close ... ok
blam! test test_helpers::within_epsilon_true_if_floats_equal ... ok
blam! test types::test::type_test ... ok
blam! test types::test::polygon_new_test ... ok
blam! test algorithm::simplifyvw::test::visvalingam_test_long ... ok
blam! 
blam! test result: ok. 88 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests geo
blam! 
blam! running 25 tests
blam! test algorithm::area::Area::area_0 ... ok
blam! test algorithm::boundingbox::BoundingBox::bbox_0 ... ok
blam! test algorithm::contains::Contains::contains_0 ... ok
blam! warning: unused import: `Coordinate`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:30
blam!   |
blam! 3 | use geo::{Point, LineString, Coordinate};
blam!   |                              ^^^^^^^^^^
blam! 
blam! test algorithm::centroid::Centroid::centroid_0 ... ok
blam! test algorithm::intersects::Intersects::intersects_0 ... ok
blam! warning: unused import: `Coordinate`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:30
blam!   |
blam! 3 | use geo::{Point, LineString, Coordinate};
blam!   |                              ^^^^^^^^^^
blam! 
blam! test algorithm::length::Length::length_0 ... ok
blam! test algorithm::distance::Distance::distance_0 ... ok
blam! test algorithm::simplify::Simplify::simplify_0 ... ok
blam! test types::Bbox<T>::add_0 ... ok
blam! test types::Point<T>::add_0 ... ok
blam! test types::Bbox<T>::add_assign_0 ... ok
blam! test algorithm::simplifyvw::SimplifyVW::simplifyvw_0 ... ok
blam! test types::Point<T>::dot_0 ... ok
blam! test types::Point<T>::lng_0 ... ok
blam! test types::Point<T>::lat_0 ... ok
blam! test types::Point<T>::neg_0 ... ok
blam! test types::Point<T>::set_lat_0 ... ok
blam! test types::Point<T>::new_0 ... ok
blam! test types::Point<T>::set_lng_0 ... ok
blam! test types::Point<T>::set_x_0 ... ok
blam! test types::Point<T>::set_y_0 ... ok
blam! test types::Point<T>::sub_0 ... ok
blam! test types::Point<T>::y_0 ... ok
blam! test types::Point<T>::x_0 ... ok
blam! test types::Polygon<T>::new_0 ... ok
blam! 
blam! test result: ok. 25 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 70749b3b6bde5472eb56ac9f6ecd2b59cd3a03ff6a9c01695f95b6da2340ed2f`
blam! 70749b3b6bde5472eb56ac9f6ecd2b59cd3a03ff6a9c01695f95b6da2340ed2f
