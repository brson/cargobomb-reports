boom! testing arrayvec-0.3.20 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! b05c259a076d066e6a870fa73898c773dc3fb80b0596b8155fadc71a642c0a1b
boom! running `docker start -a b05c259a076d066e6a870fa73898c773dc3fb80b0596b8155fadc71a642c0a1b`
kablam!    Compiling arrayvec v0.3.20 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.35 secs
boom! running `docker rm -f b05c259a076d066e6a870fa73898c773dc3fb80b0596b8155fadc71a642c0a1b`
blam! b05c259a076d066e6a870fa73898c773dc3fb80b0596b8155fadc71a642c0a1b
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 005f05701e7f1948d9e113a8c95d6319d13d0ab5eba38675db45e0f4f5ada34b
boom! running `docker start -a 005f05701e7f1948d9e113a8c95d6319d13d0ab5eba38675db45e0f4f5ada34b`
kablam!    Compiling arrayvec v0.3.20 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 4.75 secs
boom! running `docker rm -f 005f05701e7f1948d9e113a8c95d6319d13d0ab5eba38675db45e0f4f5ada34b`
blam! 005f05701e7f1948d9e113a8c95d6319d13d0ab5eba38675db45e0f4f5ada34b
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! a75ddf922ebe890c2bd4b8d92ef16033272b0edb1c07120a299e4c0823a9c063
boom! running `docker start -a a75ddf922ebe890c2bd4b8d92ef16033272b0edb1c07120a299e4c0823a9c063`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/arrayvec-60ff848d6e449f50
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/generic_array-6c90cd6b7a056b1b
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/tests-8ac08bd314dcb2dc
blam! 
blam! running 26 tests
blam! test test_compact_size ... ok
blam! test array_clone_from ... ok
blam! test test_drain ... ok
blam! test test_drain_oob ... ok
blam! test test_drop_panic ... ok
blam! test test_drop_in_insert ... ok
blam! test test_drop ... ok
blam! test test_drop_panic_into_iter ... ok
blam! test test_in_option ... ok
blam! test test_extend ... ok
blam! test test_insert_at_length ... ok
blam! test test_insert_out_of_bounds ... ok
blam! test test_into_inner_2 ... ok
blam! test test_into_inner_1 ... ok
blam! test test_insert ... ok
blam! test test_into_inner_3_ ... ok
blam! test test_simple ... ok
blam! test test_string ... ok
blam! test test_is_send_sync ... ok
blam! test test_retain ... ok
blam! test test_string_clone ... ok
blam! test test_iter ... ok
blam! test test_string_from ... ok
blam! test test_string_push ... ok
blam! test test_write ... ok
blam! test test_u16_index ... ok
blam! 
blam! test result: ok. 26 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests arrayvec
blam! 
blam! running 21 tests
blam! warning: unused variable: `elt`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | for elt in &array {
blam!   |     ^^^
blam! 
blam! test &'a ArrayVec<A>_0 ... ok
blam! test ArrayVec<A>::capacity_0 ... ok
blam! test ArrayVec<A>::drain_0 ... ok
blam! warning: unused variable: `elt`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | for elt in &mut array {
blam!   |     ^^^
blam! 
blam! test &'a mut ArrayVec<A>_0 ... ok
blam! test ArrayVec<A>::insert_0 ... ok
blam! test ArrayVec<A>::is_full_0 ... ok
blam! test ArrayVec<A>::len_0 ... ok
blam! test ArrayVec<A>::new_0 ... ok
blam! test ArrayVec<A>::pop_0 ... ok
blam! test ArrayVec<A>::remove_0 ... ok
blam! test ArrayVec<A>::push_0 ... ok
blam! test ArrayVec<A>::retain_0 ... ok
blam! test ArrayVec<A>::swap_remove_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut array = ArrayVec::from([1, 2, 3]);
blam!   |     ^^^^^^^^^
blam! 
blam! test ArrayVec<A>_0 ... ok
blam! test array_string::ArrayString<A>::capacity_0 ... ok
blam! warning: unused variable: `elt`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | for elt in ArrayVec::from([1, 2, 3]) {
blam!   |     ^^^
blam! 
blam! test ArrayVec<A>_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut string = ArrayString::<[_; 3]>::from("foo").unwrap();
blam!   |     ^^^^^^^^^^
blam! 
blam! test array_string::ArrayString<A>::from_0 ... ok
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!  --> <anon>:7:1
blam!   |
blam! 7 | string.push_str("A");
blam!   | ^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! test array_string::ArrayString<A>::is_full_0 ... ok
blam! test array_string::ArrayString<A>::push_0 ... ok
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!  --> <anon>:6:1
blam!   |
blam! 6 | string.push_str("foo");
blam!   | ^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! test array_string::ArrayString<A>::new_0 ... ok
blam! test array_string::ArrayString<A>::push_str_0 ... ok
blam! 
blam! test result: ok. 21 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f a75ddf922ebe890c2bd4b8d92ef16033272b0edb1c07120a299e4c0823a9c063`
blam! a75ddf922ebe890c2bd4b8d92ef16033272b0edb1c07120a299e4c0823a9c063
