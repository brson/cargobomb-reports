boom! testing supercow-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! a0dca44998b65458594606ee1dc7d47606dbe9ae86d08b6ed9720979b46a2078
boom! running `docker start -a a0dca44998b65458594606ee1dc7d47606dbe9ae86d08b6ed9720979b46a2078`
kablam!    Compiling supercow v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.29 secs
boom! running `docker rm -f a0dca44998b65458594606ee1dc7d47606dbe9ae86d08b6ed9720979b46a2078`
blam! a0dca44998b65458594606ee1dc7d47606dbe9ae86d08b6ed9720979b46a2078
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 5ec1806da55bd102f6cba2cc974c9a41ab27aaa18703a71adf3e989a1946341a
boom! running `docker start -a 5ec1806da55bd102f6cba2cc974c9a41ab27aaa18703a71adf3e989a1946341a`
kablam!    Compiling supercow v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 8.4 secs
boom! running `docker rm -f 5ec1806da55bd102f6cba2cc974c9a41ab27aaa18703a71adf3e989a1946341a`
blam! 5ec1806da55bd102f6cba2cc974c9a41ab27aaa18703a71adf3e989a1946341a
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! ffa8ba165bab4232b2b36442a582b2467b038f4205716a5a76496137c04e3138
boom! running `docker start -a ffa8ba165bab4232b2b36442a582b2467b038f4205716a5a76496137c04e3138`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/supercow-734a20d30d9975ed
blam! 
blam! running 125 tests
blam! test boxed_nonsync_tests::clone_shared_phantomcow ... ok
blam! test boxed_nonsync_tests::clone_owned_phantomcow ... ok
blam! test boxed_nonsync_tests::clone_borrowed_phantomcow ... ok
blam! test boxed_nonsync_tests::borrowed_phantomcow ... ok
blam! test boxed_nonsync_tests::dst_osstring_osstr ... ok
blam! test boxed_nonsync_tests::default_accepts_arc ... ok
blam! test boxed_nonsync_tests::dst_cstring_cstr ... ok
blam! test boxed_nonsync_tests::general_trait_delegs_work ... ok
blam! test boxed_nonsync_tests::owned_mode_survives_moving ... ok
blam! test boxed_nonsync_tests::dst_vec_u8s ... ok
blam! test boxed_nonsync_tests::owned_phantomcow ... ok
blam! test boxed_nonsync_tests::ref_to_owned ... ok
blam! test boxed_nonsync_tests::share_borrowed_phantomcow ... ok
blam! test boxed_nonsync_tests::dst_string_str ... ok
blam! test boxed_nonsync_tests::ref_safe_even_if_forgotten ... ok
blam! test boxed_nonsync_tests::share_borrowed_supercow ... ok
blam! test boxed_nonsync_tests::share_owned_dst_phantomcow ... ok
blam! test boxed_nonsync_tests::share_owned_supercow ... ok
blam! test boxed_nonsync_tests::share_shared_phantomcow ... ok
blam! test boxed_nonsync_tests::share_shared_supercow ... ok
blam! test boxed_nonsync_tests::shared_phantomcow ... ok
blam! test boxed_nonsync_tests::supports_dst ... ok
blam! test boxed_nonsync_tests::take_ownership_borrowed ... ok
blam! test boxed_nonsync_tests::take_ownership_owned ... ok
blam! test boxed_nonsync_tests::take_ownership_shared ... ok
blam! test boxed_nonsync_tests::unborrow_borrowed ... ok
blam! test boxed_nonsync_tests::unborrow_owned ... ok
blam! test boxed_nonsync_tests::unborrow_shared ... ok
blam! test boxed_sync_tests::borrowed_phantomcow ... ok
blam! test boxed_sync_tests::clone_borrowed_phantomcow ... ok
blam! test boxed_sync_tests::clone_owned_phantomcow ... ok
blam! test boxed_sync_tests::clone_shared_phantomcow ... ok
blam! test boxed_sync_tests::default_accepts_arc ... ok
blam! test boxed_sync_tests::dst_cstring_cstr ... ok
blam! test boxed_nonsync_tests::share_owned_phantomcow ... ok
blam! test boxed_nonsync_tests::share_owned_dst_supercow ... ok
blam! test boxed_sync_tests::dst_osstring_osstr ... ok
blam! test boxed_sync_tests::dst_vec_u8s ... ok
blam! test boxed_sync_tests::general_trait_delegs_work ... ok
blam! test boxed_sync_tests::owned_mode_survives_moving ... ok
blam! test boxed_sync_tests::owned_phantomcow ... ok
blam! test boxed_sync_tests::ref_safe_even_if_forgotten ... ok
blam! test boxed_sync_tests::ref_to_owned ... ok
blam! test boxed_sync_tests::share_borrowed_phantomcow ... ok
blam! test boxed_sync_tests::share_borrowed_supercow ... ok
blam! test boxed_sync_tests::share_owned_dst_phantomcow ... ok
blam! test boxed_sync_tests::share_owned_dst_supercow ... ok
blam! test boxed_sync_tests::share_owned_phantomcow ... ok
blam! test boxed_sync_tests::share_owned_supercow ... ok
blam! test boxed_sync_tests::share_shared_phantomcow ... ok
blam! test boxed_sync_tests::share_shared_supercow ... ok
blam! test boxed_sync_tests::shared_phantomcow ... ok
blam! test boxed_sync_tests::supports_dst ... ok
blam! test boxed_sync_tests::take_ownership_borrowed ... ok
blam! test boxed_sync_tests::take_ownership_owned ... ok
blam! test boxed_sync_tests::take_ownership_shared ... ok
blam! test boxed_sync_tests::unborrow_borrowed ... ok
blam! test boxed_sync_tests::unborrow_owned ... ok
blam! test boxed_sync_tests::unborrow_shared ... ok
blam! test inline_nonsync_tests::borrowed_phantomcow ... ok
blam! test inline_nonsync_tests::clone_borrowed_phantomcow ... ok
blam! test inline_nonsync_tests::clone_owned_phantomcow ... ok
blam! test inline_nonsync_tests::clone_shared_phantomcow ... ok
blam! test inline_nonsync_tests::default_accepts_arc ... ok
blam! test boxed_sync_tests::dst_string_str ... ok
blam! test inline_nonsync_tests::dst_cstring_cstr ... ok
blam! test inline_nonsync_tests::dst_osstring_osstr ... ok
blam! test inline_nonsync_tests::dst_string_str ... ok
blam! test inline_nonsync_tests::dst_vec_u8s ... ok
blam! test inline_nonsync_tests::general_trait_delegs_work ... ok
blam! test boxed_nonsync_tests::dst_pathbuf_path ... ok
blam! test inline_nonsync_tests::owned_mode_survives_moving ... ok
blam! test inline_nonsync_tests::owned_phantomcow ... ok
blam! test inline_nonsync_tests::ref_to_owned ... ok
blam! test inline_nonsync_tests::ref_safe_even_if_forgotten ... ok
blam! test inline_nonsync_tests::share_borrowed_phantomcow ... ok
blam! test inline_nonsync_tests::share_borrowed_supercow ... ok
blam! test inline_nonsync_tests::share_owned_dst_phantomcow ... ok
blam! test inline_nonsync_tests::share_owned_dst_supercow ... ok
blam! test inline_nonsync_tests::share_owned_phantomcow ... ok
blam! test inline_nonsync_tests::share_owned_supercow ... ok
blam! test inline_nonsync_tests::share_shared_phantomcow ... ok
blam! test inline_nonsync_tests::share_shared_supercow ... ok
blam! test inline_nonsync_tests::shared_phantomcow ... ok
blam! test inline_nonsync_tests::supports_dst ... ok
blam! test inline_nonsync_tests::take_ownership_borrowed ... ok
blam! test inline_nonsync_tests::take_ownership_owned ... ok
blam! test inline_nonsync_tests::take_ownership_shared ... ok
blam! test inline_nonsync_tests::unborrow_borrowed ... ok
blam! test inline_nonsync_tests::unborrow_owned ... ok
blam! test inline_nonsync_tests::unborrow_shared ... ok
blam! test inline_sync_tests::borrowed_phantomcow ... ok
blam! test inline_sync_tests::clone_borrowed_phantomcow ... ok
blam! test inline_sync_tests::clone_owned_phantomcow ... ok
blam! test inline_sync_tests::clone_shared_phantomcow ... ok
blam! test inline_sync_tests::default_accepts_arc ... ok
blam! test inline_sync_tests::dst_cstring_cstr ... ok
blam! test inline_sync_tests::dst_osstring_osstr ... ok
blam! test inline_sync_tests::dst_string_str ... ok
blam! test boxed_sync_tests::dst_pathbuf_path ... ok
blam! test inline_sync_tests::dst_vec_u8s ... ok
blam! test inline_sync_tests::general_trait_delegs_work ... ok
blam! test inline_sync_tests::owned_mode_survives_moving ... ok
blam! test inline_sync_tests::owned_phantomcow ... ok
blam! test inline_sync_tests::ref_to_owned ... ok
blam! test inline_nonsync_tests::dst_pathbuf_path ... ok
blam! test inline_sync_tests::share_borrowed_phantomcow ... ok
blam! test inline_sync_tests::share_borrowed_supercow ... ok
blam! test inline_sync_tests::share_owned_dst_phantomcow ... ok
blam! test inline_sync_tests::share_owned_dst_supercow ... ok
blam! test inline_sync_tests::share_owned_phantomcow ... ok
blam! test inline_sync_tests::share_owned_supercow ... ok
blam! test inline_sync_tests::share_shared_phantomcow ... ok
blam! test inline_sync_tests::share_shared_supercow ... ok
blam! test inline_sync_tests::shared_phantomcow ... ok
blam! test inline_sync_tests::supports_dst ... ok
blam! test inline_sync_tests::ref_safe_even_if_forgotten ... ok
blam! test inline_sync_tests::take_ownership_borrowed ... ok
blam! test inline_sync_tests::take_ownership_owned ... ok
blam! test inline_sync_tests::take_ownership_shared ... ok
blam! test inline_sync_tests::unborrow_borrowed ... ok
blam! test inline_sync_tests::unborrow_owned ... ok
blam! test inline_sync_tests::unborrow_shared ... ok
blam! test misc_tests::do_add_two ... ok
blam! test inline_sync_tests::dst_pathbuf_path ... ok
blam! 
blam! test result: ok. 125 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests supercow
blam! 
blam! running 20 tests
blam! test Supercow<'a, OWNED, BORROWED, SHARED, STORAGE, PTR>::extract_ref_0 ... ok
blam! warning: unused variable: `also_borrowed`, #[warn(unused_variables)] on by default
blam!   --> <anon>:12:5
blam!    |
blam! 12 | let also_borrowed = Supercow::clone_non_owned(&borrowed).unwrap();
blam!    |     ^^^^^^^^^^^^^
blam! 
blam! test Supercow<'a, OWNED, BORROWED, SHARED, STORAGE, PTR>::clone_non_owned_0 ... ok
blam! test Supercow<'a, OWNED, BORROWED, SHARED, STORAGE, PTR>::share_0 ... ok
blam! test NonSyncSupercow_0 ... ok
blam! test Supercow<'a, OWNED, BORROWED, SHARED, STORAGE, PTR>::unborrow_0 ... ok
blam! test _10 ... ignored
blam! test Supercow<'a, OWNED, BORROWED, SHARED, STORAGE, PTR>::take_ownership_0 ... ok
blam! test _0 ... ok
blam! warning: unused import: `std::sync::Arc`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:5
blam!   |
blam! 3 | use std::sync::Arc;
blam!   |     ^^^^^^^^^^^^^^
blam! 
blam! test _1 ... ok
blam! test _11 ... ok
blam! test _12 ... ok
blam! test _5 ... ignored
blam! warning: struct is never used: `Database`, #[warn(dead_code)] on by default
blam!  --> <anon>:2:1
blam!   |
blam! 2 | struct Database;
blam!   | ^^^^^^^^^^^^^^^^
blam! 
blam! warning: method is never used: `new`, #[warn(dead_code)] on by default
blam!  --> <anon>:4:3
blam!   |
blam! 4 |     fn new() -> Self {
blam!   |  ___^ starting here...
blam! 5 | |     // Computation...
blam! 6 | |     Database
blam! 7 | |   }
blam!   | |___^ ...ending here
blam! 
blam! warning: method is never used: `close`, #[warn(dead_code)] on by default
blam!   --> <anon>:8:3
blam!    |
blam! 8  |     fn close(self) -> bool {
blam!    |  ___^ starting here...
blam! 9  | |     // E.g., it returns an error on failure or something
blam! 10 | |     true
blam! 11 | |   }
blam!    | |___^ ...ending here
blam! 
blam! warning: struct is never used: `Table`, #[warn(dead_code)] on by default
blam!   --> <anon>:18:1
blam!    |
blam! 18 | struct Table<'a>(&'a Database);
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: method is never used: `new`, #[warn(dead_code)] on by default
blam!   --> <anon>:20:3
blam!    |
blam! 20 |     fn new(db: &'a Database) -> Self {
blam!    |  ___^ starting here...
blam! 21 | |     // Computation...
blam! 22 | |     Table(db)
blam! 23 | |   }
blam!    | |___^ ...ending here
blam! 
blam! test _3 ... ok
blam! test _2 ... ok
blam! warning: unused import: `std::rc::Rc`, #[warn(unused_imports)] on by default
blam!  --> <anon>:2:5
blam!   |
blam! 2 | use std::rc::Rc;
blam!   |     ^^^^^^^^^^^
blam! 
blam! warning: function is never used: `assert_covariance`, #[warn(dead_code)] on by default
blam!   --> <anon>:6:1
blam!    |
blam! 6  | fn assert_covariance<'a, 'b: 'a>(
blam!    | ^
blam! 
blam! test _7 ... ok
blam! test _4 ... ok
blam! warning: struct is never used: `Database`, #[warn(dead_code)] on by default
blam!  --> <anon>:7:1
blam!   |
blam! 7 | struct Database;
blam!   | ^^^^^^^^^^^^^^^^
blam! 
blam! warning: method is never used: `new`, #[warn(dead_code)] on by default
blam!   --> <anon>:9:3
blam!    |
blam! 9  |     fn new() -> Self {
blam!    |  ___^ starting here...
blam! 10 | |     // Computation...
blam! 11 | |     Database
blam! 12 | |   }
blam!    | |___^ ...ending here
blam! 
blam! warning: method is never used: `close`, #[warn(dead_code)] on by default
blam!   --> <anon>:13:3
blam!    |
blam! 13 |     fn close(self) -> bool {
blam!    |  ___^ starting here...
blam! 14 | |     // E.g., it returns an error on failure or something
blam! 15 | |     true
blam! 16 | |   }
blam!    | |___^ ...ending here
blam! 
blam! warning: struct is never used: `Table`, #[warn(dead_code)] on by default
blam!   --> <anon>:23:1
blam!    |
blam! 23 | struct Table<'a>(Supercow<'a, Database>);
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: method is never used: `new`, #[warn(dead_code)] on by default
blam!   --> <anon>:25:3
blam!    |
blam! 25 |     fn new<T : Into<Supercow<'a, Database>>>(db: T) -> Self {
blam!    |  ___^ starting here...
blam! 26 | |     // Computation...
blam! 27 | |     Table(db.into())
blam! 28 | |   }
blam!    | |___^ ...ending here
blam! 
blam! warning: function is never used: `on_stack`, #[warn(dead_code)] on by default
blam!   --> <anon>:40:1
blam!    |
blam! 40 | fn on_stack() {
blam!    | ^
blam! 
blam! warning: function is never used: `by_value`, #[warn(dead_code)] on by default
blam!   --> <anon>:53:1
blam!    |
blam! 53 |   fn by_value() {
blam!    |  _^ starting here...
blam! 54 | |   let db = Database::new();
blam! 55 | |   let table = Table::new(db);
blam! 56 | |   do_stuff(&table);
blam! 57 | | }
blam!    | |_^ ...ending here
blam! 
blam! warning: struct is never used: `Resources`, #[warn(dead_code)] on by default
blam!   --> <anon>:61:1
blam!    |
blam! 61 |   struct Resources {
blam!    |  _^ starting here...
blam! 62 | |   db: Arc<Database>,
blam! 63 | |   table: Table<'static>,
blam! 64 | | }
blam!    | |_^ ...ending here
blam! 
blam! warning: method is never used: `new`, #[warn(dead_code)] on by default
blam!   --> <anon>:66:3
blam!    |
blam! 66 |     fn new() -> Self {
blam!    |  ___^ starting here...
blam! 67 | |     let db = Arc::new(Database::new());
blam! 68 | |     let table = Table::new(db.clone());
blam! 69 | |     Resources { db: db, table: table }
blam! 70 | |   }
blam!    | |___^ ...ending here
blam! 
blam! warning: method is never used: `close`, #[warn(dead_code)] on by default
blam!   --> <anon>:72:3
blam!    |
blam! 72 |     fn close(self) -> bool {
blam!    |  ___^ starting here...
blam! 73 | |     drop(self.table);
blam! 74 | |     Arc::try_unwrap(self.db).ok().unwrap().close()
blam! 75 | |   }
blam!    | |___^ ...ending here
blam! 
blam! warning: function is never used: `with_struct`, #[warn(dead_code)] on by default
blam!   --> <anon>:78:1
blam!    |
blam! 78 |   fn with_struct() {
blam!    |  _^ starting here...
blam! 79 | |   let res = Resources::new();
blam! 80 | |   do_stuff(&res.table);
blam! 81 | |   assert!(res.close());
blam! 82 | | }
blam!    | |_^ ...ending here
blam! 
blam! warning: function is never used: `do_stuff`, #[warn(dead_code)] on by default
blam!   --> <anon>:85:1
blam!    |
blam! 85 |   fn do_stuff(table: &Table) {
blam!    |  _^ starting here...
blam! 86 | |   // Stuff
blam! 87 | | }
blam!    | |_^ ...ending here
blam! 
blam! test _6 ... ok
blam! test _8 ... ok
blam! test supercow_features_0 ... ok
blam! test _9 ... ok
blam! 
blam! test result: ok. 18 passed; 0 failed; 2 ignored; 0 measured
blam! 
boom! running `docker rm -f ffa8ba165bab4232b2b36442a582b2467b038f4205716a5a76496137c04e3138`
blam! ffa8ba165bab4232b2b36442a582b2467b038f4205716a5a76496137c04e3138
