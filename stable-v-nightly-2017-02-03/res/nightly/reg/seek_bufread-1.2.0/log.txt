boom! testing seek_bufread-1.2.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 3248b32dd8211466281369bd377b2c79fc9575ad4437c91427d8a58bb76d6478
boom! running `docker start -a 3248b32dd8211466281369bd377b2c79fc9575ad4437c91427d8a58bb76d6478`
kablam!    Compiling seek_bufread v1.2.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.31 secs
boom! running `docker rm -f 3248b32dd8211466281369bd377b2c79fc9575ad4437c91427d8a58bb76d6478`
blam! 3248b32dd8211466281369bd377b2c79fc9575ad4437c91427d8a58bb76d6478
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! d9de3f49dbd479277acd8e888b7d7e67756114a40ca8a46d607da2eb7e21f96d
boom! running `docker start -a d9de3f49dbd479277acd8e888b7d7e67756114a40ca8a46d607da2eb7e21f96d`
kablam!    Compiling seek_bufread v1.2.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.87 secs
boom! running `docker rm -f d9de3f49dbd479277acd8e888b7d7e67756114a40ca8a46d607da2eb7e21f96d`
blam! d9de3f49dbd479277acd8e888b7d7e67756114a40ca8a46d607da2eb7e21f96d
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 1b10e5d279506c2946741af6db0fdf314ab9f097529a4d0697485f7c180fd811
boom! running `docker start -a 1b10e5d279506c2946741af6db0fdf314ab9f097529a4d0697485f7c180fd811`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/seek_bufread-d170282cc1cc0066
blam! 
blam! running 13 tests
blam! test tests::into_inner ... ok
blam! test tests::seek_current_negative_std ... ok
blam! test tests::seek_current_positive ... ok
blam! test tests::seek_current_positive_std ... ok
blam! test tests::default_behaviour_std ... ok
blam! test tests::default_behaviour ... ok
blam! test tests::seek_end_std ... ok
blam! test tests::seek_start ... ok
blam! test tests::seek_end ... ok
blam! test tests::seek_start_std ... ok
blam! test tests::small_capacity ... ok
blam! test tests::small_capacity_std ... ok
blam! test tests::seek_current_negative ... ok
blam! 
blam! test result: ok. 13 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests seek_bufread
blam! 
blam! running 4 tests
blam! warning: function is never used: `foo`, #[warn(dead_code)] on by default
blam!   --> <anon>:6:1
blam!    |
blam! 6  |   fn foo() -> std::io::Result<()> {
blam!    |  _^ starting here...
blam! 7  | | let mut f = try!(File::open("log.txt"));
blam! 8  | | let mut reader = BufReader::with_capacity(10, f);
blam! 9  | | Ok(())
blam! 10 | | }
blam!    | |_^ ...ending here
blam! 
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let mut f = try!(File::open("log.txt"));
blam!   |     ^^^^^
blam! 
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let mut reader = BufReader::with_capacity(10, f);
blam!   |     ^^^^^^^^^^
blam! 
blam! warning: unused variable: `reader`, #[warn(unused_variables)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let mut reader = BufReader::with_capacity(10, f);
blam!   |     ^^^^^^^^^^
blam! 
blam! warning: function is never used: `foo`, #[warn(dead_code)] on by default
blam!   --> <anon>:6:1
blam!    |
blam! 6  |   fn foo() -> std::io::Result<()> {
blam!    |  _^ starting here...
blam! 7  | | let mut f = try!(File::open("log.txt"));
blam! 8  | | let mut reader = BufReader::new(f);
blam! 9  | | Ok(())
blam! 10 | | }
blam!    | |_^ ...ending here
blam! 
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let mut f = try!(File::open("log.txt"));
blam!   |     ^^^^^
blam! 
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let mut reader = BufReader::new(f);
blam!   |     ^^^^^^^^^^
blam! 
blam! warning: unused variable: `reader`, #[warn(unused_variables)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let mut reader = BufReader::new(f);
blam!   |     ^^^^^^^^^^
blam! 
blam! test BufReader<R>::with_capacity_0 ... ok
blam! test BufReader<R>::new_0 ... ok
blam! warning: function is never used: `foo`, #[warn(dead_code)] on by default
blam!   --> <anon>:7:1
blam!    |
blam! 7  |   fn foo() -> std::io::Result<()> {
blam!    |  _^ starting here...
blam! 8  | | let mut f = try!(File::open("log.txt"));
blam! 9  | | let mut reader = BufReader::new(f);
blam! 10 | |
blam! 11 | | let mut line = String::new();
blam! 12 | | let len = try!(reader.read_line(&mut line));
blam! 13 | | println!("First line is {} bytes long", len);
blam! 14 | | Ok(())
blam! 15 | | }
blam!    | |_^ ...ending here
blam! 
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let mut f = try!(File::open("log.txt"));
blam!   |     ^^^^^
blam! 
blam! test BufReader_0 ... ok
blam! warning: unused import: `self`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:15
blam!   |
blam! 3 | use std::io::{self, Cursor, Read, Seek, SeekFrom};
blam!   |               ^^^^
blam! 
blam! test _0 ... ok
blam! 
blam! test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 1b10e5d279506c2946741af6db0fdf314ab9f097529a4d0697485f7c180fd811`
blam! 1b10e5d279506c2946741af6db0fdf314ab9f097529a4d0697485f7c180fd811
