boom! testing sorted-collections-0.0.8 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 0bc6068a68b0564a6783a73043d77c454b992a5078749974c75b57222b8bbe4d
boom! running `docker start -a 0bc6068a68b0564a6783a73043d77c454b992a5078749974c75b57222b8bbe4d`
kablam!    Compiling sorted-collections v0.0.8 (file:///source)
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!  --> src/sortedmap.rs:9:31
kablam!   |
kablam! 9 | use std::collections::Bound::{self, Excluded, Included, Unbounded};
kablam!   |                               ^^^^
kablam!   |
kablam!   = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!  --> src/sortedmap.rs:9:37
kablam!   |
kablam! 9 | use std::collections::Bound::{self, Excluded, Included, Unbounded};
kablam!   |                                     ^^^^^^^^
kablam!   |
kablam!   = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!  --> src/sortedmap.rs:9:47
kablam!   |
kablam! 9 | use std::collections::Bound::{self, Excluded, Included, Unbounded};
kablam!   |                                               ^^^^^^^^
kablam!   |
kablam!   = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!  --> src/sortedmap.rs:9:57
kablam!   |
kablam! 9 | use std::collections::Bound::{self, Excluded, Included, Unbounded};
kablam!   |                                                         ^^^^^^^^^
kablam!   |
kablam!   = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!  --> src/sortedset.rs:9:31
kablam!   |
kablam! 9 | use std::collections::Bound::{self, Excluded, Included, Unbounded};
kablam!   |                               ^^^^
kablam!   |
kablam!   = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!  --> src/sortedset.rs:9:37
kablam!   |
kablam! 9 | use std::collections::Bound::{self, Excluded, Included, Unbounded};
kablam!   |                                     ^^^^^^^^
kablam!   |
kablam!   = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!  --> src/sortedset.rs:9:47
kablam!   |
kablam! 9 | use std::collections::Bound::{self, Excluded, Included, Unbounded};
kablam!   |                                               ^^^^^^^^
kablam!   |
kablam!   = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!  --> src/sortedset.rs:9:57
kablam!   |
kablam! 9 | use std::collections::Bound::{self, Excluded, Included, Unbounded};
kablam!   |                                                         ^^^^^^^^^
kablam!   |
kablam!   = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedmap.rs:292:42
kablam!     |
kablam! 292 |     fn range_remove(&mut self, from_key: Bound<&K>, to_key: Bound<&K>) -> Self::RangeRemove;
kablam!     |                                          ^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedmap.rs:292:61
kablam!     |
kablam! 292 |     fn range_remove(&mut self, from_key: Bound<&K>, to_key: Bound<&K>) -> Self::RangeRemove;
kablam!     |                                                             ^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedset.rs:267:32
kablam!     |
kablam! 267 |     fn range_remove(&mut self, Bound<&T>, to_elem: Bound<&T>) -> Self::RangeRemove;
kablam!     |                                ^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedset.rs:267:52
kablam!     |
kablam! 267 |     fn range_remove(&mut self, Bound<&T>, to_elem: Bound<&T>) -> Self::RangeRemove;
kablam!     |                                                    ^^^^^^^^^
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedmap.rs:333:24
kablam!     |
kablam! 333 |             self.range(Included(key), Unbounded).map(|(k, _)| k).min()
kablam!     |                        ^^^^^^^^
kablam! ...
kablam! 416 |     sortedmap_impl!(BTreeMap<K, V>, BTreeMapRangeRemove, BTreeMapRangeRemove<K, V>);
kablam!     |     -------------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedmap.rs:333:39
kablam!     |
kablam! 333 |             self.range(Included(key), Unbounded).map(|(k, _)| k).min()
kablam!     |                                       ^^^^^^^^^
kablam! ...
kablam! 416 |     sortedmap_impl!(BTreeMap<K, V>, BTreeMapRangeRemove, BTreeMapRangeRemove<K, V>);
kablam!     |     -------------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedmap.rs:350:24
kablam!     |
kablam! 350 |             self.range(Unbounded, Included(key)).map(|(k, _)| k).max()
kablam!     |                        ^^^^^^^^^
kablam! ...
kablam! 416 |     sortedmap_impl!(BTreeMap<K, V>, BTreeMapRangeRemove, BTreeMapRangeRemove<K, V>);
kablam!     |     -------------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedmap.rs:350:35
kablam!     |
kablam! 350 |             self.range(Unbounded, Included(key)).map(|(k, _)| k).max()
kablam!     |                                   ^^^^^^^^
kablam! ...
kablam! 416 |     sortedmap_impl!(BTreeMap<K, V>, BTreeMapRangeRemove, BTreeMapRangeRemove<K, V>);
kablam!     |     -------------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedmap.rs:367:24
kablam!     |
kablam! 367 |             self.range(Excluded(key), Unbounded).map(|(k, _)| k).min()
kablam!     |                        ^^^^^^^^
kablam! ...
kablam! 416 |     sortedmap_impl!(BTreeMap<K, V>, BTreeMapRangeRemove, BTreeMapRangeRemove<K, V>);
kablam!     |     -------------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedmap.rs:367:39
kablam!     |
kablam! 367 |             self.range(Excluded(key), Unbounded).map(|(k, _)| k).min()
kablam!     |                                       ^^^^^^^^^
kablam! ...
kablam! 416 |     sortedmap_impl!(BTreeMap<K, V>, BTreeMapRangeRemove, BTreeMapRangeRemove<K, V>);
kablam!     |     -------------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedmap.rs:384:24
kablam!     |
kablam! 384 |             self.range(Unbounded, Excluded(key)).map(|(k, _)| k).max()
kablam!     |                        ^^^^^^^^^
kablam! ...
kablam! 416 |     sortedmap_impl!(BTreeMap<K, V>, BTreeMapRangeRemove, BTreeMapRangeRemove<K, V>);
kablam!     |     -------------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedmap.rs:384:35
kablam!     |
kablam! 384 |             self.range(Unbounded, Excluded(key)).map(|(k, _)| k).max()
kablam!     |                                   ^^^^^^^^
kablam! ...
kablam! 416 |     sortedmap_impl!(BTreeMap<K, V>, BTreeMapRangeRemove, BTreeMapRangeRemove<K, V>);
kablam!     |     -------------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedmap.rs:400:46
kablam!     |
kablam! 400 |         fn range_remove(&mut self, from_key: Bound<&K>, to_key: Bound<&K>) -> $rangeremoveret {
kablam!     |                                              ^^^^^^^^^
kablam! ...
kablam! 416 |     sortedmap_impl!(BTreeMap<K, V>, BTreeMapRangeRemove, BTreeMapRangeRemove<K, V>);
kablam!     |     -------------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedmap.rs:400:65
kablam!     |
kablam! 400 |         fn range_remove(&mut self, from_key: Bound<&K>, to_key: Bound<&K>) -> $rangeremoveret {
kablam!     |                                                                 ^^^^^^^^^
kablam! ...
kablam! 416 |     sortedmap_impl!(BTreeMap<K, V>, BTreeMapRangeRemove, BTreeMapRangeRemove<K, V>);
kablam!     |     -------------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedset.rs:308:24
kablam!     |
kablam! 308 |             self.range(Included(elem), Unbounded).min()
kablam!     |                        ^^^^^^^^
kablam! ...
kablam! 393 |     sortedset_impl!(BTreeSet<T>, BTreeSetRangeRemove, BTreeSetRangeRemove<T>);
kablam!     |     -------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedset.rs:308:40
kablam!     |
kablam! 308 |             self.range(Included(elem), Unbounded).min()
kablam!     |                                        ^^^^^^^^^
kablam! ...
kablam! 393 |     sortedset_impl!(BTreeSet<T>, BTreeSetRangeRemove, BTreeSetRangeRemove<T>);
kablam!     |     -------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedset.rs:325:24
kablam!     |
kablam! 325 |             self.range(Unbounded, Included(elem)).max()
kablam!     |                        ^^^^^^^^^
kablam! ...
kablam! 393 |     sortedset_impl!(BTreeSet<T>, BTreeSetRangeRemove, BTreeSetRangeRemove<T>);
kablam!     |     -------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedset.rs:325:35
kablam!     |
kablam! 325 |             self.range(Unbounded, Included(elem)).max()
kablam!     |                                   ^^^^^^^^
kablam! ...
kablam! 393 |     sortedset_impl!(BTreeSet<T>, BTreeSetRangeRemove, BTreeSetRangeRemove<T>);
kablam!     |     -------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedset.rs:342:24
kablam!     |
kablam! 342 |             self.range(Excluded(elem), Unbounded).min()
kablam!     |                        ^^^^^^^^
kablam! ...
kablam! 393 |     sortedset_impl!(BTreeSet<T>, BTreeSetRangeRemove, BTreeSetRangeRemove<T>);
kablam!     |     -------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedset.rs:342:40
kablam!     |
kablam! 342 |             self.range(Excluded(elem), Unbounded).min()
kablam!     |                                        ^^^^^^^^^
kablam! ...
kablam! 393 |     sortedset_impl!(BTreeSet<T>, BTreeSetRangeRemove, BTreeSetRangeRemove<T>);
kablam!     |     -------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedset.rs:359:24
kablam!     |
kablam! 359 |             self.range(Unbounded, Excluded(elem)).max()
kablam!     |                        ^^^^^^^^^
kablam! ...
kablam! 393 |     sortedset_impl!(BTreeSet<T>, BTreeSetRangeRemove, BTreeSetRangeRemove<T>);
kablam!     |     -------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedset.rs:359:35
kablam!     |
kablam! 359 |             self.range(Unbounded, Excluded(elem)).max()
kablam!     |                                   ^^^^^^^^
kablam! ...
kablam! 393 |     sortedset_impl!(BTreeSet<T>, BTreeSetRangeRemove, BTreeSetRangeRemove<T>);
kablam!     |     -------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedset.rs:375:47
kablam!     |
kablam! 375 |         fn range_remove(&mut self, from_elem: Bound<&T>, to_elem: Bound<&T>) -> $rangeremoveret {
kablam!     |                                               ^^^^^^^^^
kablam! ...
kablam! 393 |     sortedset_impl!(BTreeSet<T>, BTreeSetRangeRemove, BTreeSetRangeRemove<T>);
kablam!     |     -------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'collections_bound' (see issue #27787)
kablam!    --> src/sortedset.rs:375:67
kablam!     |
kablam! 375 |         fn range_remove(&mut self, from_elem: Bound<&T>, to_elem: Bound<&T>) -> $rangeremoveret {
kablam!     |                                                                   ^^^^^^^^^
kablam! ...
kablam! 393 |     sortedset_impl!(BTreeSet<T>, BTreeSetRangeRemove, BTreeSetRangeRemove<T>);
kablam!     |     -------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(collections_bound)] to the crate attributes to enable
kablam! 
kablam! error: use of unstable library feature 'btree_range': matches collection reform specification, waiting for dust to settle (see issue #27787)
kablam!    --> src/sortedmap.rs:333:18
kablam!     |
kablam! 333 |             self.range(Included(key), Unbounded).map(|(k, _)| k).min()
kablam!     |                  ^^^^^
kablam! ...
kablam! 416 |     sortedmap_impl!(BTreeMap<K, V>, BTreeMapRangeRemove, BTreeMapRangeRemove<K, V>);
kablam!     |     -------------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(btree_range)] to the crate attributes to enable
kablam! 
kablam! error[E0061]: this function takes 1 parameter but 2 parameters were supplied
kablam!    --> src/sortedmap.rs:333:24
kablam!     |
kablam! 333 |             self.range(Included(key), Unbounded).map(|(k, _)| k).min()
kablam!     |                        ^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 parameter
kablam! ...
kablam! 416 |     sortedmap_impl!(BTreeMap<K, V>, BTreeMapRangeRemove, BTreeMapRangeRemove<K, V>);
kablam!     |     -------------------------------------------------------------------------------- in this macro invocation
kablam! 
kablam! error: use of unstable library feature 'btree_range': matches collection reform specification, waiting for dust to settle (see issue #27787)
kablam!    --> src/sortedmap.rs:350:18
kablam!     |
kablam! 350 |             self.range(Unbounded, Included(key)).map(|(k, _)| k).max()
kablam!     |                  ^^^^^
kablam! ...
kablam! 416 |     sortedmap_impl!(BTreeMap<K, V>, BTreeMapRangeRemove, BTreeMapRangeRemove<K, V>);
kablam!     |     -------------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(btree_range)] to the crate attributes to enable
kablam! 
kablam! error[E0061]: this function takes 1 parameter but 2 parameters were supplied
kablam!    --> src/sortedmap.rs:350:24
kablam!     |
kablam! 350 |             self.range(Unbounded, Included(key)).map(|(k, _)| k).max()
kablam!     |                        ^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 parameter
kablam! ...
kablam! 416 |     sortedmap_impl!(BTreeMap<K, V>, BTreeMapRangeRemove, BTreeMapRangeRemove<K, V>);
kablam!     |     -------------------------------------------------------------------------------- in this macro invocation
kablam! 
kablam! error: use of unstable library feature 'btree_range': matches collection reform specification, waiting for dust to settle (see issue #27787)
kablam!    --> src/sortedmap.rs:367:18
kablam!     |
kablam! 367 |             self.range(Excluded(key), Unbounded).map(|(k, _)| k).min()
kablam!     |                  ^^^^^
kablam! ...
kablam! 416 |     sortedmap_impl!(BTreeMap<K, V>, BTreeMapRangeRemove, BTreeMapRangeRemove<K, V>);
kablam!     |     -------------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(btree_range)] to the crate attributes to enable
kablam! 
kablam! error[E0061]: this function takes 1 parameter but 2 parameters were supplied
kablam!    --> src/sortedmap.rs:367:24
kablam!     |
kablam! 367 |             self.range(Excluded(key), Unbounded).map(|(k, _)| k).min()
kablam!     |                        ^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 parameter
kablam! ...
kablam! 416 |     sortedmap_impl!(BTreeMap<K, V>, BTreeMapRangeRemove, BTreeMapRangeRemove<K, V>);
kablam!     |     -------------------------------------------------------------------------------- in this macro invocation
kablam! 
kablam! error: use of unstable library feature 'btree_range': matches collection reform specification, waiting for dust to settle (see issue #27787)
kablam!    --> src/sortedmap.rs:384:18
kablam!     |
kablam! 384 |             self.range(Unbounded, Excluded(key)).map(|(k, _)| k).max()
kablam!     |                  ^^^^^
kablam! ...
kablam! 416 |     sortedmap_impl!(BTreeMap<K, V>, BTreeMapRangeRemove, BTreeMapRangeRemove<K, V>);
kablam!     |     -------------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(btree_range)] to the crate attributes to enable
kablam! 
kablam! error[E0061]: this function takes 1 parameter but 2 parameters were supplied
kablam!    --> src/sortedmap.rs:384:24
kablam!     |
kablam! 384 |             self.range(Unbounded, Excluded(key)).map(|(k, _)| k).max()
kablam!     |                        ^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 parameter
kablam! ...
kablam! 416 |     sortedmap_impl!(BTreeMap<K, V>, BTreeMapRangeRemove, BTreeMapRangeRemove<K, V>);
kablam!     |     -------------------------------------------------------------------------------- in this macro invocation
kablam! 
kablam! error: use of unstable library feature 'btree_range': matches collection reform specification, waiting for dust to settle (see issue #27787)
kablam!    --> src/sortedmap.rs:401:37
kablam!     |
kablam! 401 |             let keys: Vec<K> = self.range(from_key, to_key).map(|(k, _)| k.clone()).collect();
kablam!     |                                     ^^^^^
kablam! ...
kablam! 416 |     sortedmap_impl!(BTreeMap<K, V>, BTreeMapRangeRemove, BTreeMapRangeRemove<K, V>);
kablam!     |     -------------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(btree_range)] to the crate attributes to enable
kablam! 
kablam! error[E0061]: this function takes 1 parameter but 2 parameters were supplied
kablam!    --> src/sortedmap.rs:401:43
kablam!     |
kablam! 401 |             let keys: Vec<K> = self.range(from_key, to_key).map(|(k, _)| k.clone()).collect();
kablam!     |                                           ^^^^^^^^^^^^^^^^ expected 1 parameter
kablam! ...
kablam! 416 |     sortedmap_impl!(BTreeMap<K, V>, BTreeMapRangeRemove, BTreeMapRangeRemove<K, V>);
kablam!     |     -------------------------------------------------------------------------------- in this macro invocation
kablam! 
kablam! error: use of unstable library feature 'btree_range': matches collection reform specification, waiting for dust to settle (see issue #27787)
kablam!    --> src/sortedset.rs:308:18
kablam!     |
kablam! 308 |             self.range(Included(elem), Unbounded).min()
kablam!     |                  ^^^^^
kablam! ...
kablam! 393 |     sortedset_impl!(BTreeSet<T>, BTreeSetRangeRemove, BTreeSetRangeRemove<T>);
kablam!     |     -------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(btree_range)] to the crate attributes to enable
kablam! 
kablam! error[E0061]: this function takes 1 parameter but 2 parameters were supplied
kablam!    --> src/sortedset.rs:308:24
kablam!     |
kablam! 308 |             self.range(Included(elem), Unbounded).min()
kablam!     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 parameter
kablam! ...
kablam! 393 |     sortedset_impl!(BTreeSet<T>, BTreeSetRangeRemove, BTreeSetRangeRemove<T>);
kablam!     |     -------------------------------------------------------------------------- in this macro invocation
kablam! 
kablam! error: use of unstable library feature 'btree_range': matches collection reform specification, waiting for dust to settle (see issue #27787)
kablam!    --> src/sortedset.rs:325:18
kablam!     |
kablam! 325 |             self.range(Unbounded, Included(elem)).max()
kablam!     |                  ^^^^^
kablam! ...
kablam! 393 |     sortedset_impl!(BTreeSet<T>, BTreeSetRangeRemove, BTreeSetRangeRemove<T>);
kablam!     |     -------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(btree_range)] to the crate attributes to enable
kablam! 
kablam! error[E0061]: this function takes 1 parameter but 2 parameters were supplied
kablam!    --> src/sortedset.rs:325:24
kablam!     |
kablam! 325 |             self.range(Unbounded, Included(elem)).max()
kablam!     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 parameter
kablam! ...
kablam! 393 |     sortedset_impl!(BTreeSet<T>, BTreeSetRangeRemove, BTreeSetRangeRemove<T>);
kablam!     |     -------------------------------------------------------------------------- in this macro invocation
kablam! 
kablam! error: use of unstable library feature 'btree_range': matches collection reform specification, waiting for dust to settle (see issue #27787)
kablam!    --> src/sortedset.rs:342:18
kablam!     |
kablam! 342 |             self.range(Excluded(elem), Unbounded).min()
kablam!     |                  ^^^^^
kablam! ...
kablam! 393 |     sortedset_impl!(BTreeSet<T>, BTreeSetRangeRemove, BTreeSetRangeRemove<T>);
kablam!     |     -------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(btree_range)] to the crate attributes to enable
kablam! 
kablam! error[E0061]: this function takes 1 parameter but 2 parameters were supplied
kablam!    --> src/sortedset.rs:342:24
kablam!     |
kablam! 342 |             self.range(Excluded(elem), Unbounded).min()
kablam!     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 parameter
kablam! ...
kablam! 393 |     sortedset_impl!(BTreeSet<T>, BTreeSetRangeRemove, BTreeSetRangeRemove<T>);
kablam!     |     -------------------------------------------------------------------------- in this macro invocation
kablam! 
kablam! error: use of unstable library feature 'btree_range': matches collection reform specification, waiting for dust to settle (see issue #27787)
kablam!    --> src/sortedset.rs:359:18
kablam!     |
kablam! 359 |             self.range(Unbounded, Excluded(elem)).max()
kablam!     |                  ^^^^^
kablam! ...
kablam! 393 |     sortedset_impl!(BTreeSet<T>, BTreeSetRangeRemove, BTreeSetRangeRemove<T>);
kablam!     |     -------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(btree_range)] to the crate attributes to enable
kablam! 
kablam! error[E0061]: this function takes 1 parameter but 2 parameters were supplied
kablam!    --> src/sortedset.rs:359:24
kablam!     |
kablam! 359 |             self.range(Unbounded, Excluded(elem)).max()
kablam!     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 parameter
kablam! ...
kablam! 393 |     sortedset_impl!(BTreeSet<T>, BTreeSetRangeRemove, BTreeSetRangeRemove<T>);
kablam!     |     -------------------------------------------------------------------------- in this macro invocation
kablam! 
kablam! error: use of unstable library feature 'btree_range': matches collection reform specification, waiting for dust to settle (see issue #27787)
kablam!    --> src/sortedset.rs:376:34
kablam!     |
kablam! 376 |             let ret: $typ = self.range(from_elem, to_elem).cloned().collect();
kablam!     |                                  ^^^^^
kablam! ...
kablam! 393 |     sortedset_impl!(BTreeSet<T>, BTreeSetRangeRemove, BTreeSetRangeRemove<T>);
kablam!     |     -------------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = help: add #![feature(btree_range)] to the crate attributes to enable
kablam! 
kablam! error[E0061]: this function takes 1 parameter but 2 parameters were supplied
kablam!    --> src/sortedset.rs:376:40
kablam!     |
kablam! 376 |             let ret: $typ = self.range(from_elem, to_elem).cloned().collect();
kablam!     |                                        ^^^^^^^^^^^^^^^^^^ expected 1 parameter
kablam! ...
kablam! 393 |     sortedset_impl!(BTreeSet<T>, BTreeSetRangeRemove, BTreeSetRangeRemove<T>);
kablam!     |     -------------------------------------------------------------------------- in this macro invocation
kablam! 
kablam! error: aborting due to 20 previous errors
kablam! 
kablam! error: Could not compile `sorted-collections`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 0bc6068a68b0564a6783a73043d77c454b992a5078749974c75b57222b8bbe4d`
blam! 0bc6068a68b0564a6783a73043d77c454b992a5078749974c75b57222b8bbe4d
