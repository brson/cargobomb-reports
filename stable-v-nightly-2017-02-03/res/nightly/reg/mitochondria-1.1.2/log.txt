boom! testing mitochondria-1.1.2 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! d4607536e44a7061115514201fe9531d666268cbbb261e332959d93230f91466
boom! running `docker start -a d4607536e44a7061115514201fe9531d666268cbbb261e332959d93230f91466`
kablam!    Compiling mitochondria v1.1.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.59 secs
boom! running `docker rm -f d4607536e44a7061115514201fe9531d666268cbbb261e332959d93230f91466`
blam! d4607536e44a7061115514201fe9531d666268cbbb261e332959d93230f91466
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! b2f1f5b5fd02b41594869284e346004ad15732f83eecce61d76644b7f660c616
boom! running `docker start -a b2f1f5b5fd02b41594869284e346004ad15732f83eecce61d76644b7f660c616`
kablam!    Compiling mitochondria v1.1.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.52 secs
boom! running `docker rm -f b2f1f5b5fd02b41594869284e346004ad15732f83eecce61d76644b7f660c616`
blam! b2f1f5b5fd02b41594869284e346004ad15732f83eecce61d76644b7f660c616
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 8b341e81981b1e1cac2e510215d1fd1e5a488963e5d7fa5bb75dec7bfb44dc52
boom! running `docker start -a 8b341e81981b1e1cac2e510215d1fd1e5a488963e5d7fa5bb75dec7bfb44dc52`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/mitochondria-7d1f5c5ef646f394
blam! 
blam! running 12 tests
blam! test move_::tests::default ... ok
blam! test move_::tests::as_mut ... ok
blam! test move_::tests::as_ptr ... ok
blam! test move_::tests::from ... ok
blam! test move_::tests::smoketest ... ok
blam! test move_::tests::send ... ok
blam! test once::tests::clone ... ok
blam! test once::tests::debug ... ok
blam! test once::tests::default ... ok
blam! test once::tests::from ... ok
blam! test once::tests::send ... ok
blam! test once::tests::smoketest ... ok
blam! 
blam! test result: ok. 12 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests mitochondria
blam! 
blam! running 15 tests
blam! warning: unused variable: `ptr`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let ptr = c.as_ptr();
blam!   |     ^^^
blam! 
blam! test move_::core::MoveCell<T>::as_ptr_0 ... ok
blam! warning: unused variable: `greeting`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let greeting = c.into_inner();
blam!   |     ^^^^^^^^
blam! 
blam! test move_::core::MoveCell<T>::into_inner_0 ... ok
blam! warning: unused variable: `c`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let c = MoveCell::new("Hello cytosol!".to_owned());
blam!   |     ^
blam! 
blam! test move_::core::MoveCell<T>::new_0 ... ok
blam! test move_::core::MoveCell<T>::as_mut_0 ... ok
blam! warning: unused variable: `greeting`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let greeting = c.replace("Goodbye!".to_owned());
blam!   |     ^^^^^^^^
blam! 
blam! test move_::core::MoveCell<T>::replace_0 ... ok
blam! warning: unused variable: `greeting`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let greeting: &str = c.init_once(|| "Hello ribosome!".to_owned());
blam!   |     ^^^^^^^^
blam! 
blam! test once::OnceCell<T>::init_once_0 ... ok
blam! test once::OnceCell<T>::init_once_1 ... ok
blam! warning: unused variable: `c`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let c = OnceCell::<String>::new();
blam!   |     ^
blam! 
blam! test once::core::OnceCell<T>::new_0 ... ok
blam! warning: unused variable: `c`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let c = OnceCell::new_with_value(Some("Hello vesicle!".to_owned()));
blam!   |     ^
blam! 
blam! test once::core::OnceCell<T>::new_with_value_0 ... ok
blam! test once::core::OnceCell<T>::as_mut_0 ... ok
blam! test once::core::OnceCell<T>::as_ref_0 ... ok
blam! warning: unused variable: `greeting`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:5
blam!   |
blam! 9 | let greeting = c.try_init_once::<(), _>(|| {
blam!   |     ^^^^^^^^
blam! 
blam! test once::core::OnceCell<T>::try_init_once_1 ... ok
blam! test once::core::OnceCell<T>::try_init_once_0 ... ok
blam! test once::core::OnceCell_1 ... ok
blam! test once::core::OnceCell_0 ... ok
blam! 
blam! test result: ok. 15 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 8b341e81981b1e1cac2e510215d1fd1e5a488963e5d7fa5bb75dec7bfb44dc52`
blam! 8b341e81981b1e1cac2e510215d1fd1e5a488963e5d7fa5bb75dec7bfb44dc52
