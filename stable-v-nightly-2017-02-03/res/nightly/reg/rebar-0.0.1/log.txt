boom! testing rebar-0.0.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 4e6dce4ee08c9c02f9b66b48ec08cd67134fcf5dc4650e05316f321e59274d4d
boom! running `docker start -a 4e6dce4ee08c9c02f9b66b48ec08cd67134fcf5dc4650e05316f321e59274d4d`
kablam!    Compiling rebar v0.0.1 (file:///source)
kablam! error: no associated item named `from_str` found for type `std::string::String` in the current scope
kablam!   --> src/lib.rs:25:20
kablam!    |
kablam! 25 |     let mut line = String::from_str("\r");
kablam!    |                    ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use std::str::FromStr;`
kablam! 
kablam! error: aborting due to previous error
kablam! 
kablam! error: Could not compile `rebar`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 4e6dce4ee08c9c02f9b66b48ec08cd67134fcf5dc4650e05316f321e59274d4d`
blam! 4e6dce4ee08c9c02f9b66b48ec08cd67134fcf5dc4650e05316f321e59274d4d
