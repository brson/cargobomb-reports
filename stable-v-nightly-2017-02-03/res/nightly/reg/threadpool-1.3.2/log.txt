boom! testing threadpool-1.3.2 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 41a4c7c7e5128b5cbc2b543113ca220fe51470328c1bc85cb4154134375ad847
boom! running `docker start -a 41a4c7c7e5128b5cbc2b543113ca220fe51470328c1bc85cb4154134375ad847`
kablam!    Compiling threadpool v1.3.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.49 secs
boom! running `docker rm -f 41a4c7c7e5128b5cbc2b543113ca220fe51470328c1bc85cb4154134375ad847`
blam! 41a4c7c7e5128b5cbc2b543113ca220fe51470328c1bc85cb4154134375ad847
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 3ed5bfab9345d632546e57cd13f34f6f73bc89e19bd2347611b31f2b4504dc5e
boom! running `docker start -a 3ed5bfab9345d632546e57cd13f34f6f73bc89e19bd2347611b31f2b4504dc5e`
kablam!    Compiling threadpool v1.3.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.96 secs
boom! running `docker rm -f 3ed5bfab9345d632546e57cd13f34f6f73bc89e19bd2347611b31f2b4504dc5e`
blam! 3ed5bfab9345d632546e57cd13f34f6f73bc89e19bd2347611b31f2b4504dc5e
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 3305d9a9449afb610f8494963ce00c35274a748ecae0963e1fa2c3e0f0cab60b
boom! running `docker start -a 3305d9a9449afb610f8494963ce00c35274a748ecae0963e1fa2c3e0f0cab60b`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/threadpool-52a0f999035546c0
blam! 
blam! running 11 tests
blam! test test::test_name ... ok
kablam! thread 'test' panicked at 'explicit panic', lib.rs:614
kablam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
kablam! thread '<unnamed>' panicked at 'explicit panic', lib.rs:477
kablam! thread '<unnamed>' panicked at 'explicit panic', lib.rs:477
kablam! thread 'thread '<unnamed>' panicked at 'explicit panic', lib.rs:477
kablam! <unnamed>' panicked at 'explicit panic', lib.rs:477
blam! test test::test_active_count ... ok
blam! test test::test_debug ... ok
blam! test test::test_recovery_from_subtask_panic ... ok
kablam! thread 'thread '<unnamed>' panicked at 'Ignore this panic, it should!', lib.rs:506
blam! test test::test_should_not_panic_on_drop_if_subtasks_panic_after_drop ... ok
kablam! thread '<unnamed>' panicked at 'Ignore this panic, it should!', lib.rs:506
kablam! thread '<unnamed>' panicked at 'Ignore this panic, it should!', lib.rs:506
kablam! <unnamed>' panicked at 'Ignore this panic, it should!', lib.rs:506
blam! test test::test_shrink ... ok
blam! test test::test_works ... ok
blam! test test::test_zero_tasks_panic ... ok
blam! test test::test_set_num_threads_decreasing ... ok
blam! test test::test_set_num_threads_increasing ... ok
blam! test test::test_massive_task_creation ... ok
blam! 
blam! test result: ok. 11 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests threadpool
blam! 
blam! running 5 tests
blam! test _0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let mut pool = ThreadPool::new_with_name("worker".into(), 2);
blam!   |     ^^^^^^^^
blam! 
blam! test ThreadPool::new_with_name_0 ... ok
blam! test ThreadPool::active_count_0 ... ok
blam! test ThreadPool::panic_count_0 ... ok
blam! test _1 ... ok
blam! 
blam! test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 3305d9a9449afb610f8494963ce00c35274a748ecae0963e1fa2c3e0f0cab60b`
blam! 3305d9a9449afb610f8494963ce00c35274a748ecae0963e1fa2c3e0f0cab60b
