boom! testing cadence-0.8.2 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! f02dce2c406b10250b3e552d52fab623d30bf19d945b2059e69bf249072bb737
boom! running `docker start -a f02dce2c406b10250b3e552d52fab623d30bf19d945b2059e69bf249072bb737`
kablam!    Compiling cadence v0.8.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.60 secs
boom! running `docker rm -f f02dce2c406b10250b3e552d52fab623d30bf19d945b2059e69bf249072bb737`
blam! f02dce2c406b10250b3e552d52fab623d30bf19d945b2059e69bf249072bb737
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 4e8e91faac65cb5eccc7115355a2105bd5dd0a9d6e7a4269ef70483a3981970a
boom! running `docker start -a 4e8e91faac65cb5eccc7115355a2105bd5dd0a9d6e7a4269ef70483a3981970a`
kablam!    Compiling cadence v0.8.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.85 secs
boom! running `docker rm -f 4e8e91faac65cb5eccc7115355a2105bd5dd0a9d6e7a4269ef70483a3981970a`
blam! 4e8e91faac65cb5eccc7115355a2105bd5dd0a9d6e7a4269ef70483a3981970a
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 709f15a70b936f439910ce6330dfa34fa8494ba564292f15e4b798fcd502ab2d
boom! running `docker start -a 709f15a70b936f439910ce6330dfa34fa8494ba564292f15e4b798fcd502ab2d`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/cadence-c8918b666feac0f7
kablam!      Running /target/debug/deps/lib-c599ddfc7fe6dcad
kablam!    Doc-tests cadence
blam! 
blam! running 31 tests
blam! test client::tests::test_statsd_client_as_gauged ... ok
blam! test client::tests::test_statsd_client_as_counted ... ok
blam! test client::tests::test_statsd_client_as_metric_client ... ok
blam! test client::tests::test_trim_key_no_trailing_dot ... ok
blam! test client::tests::test_statsd_client_as_metered ... ok
blam! test client::tests::test_statsd_client_as_timed ... ok
blam! test client::tests::test_trim_key_with_trailing_dot ... ok
blam! test io::tests::test_buffer_flushed_when_dropped ... ok
blam! test io::tests::test_write_needs_flush ... ok
blam! test io::tests::test_flush_still_buffered ... ok
blam! test io::tests::test_write_bigger_than_buffer ... ok
blam! test io::tests::test_write_no_flush ... ok
blam! test sinks::tests::test_buffered_udp_metric_sink ... ok
blam! test sinks::tests::test_console_metric_sink ... ok
blam! test sinks::tests::test_logging_metric_sink ... ok
blam! test sinks::tests::test_get_addr_bad_address ... ok
blam! test sinks::tests::test_non_blocking_udp_metric_sink ... ok
blam! test sinks::tests::test_get_addr_valid_address ... ok
blam! test sinks::tests::test_nop_metric_sink ... ok
blam! test sinks::tests::test_udp_metric_sink ... ok
blam! test types::tests::test_gauge_to_metric_string ... ok
blam! test types::tests::test_counter_to_metric_string ... ok
blam! test types::tests::test_meter_to_metric_string ... ok
blam! test types::tests::test_metric_error_cause_other ... ok
blam! test sinks::threading::tests::test_async_nop_metric_sink ... ok
blam! test types::tests::test_metric_error_cause_io_error ... ok
blam! test types::tests::test_metric_error_description_other ... ok
blam! test types::tests::test_metric_error_kind_invalid_input ... ok
blam! test types::tests::test_metric_error_description_io_error ... ok
blam! test types::tests::test_metric_error_kind_io_error ... ok
blam! test types::tests::test_timer_to_metric_string ... ok
blam! 
blam! test result: ok. 31 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 15 tests
blam! test test_statsd_client_async_buffered_udp_sink_many_threaded ... ignored
blam! test test_statsd_client_buffered_udp_sink_many_threaded ... ignored
blam! test test_statsd_client_count ... ok
blam! test test_statsd_client_decr ... ok
blam! test test_statsd_client_gauge ... ok
blam! test test_statsd_client_incr ... ok
blam! test test_statsd_client_mark ... ok
blam! test test_statsd_client_nop_sink_many_threaded ... ignored
blam! test test_statsd_client_meter ... ok
blam! test test_statsd_client_time ... ok
blam! test test_statsd_client_udp_sink_many_threaded ... ignored
blam! test test_statsd_client_async_buffered_udp_sink_single_threaded ... ok
blam! test test_statsd_client_buffered_udp_sink_single_threaded ... ok
blam! test test_statsd_client_nop_sink_single_threaded ... ok
blam! test test_statsd_client_udp_sink_single_threaded ... ok
blam! 
blam! test result: ok. 11 passed; 0 failed; 4 ignored; 0 measured
blam! 
blam! 
blam! running 20 tests
blam! test _0 ... ok
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:16:1
blam!    |
blam! 16 | client.count("my.counter.thing", 29);
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:17:1
blam!    |
blam! 17 | client.time("my.service.call", 214);
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:18:1
blam!    |
blam! 18 | client.incr("some.event");
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! test _3 ... ok
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:14:1
blam!    |
blam! 14 | client.count("my.counter.thing", 29);
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:15:1
blam!    |
blam! 15 | client.time("my.service.call", 214);
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:16:1
blam!    |
blam! 16 | client.incr("some.event");
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! test _2 ... ok
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:17:1
blam!    |
blam! 17 | client.incr("some.counter");
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:18:1
blam!    |
blam! 18 | client.time("some.methodCall", 42);
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:19:1
blam!    |
blam! 19 | client.gauge("some.thing", 7);
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:20:1
blam!    |
blam! 20 | client.meter("some.value", 5);
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! test _1 ... ok
blam! warning: unused import: `DEFAULT_PORT`, #[warn(unused_imports)] on by default
blam!  --> <anon>:5:41
blam!   |
blam! 5 | use cadence::{StatsdClient, MetricSink, DEFAULT_PORT};
blam!   |                                         ^^^^^^^^^^^^
blam! 
blam! warning: unused variable: `metric`, #[warn(unused_variables)] on by default
blam!   --> <anon>:11:20
blam!    |
blam! 11 |     fn emit(&self, metric: &str) -> io::Result<usize> {
blam!    |                    ^^^^^^
blam! 
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:21:1
blam!    |
blam! 21 | client.count("my.counter.thing", 42);
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:22:1
blam!    |
blam! 22 | client.time("my.method.time", 25);
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:23:1
blam!    |
blam! 23 | client.incr("some.other.counter");
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! test _5 ... ok
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:15:1
blam!    |
blam! 15 | client.count("my.counter.thing", 29);
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:16:1
blam!    |
blam! 16 | client.time("my.service.call", 214);
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:17:1
blam!    |
blam! 17 | client.incr("some.event");
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! test _6 ... ok
blam! warning: field is never used: `id`, #[warn(dead_code)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 |     id: u64,
blam!   |     ^^^^^^^
blam! 
blam! warning: field is never used: `username`, #[warn(dead_code)] on by default
blam!  --> <anon>:9:5
blam!   |
blam! 9 |     username: String,
blam!   |     ^^^^^^^^^^^^^^^^
blam! 
blam! warning: field is never used: `email`, #[warn(dead_code)] on by default
blam!   --> <anon>:10:5
blam!    |
blam! 10 |     email: String
blam!    |     ^^^^^^^^^^^^^
blam! 
blam! warning: unused variable: `id`, #[warn(unused_variables)] on by default
blam!   --> <anon>:29:34
blam!    |
blam! 29 |     pub fn get_user_by_id(&self, id: u64) -> Option<User> {
blam!    |                                  ^^
blam! 
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:30:9
blam!    |
blam! 30 |         self.metrics.incr("getUserById");
blam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused variable: `u`, #[warn(unused_variables)] on by default
blam!   --> <anon>:46:10
blam!    |
blam! 46 |     Some(u) => println!("Found a user!"),
blam!    |          ^
blam! 
blam! test _4 ... ok
blam! test client::MetricClient_0 ... ok
blam! warning: unused variable: `client`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:5
blam!   |
blam! 9 | let client = StatsdClient::<UdpMetricSink>::from_udp_host(prefix, host);
blam!   |     ^^^^^^
blam! 
blam! test client::StatsdClient<T>::from_udp_host_0 ... ok
blam! warning: unused variable: `client`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let client = StatsdClient::from_sink(prefix, NopMetricSink);
blam!   |     ^^^^^^
blam! 
blam! test client::StatsdClient<T>::from_sink_0 ... ok
blam! warning: unused import: `cadence::prelude::*;`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:5
blam!   |
blam! 3 | use cadence::prelude::*;
blam!   |     ^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused variable: `client`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let client = StatsdClient::<UdpMetricSink>::from_udp_host("some.prefix", host);
blam!   |     ^^^^^^
blam! 
blam! test prelude_0 ... ok
blam! warning: unused variable: `sink`, #[warn(unused_variables)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let sink = BufferedUdpMetricSink::from(host, socket);
blam!   |     ^^^^
blam! 
blam! test sinks::BufferedUdpMetricSink::from_0 ... ok
blam! warning: unused variable: `sink`, #[warn(unused_variables)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let sink = BufferedUdpMetricSink::with_capacity(host, socket, 1432);
blam!   |     ^^^^
blam! 
blam! test sinks::BufferedUdpMetricSink::with_capacity_0 ... ok
blam! warning: unused variable: `sink`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:5
blam!   |
blam! 9 | let sink = UdpMetricSink::from(host, socket);
blam!   |     ^^^^
blam! 
blam! test sinks::UdpMetricSink::from_1 ... ok
blam! warning: unused variable: `sink`, #[warn(unused_variables)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let sink = UdpMetricSink::from(host, socket);
blam!   |     ^^^^
blam! 
blam! test sinks::UdpMetricSink::from_0 ... ok
blam! warning: unused variable: `client`, #[warn(unused_variables)] on by default
blam!   --> <anon>:13:5
blam!    |
blam! 13 | let client = StatsdClient::from_sink(prefix, sink);
blam!    |     ^^^^^^
blam! 
blam! test client::StatsdClient<T>::from_sink_1 ... ok
blam! warning: unused variable: `client`, #[warn(unused_variables)] on by default
blam!   --> <anon>:12:5
blam!    |
blam! 12 | let client = StatsdClient::from_sink(prefix, sink);
blam!    |     ^^^^^^
blam! 
blam! test client::StatsdClient<T>::from_sink_2 ... ok
blam! warning: unused variable: `async_sink`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:5
blam!   |
blam! 9 | let async_sink = AsyncMetricSink::from(udp_sink);
blam!   |     ^^^^^^^^^^
blam! 
blam! test sinks::threading::AsyncMetricSink<T>::from_0 ... ok
blam! warning: unused variable: `async_sink`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:5
blam!   |
blam! 9 | let async_sink = AsyncMetricSink::from(udp_sink);
blam!   |     ^^^^^^^^^^
blam! 
blam! test sinks::threading::AsyncMetricSink<T>::from_1 ... ok
blam! warning: unused variable: `async_sink`, #[warn(unused_variables)] on by default
blam!   --> <anon>:11:5
blam!    |
blam! 11 | let async_sink = AsyncMetricSink::with_threadpool(
blam!    |     ^^^^^^^^^^
blam! 
blam! test sinks::threading::AsyncMetricSink<T>::with_threadpool_0 ... ok
blam! 
blam! test result: ok. 20 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 709f15a70b936f439910ce6330dfa34fa8494ba564292f15e4b798fcd502ab2d`
blam! 709f15a70b936f439910ce6330dfa34fa8494ba564292f15e4b798fcd502ab2d
