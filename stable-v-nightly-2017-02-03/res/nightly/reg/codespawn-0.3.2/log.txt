boom! testing codespawn-0.3.2 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 42f59eb15637c60e301e09533c0da65a4e0550d5b095863d4d2182502f18613a
boom! running `docker start -a 42f59eb15637c60e301e09533c0da65a4e0550d5b095863d4d2182502f18613a`
kablam!    Compiling json v0.10.3
kablam!    Compiling codespawn v0.3.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 14.39 secs
boom! running `docker rm -f 42f59eb15637c60e301e09533c0da65a4e0550d5b095863d4d2182502f18613a`
blam! 42f59eb15637c60e301e09533c0da65a4e0550d5b095863d4d2182502f18613a
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 527b91d9457c9f3a94955a7e1595785770bd2caccc60453e5e02af1d0fbf8228
boom! running `docker start -a 527b91d9457c9f3a94955a7e1595785770bd2caccc60453e5e02af1d0fbf8228`
kablam!    Compiling codespawn v0.3.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 6.11 secs
boom! running `docker rm -f 527b91d9457c9f3a94955a7e1595785770bd2caccc60453e5e02af1d0fbf8228`
blam! 527b91d9457c9f3a94955a7e1595785770bd2caccc60453e5e02af1d0fbf8228
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 487e5cd5f4555a662197e9bdfafe1358279918662d75450621b56c600c26d238
boom! running `docker start -a 487e5cd5f4555a662197e9bdfafe1358279918662d75450621b56c600c26d238`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/codespawn-8b86f91ae1c27895
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/lib-ba32ee6ede3b7438
blam! 
blam! running 17 tests
blam! test check_from_json_fail ... ok
blam! test check_from_json_fail_bitflags ... ok
blam! test check_from_json_fail_cfg ... ok
blam! test check_from_json_fail_malformed ... ok
blam! test check_from_json_fail_func ... ok
blam! test check_from_json_fail_enum ... ok
blam! test check_from_xml_fail ... ok
blam! test check_from_json ... ok
blam! test check_from_xml_fail_bitflags ... ok
blam! test check_from_xml_fail_enum ... ok
blam! test check_from_xml_fail_cfg ... ok
blam! test check_from_xml_fail_malformed ... ok
blam! test check_from_xml_fail_malformed_cfg ... ok
blam! test check_simple_json ... ok
blam! test check_from_xml_fail_func ... ok
blam! test check_from_xml ... ok
blam! test check_write_file ... ok
blam! 
blam! test result: ok. 17 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests codespawn
blam! 
blam! running 9 tests
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!  --> <anon>:8:1
blam!   |
blam! 8 | cpp_code.to_file("examples/sample.cpp");
blam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! test fmt_code::FormattedCode::to_file_0 ... ok
blam! warning: unused variable: `cpp_code`, #[warn(unused_variables)] on by default
blam!   --> <anon>:11:9
blam!    |
blam! 11 |     let cpp_code  = raw_code.to_cpp().unwrap().to_string();
blam!    |         ^^^^^^^^
blam! 
blam! warning: unused variable: `rust_code`, #[warn(unused_variables)] on by default
blam!   --> <anon>:12:9
blam!    |
blam! 12 |     let rust_code = raw_code.to_rust().unwrap().to_string();
blam!    |         ^^^^^^^^^
blam! 
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:15:5
blam!    |
blam! 15 |     raw_code.to_cpp().unwrap().to_file("examples/sample.cpp");
blam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! test _0 ... ok
blam! warning: unused variable: `raw_code`, #[warn(unused_variables)] on by default
blam!  --> <anon>:4:5
blam!   |
blam! 4 | let raw_code = codespawn::from_json("examples/sample.json").unwrap();
blam!   |     ^^^^^^^^
blam! 
blam! test from_json_0 ... ok
blam! test fmt_code::FormattedCode::to_string_0 ... ok
blam! warning: unused variable: `raw_code`, #[warn(unused_variables)] on by default
blam!  --> <anon>:4:5
blam!   |
blam! 4 | let raw_code = codespawn::from_xml_str("<enum name=\"Foo\"><var name=\"EnumVal1\" type=\"int\" /></enum>").unwrap();
blam!   |     ^^^^^^^^
blam! 
blam! test from_xml_str_0 ... ok
blam! warning: unused variable: `raw_code`, #[warn(unused_variables)] on by default
blam!  --> <anon>:4:5
blam!   |
blam! 4 | let raw_code = codespawn::from_json_str("{\"enum\": { \"name\": \"Foo\",\"var\": {\"name\": \"EnumVal1\",\"type\": \"int\" }}}").unwrap();
blam!   |     ^^^^^^^^
blam! 
blam! test from_json_str_0 ... ok
blam! warning: unused variable: `raw_code`, #[warn(unused_variables)] on by default
blam!  --> <anon>:4:5
blam!   |
blam! 4 | let raw_code = codespawn::from_xml("examples/sample.xml").unwrap();
blam!   |     ^^^^^^^^
blam! 
blam! test from_xml_0 ... ok
blam! warning: unused variable: `cpp_code`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let cpp_code = raw_code.to_cpp();
blam!   |     ^^^^^^^^
blam! 
blam! test raw_code::RawCode::to_cpp_0 ... ok
blam! warning: unused variable: `cpp_code`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let cpp_code = raw_code.to_rust();
blam!   |     ^^^^^^^^
blam! 
blam! test raw_code::RawCode::to_rust_0 ... ok
blam! 
blam! test result: ok. 9 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 487e5cd5f4555a662197e9bdfafe1358279918662d75450621b56c600c26d238`
blam! 487e5cd5f4555a662197e9bdfafe1358279918662d75450621b56c600c26d238
