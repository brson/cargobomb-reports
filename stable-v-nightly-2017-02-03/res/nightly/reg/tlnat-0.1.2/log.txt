boom! testing tlnat-0.1.2 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 2e60cb8d1ecfa34078f50d203a63fe2c214025377ef4575fa083d089abb47664
boom! running `docker start -a 2e60cb8d1ecfa34078f50d203a63fe2c214025377ef4575fa083d089abb47664`
kablam!    Compiling tlnat v0.1.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 8.76 secs
boom! running `docker rm -f 2e60cb8d1ecfa34078f50d203a63fe2c214025377ef4575fa083d089abb47664`
blam! 2e60cb8d1ecfa34078f50d203a63fe2c214025377ef4575fa083d089abb47664
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! edae8772d4a4034a36fbf2c9bef0a63700e61b372736b233079256a29305d463
boom! running `docker start -a edae8772d4a4034a36fbf2c9bef0a63700e61b372736b233079256a29305d463`
kablam!    Compiling tlnat v0.1.2 (file:///source)
kablam! error: no associated item named `VALUE` found for type `tlnat::_0` in the current scope
kablam!   --> tests/lib.rs:24:19
kablam!    |
kablam! 24 |     assert_eq!(0, tlnat::_0::VALUE);
kablam!    |                   ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_1` in the current scope
kablam!   --> tests/lib.rs:25:19
kablam!    |
kablam! 25 |     assert_eq!(1, tlnat::_1::VALUE);
kablam!    |                   ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_2` in the current scope
kablam!   --> tests/lib.rs:26:19
kablam!    |
kablam! 26 |     assert_eq!(2, tlnat::_2::VALUE);
kablam!    |                   ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_3` in the current scope
kablam!   --> tests/lib.rs:27:19
kablam!    |
kablam! 27 |     assert_eq!(3, tlnat::_3::VALUE);
kablam!    |                   ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_4` in the current scope
kablam!   --> tests/lib.rs:28:19
kablam!    |
kablam! 28 |     assert_eq!(4, tlnat::_4::VALUE);
kablam!    |                   ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_5` in the current scope
kablam!   --> tests/lib.rs:29:19
kablam!    |
kablam! 29 |     assert_eq!(5, tlnat::_5::VALUE);
kablam!    |                   ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_6` in the current scope
kablam!   --> tests/lib.rs:30:19
kablam!    |
kablam! 30 |     assert_eq!(6, tlnat::_6::VALUE);
kablam!    |                   ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_7` in the current scope
kablam!   --> tests/lib.rs:31:19
kablam!    |
kablam! 31 |     assert_eq!(7, tlnat::_7::VALUE);
kablam!    |                   ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_8` in the current scope
kablam!   --> tests/lib.rs:32:19
kablam!    |
kablam! 32 |     assert_eq!(8, tlnat::_8::VALUE);
kablam!    |                   ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_9` in the current scope
kablam!   --> tests/lib.rs:33:19
kablam!    |
kablam! 33 |     assert_eq!(9, tlnat::_9::VALUE);
kablam!    |                   ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_5` in the current scope
kablam!   --> tests/lib.rs:41:18
kablam!    |
kablam! 41 |     assert!(0 != tlnat::_5::VALUE);
kablam!    |                  ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_9` in the current scope
kablam!   --> tests/lib.rs:42:18
kablam!    |
kablam! 42 |     assert!(1 != tlnat::_9::VALUE);
kablam!    |                  ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_3` in the current scope
kablam!   --> tests/lib.rs:43:18
kablam!    |
kablam! 43 |     assert!(2 != tlnat::_3::VALUE);
kablam!    |                  ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_10` in the current scope
kablam!   --> tests/lib.rs:44:18
kablam!    |
kablam! 44 |     assert!(3 != tlnat::_10::VALUE);
kablam!    |                  ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_2` in the current scope
kablam!   --> tests/lib.rs:45:18
kablam!    |
kablam! 45 |     assert!(4 != tlnat::_2::VALUE);
kablam!    |                  ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_7` in the current scope
kablam!   --> tests/lib.rs:46:18
kablam!    |
kablam! 46 |     assert!(5 != tlnat::_7::VALUE);
kablam!    |                  ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_1` in the current scope
kablam!   --> tests/lib.rs:47:18
kablam!    |
kablam! 47 |     assert!(6 != tlnat::_1::VALUE);
kablam!    |                  ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_4` in the current scope
kablam!   --> tests/lib.rs:48:18
kablam!    |
kablam! 48 |     assert!(7 != tlnat::_4::VALUE);
kablam!    |                  ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_6` in the current scope
kablam!   --> tests/lib.rs:49:18
kablam!    |
kablam! 49 |     assert!(8 != tlnat::_6::VALUE);
kablam!    |                  ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_8` in the current scope
kablam!   --> tests/lib.rs:50:18
kablam!    |
kablam! 50 |     assert!(9 != tlnat::_8::VALUE);
kablam!    |                  ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: aborting due to 20 previous errors
kablam! 
blam! Build failed, waiting for other jobs to finish...
kablam! error: Could not compile `tlnat`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f edae8772d4a4034a36fbf2c9bef0a63700e61b372736b233079256a29305d463`
blam! edae8772d4a4034a36fbf2c9bef0a63700e61b372736b233079256a29305d463
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 2f33d782020d006ed102d0f33421441fc1a1ecb98f60362d34e4281f743a226d
boom! running `docker start -a 2f33d782020d006ed102d0f33421441fc1a1ecb98f60362d34e4281f743a226d`
kablam!    Compiling tlnat v0.1.2 (file:///source)
kablam! error: no associated item named `VALUE` found for type `tlnat::_0` in the current scope
kablam!   --> tests/lib.rs:24:19
kablam!    |
kablam! 24 |     assert_eq!(0, tlnat::_0::VALUE);
kablam!    |                   ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_1` in the current scope
kablam!   --> tests/lib.rs:25:19
kablam!    |
kablam! 25 |     assert_eq!(1, tlnat::_1::VALUE);
kablam!    |                   ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_2` in the current scope
kablam!   --> tests/lib.rs:26:19
kablam!    |
kablam! 26 |     assert_eq!(2, tlnat::_2::VALUE);
kablam!    |                   ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_3` in the current scope
kablam!   --> tests/lib.rs:27:19
kablam!    |
kablam! 27 |     assert_eq!(3, tlnat::_3::VALUE);
kablam!    |                   ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_4` in the current scope
kablam!   --> tests/lib.rs:28:19
kablam!    |
kablam! 28 |     assert_eq!(4, tlnat::_4::VALUE);
kablam!    |                   ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_5` in the current scope
kablam!   --> tests/lib.rs:29:19
kablam!    |
kablam! 29 |     assert_eq!(5, tlnat::_5::VALUE);
kablam!    |                   ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_6` in the current scope
kablam!   --> tests/lib.rs:30:19
kablam!    |
kablam! 30 |     assert_eq!(6, tlnat::_6::VALUE);
kablam!    |                   ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_7` in the current scope
kablam!   --> tests/lib.rs:31:19
kablam!    |
kablam! 31 |     assert_eq!(7, tlnat::_7::VALUE);
kablam!    |                   ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_8` in the current scope
kablam!   --> tests/lib.rs:32:19
kablam!    |
kablam! 32 |     assert_eq!(8, tlnat::_8::VALUE);
kablam!    |                   ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_9` in the current scope
kablam!   --> tests/lib.rs:33:19
kablam!    |
kablam! 33 |     assert_eq!(9, tlnat::_9::VALUE);
kablam!    |                   ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_5` in the current scope
kablam!   --> tests/lib.rs:41:18
kablam!    |
kablam! 41 |     assert!(0 != tlnat::_5::VALUE);
kablam!    |                  ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_9` in the current scope
kablam!   --> tests/lib.rs:42:18
kablam!    |
kablam! 42 |     assert!(1 != tlnat::_9::VALUE);
kablam!    |                  ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_3` in the current scope
kablam!   --> tests/lib.rs:43:18
kablam!    |
kablam! 43 |     assert!(2 != tlnat::_3::VALUE);
kablam!    |                  ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_10` in the current scope
kablam!   --> tests/lib.rs:44:18
kablam!    |
kablam! 44 |     assert!(3 != tlnat::_10::VALUE);
kablam!    |                  ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_2` in the current scope
kablam!   --> tests/lib.rs:45:18
kablam!    |
kablam! 45 |     assert!(4 != tlnat::_2::VALUE);
kablam!    |                  ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_7` in the current scope
kablam!   --> tests/lib.rs:46:18
kablam!    |
kablam! 46 |     assert!(5 != tlnat::_7::VALUE);
kablam!    |                  ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_1` in the current scope
kablam!   --> tests/lib.rs:47:18
kablam!    |
kablam! 47 |     assert!(6 != tlnat::_1::VALUE);
kablam!    |                  ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_4` in the current scope
kablam!   --> tests/lib.rs:48:18
kablam!    |
kablam! 48 |     assert!(7 != tlnat::_4::VALUE);
kablam!    |                  ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_6` in the current scope
kablam!   --> tests/lib.rs:49:18
kablam!    |
kablam! 49 |     assert!(8 != tlnat::_6::VALUE);
kablam!    |                  ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: no associated item named `VALUE` found for type `tlnat::_8` in the current scope
kablam!   --> tests/lib.rs:50:18
kablam!    |
kablam! 50 |     assert!(9 != tlnat::_8::VALUE);
kablam!    |                  ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
kablam!    = help: candidate #1: `use tlnat::UnsignedIntegralConstant;`
kablam! 
kablam! error: aborting due to 20 previous errors
kablam! 
kablam! error: Could not compile `tlnat`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 2f33d782020d006ed102d0f33421441fc1a1ecb98f60362d34e4281f743a226d`
blam! 2f33d782020d006ed102d0f33421441fc1a1ecb98f60362d34e4281f743a226d
