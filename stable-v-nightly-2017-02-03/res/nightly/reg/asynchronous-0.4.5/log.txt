boom! testing asynchronous-0.4.5 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! d6da1302cfb2165b4b9ff44fd4345e6bb913b4836fcb473e57dfcef949c34920
boom! running `docker start -a d6da1302cfb2165b4b9ff44fd4345e6bb913b4836fcb473e57dfcef949c34920`
kablam!    Compiling asynchronous v0.4.5 (file:///source)
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:840:13
kablam!     |
kablam! 840 |             thread::sleep_ms(duration_ms);    
kablam!     |             ^^^^^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.87 secs
boom! running `docker rm -f d6da1302cfb2165b4b9ff44fd4345e6bb913b4836fcb473e57dfcef949c34920`
blam! d6da1302cfb2165b4b9ff44fd4345e6bb913b4836fcb473e57dfcef949c34920
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 7f9286ce2ab65a42d8e4919b5cb0273659c864a41a6c8c24280b8202db8b1836
boom! running `docker start -a 7f9286ce2ab65a42d8e4919b5cb0273659c864a41a6c8c24280b8202db8b1836`
kablam!    Compiling ansi_term v0.5.2
kablam!    Compiling asynchronous v0.4.5 (file:///source)
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:840:13
kablam!     |
kablam! 840 |             thread::sleep_ms(duration_ms);    
kablam!     |             ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> tests/lib.rs:109:9
kablam!     |
kablam! 109 |         thread::sleep_ms(200);            
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> tests/lib.rs:116:9
kablam!     |
kablam! 116 |         thread::sleep_ms(100);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> tests/lib.rs:123:9
kablam!     |
kablam! 123 |         thread::sleep_ms(200);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> tests/lib.rs:168:9
kablam!     |
kablam! 168 |         thread::sleep_ms(200);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> tests/lib.rs:174:9
kablam!     |
kablam! 174 |         thread::sleep_ms(300);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> tests/lib.rs:180:9
kablam!     |
kablam! 180 |         thread::sleep_ms(50);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> tests/lib.rs:222:9
kablam!     |
kablam! 222 |         thread::sleep_ms(150);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> tests/lib.rs:228:9
kablam!     |
kablam! 228 |         thread::sleep_ms(300);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> tests/lib.rs:234:9
kablam!     |
kablam! 234 |         thread::sleep_ms(50);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> tests/lib.rs:240:9
kablam!     |
kablam! 240 |         thread::sleep_ms(200);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> tests/lib.rs:417:9
kablam!     |
kablam! 417 |         thread::sleep_ms(50);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> tests/lib.rs:422:9
kablam!     |
kablam! 422 |         thread::sleep_ms(50);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> tests/lib.rs:468:5
kablam!     |
kablam! 468 |     thread::sleep_ms(100);
kablam!     |     ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> tests/lib.rs:493:9
kablam!     |
kablam! 493 |         thread::sleep_ms(100);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> tests/lib.rs:555:5
kablam!     |
kablam! 555 |     thread::sleep_ms(75);
kablam!     |     ^^^^^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 19.22 secs
boom! running `docker rm -f 7f9286ce2ab65a42d8e4919b5cb0273659c864a41a6c8c24280b8202db8b1836`
blam! 7f9286ce2ab65a42d8e4919b5cb0273659c864a41a6c8c24280b8202db8b1836
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! b6699b39006eaf2642a56f43e340070312647bc3ee502a7785bbb5f909da8076
boom! running `docker start -a b6699b39006eaf2642a56f43e340070312647bc3ee502a7785bbb5f909da8076`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/asynchronous-df0b6970ad0cdf1b
blam! 
blam! running 0 tests
blam! 
kablam!      Running /target/debug/deps/lib-1bde3c5a67f578ac
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 20 tests
blam! test deferred ... ok
blam! test deferred_first_no_wait ... ok
blam! test deferred_first_wait ... ok
blam! test deferred_in_parallel_limit_cpus ... ok
blam! test deferred_chained ... ok
blam! test deferred_to_promise ... ok
blam! test event_loop_1 ... ok
blam! test event_loop_2 ... ok
blam! test event_loop_3 ... ok
blam! test deferred_in_parallel ... ok
blam! test event_loop_on_1 ... ok
blam! test event_loop_on_2 ... ok
blam! test deferred_in_parallel_limit ... ok
blam! test event_loop_on_managed_1 ... ok
blam! test nested_promises ... ok
blam! test promises ... ok
blam! test promises_parallel ... ok
blam! test deferred_in_series ... ok
blam! test event_loop_on_managed_2 ... ok
blam! test event_loop_4 ... ok
blam! 
blam! test result: ok. 20 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests asynchronous
blam! 
blam! running 28 tests
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:3:1
blam!    |
blam! 3  |   asynchronous::Deferred::new(|| {
blam!    |  _^ starting here...
blam! 4  | |    Err(32)
blam! 5  | | }).success(|res| {
blam! 6  | |    unreachable!();
blam! 7  | |    Ok(res)
blam! 8  | | }).fail(|err| {
blam! 9  | |    assert_eq!(err, 32);
blam! 10 | |    Ok("Value Ok")
blam! 11 | | }).sync();
blam!    | |__________^ ...ending here
blam! 
blam! warning: unused variable: `res`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:13
blam!   |
blam! 5 | }).success(|res| {
blam!   |             ^^^
blam! 
blam! warning: unreachable expression, #[warn(unreachable_code)] on by default
blam!  --> <anon>:7:4
blam!   |
blam! 7 |    Ok(res)
blam!   |    ^^^^^^^
blam! 
blam! test Deferred<T, E>::fail_0 ... ok
blam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
blam!  --> <anon>:4:4
blam!   |
blam! 4 |    std::thread::sleep_ms(100);
blam!   |    ^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused variable: `a`, #[warn(unused_variables)] on by default
blam!   --> <anon>:10:5
blam!    |
blam! 10 | let a = 2 + 3;  // This line is executed before the above Promise
blam!    |     ^
blam! 
blam! test Deferred<T, E>::finally_0 ... ok
blam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
blam!  --> <anon>:6:4
blam!   |
blam! 6 |    std::thread::sleep_ms(100);
blam!   |    ^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused variable: `a`, #[warn(unused_variables)] on by default
blam!   --> <anon>:12:5
blam!    |
blam! 12 | let a = 2 + 3;  // This line is executed after the above Promise
blam!    |     ^
blam! 
blam! test Deferred<T, E>::finally_sync_0 ... ok
blam! warning: unused variable: `res`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:10
blam!   |
blam! 9 | }).then(|res| {
blam!   |          ^^^
blam! 
blam! warning: unreachable statement, #[warn(unreachable_code)] on by default
blam!   --> <anon>:11:4
blam!    |
blam! 11 |    assert_eq!(res, 1.23);
blam!    |    ^^^^^^^^^^^^^^^^^^^^^^
blam!    |
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! test Deferred<T, E>::chain_0 ... ok
blam! warning: unused variable: `deferred`, #[warn(unused_variables)] on by default
blam!  --> <anon>:3:5
blam!   |
blam! 3 | let deferred = asynchronous::Deferred::new(|| {
blam!   |     ^^^^^^^^
blam! 
blam! test Deferred<T, E>::new_0 ... ok
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:3:1
blam!    |
blam! 3  |   asynchronous::Deferred::new(|| {
blam!    |  _^ starting here...
blam! 4  | |    Ok(1.23)
blam! 5  | | }).success(|res| {
blam! 6  | |    assert_eq!(res, 1.23);
blam! 7  | |    Ok(34)
blam! 8  | | }).success(|res| {
blam! 9  | |    assert_eq!(res, 34);
blam! 10 | |    if true { Ok(res) } else { Err("Final error")}
blam! 11 | | }).sync();
blam!    | |__________^ ...ending here
blam! 
blam! test Deferred<T, E>::success_0 ... ok
blam! test Deferred<T, E>::sync_0 ... ok
blam! test Deferred<T, E>::first_to_promise_0 ... ok
blam! test Deferred<T, E>::to_promise_0 ... ok
blam! warning: unused variable: `res`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:10
blam!   |
blam! 5 | }).then(|res| {
blam!   |          ^^^
blam! 
blam! warning: unreachable statement, #[warn(unreachable_code)] on by default
blam!  --> <anon>:7:4
blam!   |
blam! 7 |    assert_eq!(res, 1.23);
blam!   |    ^^^^^^^^^^^^^^^^^^^^^^
blam!   |
blam!   = note: this error originates in a macro outside of the current crate
blam! 
blam! test Deferred<T, E>::then_0 ... ok
blam! test Deferred<T, E>::vec_to_promise_0 ... ok
blam! test EventLoop<Ev>::emit_until_0 ... ok
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!  --> <anon>:6:1
blam!   |
blam! 6 | el.emit("Event1");
blam!   | ^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!  --> <anon>:7:1
blam!   |
blam! 7 | el.emit("Event2");
blam!   | ^^^^^^^^^^^^^^^^^^
blam! 
blam! test EventLoop<Ev>::new_0 ... ok
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:12:1
blam!    |
blam! 12 | el.emit(MiEvents::Hello("World".to_string()));
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:13:1
blam!    |
blam! 13 | el.emit(MiEvents::Goodbye(3));
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! test EventLoop<Ev>::on_0 ... ok
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:12:1
blam!    |
blam! 12 | el.emit(MiEvents::Hello("World".to_string()));
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:13:1
blam!    |
blam! 13 | el.emit(MiEvents::Goodbye(555));
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! test EventLoop<Ev>::on_managed_0 ... ok
blam! test EventLoopHandler<Ev>::emit_until_0 ... ok
blam! test Promise<T, E>::all_0 ... ok
blam! warning: unused variable: `res`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:10
blam!   |
blam! 9 | }).then(|res| {
blam!   |          ^^^
blam! 
blam! warning: unreachable statement, #[warn(unreachable_code)] on by default
blam!   --> <anon>:11:4
blam!    |
blam! 11 |    assert_eq!(res, 1.23);
blam!    |    ^^^^^^^^^^^^^^^^^^^^^^
blam!    |
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! test Promise<T, E>::chain_0 ... ok
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:3:1
blam!    |
blam! 3  |   asynchronous::Promise::new(|| {
blam!    |  _^ starting here...
blam! 4  | |    Err(32)
blam! 5  | | }).success(|res| {
blam! 6  | |    unreachable!();
blam! 7  | |    Ok(res)
blam! 8  | | }).fail(|err| {
blam! 9  | |    assert_eq!(err, 32);
blam! 10 | |    Ok("Value Ok")
blam! 11 | | }).sync();
blam!    | |__________^ ...ending here
blam! 
blam! warning: unused variable: `res`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:13
blam!   |
blam! 5 | }).success(|res| {
blam!   |             ^^^
blam! 
blam! warning: unreachable expression, #[warn(unreachable_code)] on by default
blam!  --> <anon>:7:4
blam!   |
blam! 7 |    Ok(res)
blam!   |    ^^^^^^^
blam! 
blam! test Promise<T, E>::fail_0 ... ok
blam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
blam!  --> <anon>:4:4
blam!   |
blam! 4 |    std::thread::sleep_ms(100);
blam!   |    ^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused variable: `a`, #[warn(unused_variables)] on by default
blam!   --> <anon>:10:5
blam!    |
blam! 10 | let a = 2 + 3;  // This line is executed before the above Promise
blam!    |     ^
blam! 
blam! test Promise<T, E>::finally_0 ... ok
blam! warning: unused variable: `promise`, #[warn(unused_variables)] on by default
blam!  --> <anon>:3:5
blam!   |
blam! 3 | let promise = asynchronous::Promise::new(|| {
blam!   |     ^^^^^^^
blam! 
blam! test Promise<T, E>::new_0 ... ok
blam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
blam!  --> <anon>:6:4
blam!   |
blam! 6 |    std::thread::sleep_ms(100);
blam!   |    ^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused variable: `a`, #[warn(unused_variables)] on by default
blam!   --> <anon>:12:5
blam!    |
blam! 12 | let a = 2 + 3;  // This line is executed after the above Promise
blam!    |     ^
blam! 
blam! test Promise<T, E>::finally_sync_0 ... ok
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:3:1
blam!    |
blam! 3  |   asynchronous::Promise::new(|| {
blam!    |  _^ starting here...
blam! 4  | |    Ok(1.23)
blam! 5  | | }).success(|res| {
blam! 6  | |    assert_eq!(res, 1.23);
blam! 7  | |    Ok(34)
blam! 8  | | }).success(|res| {
blam! 9  | |    assert_eq!(res, 34);
blam! 10 | |    if true { Ok(res) } else { Err("Final error")}
blam! 11 | | }).sync();
blam!    | |__________^ ...ending here
blam! 
blam! test Promise<T, E>::success_0 ... ok
blam! test Promise<T, E>::sync_0 ... ok
blam! warning: unused variable: `res`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:10
blam!   |
blam! 5 | }).then(|res| {
blam!   |          ^^^
blam! 
blam! warning: unreachable statement, #[warn(unreachable_code)] on by default
blam!  --> <anon>:7:4
blam!   |
blam! 7 |    assert_eq!(res, 1.23);
blam!   |    ^^^^^^^^^^^^^^^^^^^^^^
blam!   |
blam!   = note: this error originates in a macro outside of the current crate
blam! 
blam! test Promise<T, E>::then_0 ... ok
blam! test _0 ... ok
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!  --> <anon>:6:1
blam!   |
blam! 6 | el.emit("Event1");
blam!   | ^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!  --> <anon>:7:1
blam!   |
blam! 7 | el.emit("Event2");
blam!   | ^^^^^^^^^^^^^^^^^^
blam! 
blam! test _2 ... ok
blam! test _1 ... ok
blam! 
blam! test result: ok. 28 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f b6699b39006eaf2642a56f43e340070312647bc3ee502a7785bbb5f909da8076`
blam! b6699b39006eaf2642a56f43e340070312647bc3ee502a7785bbb5f909da8076
