boom! testing yyid-0.2.4 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! db2364714d6659715af2c241c4af223b7562b6b9823a036fc3b8d397f479497f
boom! running `docker start -a db2364714d6659715af2c241c4af223b7562b6b9823a036fc3b8d397f479497f`
kablam!    Compiling yyid v0.2.4 (file:///source)
kablam! note: link against the following native artifacts when linking against this static library
kablam! 
kablam! note: the order and any duplication can be significant on some platforms, and so may need to be preserved
kablam! 
kablam! note: library: util
kablam! 
kablam! note: library: dl
kablam! 
kablam! note: library: rt
kablam! 
kablam! note: library: pthread
kablam! 
kablam! note: library: gcc_s
kablam! 
kablam! note: library: c
kablam! 
kablam! note: library: m
kablam! 
kablam! note: library: rt
kablam! 
kablam! note: library: util
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.3 secs
boom! running `docker rm -f db2364714d6659715af2c241c4af223b7562b6b9823a036fc3b8d397f479497f`
blam! db2364714d6659715af2c241c4af223b7562b6b9823a036fc3b8d397f479497f
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 906b8f5abff5865fa0bbc7217632ec1a14c153d13960bc4e417e2da8eaf9b81e
boom! running `docker start -a 906b8f5abff5865fa0bbc7217632ec1a14c153d13960bc4e417e2da8eaf9b81e`
kablam!    Compiling yyid v0.2.4 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.90 secs
boom! running `docker rm -f 906b8f5abff5865fa0bbc7217632ec1a14c153d13960bc4e417e2da8eaf9b81e`
blam! 906b8f5abff5865fa0bbc7217632ec1a14c153d13960bc4e417e2da8eaf9b81e
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! dae2d44583d5204495a51f4f8c68616ba1c607bfb3feeb637bf46f5d6dd34432
boom! running `docker start -a dae2d44583d5204495a51f4f8c68616ba1c607bfb3feeb637bf46f5d6dd34432`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/yyid-1f2280a13df5a301
blam! 
blam! running 12 tests
blam! test tests::test_compare ... ok
blam! test tests::test_as_bytes ... ok
blam! test tests::test_exported_yyid_c_string ... FAILED
blam! test tests::test_operator_eq ... ok
blam! test tests::test_iterbytes_impl_for_yyid ... ok
blam! test tests::test_new ... ok
blam! test tests::test_to_string ... ok
blam! test tests::test_to_simple_string ... ok
blam! test tests::test_rand_rand ... ok
blam! test tests::test_to_simple_string_matching ... ok
blam! test tests::test_to_urn_string ... ok
blam! test tests::test_yyid_string ... ok
blam! 
blam! failures:
blam! 
blam! ---- tests::test_exported_yyid_c_string stdout ----
blam! 	thread 'tests::test_exported_yyid_c_string' panicked at 'assertion failed: yyid.len() == 36', src/lib.rs:222
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! 
blam! failures:
blam!     tests::test_exported_yyid_c_string
blam! 
blam! test result: FAILED. 11 passed; 1 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f dae2d44583d5204495a51f4f8c68616ba1c607bfb3feeb637bf46f5d6dd34432`
blam! dae2d44583d5204495a51f4f8c68616ba1c607bfb3feeb637bf46f5d6dd34432
