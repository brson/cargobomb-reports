boom! testing adapton-0.2.4 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! a529b9a65e654242f89ee016fce3c474dcc2f1f12354a4498474a92348c7976b
boom! running `docker start -a a529b9a65e654242f89ee016fce3c474dcc2f1f12354a4498474a92348c7976b`
kablam!    Compiling adapton v0.2.4 (file:///source)
kablam! warning: `#[derive]` for custom traits is deprecated and will be removed in v1.15. Prefer using procedural macro custom derive
kablam!   --> src/collection_edit.rs:17:40
kablam!    |
kablam! 17 | #[derive(Debug,Hash,PartialEq,Eq,Clone,Rand)]
kablam!    |                                        ^^^^
kablam! 
kablam! warning: `#[derive]` for custom traits is deprecated and will be removed in v1.15. Prefer using procedural macro custom derive
kablam!   --> src/collection_edit.rs:34:40
kablam!    |
kablam! 34 | #[derive(Debug,Hash,PartialEq,Eq,Clone,Rand)]
kablam!    |                                        ^^^^
kablam! 
kablam! warning: `#[derive]` for custom traits is deprecated and will be removed in v1.15. Prefer using procedural macro custom derive
kablam!   --> src/collection_edit.rs:39:40
kablam!    |
kablam! 39 | #[derive(Debug,Hash,PartialEq,Eq,Clone,Rand)]
kablam!    |                                        ^^^^
kablam! 
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead, #[warn(deprecated)] on by default
kablam!   --> src/macros.rs:13:29
kablam!    |
kablam! 13 | use std::hash::{Hash,Hasher,SipHasher};
kablam!    |                             ^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead, #[warn(deprecated)] on by default
kablam!   --> src/macros.rs:36:22
kablam!    |
kablam! 36 |     let mut hasher = SipHasher::new();
kablam!    |                      ^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead, #[warn(deprecated)] on by default
kablam!   --> src/macros.rs:36:22
kablam!    |
kablam! 36 |     let mut hasher = SipHasher::new();
kablam!    |                      ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `Hasher`, #[warn(unused_imports)] on by default
kablam!  --> src/adapton_sigs.rs:2:22
kablam!   |
kablam! 2 | use std::hash::{Hash,Hasher};
kablam!   |                      ^^^^^^
kablam! 
kablam! warning: use of deprecated item: no longer used for Iterator::sum, #[warn(deprecated)] on by default
kablam!  --> src/adapton_sigs.rs:8:5
kablam!   |
kablam! 8 | use std::num::Zero;
kablam!   |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: no longer used for Iterator::sum, #[warn(deprecated)] on by default
kablam!    --> src/adapton_sigs.rs:192:6
kablam!     |
kablam! 192 | impl Zero for Cnt {
kablam!     |      ^^^^
kablam! 
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead, #[warn(deprecated)] on by default
kablam!  --> src/engine.rs:9:29
kablam!   |
kablam! 9 | use std::hash::{Hash,Hasher,SipHasher};
kablam!   |                             ^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: no longer used for Iterator::sum, #[warn(deprecated)] on by default
kablam!   --> src/engine.rs:10:5
kablam!    |
kablam! 10 | use std::num::Zero;
kablam!    |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: constant `engineMsgStr` should have an upper case name such as `ENGINE_MSG_STR`, #[warn(non_upper_case_globals)] on by default
kablam!   --> src/engine.rs:16:1
kablam!    |
kablam! 16 | const engineMsgStr : &'static str = "adapton::engine:";
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: constant item is never used: `engineMsgStr`, #[warn(dead_code)] on by default
kablam!   --> src/engine.rs:16:1
kablam!    |
kablam! 16 | const engineMsgStr : &'static str = "adapton::engine:";
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `engineMsg` should have a snake case name such as `engine_msg`, #[warn(non_snake_case)] on by default
kablam!   --> src/engine.rs:18:1
kablam!    |
kablam! 18 | fn engineMsg (indent:Option<usize>) -> String {
kablam!    | ^
kablam! 
kablam! warning: unused variable: `i`, #[warn(unused_variables)] on by default
kablam!   --> src/engine.rs:23:17
kablam!    |
kablam! 23 |             for i in 1..indent {
kablam!    |                 ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/engine.rs:278:50
kablam!     |
kablam! 278 |     fn fmt(&self, f: &mut Formatter) -> Result { self.prog_pt.fmt(f) ; self.arg.fmt(f) }
kablam!     |                                                  ^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `std::io`, #[warn(unused_imports)] on by default
kablam!    --> src/engine.rs:346:9
kablam!     |
kablam! 346 |     use std::io;
kablam!     |         ^^^^^^^
kablam! 
kablam! warning: variable `frame_num` is assigned to, but never used, #[warn(unused_variables)] on by default
kablam!    --> src/engine.rs:450:9
kablam!     |
kablam! 450 |     let mut frame_num = 0;
kablam!     |         ^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/engine.rs:452:7
kablam!     |
kablam! 452 |       writeln!(&mut writer, "\"{:?}\" [color=blue,penwidth=10];", frame.loc);
kablam!     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead, #[warn(deprecated)] on by default
kablam!    --> src/engine.rs:561:22
kablam!     |
kablam! 561 |     let mut hasher = SipHasher::new();
kablam!     |                      ^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead, #[warn(deprecated)] on by default
kablam!    --> src/engine.rs:561:22
kablam!     |
kablam! 561 |     let mut hasher = SipHasher::new();
kablam!     |                      ^^^^^^^^^^^^^^
kablam! 
kablam! warning: variable `stackLen` should have a snake case name such as `stack_len`, #[warn(non_snake_case)] on by default
kablam!    --> src/engine.rs:696:13
kablam!     |
kablam! 696 |         let stackLen = st.stack.len() ;
kablam!     |             ^^^^^^^^
kablam! 
kablam! warning: variable `stackLen` should have a snake case name such as `stack_len`, #[warn(non_snake_case)] on by default
kablam!    --> src/engine.rs:743:9
kablam!     |
kablam! 743 |     let stackLen = st.stack.len() ;
kablam!     |         ^^^^^^^^
kablam! 
kablam! warning: variable `stackLen` should have a snake case name such as `stack_len`, #[warn(non_snake_case)] on by default
kablam!    --> src/engine.rs:763:9
kablam!     |
kablam! 763 |     let stackLen = st.stack.len() ;
kablam!     |         ^^^^^^^^
kablam! 
kablam! warning: variable `stackLen` should have a snake case name such as `stack_len`, #[warn(non_snake_case)] on by default
kablam!    --> src/engine.rs:777:9
kablam!     |
kablam! 777 |     let stackLen = st.stack.len() ;
kablam!     |         ^^^^^^^^
kablam! 
kablam! warning: variable `stackLen` should have a snake case name such as `stack_len`, #[warn(non_snake_case)] on by default
kablam!    --> src/engine.rs:804:9
kablam!     |
kablam! 804 |     let stackLen = st.stack.len() ;
kablam!     |         ^^^^^^^^
kablam! 
kablam! warning: unused variable: `val`, #[warn(unused_variables)] on by default
kablam!    --> src/engine.rs:884:93
kablam!     |
kablam! 884 |                 ignore_nominal_use_structural : { match env::var("ADAPTON_STRUCTURAL") { Ok(val) => true, _ => false } },
kablam!     |                                                                                             ^^^
kablam! 
kablam! warning: unused variable: `val`, #[warn(unused_variables)] on by default
kablam!    --> src/engine.rs:885:93
kablam!     |
kablam! 885 |                 check_dcg_is_wf               : { match env::var("ADAPTON_CHECK_DCG")  { Ok(val) => true, _ => false } },
kablam!     |                                                                                             ^^^
kablam! 
kablam! warning: unused variable: `val`, #[warn(unused_variables)] on by default
kablam!    --> src/engine.rs:886:93
kablam!     |
kablam! 886 |                 write_dcg                     : { match env::var("ADAPTON_WRITE_DCG")  { Ok(val) => true, _ => false } },
kablam!     |                                                                                             ^^^
kablam! 
kablam! warning: use of deprecated item: no longer used for Iterator::sum, #[warn(deprecated)] on by default
kablam!    --> src/engine.rs:892:21
kablam!     |
kablam! 892 |             cnt   : Cnt::zero (),
kablam!     |                     ^^^^^^^^^
kablam! 
kablam! error[E0276]: impl has stricter requirements than trait, #[deny(extra_requirement_in_impl)] on by default
kablam!     --> src/engine.rs:962:5
kablam!      |
kablam! 962  |     fn cell<T:Eq+Debug+Clone+Hash
kablam!      |     ^ impl has extra requirement `T: 'static`
kablam!      | 
kablam!     ::: src/adapton_sigs.rs
kablam!      |
kablam! 65   |     fn cell<T:Eq+Debug+Clone+Hash> (self:&mut Self, Self::Name, T) -> MutArt<T,Self::Loc> ;
kablam!      |     --------------------------------------------------------------------------------------- definition of `cell` from trait
kablam!      |
kablam!      = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!      = note: for more information, see issue #37166 <https://github.com/rust-lang/rust/issues/37166>
kablam! 
kablam! warning: unused variable: `nd`, #[warn(unused_variables)] on by default
kablam!    --> src/engine.rs:983:35
kablam!     |
kablam! 983 |                         Node::Mut(ref nd) => { (false, true,  None, false) }
kablam!     |                                   ^^^^^^
kablam! 
kablam! warning: variable `stackLen` should have a snake case name such as `stack_len`, #[warn(non_snake_case)] on by default
kablam!    --> src/engine.rs:997:17
kablam!     |
kablam! 997 |             let stackLen = self.stack.len() ;
kablam!     |                 ^^^^^^^^
kablam! 
kablam! error[E0276]: impl has stricter requirements than trait, #[deny(extra_requirement_in_impl)] on by default
kablam!     --> src/engine.rs:1018:5
kablam!      |
kablam! 1018 |       fn thunk<Arg:Eq+Hash+Debug+Clone+'static,Spurious:'static+Clone,Res:Eq+Debug+Clone+Hash+'static>
kablam!      |       ^ impl has extra requirement `Arg: 'static`
kablam!      | 
kablam!     ::: src/adapton_sigs.rs
kablam!      |
kablam! 71   |       fn thunk<Arg:Eq+Hash+Debug+Clone,Spurious:Clone,Res:Eq+Debug+Clone+Hash>
kablam!      |  _____- starting here...
kablam! 72   | |         (self:&mut Self,
kablam! 73   | |          id:ArtIdChoice<Self::Name>,
kablam! 74   | |          prog_pt:ProgPt,
kablam! 75   | |          fn_box:Rc<Box< Fn(&mut Self, Arg, Spurious) -> Res >>,
kablam! 76   | |          arg:Arg, spurious:Spurious)
kablam! 77   | |          -> Art<Res,Self::Loc> ;
kablam!      | |________________________________- ...ending here: definition of `thunk` from trait
kablam!      |
kablam!      = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!      = note: for more information, see issue #37166 <https://github.com/rust-lang/rust/issues/37166>
kablam! 
kablam! error[E0276]: impl has stricter requirements than trait, #[deny(extra_requirement_in_impl)] on by default
kablam!     --> src/engine.rs:1018:5
kablam!      |
kablam! 1018 |       fn thunk<Arg:Eq+Hash+Debug+Clone+'static,Spurious:'static+Clone,Res:Eq+Debug+Clone+Hash+'static>
kablam!      |       ^ impl has extra requirement `Spurious: 'static`
kablam!      | 
kablam!     ::: src/adapton_sigs.rs
kablam!      |
kablam! 71   |       fn thunk<Arg:Eq+Hash+Debug+Clone,Spurious:Clone,Res:Eq+Debug+Clone+Hash>
kablam!      |  _____- starting here...
kablam! 72   | |         (self:&mut Self,
kablam! 73   | |          id:ArtIdChoice<Self::Name>,
kablam! 74   | |          prog_pt:ProgPt,
kablam! 75   | |          fn_box:Rc<Box< Fn(&mut Self, Arg, Spurious) -> Res >>,
kablam! 76   | |          arg:Arg, spurious:Spurious)
kablam! 77   | |          -> Art<Res,Self::Loc> ;
kablam!      | |________________________________- ...ending here: definition of `thunk` from trait
kablam!      |
kablam!      = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!      = note: for more information, see issue #37166 <https://github.com/rust-lang/rust/issues/37166>
kablam! 
kablam! error[E0276]: impl has stricter requirements than trait, #[deny(extra_requirement_in_impl)] on by default
kablam!     --> src/engine.rs:1018:5
kablam!      |
kablam! 1018 |       fn thunk<Arg:Eq+Hash+Debug+Clone+'static,Spurious:'static+Clone,Res:Eq+Debug+Clone+Hash+'static>
kablam!      |       ^ impl has extra requirement `Res: 'static`
kablam!      | 
kablam!     ::: src/adapton_sigs.rs
kablam!      |
kablam! 71   |       fn thunk<Arg:Eq+Hash+Debug+Clone,Spurious:Clone,Res:Eq+Debug+Clone+Hash>
kablam!      |  _____- starting here...
kablam! 72   | |         (self:&mut Self,
kablam! 73   | |          id:ArtIdChoice<Self::Name>,
kablam! 74   | |          prog_pt:ProgPt,
kablam! 75   | |          fn_box:Rc<Box< Fn(&mut Self, Arg, Spurious) -> Res >>,
kablam! 76   | |          arg:Arg, spurious:Spurious)
kablam! 77   | |          -> Art<Res,Self::Loc> ;
kablam!      | |________________________________- ...ending here: definition of `thunk` from trait
kablam!      |
kablam!      = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!      = note: for more information, see issue #37166 <https://github.com/rust-lang/rust/issues/37166>
kablam! 
kablam! warning: unused variable: `pred`, #[warn(unused_variables)] on by default
kablam!     --> src/engine.rs:1059:29
kablam!      |
kablam! 1059 |                         let pred = frame.loc.clone();
kablam!      |                             ^^^^
kablam! 
kablam! warning: variable `stackLen` should have a snake case name such as `stack_len`, #[warn(non_snake_case)] on by default
kablam!     --> src/engine.rs:1100:21
kablam!      |
kablam! 1100 |                 let stackLen = self.stack.len() ;
kablam!      |                     ^^^^^^^^
kablam! 
kablam! error[E0276]: impl has stricter requirements than trait, #[deny(extra_requirement_in_impl)] on by default
kablam!     --> src/engine.rs:1186:5
kablam!      |
kablam! 1186 |     fn force<T:'static+Eq+Debug+Clone+Hash> (self:&mut Engine,
kablam!      |     ^ impl has extra requirement `T: 'static`
kablam!      | 
kablam!     ::: src/adapton_sigs.rs
kablam!      |
kablam! 80   |     fn force<T:Eq+Debug+Clone+Hash> (self:&mut Self, &Art<T,Self::Loc>) -> T ;
kablam!      |     -------------------------------------------------------------------------- definition of `force` from trait
kablam!      |
kablam!      = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!      = note: for more information, see issue #37166 <https://github.com/rust-lang/rust/issues/37166>
kablam! 
kablam! warning: use of deprecated item: no longer used for Iterator::sum, #[warn(deprecated)] on by default
kablam!  --> src/naive.rs:9:5
kablam!   |
kablam! 9 | use std::num::Zero;
kablam!   |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: no longer used for Iterator::sum, #[warn(deprecated)] on by default
kablam!   --> src/naive.rs:37:19
kablam!    |
kablam! 37 |             cnt : Cnt::zero(),
kablam!    |                   ^^^^^^^^^
kablam! 
kablam! error[E0276]: impl has stricter requirements than trait, #[deny(extra_requirement_in_impl)] on by default
kablam!   --> src/naive.rs:55:5
kablam!    |
kablam! 55 |     fn cell<T:Eq+Debug+Clone
kablam!    |     ^ impl has extra requirement `T: 'static`
kablam!    | 
kablam!   ::: src/adapton_sigs.rs
kablam!    |
kablam! 65 |     fn cell<T:Eq+Debug+Clone+Hash> (self:&mut Self, Self::Name, T) -> MutArt<T,Self::Loc> ;
kablam!    |     --------------------------------------------------------------------------------------- definition of `cell` from trait
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #37166 <https://github.com/rust-lang/rust/issues/37166>
kablam! 
kablam! error[E0276]: impl has stricter requirements than trait, #[deny(extra_requirement_in_impl)] on by default
kablam!   --> src/naive.rs:68:5
kablam!    |
kablam! 68 |       fn set<T:'static+Eq+Debug+Clone>
kablam!    |  _____^ starting here...
kablam! 69 | |         (self:&mut AdaptonFromScratch, cell:MutArt<T,Loc>, val:T)
kablam! 70 | |     {
kablam! 71 | |         let val : Box<Producer<T>> = Box::new( Val{val:Rc::new( val )} ) ;
kablam! 72 | |         let val : Box<Void>  = unsafe { transmute::<_,_>( val ) } ;
kablam! 73 | |         self.store.insert( *cell.loc, val );
kablam! 74 | |     }
kablam!    | |_____^ ...ending here: impl has extra requirement `T: 'static`
kablam!    | 
kablam!   ::: src/adapton_sigs.rs
kablam!    |
kablam! 68 |       fn set<T:Eq+Debug+Clone> (self:&mut Self, MutArt<T,Self::Loc>, T) ;
kablam!    |       ------------------------------------------------------------------- definition of `set` from trait
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #37166 <https://github.com/rust-lang/rust/issues/37166>
kablam! 
kablam! error[E0276]: impl has stricter requirements than trait, #[deny(extra_requirement_in_impl)] on by default
kablam!    --> src/naive.rs:76:5
kablam!     |
kablam! 76  |       fn thunk<Arg:Eq+Hash+Debug+Clone+'static,Spurious:'static+Clone,Res:Eq+Debug+Clone+'static>
kablam!     |       ^ impl has extra requirement `Arg: 'static`
kablam!     | 
kablam!    ::: src/adapton_sigs.rs
kablam!     |
kablam! 71  |       fn thunk<Arg:Eq+Hash+Debug+Clone,Spurious:Clone,Res:Eq+Debug+Clone+Hash>
kablam!     |  _____- starting here...
kablam! 72  | |         (self:&mut Self,
kablam! 73  | |          id:ArtIdChoice<Self::Name>,
kablam! 74  | |          prog_pt:ProgPt,
kablam! 75  | |          fn_box:Rc<Box< Fn(&mut Self, Arg, Spurious) -> Res >>,
kablam! 76  | |          arg:Arg, spurious:Spurious)
kablam! 77  | |          -> Art<Res,Self::Loc> ;
kablam!     | |________________________________- ...ending here: definition of `thunk` from trait
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #37166 <https://github.com/rust-lang/rust/issues/37166>
kablam! 
kablam! error[E0276]: impl has stricter requirements than trait, #[deny(extra_requirement_in_impl)] on by default
kablam!    --> src/naive.rs:76:5
kablam!     |
kablam! 76  |       fn thunk<Arg:Eq+Hash+Debug+Clone+'static,Spurious:'static+Clone,Res:Eq+Debug+Clone+'static>
kablam!     |       ^ impl has extra requirement `Spurious: 'static`
kablam!     | 
kablam!    ::: src/adapton_sigs.rs
kablam!     |
kablam! 71  |       fn thunk<Arg:Eq+Hash+Debug+Clone,Spurious:Clone,Res:Eq+Debug+Clone+Hash>
kablam!     |  _____- starting here...
kablam! 72  | |         (self:&mut Self,
kablam! 73  | |          id:ArtIdChoice<Self::Name>,
kablam! 74  | |          prog_pt:ProgPt,
kablam! 75  | |          fn_box:Rc<Box< Fn(&mut Self, Arg, Spurious) -> Res >>,
kablam! 76  | |          arg:Arg, spurious:Spurious)
kablam! 77  | |          -> Art<Res,Self::Loc> ;
kablam!     | |________________________________- ...ending here: definition of `thunk` from trait
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #37166 <https://github.com/rust-lang/rust/issues/37166>
kablam! 
kablam! error[E0276]: impl has stricter requirements than trait, #[deny(extra_requirement_in_impl)] on by default
kablam!    --> src/naive.rs:76:5
kablam!     |
kablam! 76  |       fn thunk<Arg:Eq+Hash+Debug+Clone+'static,Spurious:'static+Clone,Res:Eq+Debug+Clone+'static>
kablam!     |       ^ impl has extra requirement `Res: 'static`
kablam!     | 
kablam!    ::: src/adapton_sigs.rs
kablam!     |
kablam! 71  |       fn thunk<Arg:Eq+Hash+Debug+Clone,Spurious:Clone,Res:Eq+Debug+Clone+Hash>
kablam!     |  _____- starting here...
kablam! 72  | |         (self:&mut Self,
kablam! 73  | |          id:ArtIdChoice<Self::Name>,
kablam! 74  | |          prog_pt:ProgPt,
kablam! 75  | |          fn_box:Rc<Box< Fn(&mut Self, Arg, Spurious) -> Res >>,
kablam! 76  | |          arg:Arg, spurious:Spurious)
kablam! 77  | |          -> Art<Res,Self::Loc> ;
kablam!     | |________________________________- ...ending here: definition of `thunk` from trait
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #37166 <https://github.com/rust-lang/rust/issues/37166>
kablam! 
kablam! error[E0276]: impl has stricter requirements than trait, #[deny(extra_requirement_in_impl)] on by default
kablam!    --> src/naive.rs:102:5
kablam!     |
kablam! 102 |     fn force<Res:'static+Eq+Debug+Clone> (self:&mut AdaptonFromScratch,
kablam!     |     ^ impl has extra requirement `Res: 'static`
kablam!     | 
kablam!    ::: src/adapton_sigs.rs
kablam!     |
kablam! 80  |     fn force<T:Eq+Debug+Clone+Hash> (self:&mut Self, &Art<T,Self::Loc>) -> T ;
kablam!     |     -------------------------------------------------------------------------- definition of `force` from trait
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #37166 <https://github.com/rust-lang/rust/issues/37166>
kablam! 
kablam! warning: unused import: `std::num::Zero`, #[warn(unused_imports)] on by default
kablam!   --> src/collection_traits.rs:10:5
kablam!    |
kablam! 10 | use std::num::Zero;
kablam!    |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: no longer used for Iterator::sum, #[warn(deprecated)] on by default
kablam!   --> src/collection_traits.rs:10:5
kablam!    |
kablam! 10 | use std::num::Zero;
kablam!    |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused attribute, #[warn(unused_attributes)] on by default
kablam!  --> src/collection_traits.rs:1:1
kablam!   |
kablam! 1 | #![feature(associated_type_defaults)]
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: crate-level attribute should be in the root module, #[warn(unused_attributes)] on by default
kablam!  --> src/collection_traits.rs:1:1
kablam!   |
kablam! 1 | #![feature(associated_type_defaults)]
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `std::num::Zero`, #[warn(unused_imports)] on by default
kablam!   --> src/collection_algo.rs:11:5
kablam!    |
kablam! 11 | use std::num::Zero;
kablam!    |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: no longer used for Iterator::sum, #[warn(deprecated)] on by default
kablam!   --> src/collection_algo.rs:11:5
kablam!    |
kablam! 11 | use std::num::Zero;
kablam!    |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused imports: `Rand`, `Rng`, #[warn(unused_imports)] on by default
kablam!   --> src/collection_algo.rs:13:12
kablam!    |
kablam! 13 | use rand::{Rng,Rand};
kablam!    |            ^^^ ^^^^
kablam! 
kablam! warning: unused variable: `st`, #[warn(unused_variables)] on by default
kablam!   --> src/collection_algo.rs:90:23
kablam!    |
kablam! 90 |                      |st| (None, None),
kablam!    |                       ^^
kablam! 
kablam! warning: unused variable: `st`, #[warn(unused_variables)] on by default
kablam!   --> src/collection_algo.rs:91:23
kablam!    |
kablam! 91 |                      |st, x, rest| { (Some(x), Some(rest)) },
kablam!    |                       ^^
kablam! 
kablam! warning: unused variable: `st`, #[warn(unused_variables)] on by default
kablam!   --> src/collection_algo.rs:92:23
kablam!    |
kablam! 92 |                      |st, _, rest| { (None,    Some(rest)) }
kablam!    |                       ^^
kablam! 
kablam! warning: function `tree_append__name_dropping` should have a snake case name such as `tree_append_name_dropping`, #[warn(non_snake_case)] on by default
kablam!    --> src/collection_algo.rs:382:1
kablam!     |
kablam! 382 | pub fn tree_append__name_dropping // drops/forgets names in the new path created by the append
kablam!     | ^
kablam! 
kablam! warning: unused variable: `levl1`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_algo.rs:449:27
kablam!     |
kablam! 449 |                       let levl1 = T::lev_of_tree(st, &l1);
kablam!     |                           ^^^^^
kablam! 
kablam! warning: unused attribute, #[warn(unused_attributes)] on by default
kablam!  --> src/collection_algo.rs:1:1
kablam!   |
kablam! 1 | #![feature(associated_type_defaults)]
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: crate-level attribute should be in the root module, #[warn(unused_attributes)] on by default
kablam!  --> src/collection_algo.rs:1:1
kablam!   |
kablam! 1 | #![feature(associated_type_defaults)]
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `std::num::Zero`, #[warn(unused_imports)] on by default
kablam!   --> src/collection.rs:11:5
kablam!    |
kablam! 11 | use std::num::Zero;
kablam!    |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: no longer used for Iterator::sum, #[warn(deprecated)] on by default
kablam!   --> src/collection.rs:11:5
kablam!    |
kablam! 11 | use std::num::Zero;
kablam!    |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused imports: `Rand`, `Rng`, #[warn(unused_imports)] on by default
kablam!   --> src/collection.rs:13:12
kablam!    |
kablam! 13 | use rand::{Rng,Rand};
kablam!    |            ^^^ ^^^^
kablam! 
kablam! warning: unused variable: `st`, #[warn(unused_variables)] on by default
kablam!    --> src/collection.rs:125:26
kablam!     |
kablam! 125 |                         |st, x, xs, _  | Some((x,xs)),
kablam!     |                          ^^
kablam! 
kablam! warning: unused attribute, #[warn(unused_attributes)] on by default
kablam!  --> src/collection.rs:1:1
kablam!   |
kablam! 1 | #![feature(associated_type_defaults)]
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: crate-level attribute should be in the root module, #[warn(unused_attributes)] on by default
kablam!  --> src/collection.rs:1:1
kablam!   |
kablam! 1 | #![feature(associated_type_defaults)]
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `std::rc::Rc`, #[warn(unused_imports)] on by default
kablam!  --> src/collection_edit.rs:4:5
kablam!   |
kablam! 4 | use std::rc::Rc;
kablam!   |     ^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `macros::* ;`, #[warn(unused_imports)] on by default
kablam!  --> src/collection_edit.rs:6:5
kablam!   |
kablam! 6 | use macros::* ;
kablam!   |     ^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: no longer used for Iterator::sum, #[warn(deprecated)] on by default
kablam!   --> src/collection_edit.rs:12:5
kablam!    |
kablam! 12 | use std::num::Zero;
kablam!    |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `Rem`, #[warn(unused_imports)] on by default
kablam!   --> src/collection_edit.rs:13:20
kablam!    |
kablam! 13 | use std::ops::{Add,Rem};
kablam!    |                    ^^^
kablam! 
kablam! warning: unused attribute, #[warn(unused_attributes)] on by default
kablam!   --> src/collection_edit.rs:17:40
kablam!    |
kablam! 17 | #[derive(Debug,Hash,PartialEq,Eq,Clone,Rand)]
kablam!    |                                        ^^^^
kablam! 
kablam! warning: unused attribute, #[warn(unused_attributes)] on by default
kablam!   --> src/collection_edit.rs:34:40
kablam!    |
kablam! 34 | #[derive(Debug,Hash,PartialEq,Eq,Clone,Rand)]
kablam!    |                                        ^^^^
kablam! 
kablam! warning: unused attribute, #[warn(unused_attributes)] on by default
kablam!   --> src/collection_edit.rs:39:40
kablam!    |
kablam! 39 | #[derive(Debug,Hash,PartialEq,Eq,Clone,Rand)]
kablam!    |                                        ^^^^
kablam! 
kablam! warning: unused variable: `count`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_edit.rs:116:54
kablam!     |
kablam! 116 |     (st:&mut A, tree:T::Tree, transform:&ListTransf, count:Option<usize>) -> Vec<X>
kablam!     |                                                      ^^^^^
kablam! 
kablam! warning: unused variable: `tree`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_edit.rs:123:17
kablam!     |
kablam! 123 |             let tree = st.ns(nm, |st| tree_of_list::<A,X,T,L>(st, Dir2::Left, output) );
kablam!     |                 ^^^^
kablam! 
kablam! warning: unused variable: `tree`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_edit.rs:129:17
kablam!     |
kablam! 129 |             let tree = st.ns(nm, |st| tree_of_list::<A,X,T,L>(st, Dir2::Left, output) );
kablam!     |                 ^^^^
kablam! 
kablam! warning: use of deprecated item: no longer used for Iterator::sum, #[warn(deprecated)] on by default
kablam!    --> src/collection_edit.rs:137:53
kablam!     |
kablam! 137 |     ,X:Ord+PartialOrd+Hash+Debug+Clone+Eq+PartialEq+Zero+Add<Output=X>
kablam!     |                                                     ^^^^
kablam! 
kablam! warning: use of deprecated item: no longer used for Iterator::sum, #[warn(deprecated)] on by default
kablam!    --> src/collection_edit.rs:144:79
kablam!     |
kablam! 144 |         ListReduce::Sum => { let x = tree_reduce_monoid::<A,X,T,_> (st, tree, X::zero(), &|st,x,y| x + y) ; vec![ x ] },
kablam!     |                                                                               ^^^^^^^
kablam! 
kablam! warning: unused variable: `st`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_edit.rs:144:92
kablam!     |
kablam! 144 |         ListReduce::Sum => { let x = tree_reduce_monoid::<A,X,T,_> (st, tree, X::zero(), &|st,x,y| x + y) ; vec![ x ] },
kablam!     |                                                                                            ^^
kablam! 
kablam! warning: use of deprecated item: no longer used for Iterator::sum, #[warn(deprecated)] on by default
kablam!    --> src/collection_edit.rs:145:79
kablam!     |
kablam! 145 |         ListReduce::Max => { let x = tree_reduce_monoid::<A,X,T,_> (st, tree, X::zero(), &|st,x,y| if x > y {x} else {y}) ; vec![ x ] },
kablam!     |                                                                               ^^^^^^^
kablam! 
kablam! warning: unused variable: `st`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_edit.rs:145:92
kablam!     |
kablam! 145 |         ListReduce::Max => { let x = tree_reduce_monoid::<A,X,T,_> (st, tree, X::zero(), &|st,x,y| if x > y {x} else {y}) ; vec![ x ] },
kablam!     |                                                                                            ^^
kablam! 
kablam! warning: use of deprecated item: no longer used for Iterator::sum, #[warn(deprecated)] on by default
kablam!    --> src/collection_edit.rs:146:79
kablam!     |
kablam! 146 |         ListReduce::Min => { let x = tree_reduce_monoid::<A,X,T,_> (st, tree, X::zero(), &|st,x,y| if x < y {x} else {y}) ; vec![ x ] },
kablam!     |                                                                               ^^^^^^^
kablam! 
kablam! warning: unused variable: `st`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_edit.rs:146:92
kablam!     |
kablam! 146 |         ListReduce::Min => { let x = tree_reduce_monoid::<A,X,T,_> (st, tree, X::zero(), &|st,x,y| if x < y {x} else {y}) ; vec![ x ] },
kablam!     |                                                                                            ^^
kablam! 
kablam! warning: unused variable: `st`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_edit.rs:251:17
kablam!     |
kablam! 251 |   fn clr_names (st:&mut A, zip:Self::State, dir:Dir2) -> Self::State {
kablam!     |                 ^^
kablam! 
kablam! warning: unused variable: `zip`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_edit.rs:251:28
kablam!     |
kablam! 251 |   fn clr_names (st:&mut A, zip:Self::State, dir:Dir2) -> Self::State {
kablam!     |                            ^^^
kablam! 
kablam! warning: unused variable: `dir`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_edit.rs:251:45
kablam!     |
kablam! 251 |   fn clr_names (st:&mut A, zip:Self::State, dir:Dir2) -> Self::State {
kablam!     |                                             ^^^
kablam! 
kablam! warning: unused variable: `x`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_edit.rs:315:21
kablam!     |
kablam! 315 |                  |_,x,left,right|   (zipper!{left,       right}, None ),
kablam!     |                     ^
kablam! 
kablam! warning: unused variable: `st`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_edit.rs:316:19
kablam!     |
kablam! 316 |                  |st,nm,left,right| (zipper!{left, right},       Some(nm))
kablam!     |                   ^^
kablam! 
kablam! warning: unused variable: `x`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_edit.rs:321:21
kablam!     |
kablam! 321 |                  |_,x,right,left|   (zipper!{left, right},      None ),
kablam!     |                     ^
kablam! 
kablam! warning: unused variable: `st`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_edit.rs:322:19
kablam!     |
kablam! 322 |                  |st,nm,right,left| (zipper!{left, right},      Some(nm))
kablam!     |                   ^^
kablam! 
kablam! warning: unused variable: `nm`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_edit.rs:350:22
kablam!     |
kablam! 350 |                  |st,nm,left,right| {let zip = zipper!{left, right};
kablam!     |                      ^^
kablam! 
kablam! warning: unused variable: `nm`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_edit.rs:357:22
kablam!     |
kablam! 357 |                  |st,nm,right,left| {let zip = zipper!{left, right};
kablam!     |                      ^^
kablam! 
kablam! warning: unused variable: `nm`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_edit.rs:371:27
kablam!     |
kablam! 371 |            /* Name */ |st,nm,left,right| {let zip = zipper!{left, right};
kablam!     |                           ^^
kablam! 
kablam! warning: unused variable: `nm`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_edit.rs:378:27
kablam!     |
kablam! 378 |            /* Name */ |st,nm,right,left| {let zip = zipper!{left, right};
kablam!     |                           ^^
kablam! 
kablam! warning: unused variable: `nm`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_edit.rs:391:22
kablam!     |
kablam! 391 |                  |st,nm,left,right|{let zip = zipper!{left,right};
kablam!     |                      ^^
kablam! 
kablam! warning: unused variable: `nm`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_edit.rs:399:22
kablam!     |
kablam! 399 |                  |st,nm,right,left|{let zip = zipper!{left,right};
kablam!     |                      ^^
kablam! 
kablam! warning: unused variable: `nm`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_edit.rs:411:22
kablam!     |
kablam! 411 |                  |st,nm,left,(right,y)|{let zip = zipper!{left,right};
kablam!     |                      ^^
kablam! 
kablam! warning: unused variable: `nm`, #[warn(unused_variables)] on by default
kablam!    --> src/collection_edit.rs:418:22
kablam!     |
kablam! 418 |                  |st,nm,right,(left,y)|{let zip = zipper!{left,right};
kablam!     |                      ^^
kablam! 
kablam! warning: unused attribute, #[warn(unused_attributes)] on by default
kablam!  --> src/collection_edit.rs:1:1
kablam!   |
kablam! 1 | #![feature(associated_type_defaults)]
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: crate-level attribute should be in the root module, #[warn(unused_attributes)] on by default
kablam!  --> src/collection_edit.rs:1:1
kablam!   |
kablam! 1 | #![feature(associated_type_defaults)]
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error: aborting due to 11 previous errors
kablam! 
kablam! error: Could not compile `adapton`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f a529b9a65e654242f89ee016fce3c474dcc2f1f12354a4498474a92348c7976b`
blam! a529b9a65e654242f89ee016fce3c474dcc2f1f12354a4498474a92348c7976b
