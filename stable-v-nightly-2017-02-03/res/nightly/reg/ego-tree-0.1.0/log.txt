boom! testing ego-tree-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! cafabebfa2b2f84a82e0bde0d1ead3150d25b5dbdcdee407fd96c0251af8f512
boom! running `docker start -a cafabebfa2b2f84a82e0bde0d1ead3150d25b5dbdcdee407fd96c0251af8f512`
kablam!    Compiling ego-tree v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.24 secs
boom! running `docker rm -f cafabebfa2b2f84a82e0bde0d1ead3150d25b5dbdcdee407fd96c0251af8f512`
blam! cafabebfa2b2f84a82e0bde0d1ead3150d25b5dbdcdee407fd96c0251af8f512
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! b5c2729efc8d750d287a092348144b694ae83f0512c6a003c521e152de1c6d1b
boom! running `docker start -a b5c2729efc8d750d287a092348144b694ae83f0512c6a003c521e152de1c6d1b`
kablam!    Compiling ego-tree v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 6.18 secs
boom! running `docker rm -f b5c2729efc8d750d287a092348144b694ae83f0512c6a003c521e152de1c6d1b`
blam! b5c2729efc8d750d287a092348144b694ae83f0512c6a003c521e152de1c6d1b
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! aaa113199be8f7120da1d67ff4f1fb0deb54750d37a07b3df820deaa549cf65f
boom! running `docker start -a aaa113199be8f7120da1d67ff4f1fb0deb54750d37a07b3df820deaa549cf65f`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/ego_tree-7432091c1b9a5ddf
blam! 
kablam!      Running /target/debug/deps/iter-4696ca0dd6a92ba9
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 12 tests
blam! test first_children ... ok
blam! test children_rev ... ok
blam! test children ... ok
blam! test last_children ... ok
blam! test next_siblings ... ok
blam! test ancestors ... ok
blam! test prev_siblings ... ok
blam! test nodes ... ok
blam! test into_values ... ok
blam! test traverse ... ok
blam! test values ... ok
blam! test values_mut ... ok
blam! 
blam! test result: ok. 12 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/macro-9c74b838c7be345d
blam! 
blam! running 12 tests
blam! test leaves_comma ... ok
blam! test mixed ... ok
blam! test empty ... ok
blam! test leaves ... ok
blam! test nested_leaves_comma ... ok
blam! test nested_single_child_comma ... ok
blam! test nested_leaves ... ok
blam! test nested_single_child ... ok
blam! test root ... ok
blam! test single_child ... ok
blam! test nested_nested ... ok
blam! test single_child_comma ... ok
blam! 
blam! test result: ok. 12 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/node_id-cd44f468fcae96c4
blam! 
blam! running 6 tests
blam! test clone ... ok
blam! test eq ... ok
blam! test neq ... ok
blam! test cloned_tree ... ok
blam! test neq_tree ... ok
blam! test other_tree ... ok
blam! 
blam! test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/node_mut-6c666a5858ba4932
blam! 
blam! running 23 tests
blam! test append_1 ... ok
blam! test append_2 ... ok
blam! test append_3 ... ok
blam! test detach ... ok
blam! test first_child ... ok
blam! test has_children ... ok
blam! test id ... ok
blam! test has_siblings ... ok
blam! test insert_after ... ok
blam! test insert_before ... ok
blam! test insert_before_first ... ok
blam! test into ... ok
blam! test insert_after_first ... ok
blam! test parent ... ok
blam! test next_sibling ... ok
blam! test prepend_1 ... ok
blam! test prepend_2 ... ok
blam! test prepend_3 ... ok
blam! test prev_sibling ... ok
blam! test reparent_from_id_prepend ... ok
blam! test value ... ok
blam! test last_child ... ok
blam! test reparent_from_id_append ... ok
blam! 
blam! test result: ok. 23 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/node_ref-1c6b0c2539daaf76
blam! 
blam! running 13 tests
blam! test clone ... ok
blam! test has_children ... ok
blam! test first_child ... ok
blam! test eq ... ok
blam! test has_siblings ... ok
blam! test id ... ok
blam! test last_child ... ok
blam! test neq ... ok
blam! test neq_tree ... ok
blam! test next_sibling ... ok
blam! test value ... ok
blam! test prev_sibling ... ok
blam! test parent ... ok
blam! 
blam! test result: ok. 13 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/tree-4499777ccd40135e
blam! 
blam! running 10 tests
blam! test clone ... ok
blam! test get ... ok
blam! test eq ... ok
blam! test default ... ok
blam! test get_mut ... ok
blam! test orphan ... ok
blam! test root ... ok
blam! test neq ... ok
blam! test root_mut ... ok
blam! test new ... ok
blam! 
blam! test result: ok. 10 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests ego-tree
blam! 
blam! running 7 tests
blam! warning: unused variable: `tree`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let tree = tree!('a' => { 'b', 'c' => { 'd', 'e' } });
blam!   |     ^^^^
blam! 
blam! warning: unused variable: `root_id`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let root_id = tree.root().id();
blam!   |     ^^^^^^^
blam! 
blam! test _0 ... ok
blam! test NodeId_0 ... ok
blam! warning: unused variable: `root`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let root = tree.get(root_id);
blam!   |     ^^^^
blam! 
blam! test NodeId_1 ... ok
blam! test _1 ... ok
blam! warning: unused variable: `tree`, #[warn(unused_variables)] on by default
blam!  --> <anon>:4:5
blam!   |
blam! 4 | let tree = tree! {
blam!   |     ^^^^
blam! 
blam! warning: unused variable: `tree`, #[warn(unused_variables)] on by default
blam!  --> <anon>:4:5
blam!   |
blam! 4 | let tree = tree!(0i32);
blam!   |     ^^^^
blam! 
blam! test tree_2 ... ok
blam! test tree_1 ... ok
blam! warning: unused variable: `tree`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let tree: Tree<i32> = tree!();
blam!   |     ^^^^
blam! 
blam! test tree_0 ... ok
blam! 
blam! test result: ok. 7 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f aaa113199be8f7120da1d67ff4f1fb0deb54750d37a07b3df820deaa549cf65f`
blam! aaa113199be8f7120da1d67ff4f1fb0deb54750d37a07b3df820deaa549cf65f
