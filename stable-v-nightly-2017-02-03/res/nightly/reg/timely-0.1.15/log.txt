boom! testing timely-0.1.15 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 6adca8757e89ae7afe454cb77e70727df775e399bdb32b3209021d32ab691a7b
boom! running `docker start -a 6adca8757e89ae7afe454cb77e70727df775e399bdb32b3209021d32ab691a7b`
kablam!    Compiling timely v0.1.15 (file:///source)
kablam! warning: unused import: `MutableAntichain`, #[warn(unused_imports)] on by default
kablam!  --> src/dataflow/operators/input.rs:7:26
kablam!   |
kablam! 7 | use progress::frontier::{MutableAntichain, Antichain};
kablam!   |                          ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `timely_communication::Allocate`, #[warn(unused_imports)] on by default
kablam!   --> src/dataflow/operators/unordered_input.rs:12:5
kablam!    |
kablam! 12 | use timely_communication::Allocate;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: patterns aren't allowed in methods without bodies, #[warn(patterns_in_fns_without_body)] on by default
kablam!   --> src/dataflow/operators/inspect.rs:33:68
kablam!    |
kablam! 33 |     fn inspect_batch<F: FnMut(&G::Timestamp, &[D])+'static>(&self, mut func: F) -> Self;
kablam!    |                                                                    ^^^^^^^^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #35203 <https://github.com/rust-lang/rust/issues/35203>
kablam! 
kablam! warning: unused import: `Allocate`, #[warn(unused_imports)] on by default
kablam!   --> src/dataflow/operators/broadcast.rs:14:28
kablam!    |
kablam! 14 | use timely_communication::{Allocate};
kablam!    |                            ^^^^^^^^
kablam! 
kablam! warning: unused import: `timely_communication::Allocate`, #[warn(unused_imports)] on by default
kablam!   --> src/dataflow/operators/to_stream.rs:12:5
kablam!    |
kablam! 12 | use timely_communication::Allocate;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `Read`, #[warn(unused_imports)] on by default
kablam!   --> src/dataflow/operators/capture.rs:72:15
kablam!    |
kablam! 72 | use std::io::{Read, Write};
kablam!    |               ^^^^
kablam! 
kablam! warning: field is never used: `capability`, #[warn(dead_code)] on by default
kablam!    --> src/dataflow/channels/pushers/buffer.rs:134:5
kablam!     |
kablam! 134 |     capability: Capability<T>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `dataflow::Scope`, #[warn(unused_imports)] on by default
kablam!   --> src/logging.rs:16:5
kablam!    |
kablam! 16 | use dataflow::Scope;
kablam!    |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: static variable `precise_time_ns_delta` should have an upper case name such as `PRECISE_TIME_NS_DELTA`, #[warn(non_upper_case_globals)] on by default
kablam!   --> src/logging.rs:21:1
kablam!    |
kablam! 21 | static mut precise_time_ns_delta: Option<i64> = None;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 7.31 secs
boom! running `docker rm -f 6adca8757e89ae7afe454cb77e70727df775e399bdb32b3209021d32ab691a7b`
blam! 6adca8757e89ae7afe454cb77e70727df775e399bdb32b3209021d32ab691a7b
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! e5fc92eae6e55c13caa597f6868db92528ff9cfa260fe628a923a1d017637033
boom! running `docker start -a e5fc92eae6e55c13caa597f6868db92528ff9cfa260fe628a923a1d017637033`
kablam!    Compiling timely v0.1.15 (file:///source)
kablam! warning: unused import: `timely_communication::allocator::Allocate`, #[warn(unused_imports)] on by default
kablam!  --> examples/broadcast.rs:6:5
kablam!   |
kablam! 6 | use timely_communication::allocator::Allocate;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `Stream`, #[warn(unused_imports)] on by default
kablam!  --> examples/unordered_input.rs:6:24
kablam!   |
kablam! 6 | use timely::dataflow::{Stream, Scope};
kablam!   |                        ^^^^^^
kablam! 
kablam! warning: unused import: `MutableAntichain`, #[warn(unused_imports)] on by default
kablam!  --> src/dataflow/operators/input.rs:7:26
kablam!   |
kablam! 7 | use progress::frontier::{MutableAntichain, Antichain};
kablam!   |                          ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `timely_communication::Allocate`, #[warn(unused_imports)] on by default
kablam!   --> src/dataflow/operators/unordered_input.rs:12:5
kablam!    |
kablam! 12 | use timely_communication::Allocate;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: patterns aren't allowed in methods without bodies, #[warn(patterns_in_fns_without_body)] on by default
kablam!   --> src/dataflow/operators/inspect.rs:33:68
kablam!    |
kablam! 33 |     fn inspect_batch<F: FnMut(&G::Timestamp, &[D])+'static>(&self, mut func: F) -> Self;
kablam!    |                                                                    ^^^^^^^^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #35203 <https://github.com/rust-lang/rust/issues/35203>
kablam! 
kablam! warning: unused import: `Allocate`, #[warn(unused_imports)] on by default
kablam!   --> src/dataflow/operators/broadcast.rs:14:28
kablam!    |
kablam! 14 | use timely_communication::{Allocate};
kablam!    |                            ^^^^^^^^
kablam! 
kablam! warning: unused import: `timely_communication::Allocate`, #[warn(unused_imports)] on by default
kablam!   --> src/dataflow/operators/to_stream.rs:12:5
kablam!    |
kablam! 12 | use timely_communication::Allocate;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `Read`, #[warn(unused_imports)] on by default
kablam!   --> src/dataflow/operators/capture.rs:72:15
kablam!    |
kablam! 72 | use std::io::{Read, Write};
kablam!    |               ^^^^
kablam! 
kablam! warning: field is never used: `capability`, #[warn(dead_code)] on by default
kablam!    --> src/dataflow/channels/pushers/buffer.rs:134:5
kablam!     |
kablam! 134 |     capability: Capability<T>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `dataflow::Scope`, #[warn(unused_imports)] on by default
kablam!   --> src/logging.rs:16:5
kablam!    |
kablam! 16 | use dataflow::Scope;
kablam!    |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: static variable `precise_time_ns_delta` should have an upper case name such as `PRECISE_TIME_NS_DELTA`, #[warn(non_upper_case_globals)] on by default
kablam!   --> src/logging.rs:21:1
kablam!    |
kablam! 21 | static mut precise_time_ns_delta: Option<i64> = None;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 82.33 secs
boom! running `docker rm -f e5fc92eae6e55c13caa597f6868db92528ff9cfa260fe628a923a1d017637033`
blam! e5fc92eae6e55c13caa597f6868db92528ff9cfa260fe628a923a1d017637033
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! a830e37aefd464554b4f551241b3ac3ccc9055c9810d6965b5f9772ffe67804e
boom! running `docker start -a a830e37aefd464554b4f551241b3ac3ccc9055c9810d6965b5f9772ffe67804e`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/timely-75cae180670db1cc
blam! 
blam! running 4 tests
blam! test dataflow::operators::notificator::drain_into_if_behaves_correctly ... ok
blam! test logging::start_stop_abomonation_roundtrip ... ok
blam! test dataflow::operators::notificator::notificator_delivers_notifications_in_topo_order ... ok
blam! test dataflow::operators::probe::tests::probe ... ok
blam! 
blam! test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests timely
blam! 
blam! running 51 tests
blam! warning: unused import: `timely`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:5
blam!   |
blam! 3 | use timely::*;
blam!   |     ^^^^^^
blam! 
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:8:1
blam!    |
blam! 8  | timely::execute_from_args(std::env::args(), |root| {
blam!    | ^
blam! 
blam! test _0 ... ok
blam! test dataflow::operators::aggregation::aggregate::Aggregate::aggregate_0 ... ok
blam! test dataflow::operators::aggregation::state_machine::StateMachine::state_machine_0 ... ok
blam! test dataflow::operators::aggregation::aggregate::Aggregate::aggregate_1 ... ok
blam! test dataflow::operators::binary::Binary::binary_notify_0 ... ok
blam! test dataflow::operators::binary::Binary::binary_stream_0 ... ok
blam! warning: unused import: `Inspect`, #[warn(unused_imports)] on by default
blam!  --> <anon>:6:54
blam!   |
blam! 6 | use timely::dataflow::operators::{Capture, ToStream, Inspect};
blam!   |                                                      ^^^^^^^
blam! 
blam! test dataflow::operators::capture::Capture::capture_into_0 ... ok
blam! test dataflow::operators::broadcast::Broadcast::broadcast_0 ... ok
blam! warning: unused import: `std::rc::Rc`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:5
blam!   |
blam! 3 | use std::rc::Rc;
blam!   |     ^^^^^^^^^^^
blam! 
blam! warning: unused import: `Inspect`, #[warn(unused_imports)] on by default
blam!  --> <anon>:7:54
blam!   |
blam! 7 | use timely::dataflow::operators::{Capture, ToStream, Inspect};
blam!   |                                                      ^^^^^^^
blam! 
blam! test dataflow::operators::capture::Capture::capture_into_1 ... ok
blam! warning: unused import: `Inspect`, #[warn(unused_imports)] on by default
blam!  --> <anon>:6:54
blam!   |
blam! 6 | use timely::dataflow::operators::{Capture, ToStream, Inspect};
blam!   |                                                      ^^^^^^^
blam! 
blam! test dataflow::operators::capture::Extract::extract_0 ... ok
blam! test dataflow::operators::capture_0 ... ok
blam! warning: unused import: `std::rc::Rc`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:5
blam!   |
blam! 3 | use std::rc::Rc;
blam!   |     ^^^^^^^^^^^
blam! 
blam! test dataflow::operators::capture_1 ... ok
blam! test dataflow::operators::concat::Concat::concat_0 ... ok
blam! test dataflow::operators::concat::Concatenate::concatenate_0 ... ok
blam! test dataflow::operators::count::Accumulate::accumulate_0 ... ok
blam! test dataflow::operators::count::Accumulate::count_0 ... ok
blam! warning: unused variable: `time`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:26
blam!   |
blam! 9 |            .delay(|data, time| RootTimestamp::new(*data))
blam!   |                          ^^^^
blam! 
blam! test dataflow::operators::delay::Delay::delay_0 ... ok
blam! test dataflow::operators::delay::Delay::delay_batch_0 ... ok
blam! warning: unused variable: `output`, #[warn(unused_variables)] on by default
blam!  --> <anon>:8:9
blam!   |
blam! 8 |     let output = outer.scoped::<u32,_,_>(|inner| {
blam!   |         ^^^^^^
blam! 
blam! test dataflow::operators::enterleave::Enter::enter_0 ... ok
blam! warning: unused variable: `output`, #[warn(unused_variables)] on by default
blam!  --> <anon>:8:9
blam!   |
blam! 8 |     let output = outer.scoped::<u32,_,_>(|inner| {
blam!   |         ^^^^^^
blam! 
blam! test dataflow::operators::enterleave::EnterAt::enter_at_0 ... ok
blam! warning: unused variable: `output`, #[warn(unused_variables)] on by default
blam!  --> <anon>:8:9
blam!   |
blam! 8 |     let output = outer.scoped::<u32,_,_>(|inner| {
blam!   |         ^^^^^^
blam! 
blam! test dataflow::operators::enterleave::Leave::leave_0 ... ok
blam! warning: unused variable: `output`, #[warn(unused_variables)] on by default
blam!  --> <anon>:8:9
blam!   |
blam! 8 |     let output = outer.scoped::<u32,_,_>(|inner| {
blam!   |         ^^^^^^
blam! 
blam! test dataflow::operators::enterleave_0 ... ok
blam! test dataflow::operators::exchange::Exchange::exchange_0 ... ok
blam! test dataflow::operators::feedback::ConnectLoop::connect_loop_0 ... ok
blam! test dataflow::operators::feedback::LoopVariable::loop_variable_0 ... ok
blam! test dataflow::operators::filter::Filter::filter_0 ... ok
blam! test dataflow::operators::handles::InputHandle<'a, T, D>::for_each_0 ... ok
blam! test dataflow::operators::handles::OutputHandle<'a, T, D, P>::session_0 ... ok
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:8:1
blam!    |
blam! 8  | timely::execute(Configuration::Thread, |root| {
blam!    | ^
blam! 
blam! test dataflow::operators::input::Input::new_input_0 ... ok
blam! warning: unused import: `Map`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:45
blam!   |
blam! 3 | use timely::dataflow::operators::{ToStream, Map, Inspect};
blam!   |                                             ^^^
blam! 
blam! test dataflow::operators::inspect::Inspect::inspect_0 ... ok
blam! warning: unused import: `Map`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:45
blam!   |
blam! 3 | use timely::dataflow::operators::{ToStream, Map, Inspect};
blam!   |                                             ^^^
blam! 
blam! test dataflow::operators::inspect::Inspect::inspect_batch_0 ... ok
blam! test dataflow::operators::map::Map::flat_map_0 ... ok
blam! test dataflow::operators::map::Map::map_0 ... ok
blam! test dataflow::operators::map::Map::map_in_place_0 ... ok
blam! test dataflow::operators::notificator::Notificator<T>::notify_at_0 ... ok
blam! test dataflow::operators::partition::Partition::partition_0 ... ok
blam! warning: unused variable: `stream`, #[warn(unused_variables)] on by default
blam!   --> <anon>:14:21
blam!    |
blam! 14 |         let (probe, stream) = stream.inspect(|x| println!("hello {:?}", x))
blam!    |                     ^^^^^^
blam! 
blam! test dataflow::operators::probe::Probe::probe_0 ... ok
blam! test dataflow::operators::to_stream::ToStream::to_stream_0 ... ok
blam! warning: unused variable: `t`, #[warn(unused_variables)] on by default
blam!   --> <anon>:11:33
blam!    |
blam! 11 |                       .delay(|x,t| RootTimestamp::new(*x));
blam!    |                                 ^
blam! 
blam! warning: unused variable: `t`, #[warn(unused_variables)] on by default
blam!   --> <anon>:16:40
blam!    |
blam! 16 |                              .delay(|x,t| RootTimestamp::new(*x))
blam!    |                                        ^
blam! 
blam! test dataflow::operators::reclock::Reclock::reclock_0 ... ok
blam! test dataflow::operators::unary::Unary::unary_notify_0 ... ok
blam! test dataflow::operators::unary::Unary::unary_stream_0 ... ok
blam! warning: unused import: `Stream`, #[warn(unused_imports)] on by default
blam!  --> <anon>:8:24
blam!   |
blam! 8 | use timely::dataflow::{Stream, Scope};
blam!   |                        ^^^^^^
blam! 
blam! test dataflow::operators::unordered_input::UnorderedInput::new_unordered_input_0 ... ok
blam! test dataflow_0 ... ok
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:6:1
blam!    |
blam! 6  | timely::execute_from_args(std::env::args(), |root| {
blam!    | ^
blam! 
blam! warning: unused variable: `input`, #[warn(unused_variables)] on by default
blam!  --> <anon>:8:9
blam!   |
blam! 8 |     let input = root.scoped::<u64,_,_>(|child1| {
blam!   |         ^^^^^
blam! 
blam! warning: unused variable: `output`, #[warn(unused_variables)] on by default
blam!   --> <anon>:10:13
blam!    |
blam! 10 |         let output = child1.scoped::<u32,_,_>(|child2| {
blam!    |             ^^^^^^
blam! 
blam! test dataflow::scopes::Scope::scoped_0 ... ok
blam! test execute::example_0 ... ok
blam! test execute::example_1 ... ok
blam! test execute::execute_from_args_1 ... ignored
blam! test execute::execute_from_args_2 ... ignored
blam! test execute::execute_0 ... ok
blam! test execute::execute_1 ... ok
blam! test execute::execute_from_args_0 ... ok
blam! 
blam! test result: ok. 49 passed; 0 failed; 2 ignored; 0 measured
blam! 
boom! running `docker rm -f a830e37aefd464554b4f551241b3ac3ccc9055c9810d6965b5f9772ffe67804e`
blam! a830e37aefd464554b4f551241b3ac3ccc9055c9810d6965b5f9772ffe67804e
