boom! testing stacktrace-0.2.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 9a400415258f9767298a4ce81c5ac06205b0383fcbb375438cf4b7702f33d643
boom! running `docker start -a 9a400415258f9767298a4ce81c5ac06205b0383fcbb375438cf4b7702f33d643`
kablam!    Compiling stacktrace v0.2.1 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.45 secs
boom! running `docker rm -f 9a400415258f9767298a4ce81c5ac06205b0383fcbb375438cf4b7702f33d643`
blam! 9a400415258f9767298a4ce81c5ac06205b0383fcbb375438cf4b7702f33d643
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 97bfa42304604b0f9c4019254ef85735a9c25ef41ddaad1686c43d23a7c7fc5e
boom! running `docker start -a 97bfa42304604b0f9c4019254ef85735a9c25ef41ddaad1686c43d23a7c7fc5e`
kablam!    Compiling stacktrace v0.2.1 (file:///source)
kablam! warning: unused import: `std::fmt::Debug`, #[warn(unused_imports)] on by default
kablam!  --> examples/using_result/main.rs:3:5
kablam!   |
kablam! 3 | use std::fmt::Debug;
kablam!   |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `:: std :: fmt :: Write`, #[warn(unused_imports)] on by default
kablam!   --> examples/using_result/main.rs:24:1
kablam!    |
kablam! 24 |   trace! {
kablam!    |  _^ starting here...
kablam! 25 | |     ErrorX => ErrorY,
kablam! 26 | |     ErrorY => ErrorZ,
kablam! 27 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused import: `:: std :: fmt :: Write`, #[warn(unused_imports)] on by default
kablam!  --> examples/simple/main.rs:3:1
kablam!   |
kablam! 3 | trace!();
kablam!   | ^^^^^^^^^
kablam!   |
kablam!   = note: this error originates in a macro outside of the current crate
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.88 secs
boom! running `docker rm -f 97bfa42304604b0f9c4019254ef85735a9c25ef41ddaad1686c43d23a7c7fc5e`
blam! 97bfa42304604b0f9c4019254ef85735a9c25ef41ddaad1686c43d23a7c7fc5e
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! e667f551366b5119da5ed8f8ebe4e86352a66902d2d842051398443a795c975e
boom! running `docker start -a e667f551366b5119da5ed8f8ebe4e86352a66902d2d842051398443a795c975e`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/stacktrace-de578cabb0b61f04
blam! 
blam! running 0 tests
blam! 
kablam!    Doc-tests stacktrace
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 4 tests
blam! warning: unused import: `:: std :: fmt :: Write`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:1
blam!   |
blam! 3 | trace!{}
blam!   | ^^^^^^^^
blam!   |
blam!   = note: this error originates in a macro outside of the current crate
blam! 
blam! test _0 ... ok
blam! warning: unused import: `:: std :: fmt :: Write`, #[warn(unused_imports)] on by default
blam!   --> <anon>:12:1
blam!    |
blam! 12 | trace!{Error1 => Error2}
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^
blam!    |
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! warning: function is never used: `makes_a_traced_error`, #[warn(dead_code)] on by default
blam!   --> <anon>:14:1
blam!    |
blam! 14 |   fn makes_a_traced_error() -> Result<(), Trace<Error1>> {
blam!    |  _^ starting here...
blam! 15 | |     try!(Err(Error1(1337))); // Uses generic instance of "From<Err>" for "Trace<Err>"
blam! 16 | |     Ok(())
blam! 17 | | }
blam!    | |_^ ...ending here
blam! 
blam! warning: function is never used: `propagates_a_traced_error`, #[warn(dead_code)] on by default
blam!   --> <anon>:19:1
blam!    |
blam! 19 |   fn propagates_a_traced_error() -> Result<(), Trace<Error2>> {
blam!    |  _^ starting here...
blam! 20 | |     try!(makes_a_traced_error()); // Uses the macro-generated instance of "From<Trace<Error1>>" for "Trace<Error2>"
blam! 21 | |     Ok(())
blam! 22 | | }
blam!    | |_^ ...ending here
blam! 
blam! warning: method is never used: `new`, #[warn(dead_code)] on by default
blam!   --> <anon>:25:3
blam!    |
blam! 25 |   trace!{struct NoSemicolon}
blam!    |   ^^^^^^^^^^^^^^^^^^^^^^^^^^
blam!    |
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! warning: method is never used: `trace`, #[warn(dead_code)] on by default
blam!   --> <anon>:25:3
blam!    |
blam! 25 |   trace!{struct NoSemicolon}
blam!    |   ^^^^^^^^^^^^^^^^^^^^^^^^^^
blam!    |
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! warning: unused import: `:: std :: fmt :: Write`, #[warn(unused_imports)] on by default
blam!   --> <anon>:25:3
blam!    |
blam! 25 |   trace!{struct NoSemicolon}
blam!    |   ^^^^^^^^^^^^^^^^^^^^^^^^^^
blam!    |
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! warning: method is never used: `new`, #[warn(dead_code)] on by default
blam!   --> <anon>:26:3
blam!    |
blam! 26 |   trace!{struct Semicolon;}
blam!    |   ^^^^^^^^^^^^^^^^^^^^^^^^^
blam!    |
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! warning: method is never used: `trace`, #[warn(dead_code)] on by default
blam!   --> <anon>:26:3
blam!    |
blam! 26 |   trace!{struct Semicolon;}
blam!    |   ^^^^^^^^^^^^^^^^^^^^^^^^^
blam!    |
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! warning: unused import: `:: std :: fmt :: Write`, #[warn(unused_imports)] on by default
blam!   --> <anon>:26:3
blam!    |
blam! 26 |   trace!{struct Semicolon;}
blam!    |   ^^^^^^^^^^^^^^^^^^^^^^^^^
blam!    |
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! test _1 ... ok
blam! warning: unused import: `:: std :: fmt :: Write`, #[warn(unused_imports)] on by default
blam!   --> <anon>:12:1
blam!    |
blam! 12 | trace!{struct MyTrace; Error1 => Error2}
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam!    |
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! warning: function is never used: `makes_a_traced_error`, #[warn(dead_code)] on by default
blam!   --> <anon>:14:1
blam!    |
blam! 14 |   fn makes_a_traced_error() -> Result<(), MyTrace<Error1>> {
blam!    |  _^ starting here...
blam! 15 | |     try!(Err(Error1(1337))); // Uses generic instance of "From<Err>" for "MyTrace<Err>"
blam! 16 | |     Ok(())
blam! 17 | | }
blam!    | |_^ ...ending here
blam! 
blam! warning: function is never used: `propagates_a_traced_error`, #[warn(dead_code)] on by default
blam!   --> <anon>:19:1
blam!    |
blam! 19 |   fn propagates_a_traced_error() -> Result<(), MyTrace<Error2>> {
blam!    |  _^ starting here...
blam! 20 | |     try!(makes_a_traced_error()); // Uses the macro-generated instance of "From<MyTrace<Error1>>" for "MyTrace<Error2>"
blam! 21 | |     Ok(())
blam! 22 | | }
blam!    | |_^ ...ending here
blam! 
blam! warning: method is never used: `new`, #[warn(dead_code)] on by default
blam!   --> <anon>:25:3
blam!    |
blam! 25 |   trace!{struct NoSemicolon}
blam!    |   ^^^^^^^^^^^^^^^^^^^^^^^^^^
blam!    |
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! warning: method is never used: `trace`, #[warn(dead_code)] on by default
blam!   --> <anon>:25:3
blam!    |
blam! 25 |   trace!{struct NoSemicolon}
blam!    |   ^^^^^^^^^^^^^^^^^^^^^^^^^^
blam!    |
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! warning: unused import: `:: std :: fmt :: Write`, #[warn(unused_imports)] on by default
blam!   --> <anon>:25:3
blam!    |
blam! 25 |   trace!{struct NoSemicolon}
blam!    |   ^^^^^^^^^^^^^^^^^^^^^^^^^^
blam!    |
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! warning: method is never used: `new`, #[warn(dead_code)] on by default
blam!   --> <anon>:26:3
blam!    |
blam! 26 |   trace!{struct Semicolon;}
blam!    |   ^^^^^^^^^^^^^^^^^^^^^^^^^
blam!    |
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! warning: method is never used: `trace`, #[warn(dead_code)] on by default
blam!   --> <anon>:26:3
blam!    |
blam! 26 |   trace!{struct Semicolon;}
blam!    |   ^^^^^^^^^^^^^^^^^^^^^^^^^
blam!    |
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! warning: unused import: `:: std :: fmt :: Write`, #[warn(unused_imports)] on by default
blam!   --> <anon>:26:3
blam!    |
blam! 26 |   trace!{struct Semicolon;}
blam!    |   ^^^^^^^^^^^^^^^^^^^^^^^^^
blam!    |
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! warning: struct is never used: `Magic`, #[warn(dead_code)] on by default
blam!   --> <anon>:27:3
blam!    |
blam! 27 |   struct Magic;
blam!    |   ^^^^^^^^^^^^^
blam! 
blam! warning: function is never used: `default_impl_works`, #[warn(dead_code)] on by default
blam!   --> <anon>:28:3
blam!    |
blam! 28 |     fn default_impl_works() -> Result<(), Semicolon<Magic>> {
blam!    |  ___^ starting here...
blam! 29 | |       try!(Err(Magic)); Ok(())
blam! 30 | |   }
blam!    | |___^ ...ending here
blam! 
blam! warning: unused import: `:: std :: fmt :: Write`, #[warn(unused_imports)] on by default
blam!   --> <anon>:12:1
blam!    |
blam! 12 | trace!{Error1 => Error2}
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^
blam!    |
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! warning: function is never used: `makes_a_traced_error`, #[warn(dead_code)] on by default
blam!   --> <anon>:14:1
blam!    |
blam! 14 |   fn makes_a_traced_error() -> Result<(), Trace<Error1>> {
blam!    |  _^ starting here...
blam! 15 | |     try!(Err(Error1(1337))); // Uses generic instance of "From<Err>" for "Trace<Err>"
blam! 16 | |     Ok(())
blam! 17 | | }
blam!    | |_^ ...ending here
blam! 
blam! warning: function is never used: `propagates_a_traced_error`, #[warn(dead_code)] on by default
blam!   --> <anon>:19:1
blam!    |
blam! 19 |   fn propagates_a_traced_error() -> Result<(), Trace<Error2>> {
blam!    |  _^ starting here...
blam! 20 | |     try!(makes_a_traced_error()); // Uses the macro-generated instance of "From<Trace<Error1>>" for "Trace<Error2>"
blam! 21 | |     Ok(())
blam! 22 | | }
blam!    | |_^ ...ending here
blam! 
blam! test trace_1 ... ok
blam! test trace_0 ... ok
blam! 
blam! test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f e667f551366b5119da5ed8f8ebe4e86352a66902d2d842051398443a795c975e`
blam! e667f551366b5119da5ed8f8ebe4e86352a66902d2d842051398443a795c975e
