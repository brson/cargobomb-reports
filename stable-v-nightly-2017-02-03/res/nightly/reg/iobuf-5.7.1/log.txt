boom! testing iobuf-5.7.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 172f619cf00b797635a2dbaf75e86a5366ca250fa1f5557461f18513f2b36e0f
boom! running `docker start -a 172f619cf00b797635a2dbaf75e86a5366ca250fa1f5557461f18513f2b36e0f`
kablam!    Compiling iobuf v5.7.1 (file:///source)
kablam!     Finished dev [optimized + debuginfo] target(s) in 2.58 secs
boom! running `docker rm -f 172f619cf00b797635a2dbaf75e86a5366ca250fa1f5557461f18513f2b36e0f`
blam! 172f619cf00b797635a2dbaf75e86a5366ca250fa1f5557461f18513f2b36e0f
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! e864df679f12605d8f2566be1a949a2d0e09b91a86e4e03245e3ccbbb9cbea20
boom! running `docker start -a e864df679f12605d8f2566be1a949a2d0e09b91a86e4e03245e3ccbbb9cbea20`
kablam!    Compiling iobuf v5.7.1 (file:///source)
kablam!     Finished dev [optimized + debuginfo] target(s) in 4.95 secs
boom! running `docker rm -f e864df679f12605d8f2566be1a949a2d0e09b91a86e4e03245e3ccbbb9cbea20`
blam! e864df679f12605d8f2566be1a949a2d0e09b91a86e4e03245e3ccbbb9cbea20
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! a8b985a16551f3071e3e623cb53b9564426347fc5dcf7a587b34ea0277bd0251
boom! running `docker start -a a8b985a16551f3071e3e623cb53b9564426347fc5dcf7a587b34ea0277bd0251`
kablam!     Finished dev [optimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/iobuf-0b73f27ae3953668
blam! 
blam! running 31 tests
blam! test bufspan::bench::clone_and_drop ... ok
blam! test bufspan::bench::extend_1k_iobuf_1 ... ok
blam! test bufspan::bench::extend_1k_iobuf_0 ... ok
blam! test bufspan::bench::create_roiobuf ... ok
blam! test bufspan::bench::extend_1k_iobuf_2 ... ok
blam! test bufspan::bench::test_none_to_one ... ok
blam! test bufspan::bench::extend_1k_iobuf_3 ... ok
blam! test bufspan::bench::test_none_to_many ... ok
blam! test bufspan::bench::test_none_to_one_with_copy ... ok
blam! test bufspan::test_bytes_in_vbuf ... ok
blam! test bufspan::test_byte_equal_slice_vbuf ... ok
blam! test bufspan::test_byte_equal_vbuf_vbuf ... ok
blam! test bufspan::test_cmp_buf_vec ... ok
blam! test bufspan::test_ends_with_vbuf ... ok
blam! test bufspan::test_count_bytes_cmp_vbuf ... ok
blam! test bufspan::test_starts_with_vbuf ... ok
blam! test impls::check_sane_roiobuf_size ... ok
blam! test impls::check_sane_rwiobuf_size ... ok
blam! test raw::check_large_range_len ... ok
blam! test raw::check_large_range_pos ... ok
blam! test raw::check_sane_raw_size ... ok
blam! test raw::correct_header_size ... ok
blam! test raw::create_huge_iobuf ... ok
blam! test raw::over_resize ... ok
blam! test raw::peek_be_u8 ... ok
blam! test raw::peek_be ... ok
blam! test raw::peek_le ... ok
blam! test raw::result_of_boxed_string ... ok
blam! test raw::test_allocator ... ok
blam! test raw::poke_be ... ok
blam! test raw::poke_le ... ok
blam! 
blam! test result: ok. 31 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests iobuf
blam! 
blam! running 101 tests
blam! test appendbuf::AppendBuf<'a>::atomic_slice_from_0 ... ok
blam! test appendbuf::AppendBuf<'a>::atomic_slice_0 ... ok
blam! test appendbuf::AppendBuf<'a>::as_mut_window_slice_0 ... ok
blam! test appendbuf::AppendBuf<'a>::advance_0 ... ok
blam! test appendbuf::AppendBuf<'a>::atomic_slice_to_0 ... ok
blam! warning: unused import: `Iobuf`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:23
blam!   |
blam! 3 | use iobuf::{AppendBuf,Iobuf};
blam!   |                       ^^^^^
blam! 
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut b = AppendBuf::empty();
blam!   |     ^^^^^
blam! 
blam! test appendbuf::AppendBuf<'a>::empty_0 ... ok
blam! test appendbuf::AppendBuf<'a>::fill_be_0 ... ok
blam! test appendbuf::AppendBuf<'a>::fill_0 ... ok
blam! warning: unused import: `Iobuf`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:23
blam!   |
blam! 3 | use iobuf::{AppendBuf,Iobuf};
blam!   |                       ^^^^^
blam! 
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut b = AppendBuf::new(10);
blam!   |     ^^^^^
blam! 
blam! test appendbuf::AppendBuf<'a>::new_0 ... ok
blam! test appendbuf::AppendBuf<'a>::fill_le_0 ... ok
blam! test appendbuf::AppendBuf<'a>::poke_0 ... ok
blam! test appendbuf::AppendBuf<'a>::poke_be_0 ... ok
blam! test appendbuf::AppendBuf<'a>::poke_le_0 ... ok
blam! test appendbuf::AppendBuf<'a>::reset_0 ... ok
blam! test bufspan::BufSpan<Buf>::append_0 ... ok
blam! test bufspan::BufSpan<Buf>::byte_equal_0 ... ok
blam! test bufspan::BufSpan<Buf>::byte_equal_slice_0 ... ok
blam! test bufspan::BufSpan<Buf>::count_bytes_0 ... ok
blam! test bufspan::BufSpan<Buf>::count_bytes_cmp_0 ... ok
blam! test bufspan::BufSpan<Buf>::ends_with_0 ... ok
blam! test bufspan::BufSpan<Buf>::from_buf_0 ... ok
blam! warning: unused import: `Iobuf`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:22
blam!   |
blam! 3 | use iobuf::{BufSpan, Iobuf, ROIobuf};
blam!   |                      ^^^^^
blam! 
blam! test bufspan::BufSpan<Buf>::is_empty_0 ... ok
blam! test bufspan::BufSpan<Buf>::new_0 ... ok
blam! test bufspan::BufSpan<Buf>::push_0 ... ok
blam! test bufspan::BufSpan<Buf>::starts_with_0 ... ok
blam! test impls::AROIobuf::read_only_0 ... ok
blam! test impls::AROIobuf::read_write_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut b = ROIobuf::empty();
blam!   |     ^^^^^
blam! 
blam! test impls::ROIobuf<'a>::empty_0 ... ok
blam! warning: unused or unknown feature, #[warn(unused_features)] on by default
blam!  --> <anon>:1:12
blam!   |
blam! 1 | #![feature(std_misc)]
blam!   |            ^^^^^^^^
blam! 
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!   --> <anon>:68:5
blam!    |
blam! 68 | for mut t in tasks.into_iter() {
blam!    |     ^^^^^
blam! 
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!   --> <anon>:69:3
blam!    |
blam! 69 |   t.join();
blam!    |   ^^^^^^^^^
blam! 
blam! test impls::AROIobuf_0 ... ok
blam! test impls::ROIobuf<'a>::from_slice_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let mut b = ROIobuf::from_slice_copy(&v[..]);
blam!   |     ^^^^^
blam! 
blam! test impls::ROIobuf<'a>::from_slice_copy_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut b = ROIobuf::from_str("hello");
blam!   |     ^^^^^
blam! 
blam! test impls::ROIobuf<'a>::from_str_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut b = ROIobuf::from_str_copy("hello");
blam!   |     ^^^^^
blam! 
blam! test impls::ROIobuf<'a>::from_str_copy_0 ... ok
blam! test impls::RWIobuf<'a>::as_mut_window_slice_0 ... ok
blam! test impls::RWIobuf<'a>::as_mut_limit_slice_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut b = RWIobuf::empty();
blam!   |     ^^^^^
blam! 
blam! test impls::RWIobuf<'a>::empty_0 ... ok
blam! warning: unnecessary parentheses around `for` head expression, #[warn(unused_parens)] on by default
blam!   --> <anon>:24:12
blam!    |
blam! 24 |   for _ in (0u8 .. len) {
blam!    |            ^^^^^^^^^^^^
blam! 
blam! test impls::RWIobuf<'a>::compact_0 ... ok
blam! test impls::RWIobuf<'a>::fill_0 ... ok
blam! test impls::RWIobuf<'a>::fill_be_0 ... ok
blam! test impls::RWIobuf<'a>::fill_le_0 ... ok
blam! test impls::RWIobuf<'a>::from_slice_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let mut b = RWIobuf::from_slice_copy(&v[..]);
blam!   |     ^^^^^
blam! 
blam! test impls::RWIobuf<'a>::from_slice_copy_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut b = RWIobuf::from_str_copy("hello");
blam!   |     ^^^^^
blam! 
blam! test impls::RWIobuf<'a>::from_str_copy_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut b = RWIobuf::new(10);
blam!   |     ^^^^^
blam! 
blam! test impls::RWIobuf<'a>::new_0 ... ok
blam! test impls::RWIobuf<'a>::poke_0 ... ok
blam! test impls::RWIobuf<'a>::poke_be_0 ... ok
blam! test impls::RWIobuf<'a>::poke_le_0 ... ok
blam! test impls::RWIobuf<'a>::read_only_0 ... ok
blam! test impls::RWIobuf<'a>::unsafe_fill_be_0 ... ok
blam! test impls::RWIobuf<'a>::unsafe_fill_0 ... ok
blam! test impls::RWIobuf<'a>::unsafe_fill_le_0 ... ok
blam! test impls::RWIobuf<'a>::unsafe_poke_0 ... ok
blam! test impls::RWIobuf<'a>::unsafe_poke_be_0 ... ok
blam! test impls::RWIobuf<'a>::unsafe_poke_le_0 ... ok
blam! test iobuf::Iobuf::advance_0 ... ok
blam! test iobuf::Iobuf::as_limit_slice_0 ... ok
blam! test iobuf::Iobuf::as_window_slice_0 ... ok
blam! test iobuf::Iobuf::atomic_read_only_0 ... ok
blam! test iobuf::Iobuf::cap_0 ... ok
blam! test iobuf::Iobuf::check_range_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut b = ROIobuf::from_str("hello");
blam!   |     ^^^^^
blam! 
blam! test iobuf::Iobuf::check_range_usize_0 ... ok
blam! test iobuf::Iobuf::consume_0 ... ok
blam! test iobuf::Iobuf::consume_be_0 ... ok
blam! test iobuf::Iobuf::consume_le_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:9:5
blam!   |
blam! 9 | let mut c = b.deep_clone();
blam!   |     ^^^^^
blam! 
blam! test iobuf::Iobuf::deep_clone_0 ... ok
blam! test iobuf::Iobuf::extend_0 ... ok
blam! test iobuf::Iobuf::extend_with_0 ... ok
blam! test iobuf::Iobuf::flip_hi_0 ... ok
blam! test iobuf::Iobuf::flip_lo_0 ... ok
blam! test iobuf::Iobuf::hi_space_0 ... ok
blam! test iobuf::Iobuf::is_empty_0 ... ok
blam! test iobuf::Iobuf::lo_space_0 ... ok
blam! test iobuf::Iobuf::is_extended_by_0 ... ok
blam! test iobuf::Iobuf::len_0 ... ok
blam! test iobuf::Iobuf::narrow_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let mut b = ROIobuf::from_slice(&data);
blam!   |     ^^^^^
blam! 
blam! test iobuf::Iobuf::peek_0 ... ok
blam! test iobuf::Iobuf::peek_be_0 ... ok
blam! test iobuf::Iobuf::peek_le_0 ... ok
blam! test iobuf::Iobuf::reset_0 ... ok
blam! test iobuf::Iobuf::resize_0 ... ok
blam! test iobuf::Iobuf::rewind_0 ... ok
blam! test iobuf::Iobuf::set_limits_and_window_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut b = ROIobuf::from_str("helloworld");
blam!   |     ^^^^^
blam! 
blam! test iobuf::Iobuf::split_at_0 ... ok
blam! test iobuf::Iobuf::sub_0 ... ok
blam! test iobuf::Iobuf::split_start_at_0 ... ok
blam! test iobuf::Iobuf::sub_1 ... ok
blam! test iobuf::Iobuf::sub_2 ... ok
blam! test iobuf::Iobuf::sub_3 ... ok
blam! test iobuf::Iobuf::sub_window_1 ... ok
blam! test iobuf::Iobuf::sub_window_0 ... ok
blam! test iobuf::Iobuf::sub_window_2 ... ok
blam! test iobuf::Iobuf::sub_window_3 ... ok
blam! test iobuf::Iobuf::unique_0 ... ok
blam! test iobuf::Iobuf::unsafe_advance_0 ... ok
blam! test iobuf::Iobuf::unsafe_consume_be_0 ... ok
blam! test iobuf::Iobuf::unsafe_advance_1 ... ok
blam! test iobuf::Iobuf::unsafe_consume_le_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let mut b = ROIobuf::from_slice(&data);
blam!   |     ^^^^^
blam! 
blam! test iobuf::Iobuf::unsafe_peek_0 ... ok
blam! test iobuf::Iobuf::unsafe_peek_le_0 ... ok
blam! test iobuf::Iobuf::unsafe_peek_be_0 ... ok
blam! test iobuf::Iobuf::unsafe_resize_0 ... ok
blam! 
blam! test result: ok. 101 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f a8b985a16551f3071e3e623cb53b9564426347fc5dcf7a587b34ea0277bd0251`
blam! a8b985a16551f3071e3e623cb53b9564426347fc5dcf7a587b34ea0277bd0251
