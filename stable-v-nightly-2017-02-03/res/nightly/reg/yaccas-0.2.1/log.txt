boom! testing yaccas-0.2.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! a47599baae58ac19855248bc2d72d96456ee51e44b4c716d0f5cd3628e2d5741
boom! running `docker start -a a47599baae58ac19855248bc2d72d96456ee51e44b4c716d0f5cd3628e2d5741`
kablam!    Compiling yaccas v0.2.1 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.70 secs
boom! running `docker rm -f a47599baae58ac19855248bc2d72d96456ee51e44b4c716d0f5cd3628e2d5741`
blam! a47599baae58ac19855248bc2d72d96456ee51e44b4c716d0f5cd3628e2d5741
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! ebe7dee657616867b7cc4eb926706660e9f6853ea27b44740d1e0bd532768a1d
boom! running `docker start -a ebe7dee657616867b7cc4eb926706660e9f6853ea27b44740d1e0bd532768a1d`
kablam!    Compiling yaccas v0.2.1 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.93 secs
boom! running `docker rm -f ebe7dee657616867b7cc4eb926706660e9f6853ea27b44740d1e0bd532768a1d`
blam! ebe7dee657616867b7cc4eb926706660e9f6853ea27b44740d1e0bd532768a1d
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 1adac8ce580be90e537145d162287846e4472068dd0ee9296f9a85122f7ecf58
boom! running `docker start -a 1adac8ce580be90e537145d162287846e4472068dd0ee9296f9a85122f7ecf58`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/yaccas-03bbee5d3deb76eb
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests yaccas
blam! 
blam! running 18 tests
blam! warning: unused variable: `command`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let command = Command::new(|| {
blam!   |     ^^^^^^^
blam! 
blam! test arguments::command::Command::new_0 ... ok
blam! warning: unused import: `Result`, #[warn(unused_imports)] on by default
blam!  --> <anon>:4:30
blam!   |
blam! 4 | use yaccas::parser::{Parser, Result};
blam!   |                              ^^^^^^
blam! 
blam! warning: unused import: `yaccas::scanner::Unix`, #[warn(unused_imports)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | use yaccas::scanner::Unix;
blam!   |     ^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! test arguments::argument::Argument<'a>::with_callback_0 ... ok
blam! warning: unused import: `Result`, #[warn(unused_imports)] on by default
blam!  --> <anon>:4:30
blam!   |
blam! 4 | use yaccas::parser::{Parser, Result};
blam!   |                              ^^^^^^
blam! 
blam! warning: unused import: `yaccas::scanner::Unix`, #[warn(unused_imports)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | use yaccas::scanner::Unix;
blam!   |     ^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! test arguments::argument::Argument<'a>::with_metadata_0 ... ok
blam! warning: unused import: `AbortReason`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:34
blam!   |
blam! 3 | use yaccas::arguments::{Command, AbortReason};
blam!   |                                  ^^^^^^^^^^^
blam! 
blam! test arguments::command::AbortReason_0 ... ok
blam! warning: unused import: `AbortReason`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:44
blam!   |
blam! 3 | use yaccas::arguments::{Argument, Command, AbortReason};
blam!   |                                            ^^^^^^^^^^^
blam! 
blam! warning: unused variable: `command`, #[warn(unused_variables)] on by default
blam!   --> <anon>:10:68
blam!    |
blam! 10 | parser.register(&["help", "h"], Argument::with_callback(command, | command | {
blam!    |                                                                    ^^^^^^^
blam! 
blam! test arguments::command::Command_0 ... ok
blam! test arguments::value::Value::get_value_0 ... ok
blam! test arguments::flag::Flag::get_matches_0 ... ok
blam! test arguments::flag::Flag_0 ... ok
blam! warning: unused variable: `value`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let value = Value::new::<u32>();
blam!   |     ^^^^^
blam! 
blam! test arguments::value::Value::new_0 ... ok
blam! test arguments::value::Value::set_value_0 ... ok
blam! test arguments::value::Value::with_default_0 ... ok
blam! warning: unused import: `Windows`, #[warn(unused_imports)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 |     assert_eq!(parser.parse(default_scanner!()), Result::Success(vec![]));
blam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam!   |
blam!   = note: this error originates in a macro outside of the current crate
blam! 
blam! test default_scanner_0 ... ok
blam! test arguments::value::Value_0 ... ok
blam! test parser::free_argument_support::FreeArgumentSupport_0 ... ok
blam! test parser::parser::Parser<'a>::register_0 ... ok
blam! warning: unused variable: `arguments_from_commandline`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let arguments_from_commandline = Unix::<Args>::default();
blam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! test scanner::scanner_unix::Unix_0 ... ok
blam! test parser::result::Result_0 ... ok
blam! warning: unused variable: `arguments_from_commandline`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let arguments_from_commandline = Windows::<Args>::default();
blam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! test scanner::scanner_windows::Windows_0 ... ok
blam! 
blam! test result: ok. 18 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 1adac8ce580be90e537145d162287846e4472068dd0ee9296f9a85122f7ecf58`
blam! 1adac8ce580be90e537145d162287846e4472068dd0ee9296f9a85122f7ecf58
