boom! testing collect-mac-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 822735a2cb98e3144d348b6a1d657b126ef0ceeb986f0336b3b8738cfbff434d
boom! running `docker start -a 822735a2cb98e3144d348b6a1d657b126ef0ceeb986f0336b3b8738cfbff434d`
kablam!    Compiling collect-mac v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.46 secs
boom! running `docker rm -f 822735a2cb98e3144d348b6a1d657b126ef0ceeb986f0336b3b8738cfbff434d`
blam! 822735a2cb98e3144d348b6a1d657b126ef0ceeb986f0336b3b8738cfbff434d
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! db0f5c725cf8215b135902a5b13dbb74c994bbb498b4ba520be76d538075af42
boom! running `docker start -a db0f5c725cf8215b135902a5b13dbb74c994bbb498b4ba520be76d538075af42`
kablam!    Compiling collect-mac v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 4.88 secs
boom! running `docker rm -f db0f5c725cf8215b135902a5b13dbb74c994bbb498b4ba520be76d538075af42`
blam! db0f5c725cf8215b135902a5b13dbb74c994bbb498b4ba520be76d538075af42
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 54e56a70bf3e6c737c19e2ee53622a20ddc0695da0f92b45ef71da85c6a0612d
boom! running `docker start -a 54e56a70bf3e6c737c19e2ee53622a20ddc0695da0f92b45ef71da85c6a0612d`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/collect_mac-d8bad0306a86ace1
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/collect_std-d7489484edf2b6e4
blam! 
blam! running 10 tests
blam! test test_b_tree_map ... ok
blam! test test_b_tree_set ... ok
blam! test test_binary_heap ... ok
blam! test test_collect ... ok
blam! test test_hash_map ... ok
blam! test test_hash_set ... ok
blam! test test_linked_list ... ok
blam! test test_string ... ok
blam! test test_vec ... ok
blam! test test_vec_deque ... ok
blam! 
blam! test result: ok. 10 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests collect-mac
blam! 
blam! running 2 tests
blam! test _1 ... ignored
blam! warning: unused variable: `a`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let a: Vec<i32> = collect![];
blam!   |     ^
blam! 
blam! warning: unused variable: `b`, #[warn(unused_variables)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let b: HashMap<String, bool> = collect![];
blam!   |     ^
blam! 
blam! warning: unused variable: `c`, #[warn(unused_variables)] on by default
blam!   --> <anon>:11:5
blam!    |
blam! 11 | let c: String = collect!['a', 'b', 'c'];
blam!    |     ^
blam! 
blam! warning: unused variable: `d`, #[warn(unused_variables)] on by default
blam!   --> <anon>:14:5
blam!    |
blam! 14 | let d = collect![as HashSet<_>: 0, 1, 2];
blam!    |     ^
blam! 
blam! warning: unused variable: `e`, #[warn(unused_variables)] on by default
blam!   --> <anon>:17:5
blam!    |
blam! 17 | let e: BTreeMap<i32, &str> = collect![
blam!    |     ^
blam! 
blam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
blam!   --> <anon>:25:5
blam!    |
blam! 25 | let f: HashMap<_, u8> = collect![as HashMap<i32, _>: 42 => 0, -11 => 2];
blam!    |     ^
blam! 
blam! test _0 ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 1 ignored; 0 measured
blam! 
boom! running `docker rm -f 54e56a70bf3e6c737c19e2ee53622a20ddc0695da0f92b45ef71da85c6a0612d`
blam! 54e56a70bf3e6c737c19e2ee53622a20ddc0695da0f92b45ef71da85c6a0612d
