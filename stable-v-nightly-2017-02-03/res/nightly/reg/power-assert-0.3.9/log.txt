boom! testing power-assert-0.3.9 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 295d71fc7130cc29eb6349e26d99f31493ebd67824065020136bf3989c21817c
boom! running `docker start -a 295d71fc7130cc29eb6349e26d99f31493ebd67824065020136bf3989c21817c`
kablam!    Compiling power-assert v0.3.9 (file:///source)
kablam! error[E0432]: unresolved import `syntax::ast::TokenTree`
kablam!  --> src/expand.rs:3:32
kablam!   |
kablam! 3 | use syntax::ast::{Expr, Ident, TokenTree, Stmt};
kablam!   |                                ^^^^^^^^^ no `TokenTree` in `ast`
kablam! 
kablam! error[E0432]: unresolved import `syntax::ast::TokenTree`
kablam!  --> src/convert.rs:3:32
kablam!   |
kablam! 3 | use syntax::ast::{Expr, Ident, TokenTree};
kablam!   |                                ^^^^^^^^^ no `TokenTree` in `ast`
kablam! 
kablam! error[E0425]: cannot find function `gensym_ident` in module `token`
kablam!   --> src/expand.rs:97:20
kablam!    |
kablam! 97 |             ident: token::gensym_ident(ident),
kablam!    |                    ^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam! 
kablam! error[E0425]: cannot find function `gensym_ident` in module `token`
kablam!    --> src/convert.rs:193:30
kablam!     |
kablam! 193 |                     let id = token::gensym_ident("a");
kablam!     |                              ^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam! 
kablam! error[E0532]: expected tuple struct/variant, found unit variant `MetaItemKind::Word`
kablam!   --> src/lib.rs:39:17
kablam!    |
kablam! 39 |                 MetaItemKind::Word(ref ns) => {
kablam!    |                 ^^^^^^^^^^^^^^^^^^ not a tuple struct/variant
kablam! 
kablam! error: the type of this value must be known in this context
kablam!   --> src/expand.rs:33:32
kablam!    |
kablam! 33 |        .filter(|tt| span.lo <= tt.get_span().lo && tt.get_span().hi <= span.hi)
kablam!    |                                ^^^^^^^^^^^^^
kablam! 
kablam! error: the type of this value must be known in this context
kablam!    --> src/expand.rs:150:33
kablam!     |
kablam! 150 |         quote_expr!(cx, format!($tts))
kablam!     |                                 ^^^^
kablam! 
kablam! error: the type of this value must be known in this context
kablam!   --> src/convert.rs:30:5
kablam!    |
kablam! 30 |     assert_eq!(tt.len(), ptt.len());
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error[E0061]: this function takes 3 parameters but 2 parameters were supplied
kablam!   --> src/convert.rs:41:39
kablam!    |
kablam! 41 |     let filemap = codemap.new_filemap("".to_string(), ppstr);
kablam!    |                                       ^^^^^^^^^^^^^^^^^^^^^ expected 3 parameters
kablam! 
kablam! error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements
kablam!    --> src/convert.rs:247:22
kablam!     |
kablam! 247 |     let mut folder = AssertFolder {
kablam!     |                      ^^^^^^^^^^^^
kablam!     |
kablam! help: consider using an explicit lifetime parameter as shown: fn convert_expr<'a>(cx: &'a mut ExtCtxt<'a>, expr: P<Expr>, ident: Ident,
kablam!                     tts: &[TokenTree]) -> (P<Expr>, bool)
kablam!    --> src/convert.rs:234:1
kablam!     |
kablam! 234 | pub fn convert_expr(cx: &mut ExtCtxt,
kablam!     | ^
kablam! 
kablam! error: aborting due to 5 previous errors
kablam! 
kablam! error: Could not compile `power-assert`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 295d71fc7130cc29eb6349e26d99f31493ebd67824065020136bf3989c21817c`
blam! 295d71fc7130cc29eb6349e26d99f31493ebd67824065020136bf3989c21817c
