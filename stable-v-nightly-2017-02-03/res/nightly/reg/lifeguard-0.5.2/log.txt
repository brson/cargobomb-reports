boom! testing lifeguard-0.5.2 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 16ddefe91f900a468764632c41581f1f68e068ea74bc0e611c8753c858ab4e34
boom! running `docker start -a 16ddefe91f900a468764632c41581f1f68e068ea74bc0e611c8753c858ab4e34`
kablam!    Compiling lifeguard v0.5.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.64 secs
boom! running `docker rm -f 16ddefe91f900a468764632c41581f1f68e068ea74bc0e611c8753c858ab4e34`
blam! 16ddefe91f900a468764632c41581f1f68e068ea74bc0e611c8753c858ab4e34
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! b59e9bdad5f8914c2a61c45875b99c43b793f720c78de94b5d9bcd380ec77c18
boom! running `docker start -a b59e9bdad5f8914c2a61c45875b99c43b793f720c78de94b5d9bcd380ec77c18`
kablam!    Compiling lifeguard v0.5.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.41 secs
boom! running `docker rm -f b59e9bdad5f8914c2a61c45875b99c43b793f720c78de94b5d9bcd380ec77c18`
blam! b59e9bdad5f8914c2a61c45875b99c43b793f720c78de94b5d9bcd380ec77c18
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! d0af14aebebeeb1147b7e03b483f1802157b170072a4c3334fdc8e4b4f22ef4c
boom! running `docker start -a d0af14aebebeeb1147b7e03b483f1802157b170072a4c3334fdc8e4b4f22ef4c`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/lib-1d638616f0a25274
blam! 
blam! running 16 tests
blam! test tests::test_as_mut_rc ... ok
blam! test tests::test_as_ref ... ok
blam! test tests::test_as_ref_rc ... ok
blam! test tests::test_attach ... ok
blam! test tests::test_builder ... ok
blam! test tests::test_attach_rc ... ok
blam! test tests::test_deref_mut ... ok
blam! test tests::test_deref_mut_rc ... ok
blam! test tests::test_deref ... ok
blam! test tests::test_detach ... ok
blam! test tests::test_recycle ... ok
blam! test tests::test_deref_rc ... ok
blam! test tests::test_size_cap ... ok
blam! test tests::test_as_mut ... ok
blam! test tests::test_detach_rc ... ok
blam! test tests::test_recycle_rc ... ok
blam! 
blam! test result: ok. 16 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/lifeguard-939481342b00d0fa
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests lifeguard
blam! 
blam! running 1 test
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:7
blam!   |
blam! 5 |   let mut pool: Pool<String> = pool()
blam!   |       ^^^^^^^^
blam! 
blam! warning: unused variable: `pool`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:7
blam!   |
blam! 5 |   let mut pool: Pool<String> = pool()
blam!   |       ^^^^^^^^
blam! 
blam! test pool_0 ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f d0af14aebebeeb1147b7e03b483f1802157b170072a4c3334fdc8e4b4f22ef4c`
blam! d0af14aebebeeb1147b7e03b483f1802157b170072a4c3334fdc8e4b4f22ef4c
