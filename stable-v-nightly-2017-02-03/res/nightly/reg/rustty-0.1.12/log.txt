boom! testing rustty-0.1.12 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! cb14a299ef321b03844b451fca7bdb0e5363a87718b6cb0170370e0bc9b79b52
boom! running `docker start -a cb14a299ef321b03844b451fca7bdb0e5363a87718b6cb0170370e0bc9b79b52`
kablam!    Compiling rustty v0.1.12 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.18 secs
boom! running `docker rm -f cb14a299ef321b03844b451fca7bdb0e5363a87718b6cb0170370e0bc9b79b52`
blam! cb14a299ef321b03844b451fca7bdb0e5363a87718b6cb0170370e0bc9b79b52
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! d19d877b4ad82b791663d36a6b6e366c472cdfbd5a5d4940031ad0271dde244b
boom! running `docker start -a d19d877b4ad82b791663d36a6b6e366c472cdfbd5a5d4940031ad0271dde244b`
kablam!    Compiling rustty v0.1.12 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 4.62 secs
boom! running `docker rm -f d19d877b4ad82b791663d36a6b6e366c472cdfbd5a5d4940031ad0271dde244b`
blam! d19d877b4ad82b791663d36a6b6e366c472cdfbd5a5d4940031ad0271dde244b
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 0c5b71792c5ae158868bd1947f83a12f0c2e52897cd54c3d30f8c062de0f6e45
boom! running `docker start -a 0c5b71792c5ae158868bd1947f83a12f0c2e52897cd54c3d30f8c062de0f6e45`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/rustty-f97251104c8013dd
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests rustty
blam! 
blam! running 33 tests
blam! warning: unused variable: `def`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let def = Attr::Default;
blam!   |     ^^^
blam! 
blam! warning: unused variable: `base`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:5
blam!   |
blam! 9 | let base = Attr::Bold;
blam!   |     ^^^^
blam! 
blam! warning: unused variable: `comb`, #[warn(unused_variables)] on by default
blam!   --> <anon>:12:5
blam!    |
blam! 12 | let comb = Attr::UnderlineReverse;
blam!    |     ^^^^
blam! 
blam! test core::cellbuffer::Attr_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut cell = Cell::with_char('x');
blam!   |     ^^^^^^^^
blam! 
blam! test core::cellbuffer::Cell::ch_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut cell = Cell::with_style(Color::Default, Color::Green, Attr::Default);
blam!   |     ^^^^^^^^
blam! 
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut cell = Cell::default();
blam!   |     ^^^^^^^^
blam! 
blam! test core::cellbuffer::Cell::bg_0 ... ok
blam! test core::cellbuffer::Cell::default_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut cell = Cell::with_style(Color::Blue, Color::Default, Attr::Default);
blam!   |     ^^^^^^^^
blam! 
blam! test core::cellbuffer::Cell::fg_0 ... ok
blam! test core::cellbuffer::Cell::set_ch_0 ... ok
blam! test core::cellbuffer::Cell::new_0 ... ok
blam! warning: unused import: `Attr`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:27
blam!   |
blam! 3 | use rustty::{Cell, Color, Attr};
blam!   |                           ^^^^
blam! 
blam! test core::cellbuffer::Cell::set_bg_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut term = Terminal::new().unwrap();
blam!   |     ^^^^^^^^
blam! 
blam! warning: unused variable: `a_cell`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let a_cell = term.get(5, 5);
blam!   |     ^^^^^^
blam! 
blam! test core::cellbuffer::CellAccessor::get_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut cell = Cell::with_char('x');
blam!   |     ^^^^^^^^
blam! 
blam! warning: unused import: `Attr`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:27
blam!   |
blam! 3 | use rustty::{Cell, Color, Attr};
blam!   |                           ^^^^
blam! 
blam! test core::cellbuffer::Cell::with_char_0 ... ok
blam! test core::cellbuffer::Cell::set_fg_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut cell = Cell::with_style(Color::Default, Color::Red, Attr::Bold);
blam!   |     ^^^^^^^^
blam! 
blam! test core::cellbuffer::Cell::with_style_0 ... ok
blam! warning: unused variable: `a_mut_cell`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let a_mut_cell = term.get_mut(5, 5);
blam!   |     ^^^^^^^^^^
blam! 
blam! test core::cellbuffer::CellAccessor::get_mut_0 ... ok
blam! warning: unused import: `Cell`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:24
blam!   |
blam! 3 | use rustty::{Terminal, Cell};
blam!   |                        ^^^^
blam! 
blam! warning: unused variable: `will_resize`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let will_resize = term.check_resize();
blam!   |     ^^^^^^^^^^^
blam! 
blam! test core::terminal::Terminal::check_resize_0 ... ok
blam! warning: unused import: `Cell`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:24
blam!   |
blam! 3 | use rustty::{Terminal, Cell};
blam!   |                        ^^^^
blam! 
blam! test core::terminal::Terminal::clear_0 ... ok
blam! warning: unused variable: `default`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let default = Color::Default;
blam!   |     ^^^^^^^
blam! 
blam! test core::cellbuffer::Color_0 ... ok
blam! test core::terminal::Terminal::clear_with_cell_0 ... ok
blam! warning: unused import: `Cell`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:24
blam!   |
blam! 3 | use rustty::{Terminal, Cell};
blam!   |                        ^^^^
blam! 
blam! test core::terminal::Terminal::clear_with_char_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut term = Terminal::new().unwrap();
blam!   |     ^^^^^^^^
blam! 
blam! warning: unused variable: `width`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let width = term.cols();
blam!   |     ^^^^^
blam! 
blam! test core::terminal::Terminal::cols_0 ... ok
blam! test core::terminal::Terminal::hide_cursor_0 ... ok
blam! warning: unused import: `std::thread::sleep_ms`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:5
blam!   |
blam! 3 | use std::thread::sleep_ms;
blam!   |     ^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
blam!  --> <anon>:3:5
blam!   |
blam! 3 | use std::thread::sleep_ms;
blam!   |     ^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused import: `Event`, #[warn(unused_imports)] on by default
blam!  --> <anon>:4:24
blam!   |
blam! 4 | use rustty::{Terminal, Event};
blam!   |                        ^^^^^
blam! 
blam! warning: unused variable: `evt`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:5
blam!   |
blam! 9 | let evt = term.get_event(Duration::from_secs(1)).unwrap();
blam!   |     ^^^
blam! 
blam! test core::terminal::Terminal::get_event_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut term = Terminal::new().unwrap();
blam!   |     ^^^^^^^^
blam! 
blam! warning: unused variable: `height`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let height = term.rows();
blam!   |     ^^^^^^
blam! 
blam! test core::terminal::Terminal::rows_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut term = Terminal::new().unwrap();
blam!   |     ^^^^^^^^
blam! 
blam! test core::terminal::Terminal::new_0 ... ok
blam! test core::terminal::Terminal::set_cursor_0 ... ok
blam! warning: unused import: `CellAccessor`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:24
blam!   |
blam! 3 | use rustty::{Terminal, CellAccessor, HasSize};
blam!   |                        ^^^^^^^^^^^^
blam! 
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut term = Terminal::new().unwrap();
blam!   |     ^^^^^^^^
blam! 
blam! test core::terminal::Terminal::size_0 ... ok
blam! test core::terminal::Terminal::swap_buffers_0 ... ok
blam! warning: unused variable: `new_size`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:5
blam!   |
blam! 9 | let new_size = term.try_resize().unwrap();
blam!   |     ^^^^^^^^
blam! 
blam! test core::terminal::Terminal::try_resize_0 ... ok
blam! warning: unused variable: `new_size`, #[warn(unused_variables)] on by default
blam!   --> <anon>:11:5
blam!    |
blam! 11 | let new_size = term.try_resize_with_cell(cell).unwrap();
blam!    |     ^^^^^^^^
blam! 
blam! test core::terminal::Terminal::try_resize_with_cell_0 ... ok
blam! warning: unused variable: `new_size`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:5
blam!   |
blam! 9 | let new_size = term.try_resize_with_char('x').unwrap();
blam!   |     ^^^^^^^^
blam! 
blam! test core::terminal::Terminal::try_resize_with_char_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let mut term = Terminal::with_cell(cell).unwrap();
blam!   |     ^^^^^^^^
blam! 
blam! test core::terminal::Terminal::with_cell_0 ... ok
blam! warning: unused import: `Cell`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:24
blam!   |
blam! 3 | use rustty::{Terminal, Cell};
blam!   |                        ^^^^
blam! 
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut term = Terminal::with_char('x').unwrap();
blam!   |     ^^^^^^^^
blam! 
blam! test core::terminal::Terminal::with_char_0 ... ok
blam! test core::terminal::Terminal_0 ... ok
blam! thread 'rustc' panicked at 'test executable failed:
blam! 
blam! thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Error { repr: Custom(Custom { kind: NotFound, error: StringError("terminal missing capability: \'smcup\'") }) }', /buildslave/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/libcore/result.rs:870
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! ', /buildslave/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/librustdoc/test.rs:305
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! test ui::painter::Painter::printline_with_cell_0 ... FAILED
blam! 
blam! failures:
blam! 
blam! failures:
blam!     ui::painter::Painter::printline_with_cell_0
blam! 
blam! test result: FAILED. 32 passed; 1 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f 0c5b71792c5ae158868bd1947f83a12f0c2e52897cd54c3d30f8c062de0f6e45`
blam! 0c5b71792c5ae158868bd1947f83a12f0c2e52897cd54c3d30f8c062de0f6e45
