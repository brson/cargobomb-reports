boom! testing rs6502-0.3.4 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! a1911ed2275a7c59c1bedadda95fc9603a75b9e7f7068d212874de8f8035402f
boom! running `docker start -a a1911ed2275a7c59c1bedadda95fc9603a75b9e7f7068d212874de8f8035402f`
kablam!    Compiling rs6502 v0.3.4 (file:///source)
kablam! warning: unused import: `OpCode`, #[warn(unused_imports)] on by default
kablam!  --> src/assembler/assembler.rs:7:33
kablam!   |
kablam! 7 | use ::opcodes::{AddressingMode, OpCode};
kablam!   |                                 ^^^^^^
kablam! 
kablam! warning: unused import: `LexerToken`, #[warn(unused_imports)] on by default
kablam!   --> src/assembler/assembler.rs:10:24
kablam!    |
kablam! 10 | use assembler::token::{LexerToken, ParserToken};
kablam!    |                        ^^^^^^^^^^
kablam! 
kablam! warning: comparison is useless due to type limits, #[warn(unused_comparisons)] on by default
kablam!    --> src/assembler/assembler.rs:155:51
kablam!     |
kablam! 155 |                             if distance < -128 || distance > 127 {
kablam!     |                                                   ^^^^^^^^^^^^^^
kablam! 
kablam! warning: variable `last_addressing_mode` is assigned to, but never used, #[warn(unused_variables)] on by default
kablam!    --> src/assembler/assembler.rs:181:13
kablam!     |
kablam! 181 |         let mut last_addressing_mode = AddressingMode::Absolute;
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: value assigned to `last_addressing_mode` is never read, #[warn(unused_assignments)] on by default
kablam!    --> src/assembler/assembler.rs:192:17
kablam!     |
kablam! 192 |                 last_addressing_mode = opcode.mode;
kablam!     |                 ^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `AddressingMode`, #[warn(unused_imports)] on by default
kablam!  --> src/assembler/token.rs:1:17
kablam!   |
kablam! 1 | use ::opcodes::{AddressingMode, OpCode};
kablam!   |                 ^^^^^^^^^^^^^^
kablam! 
kablam! warning: variant is never used: `Absolute`, #[warn(dead_code)] on by default
kablam!   --> src/assembler/token.rs:27:5
kablam!    |
kablam! 27 |     Absolute(String),
kablam!    |     ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `::opcodes::OpCode`, #[warn(unused_imports)] on by default
kablam!   --> src/assembler/lexer.rs:12:5
kablam!    |
kablam! 12 | use ::opcodes::OpCode;
kablam!    |     ^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: method is never used: `unexpected_ident`, #[warn(dead_code)] on by default
kablam!   --> src/assembler/lexer.rs:20:5
kablam!    |
kablam! 20 |     fn unexpected_ident<A, B>(expected: A, found: B, line: u32, column: u32) -> LexerError
kablam!    |     ^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/assembler/lexer.rs:136:17
kablam!     |
kablam! 136 |             let mut iter = line.chars();
kablam!     |                 ^^^^^^^^
kablam! 
kablam! warning: method is never used: `expected_eol`, #[warn(dead_code)] on by default
kablam!   --> src/assembler/parser.rs:32:5
kablam!    |
kablam! 32 |       fn expected_eol(line: u32) -> ParserError {
kablam!    |  _____^ starting here...
kablam! 33 | |         ParserError::from(format!("Expected end of line. Line {}", line))
kablam! 34 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> src/assembler/parser.rs:94:17
kablam!    |
kablam! 94 |             let mut added_label = false;
kablam!    |                 ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `added_label`, #[warn(unused_variables)] on by default
kablam!   --> src/assembler/parser.rs:94:17
kablam!    |
kablam! 94 |             let mut added_label = false;
kablam!    |                 ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `opcode`, #[warn(unused_variables)] on by default
kablam!    --> src/assembler/parser.rs:192:21
kablam!     |
kablam! 192 |         if let Some(opcode) = OpCode::from_mnemonic(mnemonic) {
kablam!     |                     ^^^^^^
kablam! 
kablam! warning: unreachable statement, #[warn(unreachable_code)] on by default
kablam!    --> src/assembler/parser.rs:327:21
kablam!     |
kablam! 327 |                     let next = *peeker.peek().unwrap();
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `next`, #[warn(unused_variables)] on by default
kablam!    --> src/assembler/parser.rs:327:25
kablam!     |
kablam! 327 |                     let next = *peeker.peek().unwrap();
kablam!     |                         ^^^^
kablam! 
kablam! warning: unused variable: `addressing_mode`, #[warn(unused_variables)] on by default
kablam!    --> src/assembler/parser.rs:334:21
kablam!     |
kablam! 334 |                 let addressing_mode = AddressingMode::Indirect;
kablam!     |                     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `addressing_mode`, #[warn(unused_variables)] on by default
kablam!    --> src/assembler/parser.rs:406:29
kablam!     |
kablam! 406 |                         let addressing_mode = AddressingMode::IndirectY;
kablam!     |                             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unreachable statement, #[warn(unreachable_code)] on by default
kablam!    --> src/assembler/parser.rs:490:9
kablam!     |
kablam! 490 |         unreachable!();
kablam!     |         ^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/assembler/parser.rs:528:17
kablam!     |
kablam! 528 |             let mut next = peeker.next().unwrap();
kablam!     |                 ^^^^^^^^
kablam! 
kablam! warning: unused import: `AddressingMode`, #[warn(unused_imports)] on by default
kablam!  --> src/cpu/cpu.rs:3:17
kablam!   |
kablam! 3 | use ::opcodes::{AddressingMode, OpCode};
kablam!   |                 ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/cpu/cpu.rs:253:9
kablam!     |
kablam! 253 |         self.stack.push_u16(mem, self.registers.PC);
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/cpu/cpu.rs:254:9
kablam!     |
kablam! 254 |         self.stack.push(mem, self.flags.to_u8());
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/cpu/cpu.rs:276:9
kablam!     |
kablam! 276 |         self.stack.push_u16(mem, self.registers.PC);
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/cpu/cpu.rs:277:9
kablam!     |
kablam! 277 |         self.stack.push(mem, self.flags.to_u8());
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/cpu/cpu.rs:532:9
kablam!     |
kablam! 532 |         self.stack.push_u16(mem, self.registers.PC);
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: static variable `OpCodes` should have an upper case name such as `OP_CODES`, #[warn(non_upper_case_globals)] on by default
kablam!     --> src/opcodes.rs:53:1
kablam!      |
kablam! 53   | static OpCodes: [OpCode; 151] = [OpCode {
kablam!      | ^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.44 secs
boom! running `docker rm -f a1911ed2275a7c59c1bedadda95fc9603a75b9e7f7068d212874de8f8035402f`
blam! a1911ed2275a7c59c1bedadda95fc9603a75b9e7f7068d212874de8f8035402f
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 732597f3d438cf06e776c49d07bdab6805424d57b86a2336762ea3bc23e3261a
boom! running `docker start -a 732597f3d438cf06e776c49d07bdab6805424d57b86a2336762ea3bc23e3261a`
kablam!    Compiling rs6502 v0.3.4 (file:///source)
kablam! warning: function `INTEGRATION_CPU_can_add_basic_numbers_in_accumulator` should have a snake case name such as `integration_cpu_can_add_basic_numbers_in_accumulator`, #[warn(non_snake_case)] on by default
kablam!   --> tests/cpu_integration.rs:5:1
kablam!    |
kablam! 5  | fn INTEGRATION_CPU_can_add_basic_numbers_in_accumulator() {
kablam!    | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> tests/cpu_integration.rs:15:5
kablam!    |
kablam! 15 |     cpu.load(&segments[0].code[..], None);
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> tests/cpu_integration.rs:18:5
kablam!    |
kablam! 18 |     cpu.step_n(2);
kablam!    |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_can_add_binary_coded_decimal_numbers_in_accumulator` should have a snake case name such as `integration_cpu_can_add_binary_coded_decimal_numbers_in_accumulator`, #[warn(non_snake_case)] on by default
kablam!   --> tests/cpu_integration.rs:24:1
kablam!    |
kablam! 24 | fn INTEGRATION_CPU_can_add_binary_coded_decimal_numbers_in_accumulator() {
kablam!    | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> tests/cpu_integration.rs:35:5
kablam!    |
kablam! 35 |     cpu.load(&segments[0].code[..], None);
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> tests/cpu_integration.rs:38:5
kablam!    |
kablam! 38 |     cpu.step_n(3);
kablam!    |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_can_add_mixed_mode_numbers_in_accumulator` should have a snake case name such as `integration_cpu_can_add_mixed_mode_numbers_in_accumulator`, #[warn(non_snake_case)] on by default
kablam!   --> tests/cpu_integration.rs:44:1
kablam!    |
kablam! 44 | fn INTEGRATION_CPU_can_add_mixed_mode_numbers_in_accumulator() {
kablam!    | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> tests/cpu_integration.rs:54:5
kablam!    |
kablam! 54 |     cpu.load(&segments[0].code[..], None);
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> tests/cpu_integration.rs:57:5
kablam!    |
kablam! 57 |     cpu.step_n(2);
kablam!    |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_can_store_bytes_in_memory` should have a snake case name such as `integration_cpu_can_store_bytes_in_memory`, #[warn(non_snake_case)] on by default
kablam!   --> tests/cpu_integration.rs:63:1
kablam!    |
kablam! 63 | fn INTEGRATION_CPU_can_store_bytes_in_memory() {
kablam!    | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> tests/cpu_integration.rs:75:5
kablam!    |
kablam! 75 |     cpu.load(&segments[0].code[..], None);
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> tests/cpu_integration.rs:78:5
kablam!    |
kablam! 78 |     cpu.step_n(4);
kablam!    |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_can_overwrite_own_memory` should have a snake case name such as `integration_cpu_can_overwrite_own_memory`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:86:1
kablam!     |
kablam! 86  | fn INTEGRATION_CPU_can_overwrite_own_memory() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> tests/cpu_integration.rs:98:5
kablam!    |
kablam! 98 |     cpu.load(&segments[0].code[..], None);
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:101:5
kablam!     |
kablam! 101 |     cpu.step_n(4);
kablam!     |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_can_load_byte_into_memory_and_logical_AND_it_with_A_register` should have a snake case name such as `integration_cpu_can_load_byte_into_memory_and_logical_and_it_with_a_register`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:107:1
kablam!     |
kablam! 107 | fn INTEGRATION_CPU_can_load_byte_into_memory_and_logical_AND_it_with_A_register() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:119:5
kablam!     |
kablam! 119 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:122:5
kablam!     |
kablam! 122 |     cpu.step_n(4);
kablam!     |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_can_load_byte_into_memory_and_logical_AND_it_with_A_register_using_a_variable` should have a snake case name such as `integration_cpu_can_load_byte_into_memory_and_logical_and_it_with_a_register_using_a_variable`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:128:1
kablam!     |
kablam! 128 | fn INTEGRATION_CPU_can_load_byte_into_memory_and_logical_AND_it_with_A_register_using_a_variable
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:143:5
kablam!     |
kablam! 143 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:146:5
kablam!     |
kablam! 146 |     cpu.step_n(4);
kablam!     |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_does_not_branch_on_clear_carry_flag` should have a snake case name such as `integration_cpu_does_not_branch_on_clear_carry_flag`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:152:1
kablam!     |
kablam! 152 | fn INTEGRATION_CPU_does_not_branch_on_clear_carry_flag() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:165:5
kablam!     |
kablam! 165 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:168:5
kablam!     |
kablam! 168 |     cpu.step_n(3);
kablam!     |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_can_branch_on_carry_flag` should have a snake case name such as `integration_cpu_can_branch_on_carry_flag`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:174:1
kablam!     |
kablam! 174 | fn INTEGRATION_CPU_can_branch_on_carry_flag() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:187:5
kablam!     |
kablam! 187 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:190:5
kablam!     |
kablam! 190 |     cpu.step_n(4);
kablam!     |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_can_branch_on_carry_flag_to_correct_offset` should have a snake case name such as `integration_cpu_can_branch_on_carry_flag_to_correct_offset`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:196:1
kablam!     |
kablam! 196 | fn INTEGRATION_CPU_can_branch_on_carry_flag_to_correct_offset() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:214:5
kablam!     |
kablam! 214 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:217:5
kablam!     |
kablam! 217 |     cpu.step_n(5);
kablam!     |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_can_loop_on_bcc` should have a snake case name such as `integration_cpu_can_loop_on_bcc`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:223:1
kablam!     |
kablam! 223 | fn INTEGRATION_CPU_can_loop_on_bcc() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:235:5
kablam!     |
kablam! 235 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:238:5
kablam!     |
kablam! 238 |     cpu.step_n(30);
kablam!     |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_can_branch_on_bcs` should have a snake case name such as `integration_cpu_can_branch_on_bcs`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:244:1
kablam!     |
kablam! 244 | fn INTEGRATION_CPU_can_branch_on_bcs() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:257:5
kablam!     |
kablam! 257 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:260:5
kablam!     |
kablam! 260 |     cpu.step_n(30);
kablam!     |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_can_branch_on_beq` should have a snake case name such as `integration_cpu_can_branch_on_beq`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:266:1
kablam!     |
kablam! 266 | fn INTEGRATION_CPU_can_branch_on_beq() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:279:5
kablam!     |
kablam! 279 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:282:5
kablam!     |
kablam! 282 |     cpu.step_n(30);
kablam!     |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_does_not_branch_on_beq` should have a snake case name such as `integration_cpu_does_not_branch_on_beq`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:288:1
kablam!     |
kablam! 288 | fn INTEGRATION_CPU_does_not_branch_on_beq() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:301:5
kablam!     |
kablam! 301 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:304:5
kablam!     |
kablam! 304 |     cpu.step_n(30);
kablam!     |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_preserves_flags_on_bit` should have a snake case name such as `integration_cpu_preserves_flags_on_bit`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:310:1
kablam!     |
kablam! 310 | fn INTEGRATION_CPU_preserves_flags_on_bit() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:325:5
kablam!     |
kablam! 325 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:328:5
kablam!     |
kablam! 328 |     cpu.step_n(30);
kablam!     |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_bmi_branches_on_sign_bit_set` should have a snake case name such as `integration_cpu_bmi_branches_on_sign_bit_set`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:334:1
kablam!     |
kablam! 334 | fn INTEGRATION_CPU_bmi_branches_on_sign_bit_set() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:347:5
kablam!     |
kablam! 347 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:350:5
kablam!     |
kablam! 350 |     cpu.step_n(30);
kablam!     |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_bne_branches_on_zero_clear` should have a snake case name such as `integration_cpu_bne_branches_on_zero_clear`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:357:1
kablam!     |
kablam! 357 | fn INTEGRATION_CPU_bne_branches_on_zero_clear() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:369:5
kablam!     |
kablam! 369 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:372:5
kablam!     |
kablam! 372 |     cpu.step_n(50);
kablam!     |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_bpl_branches_on_sign_clear` should have a snake case name such as `integration_cpu_bpl_branches_on_sign_clear`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:379:1
kablam!     |
kablam! 379 | fn INTEGRATION_CPU_bpl_branches_on_sign_clear() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:391:5
kablam!     |
kablam! 391 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:394:5
kablam!     |
kablam! 394 |     cpu.step_n(50);
kablam!     |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_bpl_does_not_branch_on_sign_set` should have a snake case name such as `integration_cpu_bpl_does_not_branch_on_sign_set`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:401:1
kablam!     |
kablam! 401 | fn INTEGRATION_CPU_bpl_does_not_branch_on_sign_set() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:413:5
kablam!     |
kablam! 413 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:416:5
kablam!     |
kablam! 416 |     cpu.step_n(50);
kablam!     |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_cmp_does_branch_on_accumulator_less_than_memory_bcc` should have a snake case name such as `integration_cpu_cmp_does_branch_on_accumulator_less_than_memory_bcc`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:423:1
kablam!     |
kablam! 423 | fn INTEGRATION_CPU_cmp_does_branch_on_accumulator_less_than_memory_bcc() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:439:5
kablam!     |
kablam! 439 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:442:5
kablam!     |
kablam! 442 |     cpu.step_n(50);
kablam!     |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_cmp_does_branch_on_accumulator_greater_than_memory_bcs` should have a snake case name such as `integration_cpu_cmp_does_branch_on_accumulator_greater_than_memory_bcs`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:448:1
kablam!     |
kablam! 448 | fn INTEGRATION_CPU_cmp_does_branch_on_accumulator_greater_than_memory_bcs() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:464:5
kablam!     |
kablam! 464 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:467:5
kablam!     |
kablam! 467 |     cpu.step_n(50);
kablam!     |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_cmp_does_branch_on_accumulator_less_than_equal_to_bcc` should have a snake case name such as `integration_cpu_cmp_does_branch_on_accumulator_less_than_equal_to_bcc`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:473:1
kablam!     |
kablam! 473 | fn INTEGRATION_CPU_cmp_does_branch_on_accumulator_less_than_equal_to_bcc() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:489:5
kablam!     |
kablam! 489 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:492:5
kablam!     |
kablam! 492 |     cpu.step_n(50);
kablam!     |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_dec_decrements` should have a snake case name such as `integration_cpu_dec_decrements`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:498:1
kablam!     |
kablam! 498 | fn INTEGRATION_CPU_dec_decrements() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:509:5
kablam!     |
kablam! 509 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:512:5
kablam!     |
kablam! 512 |     cpu.step_n(3);
kablam!     |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_dex_decrements` should have a snake case name such as `integration_cpu_dex_decrements`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:518:1
kablam!     |
kablam! 518 | fn INTEGRATION_CPU_dex_decrements() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:533:5
kablam!     |
kablam! 533 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:536:5
kablam!     |
kablam! 536 |     cpu.step_n(20);
kablam!     |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_jsr_rts_combination_works` should have a snake case name such as `integration_cpu_jsr_rts_combination_works`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:542:1
kablam!     |
kablam! 542 | fn INTEGRATION_CPU_jsr_rts_combination_works() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:560:5
kablam!     |
kablam! 560 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:563:5
kablam!     |
kablam! 563 |     cpu.step_n(20);
kablam!     |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_jsr_rts_combination_works_when_code_segment_loaded_at_weird_address` should have a snake case name such as `integration_cpu_jsr_rts_combination_works_when_code_segment_loaded_at_weird_address`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:569:1
kablam!     |
kablam! 569 | fn INTEGRATION_CPU_jsr_rts_combination_works_when_code_segment_loaded_at_weird_address() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:587:5
kablam!     |
kablam! 587 |     cpu.load(&segments[0].code[..], 0xABCD);  // Load it at a weird address
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:590:5
kablam!     |
kablam! 590 |     cpu.step_n(20);
kablam!     |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_lsr_can_halve_a_number` should have a snake case name such as `integration_cpu_lsr_can_halve_a_number`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:596:1
kablam!     |
kablam! 596 | fn INTEGRATION_CPU_lsr_can_halve_a_number() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:612:5
kablam!     |
kablam! 612 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:615:5
kablam!     |
kablam! 615 |     cpu.step_n(20);
kablam!     |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_ora_ors_against_accumulator` should have a snake case name such as `integration_cpu_ora_ors_against_accumulator`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:622:1
kablam!     |
kablam! 622 | fn INTEGRATION_CPU_ora_ors_against_accumulator() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:632:5
kablam!     |
kablam! 632 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:635:5
kablam!     |
kablam! 635 |     cpu.step_n(10);
kablam!     |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_pha_pla` should have a snake case name such as `integration_cpu_pha_pla`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:641:1
kablam!     |
kablam! 641 | fn INTEGRATION_CPU_pha_pla() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:653:5
kablam!     |
kablam! 653 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:656:5
kablam!     |
kablam! 656 |     cpu.step_n(3);
kablam!     |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:660:5
kablam!     |
kablam! 660 |     cpu.step();
kablam!     |     ^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_rol` should have a snake case name such as `integration_cpu_rol`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:666:1
kablam!     |
kablam! 666 | fn INTEGRATION_CPU_rol() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:680:5
kablam!     |
kablam! 680 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:683:5
kablam!     |
kablam! 683 |     cpu.step_n(3);
kablam!     |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_ror` should have a snake case name such as `integration_cpu_ror`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:689:1
kablam!     |
kablam! 689 | fn INTEGRATION_CPU_ror() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:704:5
kablam!     |
kablam! 704 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:707:5
kablam!     |
kablam! 707 |     cpu.step_n(3);
kablam!     |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_brk_rti` should have a snake case name such as `integration_cpu_brk_rti`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:713:1
kablam!     |
kablam! 713 | fn INTEGRATION_CPU_brk_rti() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:727:5
kablam!     |
kablam! 727 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:728:5
kablam!     |
kablam! 728 |     cpu.load(&segments[1].code[..], segments[1].address);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:736:5
kablam!     |
kablam! 736 |     cpu.step_n(3); // Push them to the stack
kablam!     |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:741:5
kablam!     |
kablam! 741 |     cpu.step(); // Pop them from the stack
kablam!     |     ^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_sbc` should have a snake case name such as `integration_cpu_sbc`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:748:1
kablam!     |
kablam! 748 | fn INTEGRATION_CPU_sbc() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:758:5
kablam!     |
kablam! 758 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:761:5
kablam!     |
kablam! 761 |     cpu.step_n(2);
kablam!     |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_sbc_with_decimal_mode` should have a snake case name such as `integration_cpu_sbc_with_decimal_mode`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:767:1
kablam!     |
kablam! 767 | fn INTEGRATION_CPU_sbc_with_decimal_mode() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:778:5
kablam!     |
kablam! 778 |     cpu.load(&segments[0].code[..], None);
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:781:5
kablam!     |
kablam! 781 |     cpu.step_n(3);
kablam!     |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_can_load_code_segments_at_offsets` should have a snake case name such as `integration_cpu_can_load_code_segments_at_offsets`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:787:1
kablam!     |
kablam! 787 | fn INTEGRATION_CPU_can_load_code_segments_at_offsets() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:803:9
kablam!     |
kablam! 803 |         cpu.load(&segment.code[..], segment.address);
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_can_force_interrupt_code` should have a snake case name such as `integration_cpu_can_force_interrupt_code`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:812:1
kablam!     |
kablam! 812 | fn INTEGRATION_CPU_can_force_interrupt_code() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:838:9
kablam!     |
kablam! 838 |         cpu.load(&segment.code[..], segment.address);
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:844:5
kablam!     |
kablam! 844 |     cpu.step_n(4);
kablam!     |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:846:5
kablam!     |
kablam! 846 |     cpu.step_n(2);
kablam!     |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:852:5
kablam!     |
kablam! 852 |     cpu.step_n(50);
kablam!     |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_cant_interrupt_when_disabled` should have a snake case name such as `integration_cpu_cant_interrupt_when_disabled`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:858:1
kablam!     |
kablam! 858 | fn INTEGRATION_CPU_cant_interrupt_when_disabled() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:884:9
kablam!     |
kablam! 884 |         cpu.load(&segment.code[..], segment.address);
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:890:5
kablam!     |
kablam! 890 |     cpu.step_n(4);
kablam!     |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:892:5
kablam!     |
kablam! 892 |     cpu.step_n(2);
kablam!     |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:898:5
kablam!     |
kablam! 898 |     cpu.step_n(50);
kablam!     |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: function `INTEGRATION_CPU_can_interrupt_when_not_disabled` should have a snake case name such as `integration_cpu_can_interrupt_when_not_disabled`, #[warn(non_snake_case)] on by default
kablam!    --> tests/cpu_integration.rs:904:1
kablam!     |
kablam! 904 | fn INTEGRATION_CPU_can_interrupt_when_not_disabled() {
kablam!     | ^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:929:9
kablam!     |
kablam! 929 |         cpu.load(&segment.code[..], segment.address);
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:935:5
kablam!     |
kablam! 935 |     cpu.step_n(5);
kablam!     |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu_integration.rs:941:5
kablam!     |
kablam! 941 |     cpu.step_n(50);
kablam!     |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `cpu`, #[warn(unused_variables)] on by default
kablam!   --> tests/cpu.rs:11:17
kablam!    |
kablam! 11 |             let cpu = Cpu::new();
kablam!    |                 ^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> tests/cpu.rs:20:13
kablam!    |
kablam! 20 |             cpu.load(&fake_code[..], None);
kablam!    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> tests/cpu.rs:31:13
kablam!    |
kablam! 31 |             cpu.load(&fake_code[..], None);
kablam!    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> tests/cpu.rs:44:13
kablam!    |
kablam! 44 |             cpu.load(&fake_code[..], 0xF000);
kablam!    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> tests/cpu.rs:68:13
kablam!    |
kablam! 68 |             cpu.load(&fake_code[..], None);
kablam!    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> tests/cpu.rs:79:13
kablam!    |
kablam! 79 |             cpu.load(&fake_code[..], None);
kablam!    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `step_result`, #[warn(unused_variables)] on by default
kablam!   --> tests/cpu.rs:81:17
kablam!    |
kablam! 81 |             let step_result: CpuStepResult = cpu.step();
kablam!    |                 ^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> tests/cpu.rs:88:13
kablam!    |
kablam! 88 |             cpu.load(&code[..], None);
kablam!    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> tests/cpu.rs:91:13
kablam!    |
kablam! 91 |             cpu.step();
kablam!    |             ^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:100:13
kablam!     |
kablam! 100 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:103:13
kablam!     |
kablam! 103 |             cpu.step();
kablam!     |             ^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:112:13
kablam!     |
kablam! 112 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:115:13
kablam!     |
kablam! 115 |             cpu.step_n(2);
kablam!     |             ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:124:13
kablam!     |
kablam! 124 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:127:13
kablam!     |
kablam! 127 |             cpu.step_n(2);
kablam!     |             ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:137:13
kablam!     |
kablam! 137 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:140:13
kablam!     |
kablam! 140 |             cpu.step_n(3);
kablam!     |             ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:150:13
kablam!     |
kablam! 150 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:153:13
kablam!     |
kablam! 153 |             cpu.step_n(3);
kablam!     |             ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:164:13
kablam!     |
kablam! 164 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:167:13
kablam!     |
kablam! 167 |             cpu.step_n(2);
kablam!     |             ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:178:13
kablam!     |
kablam! 178 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:181:13
kablam!     |
kablam! 181 |             cpu.step_n(2);
kablam!     |             ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:192:13
kablam!     |
kablam! 192 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:195:13
kablam!     |
kablam! 195 |             cpu.step_n(2);
kablam!     |             ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:205:13
kablam!     |
kablam! 205 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:208:13
kablam!     |
kablam! 208 |             cpu.step_n(2);
kablam!     |             ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:218:13
kablam!     |
kablam! 218 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:221:13
kablam!     |
kablam! 221 |             cpu.step_n(2);
kablam!     |             ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:231:13
kablam!     |
kablam! 231 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:234:13
kablam!     |
kablam! 234 |             cpu.step_n(3);
kablam!     |             ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:245:13
kablam!     |
kablam! 245 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:248:13
kablam!     |
kablam! 248 |             cpu.step_n(50);
kablam!     |             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:257:13
kablam!     |
kablam! 257 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:260:13
kablam!     |
kablam! 260 |             cpu.step_n(10);
kablam!     |             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:270:13
kablam!     |
kablam! 270 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:273:13
kablam!     |
kablam! 273 |             cpu.step_n(10);
kablam!     |             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:282:13
kablam!     |
kablam! 282 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:285:13
kablam!     |
kablam! 285 |             cpu.step_n(10);
kablam!     |             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:295:13
kablam!     |
kablam! 295 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:298:13
kablam!     |
kablam! 298 |             cpu.step_n(10);
kablam!     |             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:310:13
kablam!     |
kablam! 310 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:313:13
kablam!     |
kablam! 313 |             cpu.step_n(10);
kablam!     |             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:323:13
kablam!     |
kablam! 323 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:326:13
kablam!     |
kablam! 326 |             cpu.step_n(10);
kablam!     |             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:336:13
kablam!     |
kablam! 336 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:339:13
kablam!     |
kablam! 339 |             cpu.step_n(10);
kablam!     |             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:348:13
kablam!     |
kablam! 348 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:351:13
kablam!     |
kablam! 351 |             cpu.step_n(10);
kablam!     |             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:361:13
kablam!     |
kablam! 361 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:364:13
kablam!     |
kablam! 364 |             cpu.step_n(10);
kablam!     |             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:374:13
kablam!     |
kablam! 374 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:377:13
kablam!     |
kablam! 377 |             cpu.step_n(10);
kablam!     |             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:387:13
kablam!     |
kablam! 387 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:390:13
kablam!     |
kablam! 390 |             cpu.step_n(10);
kablam!     |             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:400:13
kablam!     |
kablam! 400 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:403:13
kablam!     |
kablam! 403 |             cpu.step_n(10);
kablam!     |             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:413:13
kablam!     |
kablam! 413 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:416:13
kablam!     |
kablam! 416 |             cpu.step_n(10);
kablam!     |             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:426:13
kablam!     |
kablam! 426 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:430:13
kablam!     |
kablam! 430 |             cpu.step();
kablam!     |             ^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:439:13
kablam!     |
kablam! 439 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:443:13
kablam!     |
kablam! 443 |             cpu.step();
kablam!     |             ^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:452:13
kablam!     |
kablam! 452 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:456:13
kablam!     |
kablam! 456 |             cpu.step();
kablam!     |             ^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:465:13
kablam!     |
kablam! 465 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:469:13
kablam!     |
kablam! 469 |             cpu.step();
kablam!     |             ^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:478:13
kablam!     |
kablam! 478 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:482:13
kablam!     |
kablam! 482 |             cpu.step_n(2);
kablam!     |             ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:491:13
kablam!     |
kablam! 491 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:495:13
kablam!     |
kablam! 495 |             cpu.step_n(2);
kablam!     |             ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:504:13
kablam!     |
kablam! 504 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:508:13
kablam!     |
kablam! 508 |             cpu.step_n(2);
kablam!     |             ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:517:13
kablam!     |
kablam! 517 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:521:13
kablam!     |
kablam! 521 |             cpu.step_n(2);
kablam!     |             ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:530:13
kablam!     |
kablam! 530 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:534:13
kablam!     |
kablam! 534 |             cpu.step_n(2);
kablam!     |             ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:543:13
kablam!     |
kablam! 543 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:547:13
kablam!     |
kablam! 547 |             cpu.step_n(2);
kablam!     |             ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:556:13
kablam!     |
kablam! 556 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:560:13
kablam!     |
kablam! 560 |             cpu.step_n(2);
kablam!     |             ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:569:13
kablam!     |
kablam! 569 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:572:13
kablam!     |
kablam! 572 |             cpu.step_n(10);
kablam!     |             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:581:13
kablam!     |
kablam! 581 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:584:13
kablam!     |
kablam! 584 |             cpu.step_n(10);
kablam!     |             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:593:13
kablam!     |
kablam! 593 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:596:13
kablam!     |
kablam! 596 |             cpu.step_n(10);
kablam!     |             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:605:13
kablam!     |
kablam! 605 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:608:13
kablam!     |
kablam! 608 |             cpu.step_n(2);
kablam!     |             ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:617:13
kablam!     |
kablam! 617 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:620:13
kablam!     |
kablam! 620 |             cpu.step_n(10);
kablam!     |             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:629:13
kablam!     |
kablam! 629 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:632:13
kablam!     |
kablam! 632 |             cpu.step_n(10);
kablam!     |             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:641:13
kablam!     |
kablam! 641 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:644:13
kablam!     |
kablam! 644 |             cpu.step_n(20);
kablam!     |             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:653:13
kablam!     |
kablam! 653 |             cpu.load(&code[..], None);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> tests/cpu.rs:656:13
kablam!     |
kablam! 656 |             cpu.step_n(2);
kablam!     |             ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `OpCode`, #[warn(unused_imports)] on by default
kablam!  --> src/assembler/assembler.rs:7:33
kablam!   |
kablam! 7 | use ::opcodes::{AddressingMode, OpCode};
kablam!   |                                 ^^^^^^
kablam! 
kablam! warning: unused import: `LexerToken`, #[warn(unused_imports)] on by default
kablam!   --> src/assembler/assembler.rs:10:24
kablam!    |
kablam! 10 | use assembler::token::{LexerToken, ParserToken};
kablam!    |                        ^^^^^^^^^^
kablam! 
kablam! warning: comparison is useless due to type limits, #[warn(unused_comparisons)] on by default
kablam!    --> src/assembler/assembler.rs:155:51
kablam!     |
kablam! 155 |                             if distance < -128 || distance > 127 {
kablam!     |                                                   ^^^^^^^^^^^^^^
kablam! 
kablam! warning: variable `last_addressing_mode` is assigned to, but never used, #[warn(unused_variables)] on by default
kablam!    --> src/assembler/assembler.rs:181:13
kablam!     |
kablam! 181 |         let mut last_addressing_mode = AddressingMode::Absolute;
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: value assigned to `last_addressing_mode` is never read, #[warn(unused_assignments)] on by default
kablam!    --> src/assembler/assembler.rs:192:17
kablam!     |
kablam! 192 |                 last_addressing_mode = opcode.mode;
kablam!     |                 ^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `AddressingMode`, #[warn(unused_imports)] on by default
kablam!  --> src/assembler/token.rs:1:17
kablam!   |
kablam! 1 | use ::opcodes::{AddressingMode, OpCode};
kablam!   |                 ^^^^^^^^^^^^^^
kablam! 
kablam! warning: variant is never used: `Absolute`, #[warn(dead_code)] on by default
kablam!   --> src/assembler/token.rs:27:5
kablam!    |
kablam! 27 |     Absolute(String),
kablam!    |     ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `::opcodes::OpCode`, #[warn(unused_imports)] on by default
kablam!   --> src/assembler/lexer.rs:12:5
kablam!    |
kablam! 12 | use ::opcodes::OpCode;
kablam!    |     ^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: method is never used: `unexpected_ident`, #[warn(dead_code)] on by default
kablam!   --> src/assembler/lexer.rs:20:5
kablam!    |
kablam! 20 |     fn unexpected_ident<A, B>(expected: A, found: B, line: u32, column: u32) -> LexerError
kablam!    |     ^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/assembler/lexer.rs:136:17
kablam!     |
kablam! 136 |             let mut iter = line.chars();
kablam!     |                 ^^^^^^^^
kablam! 
kablam! warning: method is never used: `expected_eol`, #[warn(dead_code)] on by default
kablam!   --> src/assembler/parser.rs:32:5
kablam!    |
kablam! 32 |       fn expected_eol(line: u32) -> ParserError {
kablam!    |  _____^ starting here...
kablam! 33 | |         ParserError::from(format!("Expected end of line. Line {}", line))
kablam! 34 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> src/assembler/parser.rs:94:17
kablam!    |
kablam! 94 |             let mut added_label = false;
kablam!    |                 ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `added_label`, #[warn(unused_variables)] on by default
kablam!   --> src/assembler/parser.rs:94:17
kablam!    |
kablam! 94 |             let mut added_label = false;
kablam!    |                 ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `opcode`, #[warn(unused_variables)] on by default
kablam!    --> src/assembler/parser.rs:192:21
kablam!     |
kablam! 192 |         if let Some(opcode) = OpCode::from_mnemonic(mnemonic) {
kablam!     |                     ^^^^^^
kablam! 
kablam! warning: unreachable statement, #[warn(unreachable_code)] on by default
kablam!    --> src/assembler/parser.rs:327:21
kablam!     |
kablam! 327 |                     let next = *peeker.peek().unwrap();
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `next`, #[warn(unused_variables)] on by default
kablam!    --> src/assembler/parser.rs:327:25
kablam!     |
kablam! 327 |                     let next = *peeker.peek().unwrap();
kablam!     |                         ^^^^
kablam! 
kablam! warning: unused variable: `addressing_mode`, #[warn(unused_variables)] on by default
kablam!    --> src/assembler/parser.rs:334:21
kablam!     |
kablam! 334 |                 let addressing_mode = AddressingMode::Indirect;
kablam!     |                     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `addressing_mode`, #[warn(unused_variables)] on by default
kablam!    --> src/assembler/parser.rs:406:29
kablam!     |
kablam! 406 |                         let addressing_mode = AddressingMode::IndirectY;
kablam!     |                             ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unreachable statement, #[warn(unreachable_code)] on by default
kablam!    --> src/assembler/parser.rs:490:9
kablam!     |
kablam! 490 |         unreachable!();
kablam!     |         ^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/assembler/parser.rs:528:17
kablam!     |
kablam! 528 |             let mut next = peeker.next().unwrap();
kablam!     |                 ^^^^^^^^
kablam! 
kablam! warning: unused import: `ImmediateBase`, #[warn(unused_imports)] on by default
kablam!    --> src/assembler/parser.rs:610:30
kablam!     |
kablam! 610 |     use ::assembler::token::{ImmediateBase, LexerToken, ParserToken};
kablam!     |                              ^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `AddressingMode`, #[warn(unused_imports)] on by default
kablam!  --> src/cpu/cpu.rs:3:17
kablam!   |
kablam! 3 | use ::opcodes::{AddressingMode, OpCode};
kablam!   |                 ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/cpu/cpu.rs:253:9
kablam!     |
kablam! 253 |         self.stack.push_u16(mem, self.registers.PC);
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/cpu/cpu.rs:254:9
kablam!     |
kablam! 254 |         self.stack.push(mem, self.flags.to_u8());
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/cpu/cpu.rs:276:9
kablam!     |
kablam! 276 |         self.stack.push_u16(mem, self.registers.PC);
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/cpu/cpu.rs:277:9
kablam!     |
kablam! 277 |         self.stack.push(mem, self.flags.to_u8());
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/cpu/cpu.rs:532:9
kablam!     |
kablam! 532 |         self.stack.push_u16(mem, self.registers.PC);
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> src/cpu/stack.rs:85:9
kablam!    |
kablam! 85 |         stack.push(&mut stack_area, 55);
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> src/cpu/stack.rs:95:9
kablam!    |
kablam! 95 |         stack.push(&mut stack_area, 55);
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/cpu/stack.rs:106:9
kablam!     |
kablam! 106 |         stack.push(&mut stack_area, 5);
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/cpu/stack.rs:107:9
kablam!     |
kablam! 107 |         stack.push(&mut stack_area, 10);
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/cpu/stack.rs:108:9
kablam!     |
kablam! 108 |         stack.push(&mut stack_area, 15);
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/cpu/stack.rs:109:9
kablam!     |
kablam! 109 |         stack.push(&mut stack_area, 20);
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/cpu/stack.rs:138:13
kablam!     |
kablam! 138 |             stack.push(&mut stack_area, 5);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/cpu/stack.rs:151:9
kablam!     |
kablam! 151 |         stack.push_u16(&mut stack_area, 0x4400);
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/cpu/stack.rs:162:9
kablam!     |
kablam! 162 |         stack.push_u16(&mut stack_area, 0x4400);
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: static variable `OpCodes` should have an upper case name such as `OP_CODES`, #[warn(non_upper_case_globals)] on by default
kablam!     --> src/opcodes.rs:53:1
kablam!      |
kablam! 53   | static OpCodes: [OpCode; 151] = [OpCode {
kablam!      | ^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 7.35 secs
boom! running `docker rm -f 732597f3d438cf06e776c49d07bdab6805424d57b86a2336762ea3bc23e3261a`
blam! 732597f3d438cf06e776c49d07bdab6805424d57b86a2336762ea3bc23e3261a
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 85f89244002c6225df27784938d2e002aa25d698310a9e7dd9cbb10f27550a35
boom! running `docker start -a 85f89244002c6225df27784938d2e002aa25d698310a9e7dd9cbb10f27550a35`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/assembly-cd9efb26aaa315e1
blam! 
blam! running 3 tests
blam! test INTEGRATION_ASSEMBLY_can_assemble_disassemble_basic_opcodes ... ok
blam! test INTEGRATION_ASSEMBLY_can_assemble_disassemble_random_memory_segments ... ok
blam! test INTEGRATION_ASSEMBLY_can_assemble_disassemble_clearmem_implementation ... ok
blam! 
blam! test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/cpu-fb401bbb5685abac
blam! 
blam! running 52 tests
blam! test tests::cpu::adc_can_add_basic_numbers_set_carry_and_wrap_around ... ok
blam! test tests::cpu::adc_can_add_basic_numbers ... ok
blam! test tests::cpu::adc_can_add_numbers_in_binary_coded_decimal_and_set_carry ... ok
blam! test tests::cpu::adc_can_disable_decimal_flag ... ok
blam! test tests::cpu::adc_can_add_numbers_in_binary_coded_decimal ... ok
blam! test tests::cpu::adc_can_set_decimal_flag ... ok
blam! test tests::cpu::asl_can_shift_bits_left ... ok
blam! test tests::cpu::and_can_apply_logical_and_operation ... ok
blam! test tests::cpu::and_can_apply_logical_and_operation_and_set_sign_flag ... ok
blam! test tests::cpu::asl_shifts_last_bit_into_carry ... ok
blam! test tests::cpu::bcc_can_jump_backward ... ok
blam! test tests::cpu::bcs_can_jump_forward ... ok
blam! test tests::cpu::bcc_can_jump_forward ... ok
blam! test tests::cpu::beq_can_jump_forward ... ok
blam! test tests::cpu::bit_can_set_overflow_flag ... ok
blam! test tests::cpu::bit_can_set_flags_and_preserve_registers ... ok
blam! test tests::cpu::bne_does_not_jump_on_zero ... ok
blam! test tests::cpu::bmi_can_jump_forward ... ok
blam! test tests::cpu::bne_jumps_on_non_zero ... ok
blam! test tests::cpu::bpl_does_jump_on_sign_not_set ... ok
blam! test tests::cpu::bpl_does_not_jump_on_sign_set ... ok
blam! test tests::cpu::bvc_does_jump_on_overflow_clear ... ok
blam! test tests::cpu::bvs_does_jump_on_overflow_set ... ok
blam! test tests::cpu::bvc_does_not_jump_on_overflow_set ... ok
blam! test tests::cpu::bvs_does_not_jump_on_overflow_clear ... ok
blam! test tests::cpu::can_get_operand_from_opcode ... ok
blam! test tests::cpu::can_instantiate_cpu ... ok
blam! test tests::cpu::can_load_code_segment_at_specific_address ... ok
blam! test tests::cpu::can_load_code_segment_at_default_address ... ok
blam! test tests::cpu::cld_clears_decimal_flag ... ok
blam! test tests::cpu::clc_clears_carry_flag ... ok
blam! test tests::cpu::cmp_clears_carry_flag ... ok
blam! test tests::cpu::clv_clears_overflow_flag ... ok
blam! test tests::cpu::cli_clears_interrupt_flag ... ok
blam! test tests::cpu::cmp_sets_carry_flag ... ok
blam! test tests::cpu::cmp_sets_zero_flag ... ok
blam! test tests::cpu::cpx_sets_carry_flag ... ok
blam! test tests::cpu::cpx_clears_carry_flag ... ok
blam! test tests::cpu::cpy_clears_carry_flag ... ok
blam! test tests::cpu::dex_decrements ... ok
blam! test tests::cpu::dec_decrements ... ok
blam! test tests::cpu::cpy_sets_carry_flag ... ok
blam! test tests::cpu::dey_decrements ... ok
blam! test tests::cpu::eor_xors ... ok
blam! test tests::cpu::errors_on_unknown_opcode ... ok
blam! test tests::cpu::inc_increments ... ok
blam! test tests::cpu::errors_when_code_segment_extends_past_memory_bounds ... ok
blam! test tests::cpu::inx_increments_x ... ok
blam! test tests::cpu::can_load_code_segment_into_memory ... ok
blam! test tests::cpu::iny_increments_y ... ok
blam! test tests::cpu::jmp_jumps ... ok
blam! test tests::cpu::sta_can_store_bytes_in_memory ... ok
blam! 
blam! test result: ok. 52 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/cpu_integration-f39c77daaf554b1e
blam! 
blam! running 38 tests
blam! test INTEGRATION_CPU_bmi_branches_on_sign_bit_set ... ok
blam! test INTEGRATION_CPU_bpl_does_not_branch_on_sign_set ... ok
blam! test INTEGRATION_CPU_bpl_branches_on_sign_clear ... ok
blam! test INTEGRATION_CPU_bne_branches_on_zero_clear ... ok
blam! test INTEGRATION_CPU_can_add_binary_coded_decimal_numbers_in_accumulator ... ok
blam! test INTEGRATION_CPU_brk_rti ... ok
blam! test INTEGRATION_CPU_can_add_mixed_mode_numbers_in_accumulator ... ok
blam! test INTEGRATION_CPU_can_add_basic_numbers_in_accumulator ... ok
blam! test INTEGRATION_CPU_can_branch_on_beq ... ok
blam! test INTEGRATION_CPU_can_branch_on_bcs ... ok
blam! test INTEGRATION_CPU_can_branch_on_carry_flag ... ok
blam! test INTEGRATION_CPU_can_branch_on_carry_flag_to_correct_offset ... ok
blam! test INTEGRATION_CPU_can_load_byte_into_memory_and_logical_AND_it_with_A_register_using_a_variable ... ok
blam! test INTEGRATION_CPU_can_interrupt_when_not_disabled ... ok
blam! test INTEGRATION_CPU_can_force_interrupt_code ... ok
blam! test INTEGRATION_CPU_can_loop_on_bcc ... ok
blam! test INTEGRATION_CPU_can_load_code_segments_at_offsets ... ok
blam! test INTEGRATION_CPU_can_load_byte_into_memory_and_logical_AND_it_with_A_register ... ok
blam! test INTEGRATION_CPU_can_store_bytes_in_memory ... ok
blam! test INTEGRATION_CPU_can_overwrite_own_memory ... ok
blam! test INTEGRATION_CPU_cmp_does_branch_on_accumulator_greater_than_memory_bcs ... ok
blam! test INTEGRATION_CPU_cant_interrupt_when_disabled ... ok
blam! test INTEGRATION_CPU_dec_decrements ... ok
blam! test INTEGRATION_CPU_dex_decrements ... ok
blam! test INTEGRATION_CPU_cmp_does_branch_on_accumulator_less_than_equal_to_bcc ... ok
blam! test INTEGRATION_CPU_does_not_branch_on_clear_carry_flag ... ok
blam! test INTEGRATION_CPU_does_not_branch_on_beq ... ok
blam! test INTEGRATION_CPU_cmp_does_branch_on_accumulator_less_than_memory_bcc ... ok
blam! test INTEGRATION_CPU_lsr_can_halve_a_number ... ok
blam! test INTEGRATION_CPU_jsr_rts_combination_works ... ok
blam! test INTEGRATION_CPU_preserves_flags_on_bit ... ok
blam! test INTEGRATION_CPU_pha_pla ... ok
blam! test INTEGRATION_CPU_jsr_rts_combination_works_when_code_segment_loaded_at_weird_address ... ok
blam! test INTEGRATION_CPU_rol ... ok
blam! test INTEGRATION_CPU_ora_ors_against_accumulator ... ok
blam! test INTEGRATION_CPU_ror ... ok
blam! test INTEGRATION_CPU_sbc ... ok
blam! test INTEGRATION_CPU_sbc_with_decimal_mode ... ok
blam! 
blam! test result: ok. 38 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/rs6502-c55d048e60ca6506
blam! 
blam! running 63 tests
blam! test assembler::assembler::tests::can_assemble_basic_code ... ok
blam! test assembler::assembler::tests::can_assign_code_segments_to_different_memory_addresses ... ok
blam! test assembler::assembler::tests::can_assemble_clearmem_implementation ... ok
blam! test assembler::assembler::tests::can_dump_raw_bytes ... ok
blam! test assembler::assembler::tests::can_assemble_clearmem_implementation_that_jumps_forward_and_is_lowercase ... ok
blam! test assembler::assembler::tests::can_dump_single_raw_byte ... ok
blam! test assembler::assembler::tests::can_assemble_clearmem_implementation_that_jumps_forward ... ok
blam! test assembler::assembler::tests::can_jump_between_code_segments ... ok
blam! test assembler::assembler::tests::can_jump_to_label_behind ... ok
blam! test assembler::assembler::tests::can_dump_bytes_with_other_code ... ok
blam! test assembler::assembler::tests::can_jump_to_label_ahead ... ok
blam! test assembler::assembler::tests::can_use_variables ... ok
blam! test assembler::assembler::tests::can_jump_to_label_with_colon_behind ... ok
blam! test assembler::lexer::tests::can_handle_directives ... ok
blam! test assembler::assembler::tests::can_use_variables_for_indirect_addressing ... ok
blam! test assembler::lexer::tests::can_lex_absolute_addressing ... ok
blam! test assembler::lexer::tests::can_lex_base_ten_variable_assignment ... ok
blam! test assembler::lexer::tests::can_lex_basic_opcode_and_addressing_mode ... ok
blam! test assembler::assembler::tests::can_use_variables_assigned_to_variables ... ok
blam! test assembler::lexer::tests::can_lex_indirect_x_addressing ... ok
blam! test assembler::lexer::tests::can_handle_lots_of_whitespace ... ok
blam! test assembler::lexer::tests::can_lex_indirect_y_addressing ... ok
blam! test assembler::lexer::tests::can_lex_variable_assignment ... ok
blam! test assembler::lexer::tests::errors_on_unexpected_token_square_bracket ... ok
blam! test assembler::lexer::tests::errors_on_unexpected_token ... ok
blam! test assembler::parser::tests::can_parse_directives ... ok
blam! test assembler::parser::tests::can_handle_correct_zero_page_y_usage ... ok
blam! test assembler::parser::tests::can_parse_implied_stack_instructions ... ok
blam! test assembler::parser::tests::can_parse_double_labels_on_one_line ... ok
blam! test assembler::parser::tests::can_parse_indirect_jump_instruction ... ok
blam! test assembler::parser::tests::can_parse_indirect_x_addressing ... ok
blam! test assembler::parser::tests::can_parse_labels_via_colon_terminator ... ok
blam! test assembler::parser::tests::can_parse_opcode_with_implied_addressing_mode ... ok
blam! test assembler::parser::tests::can_parse_opcode_with_correct_absolute_x_addressing_mode ... ok
blam! test assembler::parser::tests::can_parse_opcodes_after_labels_on_one_line ... ok
blam! test assembler::parser::tests::can_parse_labels_via_lonely_label ... ok
blam! test assembler::parser::tests::errors_on_incorrect_indirect_x_addressing ... ok
blam! test assembler::parser::tests::errors_on_eight_bit_indirect_jump_instruction ... ok
blam! test assembler::parser::tests::errors_on_incorrect_opcode_addressing_mode_with_variable ... ok
blam! test cpu::flags::tests::can_convert_to_and_from ... ok
blam! test assembler::parser::tests::errors_on_indirect_addressing_early_eol ... ok
blam! test assembler::parser::tests::errors_on_incorrect_zero_page_y_usage ... ok
blam! test cpu::flags::tests::can_convert_to_u8 ... ok
blam! test cpu::flags::tests::default_is_four ... ok
blam! test cpu::stack::tests::can_not_pop_empty_stack ... ok
blam! test cpu::stack::tests::can_not_push_to_full_stack ... ok
blam! test cpu::stack::tests::can_push ... ok
blam! test cpu::stack::tests::can_push_u16 ... ok
blam! test cpu::stack::tests::can_push_then_pop_multiple ... ok
blam! test cpu::stack::tests::can_push_then_pop ... ok
blam! test cpu::stack::tests::can_push_then_pop_u16 ... ok
blam! test disassembler::tests::can_disassemble_absolute_indexed_addressing ... ok
blam! test disassembler::tests::can_disassemble_absolute_addressing ... ok
blam! test disassembler::tests::can_disassemble_basic_instructions ... ok
blam! test disassembler::tests::can_disassemble_indirect_indexed_addressing ... ok
blam! test disassembler::tests::can_disassemble_indirect_jmp ... ok
blam! test disassembler::tests::can_disassemble_zero_page_addressing ... ok
blam! test disassembler::tests::can_disassemble_zero_page_indexed_addressing ... ok
blam! test disassembler::tests::can_disassemble_relative_addressing ... ok
blam! test disassembler::tests::can_disassemble_without_byte_offsets ... ok
blam! test disassembler::tests::dumps_unknown_bytes ... ok
blam! test disassembler::tests::test_memset_implementation ... ok
blam! test disassembler::tests::move_memory_down_test ... ok
blam! 
blam! test result: ok. 63 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests rs6502
blam! 
blam! running 5 tests
blam! test disassembler::Disassembler::disassemble_with_addresses_0 ... ok
blam! test disassembler::Disassembler::with_code_only_0 ... ok
blam! test disassembler::Disassembler::clean_asm_0 ... ok
blam! test disassembler::Disassembler::new_0 ... ok
blam! test disassembler::Disassembler::with_verbose_output_0 ... ok
blam! 
blam! test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 85f89244002c6225df27784938d2e002aa25d698310a9e7dd9cbb10f27550a35`
blam! 85f89244002c6225df27784938d2e002aa25d698310a9e7dd9cbb10f27550a35
