boom! testing roots-0.0.2 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 1649f38a5ed1a1540e826765a01b72546c879face9ebea591dcfa4e749883541
boom! running `docker start -a 1649f38a5ed1a1540e826765a01b72546c879face9ebea591dcfa4e749883541`
kablam!    Compiling roots v0.0.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.27 secs
boom! running `docker rm -f 1649f38a5ed1a1540e826765a01b72546c879face9ebea591dcfa4e749883541`
blam! 1649f38a5ed1a1540e826765a01b72546c879face9ebea591dcfa4e749883541
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 5adeed2c9d38d8683ce3f0056b118715bee2c6e8fa062a0d3b16c58ccd214322
boom! running `docker start -a 5adeed2c9d38d8683ce3f0056b118715bee2c6e8fa062a0d3b16c58ccd214322`
kablam!    Compiling roots v0.0.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.57 secs
boom! running `docker rm -f 5adeed2c9d38d8683ce3f0056b118715bee2c6e8fa062a0d3b16c58ccd214322`
blam! 5adeed2c9d38d8683ce3f0056b118715bee2c6e8fa062a0d3b16c58ccd214322
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 50b40ee9ab6390176eb51bf80cb2973eeaa08aa02e55a62144fe159b241c1871
boom! running `docker start -a 50b40ee9ab6390176eb51bf80cb2973eeaa08aa02e55a62144fe159b241c1871`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/roots-49af75820991c9bc
blam! 
blam! running 14 tests
blam! test analytical::biquadratic::test_find_roots_biquadratic ... ok
blam! test analytical::linear::test_find_roots_linear ... ok
blam! test analytical::cubic::test_find_roots_cubic ... ok
blam! test analytical::quadratic::test_find_roots_quadratic ... ok
blam! test analytical::quartic_depressed::test_find_roots_quartic_depressed ... ok
blam! test analytical::quartic::test_find_roots_quartic ... ok
blam! test analytical::cubic_depressed::test_find_roots_cubic_depressed ... ok
blam! test analytical::roots::test_roots ... ok
blam! test float::test_float_cbrt ... ok
blam! test analytical::cubic_normalized::test_find_roots_cubic_normalized ... ok
blam! test numerical::brent::test_find_root_brent ... ok
blam! test numerical::newton_raphson::test_find_root_newton_raphson ... ok
blam! test numerical::regula_falsi::test_find_root_regula_falsi ... ok
blam! test numerical::secant::test_find_root_secant ... ok
blam! 
blam! test result: ok. 14 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests roots
blam! 
blam! running 12 tests
blam! warning: unused variable: `one_root`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let one_root = find_roots_cubic_depressed(0f64, 0f64);
blam!   |     ^^^^^^^^
blam! 
blam! warning: unused variable: `three_roots`, #[warn(unused_variables)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let three_roots = find_roots_cubic_depressed(-1f32, 0f32);
blam!   |     ^^^^^^^^^^^
blam! 
blam! warning: unused variable: `one_root`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let one_root = find_roots_cubic_normalized(0f64, 0f64, 0f64);
blam!   |     ^^^^^^^^
blam! 
blam! warning: unused variable: `three_roots`, #[warn(unused_variables)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let three_roots = find_roots_cubic_normalized(0f32, -1f32, 0f32);
blam!   |     ^^^^^^^^^^^
blam! 
blam! test analytical::cubic_depressed::find_roots_cubic_depressed_0 ... ok
blam! warning: unused variable: `no_roots`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let no_roots = find_roots_biquadratic(1f32, 0f32, 1f32);
blam!   |     ^^^^^^^^
blam! 
blam! warning: unused variable: `one_root`, #[warn(unused_variables)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let one_root = find_roots_biquadratic(1f64, 0f64, 0f64);
blam!   |     ^^^^^^^^
blam! 
blam! warning: unused variable: `two_roots`, #[warn(unused_variables)] on by default
blam!   --> <anon>:11:5
blam!    |
blam! 11 | let two_roots = find_roots_biquadratic(1f32, 0f32, -1f32);
blam!    |     ^^^^^^^^^
blam! 
blam! warning: unused import: `roots::Roots`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:5
blam!   |
blam! 3 | use roots::Roots;
blam!   |     ^^^^^^^^^^^^
blam! 
blam! warning: unused variable: `no_roots`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let no_roots = find_roots_cubic(0f32, 1f32, 0f32, 1f32);
blam!   |     ^^^^^^^^
blam! 
blam! warning: unused variable: `one_root`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:5
blam!   |
blam! 9 | let one_root = find_roots_cubic(1f64, 0f64, 0f64, 0f64);
blam!   |     ^^^^^^^^
blam! 
blam! warning: unused variable: `three_roots`, #[warn(unused_variables)] on by default
blam!   --> <anon>:12:5
blam!    |
blam! 12 | let three_roots = find_roots_cubic(1f32, 0f32, -1f32, 0f32);
blam!    |     ^^^^^^^^^^^
blam! 
blam! test analytical::cubic_normalized::find_roots_cubic_normalized_0 ... ok
blam! test analytical::biquadratic::find_roots_biquadratic_0 ... ok
blam! test analytical::cubic::find_roots_cubic_0 ... ok
blam! warning: unused import: `roots::Roots`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:5
blam!   |
blam! 3 | use roots::Roots;
blam!   |     ^^^^^^^^^^^^
blam! 
blam! warning: unused variable: `no_roots`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let no_roots = find_roots_quadratic(1f32, 0f32, 1f32);
blam!   |     ^^^^^^^^
blam! 
blam! warning: unused variable: `one_root`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:5
blam!   |
blam! 9 | let one_root = find_roots_quadratic(1f64, 0f64, 0f64);
blam!   |     ^^^^^^^^
blam! 
blam! warning: unused variable: `two_roots`, #[warn(unused_variables)] on by default
blam!   --> <anon>:12:5
blam!    |
blam! 12 | let two_roots = find_roots_quadratic(1f32, 0f32, -1f32);
blam!    |     ^^^^^^^^^
blam! 
blam! test analytical::quadratic::find_roots_quadratic_0 ... ok
blam! test analytical::linear::find_roots_linear_0 ... ok
blam! warning: unused variable: `one_root`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let one_root = find_roots_quartic_depressed(1f64, 0f64, 0f64);
blam!   |     ^^^^^^^^
blam! 
blam! warning: unused variable: `two_roots`, #[warn(unused_variables)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let two_roots = find_roots_quartic_depressed(1f32, 0f32, -1f32);
blam!   |     ^^^^^^^^^
blam! 
blam! warning: unused variable: `root1`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:5
blam!   |
blam! 9 | let root1 = find_root_brent(10f64, 0f64, &f, &convergency);
blam!   |     ^^^^^
blam! 
blam! warning: unused variable: `root2`, #[warn(unused_variables)] on by default
blam!   --> <anon>:12:5
blam!    |
blam! 12 | let root2 = find_root_brent(-10f64, 0f64, &f, &convergency);
blam!    |     ^^^^^
blam! 
blam! test numerical::brent::find_root_brent_0 ... ok
blam! test analytical::quartic_depressed::find_roots_quartic_depressed_0 ... ok
blam! warning: unused variable: `one_root`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let one_root = find_roots_quartic(1f64, 0f64, 0f64, 0f64, 0f64);
blam!   |     ^^^^^^^^
blam! 
blam! warning: unused variable: `two_roots`, #[warn(unused_variables)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let two_roots = find_roots_quartic(1f32, 0f32, 0f32, 0f32, -1f32);
blam!   |     ^^^^^^^^^
blam! 
blam! test analytical::quartic::find_roots_quartic_0 ... ok
blam! warning: unused variable: `root1`, #[warn(unused_variables)] on by default
blam!   --> <anon>:10:5
blam!    |
blam! 10 | let root1 = find_root_newton_raphson(10f64, &f, &d, &convergency);
blam!    |     ^^^^^
blam! 
blam! warning: unused variable: `root2`, #[warn(unused_variables)] on by default
blam!   --> <anon>:13:5
blam!    |
blam! 13 | let root2 = find_root_newton_raphson(-10f64, &f, &d, &convergency);
blam!    |     ^^^^^
blam! 
blam! test numerical::newton_raphson::find_root_newton_raphson_0 ... ok
blam! warning: unused variable: `root1`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:5
blam!   |
blam! 9 | let root1 = find_root_regula_falsi(10f64, 0f64, &f, &convergency);
blam!   |     ^^^^^
blam! 
blam! warning: unused variable: `root2`, #[warn(unused_variables)] on by default
blam!   --> <anon>:12:5
blam!    |
blam! 12 | let root2 = find_root_regula_falsi(-10f64, 0f64, &f, &convergency);
blam!    |     ^^^^^
blam! 
blam! test numerical::regula_falsi::find_root_regula_falsi_0 ... ok
blam! warning: unused variable: `root1`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:5
blam!   |
blam! 9 | let root1 = find_root_secant(10f64, 0f64, &f, &convergency);
blam!   |     ^^^^^
blam! 
blam! warning: unused variable: `root2`, #[warn(unused_variables)] on by default
blam!   --> <anon>:12:5
blam!    |
blam! 12 | let root2 = find_root_secant(-10f64, 0f64, &f, &convergency);
blam!    |     ^^^^^
blam! 
blam! test numerical::secant::find_root_secant_0 ... ok
blam! 
blam! test result: ok. 12 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 50b40ee9ab6390176eb51bf80cb2973eeaa08aa02e55a62144fe159b241c1871`
blam! 50b40ee9ab6390176eb51bf80cb2973eeaa08aa02e55a62144fe159b241c1871
