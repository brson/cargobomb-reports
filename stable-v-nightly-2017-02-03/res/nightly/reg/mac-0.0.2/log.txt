boom! testing mac-0.0.2 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 20bd440cd8fbbb7015e88792ca61ef2a86668168a4119c03928e7cdcc69e5738
boom! running `docker start -a 20bd440cd8fbbb7015e88792ca61ef2a86668168a4119c03928e7cdcc69e5738`
kablam!    Compiling mac v0.0.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.26 secs
boom! running `docker rm -f 20bd440cd8fbbb7015e88792ca61ef2a86668168a4119c03928e7cdcc69e5738`
blam! 20bd440cd8fbbb7015e88792ca61ef2a86668168a4119c03928e7cdcc69e5738
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! d7254f89eed3b529d135e385d65b791bd95e2d53971d8e2b8b70261b1e520401
boom! running `docker start -a d7254f89eed3b529d135e385d65b791bd95e2d53971d8e2b8b70261b1e520401`
kablam!    Compiling mac v0.0.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.13 secs
boom! running `docker rm -f d7254f89eed3b529d135e385d65b791bd95e2d53971d8e2b8b70261b1e520401`
blam! d7254f89eed3b529d135e385d65b791bd95e2d53971d8e2b8b70261b1e520401
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 027dd4ad78cf903c445daa8552a8ed206cd027d7708eb830d6cece3baf440b7c
boom! running `docker start -a 027dd4ad78cf903c445daa8552a8ed206cd027d7708eb830d6cece3baf440b7c`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/mac-32024b294f229b93
blam! 
blam! running 1 test
blam! test matches::test_matches ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests mac
blam! 
blam! running 7 tests
blam! test do_while_0 ... ok
blam! warning: value assigned to `ran` is never read, #[warn(unused_assignments)] on by default
blam!  --> <anon>:3:5
blam!   |
blam! 3 | let mut ran = false;
blam!   |     ^^^^^^^
blam! 
blam! test do_while_1 ... ok
blam! error: no method named `is_owned` found for type `std::borrow::Cow<'_, str>` in the current scope
blam!  --> <anon>:6:19
blam!   |
blam! 6 | assert!(formatted.is_owned());
blam!   |                   ^^^^^^^^
blam! 
blam! error: no method named `is_borrowed` found for type `std::borrow::Cow<'_, str>` in the current scope
blam!   --> <anon>:14:23
blam!    |
blam! 14 | assert!(not_formatted.is_borrowed())
blam!    |                       ^^^^^^^^^^^
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'rustc' panicked at 'Box<Any>', /buildslave/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/librustc/session/mod.rs:203
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! test format_if_0 ... FAILED
blam! test addrs_of_0 ... ok
blam! test test_eq_0 ... ok
blam! warning: function is never used: `take_pair`, #[warn(dead_code)] on by default
blam!  --> <anon>:2:1
blam!   |
blam! 2 |   fn take_pair<I:Iterator>(iter: &mut I) -> Option<(<I as Iterator>::Item, <I as Iterator>::Item)> {
blam!   |  _^ starting here...
blam! 3 | |    let first = unwrap_or_return!(iter.next(), None);
blam! 4 | |    Some((first, unwrap_or_return!(iter.next(), None)))
blam! 5 | | }
blam!   | |_^ ...ending here
blam! 
blam! test unwrap_or_return_0 ... ok
blam! test matches_0 ... ok
blam! 
blam! failures:
blam! 
blam! failures:
blam!     format_if_0
blam! 
blam! test result: FAILED. 6 passed; 1 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f 027dd4ad78cf903c445daa8552a8ed206cd027d7708eb830d6cece3baf440b7c`
blam! 027dd4ad78cf903c445daa8552a8ed206cd027d7708eb830d6cece3baf440b7c
