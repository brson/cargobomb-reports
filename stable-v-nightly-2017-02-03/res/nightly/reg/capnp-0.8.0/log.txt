boom! testing capnp-0.8.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 8fde6f84eda5b31c022c65744c765d73de3ba0e86a4b2d7f1775be8b585f4425
boom! running `docker start -a 8fde6f84eda5b31c022c65744c765d73de3ba0e86a4b2d7f1775be8b585f4425`
kablam!    Compiling capnp v0.8.0 (file:///source)
kablam! warning: type alias is never used: `SegmentId`, #[warn(dead_code)] on by default
kablam!   --> src/message.rs:87:1
kablam!    |
kablam! 87 | type SegmentId = u32;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 4.37 secs
boom! running `docker rm -f 8fde6f84eda5b31c022c65744c765d73de3ba0e86a4b2d7f1775be8b585f4425`
blam! 8fde6f84eda5b31c022c65744c765d73de3ba0e86a4b2d7f1775be8b585f4425
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! d15df3efa9df1031cbc16016a52f270f36d50547af52cd027aaa8103c233b824
boom! running `docker start -a d15df3efa9df1031cbc16016a52f270f36d50547af52cd027aaa8103c233b824`
kablam!    Compiling capnp v0.8.0 (file:///source)
kablam! warning: type alias is never used: `SegmentId`, #[warn(dead_code)] on by default
kablam!   --> src/message.rs:87:1
kablam!    |
kablam! 87 | type SegmentId = u32;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 8.10 secs
boom! running `docker rm -f d15df3efa9df1031cbc16016a52f270f36d50547af52cd027aaa8103c233b824`
blam! d15df3efa9df1031cbc16016a52f270f36d50547af52cd027aaa8103c233b824
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! ca5c5a8c361f33366afcfeda6acf9f68607be210d164e51b827d2f43fc266120
boom! running `docker start -a ca5c5a8c361f33366afcfeda6acf9f68607be210d164e51b827d2f43fc266120`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/capnp-e90e7046602c2c96
blam! 
blam! running 13 tests
blam! test private::layout_test::bool_list ... ok
blam! test private::layout_test::simple_raw_data_struct ... ok
blam! test serialize::test::test_read_invalid_segment_table ... ok
blam! test serialize::test::test_write_segment_table ... ok
blam! test serialize::test::test_read_segment_table ... ok
blam! test serialize_packed::tests::did_not_end_cleanly_on_a_segment_boundary ... ok
blam! test serialize_packed::tests::fuzz_unpack ... ok
blam! test serialize_packed::tests::packed_segment_table ... ok
blam! test serialize_packed::tests::premature_end_of_packed_input ... ok
blam! test serialize_packed::tests::simple_packing ... ok
blam! test serialize::test::check_round_trip ... ok
blam! test serialize::test::check_round_trip_slice_segments ... ok
blam! test serialize_packed::tests::check_round_trip ... ok
blam! 
blam! test result: ok. 13 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests capnp
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f ca5c5a8c361f33366afcfeda6acf9f68607be210d164e51b827d2f43fc266120`
blam! ca5c5a8c361f33366afcfeda6acf9f68607be210d164e51b827d2f43fc266120
