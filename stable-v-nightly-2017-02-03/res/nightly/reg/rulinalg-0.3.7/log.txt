boom! testing rulinalg-0.3.7 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 854de8c37391282c9ff91bf8125b3038ff0587359f0fae20e744e89aef97aa26
boom! running `docker start -a 854de8c37391282c9ff91bf8125b3038ff0587359f0fae20e744e89aef97aa26`
kablam!    Compiling rulinalg v0.3.7 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.34 secs
boom! running `docker rm -f 854de8c37391282c9ff91bf8125b3038ff0587359f0fae20e744e89aef97aa26`
blam! 854de8c37391282c9ff91bf8125b3038ff0587359f0fae20e744e89aef97aa26
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 6106c265ecb7b839047b750e9508f07b4fd6e799e9b8794c53f3a68bc90dc93b
boom! running `docker start -a 6106c265ecb7b839047b750e9508f07b4fd6e799e9b8794c53f3a68bc90dc93b`
kablam!    Compiling rulinalg v0.3.7 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 29.58 secs
boom! running `docker rm -f 6106c265ecb7b839047b750e9508f07b4fd6e799e9b8794c53f3a68bc90dc93b`
blam! 6106c265ecb7b839047b750e9508f07b4fd6e799e9b8794c53f3a68bc90dc93b
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 8fff67b95743075f986ce3165a350910a59844f08028fe2b26043d0ff6a17029
boom! running `docker start -a 8fff67b95743075f986ce3165a350910a59844f08028fe2b26043d0ff6a17029`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/lib-49b1fb050f5de825
blam! 
blam! running 6 tests
blam! test mat::cholesky ... ok
blam! test mat::test_l_triangular_solve_errs ... ok
blam! test mat::test_solve ... ok
blam! test mat::test_u_triangular_solve_errs ... ok
blam! test mat::qr ... ok
blam! test mat::matrix_lup_decomp ... ok
blam! 
blam! test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/rulinalg-d3b2bc6d4c375b46
blam! 
blam! running 204 tests
blam! test macros::matrix::tests::matrix_macro ... ok
blam! test convert::tests::diag_offset_from_int ... ok
blam! test convert::tests::inner_product_as_matrix_multiplication ... ok
blam! test convert::tests::matrix_from_slice ... ok
blam! test macros::matrix::tests::matrix_macro_empty_mat ... ok
blam! test macros::matrix_eq::tests::absolute_comparator_floating_point ... ok
blam! test macros::matrix_eq::tests::absolute_comparator_integer ... ok
blam! test macros::matrix_eq::tests::elementwise_matrix_comparison_reports_correct_mismatches ... ok
blam! test macros::matrix_eq::tests::elementwise_vector_comparison_reports_correct_mismatches ... ok
blam! test macros::matrix_eq::tests::exact_comparator_floating_point ... ok
blam! test macros::matrix_eq::tests::matrix_eq_absolute_compare_self_for_floating_point ... ok
blam! test macros::matrix_eq::tests::exact_comparator_integer ... ok
blam! test macros::matrix_eq::tests::matrix_eq_default_compare_self_for_floating_point ... ok
blam! test macros::matrix_eq::tests::matrix_eq_default_compare_self_for_integer ... ok
blam! test macros::matrix_eq::tests::matrix_eq_absolute_compare_self_for_integer ... ok
blam! test macros::matrix_eq::tests::matrix_eq_absolute_mismatched_dimensions ... ok
blam! test macros::matrix_eq::tests::matrix_eq_absolute_mismatched_floating_point_elements ... ok
blam! test macros::matrix_eq::tests::matrix_eq_exact_compare_self_for_floating_point ... ok
blam! test macros::matrix_eq::tests::matrix_eq_float_compare_self_with_eps_and_ulp ... ok
blam! test macros::matrix_eq::tests::matrix_eq_float_compare_self_with_eps ... ok
blam! test macros::matrix_eq::tests::matrix_eq_float_compare_self ... ok
blam! test macros::matrix_eq::tests::matrix_eq_exact_compare_self_for_integer ... ok
blam! test macros::matrix_eq::tests::matrix_eq_float_compare_self_with_ulp ... ok
blam! test macros::matrix_eq::tests::matrix_eq_pass_by_ref ... ok
blam! test macros::matrix_eq::tests::matrix_eq_ulp_compare_self ... ok
blam! test macros::matrix_eq::tests::matrix_eq_ulp_nan ... ok
blam! test macros::matrix_eq::tests::matrix_eq_ulp_different_signs ... ok
blam! test macros::matrix_eq::tests::property_absolute_comparator_is_symmetric_f64 ... ok
blam! test macros::matrix_eq::tests::property_absolute_comparator_tolerance_is_not_strict_f64 ... ok
blam! test macros::matrix_eq::tests::property_elementwise_vector_comparison_incompatible_vectors_yields_dimension_mismatch ... ok
blam! test macros::matrix_eq::tests::property_elementwise_vector_comparison_vector_matches_self ... ok
blam! test macros::matrix_eq::tests::property_exact_comparator_is_symmetric_f64 ... ok
blam! test macros::matrix_eq::tests::property_exact_comparator_is_symmetric_i64 ... ok
blam! test macros::matrix_eq::tests::property_exact_comparator_matches_equality_operator_f64 ... ok
blam! test macros::matrix_eq::tests::property_exact_comparator_matches_equality_operator_i64 ... ok
blam! test macros::matrix_eq::tests::property_float_comparator_matches_abs_with_zero_ulp_tol ... ok
blam! test macros::matrix_eq::tests::property_float_comparator_matches_ulp_with_zero_eps_tol ... ok
blam! test macros::matrix_eq::tests::property_ulp_comparator_is_symmetric ... ok
blam! test macros::matrix_eq::tests::property_ulp_comparator_matches_ulp_trait ... ok
blam! test macros::matrix_eq::tests::ulp_comparator_f64 ... ok
blam! test macros::matrix_eq::tests::vector_eq_abs_compare_self_for_floating_point ... ok
blam! test macros::matrix_eq::tests::property_absolute_comparator_is_symmetric_i64 ... ok
blam! test macros::matrix_eq::tests::vector_eq_abs_mismatched_dimensions ... ok
blam! test macros::matrix_eq::tests::vector_eq_abs_mismatched_elements ... ok
blam! test macros::matrix_eq::tests::vector_eq_default_compare_self_for_floating_point ... ok
blam! test macros::matrix_eq::tests::vector_eq_default_compare_self_for_integer ... ok
blam! test macros::matrix_eq::tests::vector_eq_default_mismatched_dimensions ... ok
blam! test macros::matrix_eq::tests::vector_eq_default_mismatched_elements ... ok
blam! test macros::matrix_eq::tests::vector_eq_exact_compare_self_for_floating_point ... ok
blam! test macros::matrix_eq::tests::vector_eq_exact_compare_self_for_integer ... ok
blam! test macros::matrix_eq::tests::vector_eq_exact_mismatched_dimensions ... ok
blam! test macros::matrix_eq::tests::vector_eq_exact_mismatched_elements ... ok
blam! test macros::matrix_eq::tests::vector_eq_float_compare_self ... ok
blam! test macros::matrix_eq::tests::vector_eq_float_compare_self_with_eps ... ok
blam! test macros::matrix_eq::tests::vector_eq_float_compare_self_with_eps_and_ulp ... ok
blam! test macros::matrix_eq::tests::vector_eq_float_compare_self_with_ulp ... ok
blam! test macros::matrix_eq::tests::vector_eq_float_mismatched_dimensions ... ok
blam! test macros::matrix_eq::tests::vector_eq_float_mismatched_elements ... ok
blam! test macros::matrix_eq::tests::vector_eq_pass_by_ref ... ok
blam! test macros::matrix_eq::tests::vector_eq_ulp_compare_self ... ok
blam! test macros::matrix_eq::tests::vector_eq_ulp_mismatched_dimensions ... ok
blam! test macros::matrix_eq::tests::vector_eq_ulp_mismatched_elements ... ok
blam! test matrix::decomposition::bidiagonal::tests::test_bidiagonal_non_square ... ok
blam! test matrix::decomposition::bidiagonal::tests::test_bidiagonal_square ... ok
blam! test matrix::decomposition::cholesky::tests::test_non_square_cholesky ... ok
blam! test matrix::decomposition::eigen::tests::test_1_by_1_matrix_eigenvalues ... ok
blam! test matrix::decomposition::eigen::tests::test_2_by_2_matrix_complex_eigenvalues ... ok
blam! test matrix::decomposition::eigen::tests::test_2_by_2_matrix_eigendecomp ... ok
blam! test matrix::decomposition::eigen::tests::test_2_by_2_matrix_eigenvalues ... ok
blam! test matrix::decomposition::eigen::tests::test_2_by_2_matrix_zeros_eigenvalues ... ok
blam! test matrix::decomposition::eigen::tests::test_3_by_3_eigenvals ... ok
blam! test matrix::decomposition::eigen::tests::test_5_by_5_eigenvals ... ok
blam! test matrix::decomposition::eigen::tests::test_non_square_eigendecomp ... ok
blam! test matrix::decomposition::eigen::tests::test_non_square_eigenvalues ... ok
blam! test matrix::decomposition::hessenberg::tests::test_non_square_upper_hess_decomp ... ok
blam! test matrix::decomposition::hessenberg::tests::test_non_square_upper_hessenberg ... ok
blam! test matrix::decomposition::lu::tests::test_lup_decomp ... ok
blam! test matrix::decomposition::lu::tests::test_non_square_lup_decomp ... ok
blam! test matrix::decomposition::svd::tests::test_sort_svd ... ok
blam! test matrix::decomposition::svd::tests::test_svd_short_matrix ... ok
blam! test matrix::decomposition::svd::tests::test_svd_square_matrix ... ok
blam! test macros::matrix_eq::tests::vector_eq_abs_compare_self_for_integer ... ok
blam! test matrix::impl_ops::tests::add_slice ... ok
blam! test matrix::decomposition::svd::tests::test_svd_tall_matrix ... ok
blam! test matrix::impl_ops::tests::div_slice ... ok
blam! test matrix::impl_ops::tests::indexing_mat ... ok
blam! test matrix::impl_ops::tests::index_slice ... ok
blam! test matrix::impl_ops::tests::matrix_add ... ok
blam! test matrix::impl_ops::tests::matrix_div_assign ... ok
blam! test matrix::impl_ops::tests::matrix_add_assign ... ok
blam! test matrix::impl_ops::tests::matrix_f32_add ... ok
blam! test matrix::impl_ops::tests::matrix_f32_mul ... ok
blam! test matrix::impl_ops::tests::matrix_f32_sub ... ok
blam! test matrix::impl_ops::tests::matrix_f32_div ... ok
blam! test matrix::impl_ops::tests::matrix_sub ... ok
blam! test matrix::impl_ops::tests::matrix_sub_assign ... ok
blam! test matrix::impl_ops::tests::matrix_vec_mul ... ok
blam! test matrix::impl_ops::tests::matrix_mul_assign ... ok
blam! test matrix::impl_ops::tests::neg_slice ... ok
blam! test matrix::impl_ops::tests::slice_div_assign ... ok
blam! test matrix::impl_ops::tests::slice_add_assign ... ok
blam! test matrix::impl_ops::tests::slice_mul_assign ... ok
blam! test matrix::impl_ops::tests::sub_slice ... ok
blam! test matrix::iter::tests::into_iter_compile ... ok
blam! test matrix::impl_ops::tests::slice_sub_assign ... ok
blam! test matrix::iter::tests::into_iter_mut_compile ... ok
blam! test matrix::iter::tests::test_empty_matrix_diag ... ok
blam! test matrix::iter::tests::test_matrix_diag ... ok
blam! test matrix::iter::tests::test_matrix_diag_count ... ok
blam! test matrix::iter::tests::test_matrix_diag_last ... ok
blam! test matrix::iter::tests::test_matrix_diag_nth ... ok
blam! test matrix::iter::tests::test_matrix_diag_size_hint ... ok
blam! test matrix::iter::tests::test_matrix_rows ... ok
blam! test matrix::iter::tests::test_matrix_rows_count ... ok
blam! test matrix::iter::tests::test_matrix_rows_last ... ok
blam! test matrix::iter::tests::test_matrix_rows_nth ... ok
blam! test matrix::iter::tests::test_matrix_rows_size_hint ... ok
blam! test matrix::iter::tests::test_matrix_slice_diag ... ok
blam! test matrix::iter::tests::test_matrix_slice_diag_last ... ok
blam! test matrix::iter::tests::test_matrix_slice_diag_nth ... ok
blam! test matrix::iter::tests::test_matrix_slice_mut_rows ... ok
blam! test matrix::iter::tests::test_matrix_slice_rows ... ok
blam! test matrix::mat_mul::tests::matrix_mul_f32 ... ok
blam! test matrix::mat_mul::tests::matrix_mul_f64 ... ok
blam! test matrix::mat_mul::tests::matrix_mul_usize ... ok
blam! test matrix::mat_mul::tests::mul_slice_basic ... ok
blam! test matrix::mat_mul::tests::mul_slice_uneven_data ... ok
blam! test matrix::mat_mul::tests::mul_slice_uneven_data_usize ... ok
blam! test matrix::slice::tests::make_slice ... ok
blam! test matrix::slice::tests::make_slice_bad_dim ... ok
blam! test matrix::slice::tests::matrix_diag ... ok
blam! test matrix::slice::tests::reslice ... ok
blam! test matrix::slice::tests::slice_into_matrix ... ok
blam! test matrix::slice::tests::test_iter_diag_too_high ... ok
blam! test matrix::slice::tests::test_iter_diag_too_low ... ok
blam! test matrix::slice::tests::test_matrix_select ... ok
blam! test matrix::iter::tests::test_diag_offset_equivalence ... ok
blam! test matrix::slice::tests::test_matrix_select_rows ... ok
blam! test matrix::slice::tests::test_matrix_select_cols ... ok
blam! test matrix::slice::tests::test_matrix_swap_col_high_first ... ok
blam! test matrix::slice::tests::test_matrix_swap_col_high_second ... ok
blam! test matrix::slice::tests::test_matrix_swap_row_high_first ... ok
blam! test matrix::slice::tests::test_matrix_swap_row_high_second ... ok
blam! test matrix::slice::tests::test_matrix_swap_same_cols ... ok
blam! test matrix::slice::tests::test_matrix_swap_same_rows ... ok
blam! test matrix::slice::tests::test_split_matrix ... ok
blam! test matrix::slice::tests::test_split_matrix_mut ... ok
blam! test matrix::slice::tests::test_sub_slice ... ok
blam! test matrix::slice::tests::test_swap_rows ... ok
blam! test matrix::slice::tests::transpose_mat ... ok
blam! test matrix::tests::create_mat_diag ... ok
blam! test matrix::tests::create_mat_identity ... ok
blam! test matrix::tests::create_mat_zeros ... ok
blam! test matrix::tests::matrix_det ... ok
blam! test matrix::tests::matrix_diag ... ok
blam! test matrix::tests::matrix_solve ... ok
blam! test matrix::tests::test_display_formatting ... ok
blam! test matrix::tests::test_display_formatting_precision ... ok
blam! test matrix::tests::test_empty_mean ... ok
blam! test matrix::tests::test_equality ... ok
blam! test matrix::tests::test_invalid_variance ... ok
blam! test matrix::tests::test_matrix_index_mut ... ok
blam! test matrix::tests::test_matrix_select ... ok
blam! test matrix::tests::test_matrix_select_cols ... ok
blam! test matrix::tests::test_matrix_select_rows ... ok
blam! test matrix::tests::test_new_from_slice ... ok
blam! test matrix::tests::test_new_mat ... ok
blam! test matrix::tests::test_new_mat_bad_data ... ok
blam! test matrix::tests::test_new_mat_from_fn ... ok
blam! test matrix::slice::tests::test_matrix_swap_cols ... ok
blam! test ulp::tests::f32_double_nan ... ok
blam! test matrix::tests::test_single_row_display_formatting ... ok
blam! test ulp::tests::f64_double_nan ... ok
blam! test ulp::tests::plus_minus_zero_is_exact_match_f32 ... ok
blam! test ulp::tests::plus_minus_zero_is_exact_match_f64 ... ok
blam! test ulp::tests::property_exact_match_for_finite_f32_self_comparison ... ok
blam! test ulp::tests::property_f32_incompatible_signs_yield_corresponding_enum_value ... ok
blam! test ulp::tests::property_exact_match_for_finite_f64_self_comparison ... ok
blam! test ulp::tests::property_f64_incompatible_signs_yield_corresponding_enum_value ... ok
blam! test ulp::tests::property_f64_nan_gives_nan_enum_value ... ok
blam! test ulp::tests::property_f32_nan_gives_nan_enum_value ... ok
blam! test macros::matrix_eq::tests::property_elementwise_comparison_incompatible_matrices_yield_dimension_mismatch ... ok
blam! test vector::tests::create_vector_new ... ok
blam! test vector::tests::create_vector_new_from_slice ... ok
blam! test vector::tests::create_vector_zeros ... ok
blam! test vector::tests::test_display ... ok
blam! test vector::tests::test_equality ... ok
blam! test vector::tests::vector_add ... ok
blam! test vector::tests::vector_add_assign ... ok
blam! test vector::tests::vector_div_assign ... ok
blam! test vector::tests::vector_dot_product ... ok
blam! test vector::tests::vector_f32_add ... ok
blam! test vector::tests::vector_f32_div ... ok
blam! test vector::tests::vector_f32_mul ... ok
blam! test vector::tests::vector_f32_sub ... ok
blam! test vector::tests::vector_index_mut ... ok
blam! test vector::tests::vector_iteration ... ok
blam! test ulp::tests::property_recovers_ulp_diff_when_f64_constructed_from_i64 ... ok
blam! test vector::tests::vector_norm ... ok
blam! test ulp::tests::property_recovers_ulp_diff_when_f32_constructed_from_i32 ... ok
blam! test vector::tests::vector_sub_assign ... ok
blam! test vector::tests::vector_sub ... ok
blam! test vector::tests::vector_mul_assign ... ok
blam! test macros::matrix_eq::tests::property_elementwise_comparison_matrix_matches_self ... ok
blam! 
blam! test result: ok. 204 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests rulinalg
blam! 
blam! running 99 tests
blam! warning: unused variable: `a`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let a = Matrix::new(3, 2, vec![1.0, 2.0, 3.0, 4.0, 5.0, 6.0]);
blam!   |     ^
blam! 
blam! test _0 ... ok
blam! warning: unused variable: `mat`, #[warn(unused_variables)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let mat = matrix!(1.0, 2.0, 3.0;
blam!   |     ^^^
blam! 
blam! test _2 ... ok
blam! warning: unused variable: `c`, #[warn(unused_variables)] on by default
blam!   --> <anon>:10:5
blam!    |
blam! 10 | let c = a + b;
blam!    |     ^
blam! 
blam! test _1 ... ok
blam! test assert_matrix_eq_0 ... ok
blam! test assert_matrix_eq_2 ... ok
blam! test assert_matrix_eq_1 ... ok
blam! test assert_matrix_eq_3 ... ok
blam! warning: unused variable: `mat`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mat = Matrix::from_diag(&vec![1.0,2.0,3.0,4.0]);
blam!   |     ^^^
blam! 
blam! test matrix::Matrix<T>::from_diag_0 ... ok
blam! warning: unused import: `rulinalg::matrix::Matrix`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:5
blam!   |
blam! 3 | use rulinalg::matrix::Matrix;
blam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! test assert_matrix_eq_4 ... ok
blam! warning: unused variable: `det`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:5
blam!   |
blam! 9 | let det = a.det();
blam!   |     ^^^
blam! 
blam! test matrix::Matrix<T>::det_0 ... ok
blam! test matrix::Matrix<T>::from_fn_0 ... ok
blam! warning: variable `I` should have a snake case name such as `i`, #[warn(non_snake_case)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let I = Matrix::<f64>::identity(4);
blam!   |     ^
blam! 
blam! warning: unused variable: `I`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let I = Matrix::<f64>::identity(4);
blam!   |     ^
blam! 
blam! test matrix::Matrix<T>::identity_0 ... ok
blam! test matrix::Matrix<T>::new_0 ... ok
blam! test matrix::Matrix<T>::mean_0 ... ok
blam! warning: variable `I` should have a snake case name such as `i`, #[warn(non_snake_case)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let I = a * inv;
blam!   |     ^
blam! 
blam! test matrix::Matrix<T>::inverse_0 ... ok
blam! test matrix::Matrix<T>::norm_0 ... ok
blam! warning: unused variable: `mat`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mat = Matrix::<f64>::ones(2,3);
blam!   |     ^^^
blam! 
blam! test matrix::Matrix<T>::ones_0 ... ok
blam! warning: unused variable: `mat`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mat = Matrix::<f64>::zeros(2,3);
blam!   |     ^^^
blam! 
blam! test matrix::Matrix<T>::zeros_0 ... ok
blam! test matrix::Matrix<T>::solve_0 ... ok
blam! test matrix::Matrix<T>::variance_0 ... ok
blam! test matrix::MatrixSlice<'a, T>::norm_0 ... ok
blam! test matrix::MatrixSliceMut<'a, T>::norm_0 ... ok
blam! warning: unused variable: `l`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let l = m.cholesky();
blam!   |     ^
blam! 
blam! test matrix::decomposition::cholesky::Matrix<T>::cholesky_0 ... ok
blam! test matrix::decomposition::eigen::Matrix<T>::eigendecomp_0 ... ok
blam! test matrix::decomposition::hessenberg::Matrix<T>::upper_hess_decomp_0 ... ok
blam! test matrix::decomposition::hessenberg::Matrix<T>::upper_hessenberg_0 ... ok
blam! test matrix::decomposition::eigen::Matrix<T>::eigenvalues_0 ... ok
blam! warning: unused variable: `l`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:6
blam!   |
blam! 9 | let (l,u,p) = a.lup_decomp().expect("This matrix should decompose!");
blam!   |      ^
blam! 
blam! warning: unused variable: `u`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:8
blam!   |
blam! 9 | let (l,u,p) = a.lup_decomp().expect("This matrix should decompose!");
blam!   |        ^
blam! 
blam! warning: unused variable: `p`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:10
blam!   |
blam! 9 | let (l,u,p) = a.lup_decomp().expect("This matrix should decompose!");
blam!   |          ^
blam! 
blam! test matrix::decomposition::lu::Matrix<T>::lup_decomp_0 ... ok
blam! warning: unused variable: `q`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:6
blam!   |
blam! 7 | let (q, r) = m.qr_decomp().unwrap();
blam!   |      ^
blam! 
blam! warning: unused variable: `r`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:9
blam!   |
blam! 7 | let (q, r) = m.qr_decomp().unwrap();
blam!   |         ^
blam! 
blam! test matrix::decomposition::qr::Matrix<T>::qr_decomp_0 ... ok
blam! test matrix::iter::Matrix<T>_0 ... ok
blam! test matrix::iter::Matrix<T>_1 ... ok
blam! warning: unused variable: `b`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let b = a.as_slice();
blam!   |     ^
blam! 
blam! test matrix::slice::BaseMatrix::as_slice_0 ... ok
blam! test matrix::slice::BaseMatrix::elediv_0 ... ok
blam! warning: unused import: `rulinalg::vector::Vector`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:5
blam!   |
blam! 3 | use rulinalg::vector::Vector;
blam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! test matrix::slice::BaseMatrix::diag_0 ... ok
blam! test matrix::slice::BaseMatrix::elemul_0 ... ok
blam! test matrix::slice::BaseMatrix::get_row_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let mut expected = vec![7usize, 8];
blam!   |     ^^^^^^^^^^^^
blam! 
blam! test matrix::slice::BaseMatrix::get_row_unchecked_0 ... ok
blam! test matrix::slice::BaseMatrix::hcat_0 ... ok
blam! test matrix::slice::BaseMatrix::is_diag_0 ... ok
blam! test matrix::slice::BaseMatrix::iter_0 ... ok
blam! warning: unused import: `Matrix`, #[warn(unused_imports)] on by default
blam!  --> <anon>:4:36
blam!   |
blam! 4 | use rulinalg::matrix::{DiagOffset, Matrix, BaseMatrix};
blam!   |                                    ^^^^^^
blam! 
blam! test matrix::slice::BaseMatrix::iter_diag_0 ... ok
blam! test matrix::slice::BaseMatrix::iter_rows_0 ... ok
blam! test matrix::slice::BaseMatrix::select_0 ... ok
blam! test matrix::slice::BaseMatrix::select_cols_0 ... ok
blam! test matrix::slice::BaseMatrix::select_rows_0 ... ok
blam! test matrix::slice::BaseMatrix::solve_l_triangular_0 ... ok
blam! test matrix::slice::BaseMatrix::solve_u_triangular_0 ... ok
blam! warning: unused variable: `b`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:6
blam!   |
blam! 6 | let (b,c) = a.split_at(1, Axes::Row);
blam!   |      ^
blam! 
blam! warning: unused variable: `c`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:8
blam!   |
blam! 6 | let (b,c) = a.split_at(1, Axes::Row);
blam!   |        ^
blam! 
blam! test matrix::slice::BaseMatrix::split_at_0 ... ok
blam! test matrix::slice::BaseMatrix::sum_0 ... ok
blam! warning: unused variable: `new_slice`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let new_slice = slice.sub_slice([0,0], 1, 1);
blam!   |     ^^^^^^^^^
blam! 
blam! test matrix::slice::BaseMatrix::sub_slice_0 ... ok
blam! test matrix::slice::BaseMatrix::sum_cols_0 ... ok
blam! test matrix::slice::BaseMatrix::sum_rows_0 ... ok
blam! warning: unused variable: `mt`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let mt = mat.transpose();
blam!   |     ^^
blam! 
blam! test matrix::slice::BaseMatrix::transpose_0 ... ok
blam! test matrix::slice::BaseMatrix::vcat_0 ... ok
blam! test matrix::slice::BaseMatrixMut::apply_0 ... ok
blam! warning: unused variable: `b`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let b = a.as_mut_slice();
blam!   |     ^
blam! 
blam! test matrix::slice::BaseMatrixMut::as_mut_slice_0 ... ok
blam! test matrix::slice::BaseMatrixMut::get_row_mut_0 ... ok
blam! test matrix::slice::BaseMatrixMut::get_row_unchecked_mut_0 ... ok
blam! warning: unused import: `Matrix`, #[warn(unused_imports)] on by default
blam!  --> <anon>:4:24
blam!   |
blam! 4 | use rulinalg::matrix::{Matrix, BaseMatrixMut, DiagOffset};
blam!   |                        ^^^^^^
blam! 
blam! test matrix::slice::BaseMatrixMut::iter_diag_mut_0 ... ok
blam! test matrix::slice::BaseMatrixMut::iter_mut_0 ... ok
blam! test matrix::slice::BaseMatrixMut::iter_rows_mut_0 ... ok
blam! test matrix::slice::BaseMatrixMut::set_to_0 ... ok
blam! warning: unused variable: `b`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:6
blam!   |
blam! 6 | let (b,c) = a.split_at_mut(1, Axes::Col);
blam!   |      ^
blam! 
blam! warning: unused variable: `c`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:8
blam!   |
blam! 6 | let (b,c) = a.split_at_mut(1, Axes::Col);
blam!   |        ^
blam! 
blam! test matrix::slice::BaseMatrixMut::split_at_mut_0 ... ok
blam! warning: unused variable: `new_slice`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let new_slice = slice.sub_slice_mut([0,0], 1, 1);
blam!   |     ^^^^^^^^^
blam! 
blam! test matrix::slice::BaseMatrixMut::sub_slice_mut_0 ... ok
blam! test matrix::slice::BaseMatrixMut::swap_cols_0 ... ok
blam! test matrix::slice::BaseMatrixMut::swap_rows_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut a = vec![4.0; 16];
blam!   |     ^^^^^
blam! 
blam! warning: unused variable: `b`, #[warn(unused_variables)] on by default
blam!   --> <anon>:10:9
blam!    |
blam! 10 |     let b = MatrixSlice::from_raw_parts(a.as_ptr(), 3, 3, 4);
blam!    |         ^
blam! 
blam! test matrix::slice::MatrixSlice<'a, T>::from_raw_parts_0 ... ok
blam! warning: unused variable: `slice`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let slice = MatrixSlice::from_matrix(&a, [1,1], 2, 2);
blam!   |     ^^^^^
blam! 
blam! test matrix::slice::MatrixSlice<'a, T>::from_matrix_0 ... ok
blam! warning: unused variable: `b`, #[warn(unused_variables)] on by default
blam!   --> <anon>:10:9
blam!    |
blam! 10 |     let b = MatrixSliceMut::from_raw_parts(a.as_mut_ptr(), 3, 3, 4);
blam!    |         ^
blam! 
blam! test matrix::slice::MatrixSliceMut<'a, T>::from_raw_parts_0 ... ok
blam! warning: unused variable: `slice`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let slice = MatrixSliceMut::from_matrix(&mut a, [1,1], 2, 2);
blam!   |     ^^^^^
blam! 
blam! test matrix::slice::MatrixSliceMut<'a, T>::from_matrix_0 ... ok
blam! warning: unused variable: `new_slice`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let new_slice = slice.reslice([0,0], 1, 1);
blam!   |     ^^^^^^^^^
blam! 
blam! test matrix::slice::MatrixSlice<'a, T>::reslice_0 ... ok
blam! warning: unused variable: `new_slice`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let new_slice = slice.reslice([0,0], 1, 1);
blam!   |     ^^^^^^^^^
blam! 
blam! test matrix::slice::MatrixSliceMut<'a, T>::reslice_0 ... ok
blam! warning: unused variable: `mat`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let mat = matrix!(1.0, 2.0, 3.0;
blam!   |     ^^^
blam! 
blam! test matrix_0 ... ok
blam! test matrix::slice_0 ... ok
blam! warning: unused variable: `mat`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let mat: Matrix<f32> = matrix!(1.0, 2.0, 3.0;
blam!   |     ^^^
blam! 
blam! warning: unused variable: `mat`, #[warn(unused_variables)] on by default
blam!   --> <anon>:10:5
blam!    |
blam! 10 | let mat = matrix!(1.0, 2.0, 3.0;
blam!    |     ^^^
blam! 
blam! test matrix_1 ... ok
blam! test utils::argmax_0 ... ok
blam! test utils::argmin_0 ... ok
blam! warning: unused variable: `c`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let c = utils::dot(&a,&b);
blam!   |     ^
blam! 
blam! test utils::dot_0 ... ok
blam! test utils::ele_div_0 ... ok
blam! test utils::ele_mul_0 ... ok
blam! test utils::find_0 ... ok
blam! test utils::in_place_vec_bin_op_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut a = vec![2.0; 10];
blam!   |     ^^^^^
blam! 
blam! warning: unused variable: `c`, #[warn(unused_variables)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let c = utils::vec_bin_op(&a, &b, |x, y| { 1f64 + x * y });
blam!   |     ^
blam! 
blam! test utils::vec_bin_op_0 ... ok
blam! test utils::vec_sum_0 ... ok
blam! test utils::vec_sub_0 ... ok
blam! test vector::Vector<T>::argmax_0 ... ok
blam! test vector::Vector<T>::apply_0 ... ok
blam! test vector::Vector<T>::argmin_0 ... ok
blam! test vector::Vector<T>::dot_0 ... ok
blam! test vector::Vector<T>::elemul_0 ... ok
blam! test vector::Vector<T>::elediv_0 ... ok
blam! warning: unused variable: `vec`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let vec = Vector::new(vec![1.0,2.0,3.0,4.0]);
blam!   |     ^^^
blam! 
blam! test vector::Vector<T>::new_0 ... ok
blam! test vector::Vector<T>::mean_0 ... ok
blam! warning: unused variable: `vec`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let vec = Vector::<f64>::ones(10);
blam!   |     ^^^
blam! 
blam! test vector::Vector<T>::ones_0 ... ok
blam! test vector::Vector<T>::norm_0 ... ok
blam! test vector::Vector<T>::select_0 ... ok
blam! warning: unused variable: `vec`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let vec = Vector::<f64>::zeros(10);
blam!   |     ^^^
blam! 
blam! test vector::Vector<T>::sum_0 ... ok
blam! test vector::Vector<T>::zeros_0 ... ok
blam! test vector::Vector<T>::variance_0 ... ok
blam! 
blam! test result: ok. 99 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 8fff67b95743075f986ce3165a350910a59844f08028fe2b26043d0ff6a17029`
blam! 8fff67b95743075f986ce3165a350910a59844f08028fe2b26043d0ff6a17029
