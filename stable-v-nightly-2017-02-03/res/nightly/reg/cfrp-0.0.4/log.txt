boom! testing cfrp-0.0.4 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! a1c4dd26e0f95312880af2242215704e042e1dad5ceb8a31b93e112f88a62a10
boom! running `docker start -a a1c4dd26e0f95312880af2242215704e042e1dad5ceb8a31b93e112f88a62a10`
kablam!    Compiling cfrp v0.0.4 (file:///source)
kablam! warning: patterns aren't allowed in methods without bodies, #[warn(patterns_in_fns_without_body)] on by default
kablam!   --> src/primitives/input.rs:13:12
kablam!    |
kablam! 13 |     fn run(mut self: Box<Self>, usize, Arc<Mutex<Vec<Box<NoOp>>>>);
kablam!    |            ^^^^^^^^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #35203 <https://github.com/rust-lang/rust/issues/35203>
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> src/builder.rs:137:17
kablam!     |
kablam! 137 |                 thread::sleep_ms(sleep_duration.num_milliseconds() as u32);
kablam!     |                 ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: patterns aren't allowed in methods without bodies, #[warn(patterns_in_fns_without_body)] on by default
kablam!    --> src/lib.rs:148:12
kablam!     |
kablam! 148 |     fn run(mut self: Box<Self>);
kablam!     |            ^^^^^^^^
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #35203 <https://github.com/rust-lang/rust/issues/35203>
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 5.94 secs
boom! running `docker rm -f a1c4dd26e0f95312880af2242215704e042e1dad5ceb8a31b93e112f88a62a10`
blam! a1c4dd26e0f95312880af2242215704e042e1dad5ceb8a31b93e112f88a62a10
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! f8410ac0f09f1903086f0d3e3c30795b4f351daeb244395b8b91e6fc3fd1855e
boom! running `docker start -a f8410ac0f09f1903086f0d3e3c30795b4f351daeb244395b8b91e6fc3fd1855e`
kablam!    Compiling cfrp v0.0.4 (file:///source)
kablam! warning: patterns aren't allowed in methods without bodies, #[warn(patterns_in_fns_without_body)] on by default
kablam!   --> src/primitives/input.rs:13:12
kablam!    |
kablam! 13 |     fn run(mut self: Box<Self>, usize, Arc<Mutex<Vec<Box<NoOp>>>>);
kablam!    |            ^^^^^^^^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #35203 <https://github.com/rust-lang/rust/issues/35203>
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> src/builder.rs:137:17
kablam!     |
kablam! 137 |                 thread::sleep_ms(sleep_duration.num_milliseconds() as u32);
kablam!     |                 ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: patterns aren't allowed in methods without bodies, #[warn(patterns_in_fns_without_body)] on by default
kablam!    --> src/lib.rs:148:12
kablam!     |
kablam! 148 |     fn run(mut self: Box<Self>);
kablam!     |            ^^^^^^^^
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #35203 <https://github.com/rust-lang/rust/issues/35203>
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:275:25
kablam!     |
kablam! 275 |                         thread::sleep_ms(100);
kablam!     |                         ^^^^^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 11.43 secs
boom! running `docker rm -f f8410ac0f09f1903086f0d3e3c30795b4f351daeb244395b8b91e6fc3fd1855e`
blam! f8410ac0f09f1903086f0d3e3c30795b4f351daeb244395b8b91e6fc3fd1855e
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! be5322ca26c11567060392a69c8ca03c12f624c99c87aa5e4da93ee79eba1447
boom! running `docker start -a be5322ca26c11567060392a69c8ca03c12f624c99c87aa5e4da93ee79eba1447`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/cfrp-600c082822e958db
blam! 
blam! running 9 tests
blam! test test::fold_value ... ok
blam! test test::branch ... ok
blam! test test::async_sends ... ok
blam! test test::lift2_channel_value ... ok
blam! test test::lift2_value_value ... ok
blam! test test::lift_value ... ok
blam! test test::rand ... ok
blam! test test::map ... ok
blam! test test::async_sends_async ... ok
blam! 
blam! test result: ok. 9 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests cfrp
blam! 
blam! running 13 tests
blam! test builder::Builder::add_0 ... ok
blam! test _0 ... ok
blam! test builder::Builder::ack_value_0 ... ok
blam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
blam!   --> <anon>:15:17
blam!    |
blam! 15 |                 thread::sleep_ms(100);
blam!    |                 ^^^^^^^^^^^^^^^^
blam! 
blam! test builder::Builder::async_0 ... ok
blam! warning: unused variable: `tx`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:6
blam!   |
blam! 9 | let (tx, rx): (Sender<usize>, Receiver<usize>) = channel();
blam!   |      ^^
blam! 
blam! warning: unused variable: `signal`, #[warn(unused_variables)] on by default
blam!   --> <anon>:15:5
blam!    |
blam! 15 | let signal = b.listen(0, rx);
blam!    |     ^^^^^^
blam! 
blam! test builder::Builder::listen_0 ... ok
blam! warning: unused variable: `tx`, #[warn(unused_variables)] on by default
blam!  --> <anon>:8:6
blam!   |
blam! 8 | let (tx, rx): (Sender<usize>, Receiver<usize>) = channel();
blam!   |      ^^
blam! 
blam! warning: unused variable: `l2`, #[warn(unused_variables)] on by default
blam!   --> <anon>:17:5
blam!    |
blam! 17 | let l2 = l1.lift2(ch, |st, dy| { *st + *dy });
blam!    |     ^^
blam! 
blam! test builder::Builder::value_0 ... ok
blam! test signal_ext::SignalExt::enumerate_0 ... ok
blam! test signal_ext::SignalExt::filter_0 ... ok
blam! test signal_ext::SignalExt::fold_0 ... ok
blam! test signal_ext::SignalExt::lift2_0 ... ok
blam! warning: unused variable: `handle`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let handle = spawn_topology(Default::default(), |t| {
blam!   |     ^^^^^^
blam! 
blam! test spawn_topology_0 ... ok
blam! test signal_ext::SignalExt::lift_0 ... ok
blam! test signal_ext::SignalExt::zip_0 ... ok
blam! 
blam! test result: ok. 13 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f be5322ca26c11567060392a69c8ca03c12f624c99c87aa5e4da93ee79eba1447`
blam! be5322ca26c11567060392a69c8ca03c12f624c99c87aa5e4da93ee79eba1447
