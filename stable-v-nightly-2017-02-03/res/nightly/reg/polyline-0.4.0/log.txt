boom! testing polyline-0.4.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 7dea735f6d87177b85cc0ed7332e9e46ceb27c6f604f4078fca0656d888fda78
boom! running `docker start -a 7dea735f6d87177b85cc0ed7332e9e46ceb27c6f604f4078fca0656d888fda78`
kablam!    Compiling polyline v0.4.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.30 secs
boom! running `docker rm -f 7dea735f6d87177b85cc0ed7332e9e46ceb27c6f604f4078fca0656d888fda78`
blam! 7dea735f6d87177b85cc0ed7332e9e46ceb27c6f604f4078fca0656d888fda78
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 0e794efa0e26925e0a2bf9f604ba6f34746d75f93a6dd42264b64e9275b78a1f
boom! running `docker start -a 0e794efa0e26925e0a2bf9f604ba6f34746d75f93a6dd42264b64e9275b78a1f`
kablam!    Compiling polyline v0.4.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.86 secs
boom! running `docker rm -f 0e794efa0e26925e0a2bf9f604ba6f34746d75f93a6dd42264b64e9275b78a1f`
blam! 0e794efa0e26925e0a2bf9f604ba6f34746d75f93a6dd42264b64e9275b78a1f
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 31bc3259b3f12f7f66a56b4a03d6384851d47a2c0705a055ef577507aeaaf87b
boom! running `docker start -a 31bc3259b3f12f7f66a56b4a03d6384851d47a2c0705a055ef577507aeaaf87b`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/polyline-fb783782d750da06
blam! 
blam! running 3 tests
blam! test tests::bad_coords ... ok
blam! test tests::broken_string ... ok
blam! test tests::it_works ... ok
blam! 
blam! test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests polyline
blam! 
blam! running 2 tests
blam! warning: variable `decodedPolyline` should have a snake case name such as `decoded_polyline`, #[warn(non_snake_case)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let decodedPolyline = polyline::decode_polyline("_p~iF~ps|U_ulLnnqC_mqNvxq`@".to_string(), 5);
blam!   |     ^^^^^^^^^^^^^^^
blam! 
blam! warning: unused variable: `decodedPolyline`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let decodedPolyline = polyline::decode_polyline("_p~iF~ps|U_ulLnnqC_mqNvxq`@".to_string(), 5);
blam!   |     ^^^^^^^^^^^^^^^
blam! 
blam! test decode_polyline_0 ... ok
blam! warning: unused variable: `encoded_vec`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let encoded_vec = polyline::encode_coordinates(&coords_vec, 5).unwrap();
blam!   |     ^^^^^^^^^^^
blam! 
blam! warning: unused variable: `encoded_slice`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:5
blam!   |
blam! 9 | let encoded_slice = polyline::encode_coordinates(&coords_slice, 5).unwrap();
blam!   |     ^^^^^^^^^^^^^
blam! 
blam! test encode_coordinates_0 ... ok
blam! 
blam! test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 31bc3259b3f12f7f66a56b4a03d6384851d47a2c0705a055ef577507aeaaf87b`
blam! 31bc3259b3f12f7f66a56b4a03d6384851d47a2c0705a055ef577507aeaaf87b
