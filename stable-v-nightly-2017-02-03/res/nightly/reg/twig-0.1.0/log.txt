boom! testing twig-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 0e6defbc2fc3096ac8ef8321659d51156a046c716eb5e858f0e6b327f4cd5b7d
boom! running `docker start -a 0e6defbc2fc3096ac8ef8321659d51156a046c716eb5e858f0e6b327f4cd5b7d`
kablam!    Compiling little v0.3.0
kablam!    Compiling twig v0.1.0 (file:///source)
kablam! warning: unused import: `Expect`, #[warn(unused_imports)] on by default
kablam!  --> src/nodes/parser/body.rs:5:5
kablam!   |
kablam! 5 | use Expect;
kablam!   |     ^^^^^^
kablam! 
kablam! warning: unused import: `Expect`, #[warn(unused_imports)] on by default
kablam!  --> src/nodes/parser/expr.rs:6:5
kablam!   |
kablam! 6 | use Expect;
kablam!   |     ^^^^^^
kablam! 
kablam! warning: unused variable: `node`, #[warn(unused_variables)] on by default
kablam!    --> src/nodes/parser/expr.rs:339:72
kablam!     |
kablam! 339 | pub fn parse_subscript_expression<'p, 'c>(parser: &mut Parser<'p, 'c>, node: Expr<'c>)
kablam!     |                                                                        ^^^^
kablam! 
kablam! warning: variable `arguments` is assigned to, but never used, #[warn(unused_variables)] on by default
kablam!    --> src/nodes/parser/expr.rs:346:9
kablam!     |
kablam! 346 |     let mut arguments = Vec::<Expr<'c>>::new();
kablam!     |         ^^^^^^^^^^^^^
kablam! 
kablam! warning: variable `call_type` is assigned to, but never used, #[warn(unused_variables)] on by default
kablam!    --> src/nodes/parser/expr.rs:347:9
kablam!     |
kablam! 347 |     let mut call_type = ExprCallType::Any;
kablam!     |         ^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `arg`, #[warn(unused_variables)] on by default
kablam!    --> src/nodes/parser/expr.rs:349:9
kablam!     |
kablam! 349 |     let arg = match token.value {
kablam!     |         ^^^
kablam! 
kablam! warning: unused variable: `arg`, #[warn(unused_variables)] on by default
kablam!    --> src/nodes/parser/expr.rs:352:17
kablam!     |
kablam! 352 |             let arg = match token.value {
kablam!     |                 ^^^
kablam! 
kablam! warning: value assigned to `call_type` is never read, #[warn(unused_assignments)] on by default
kablam!    --> src/nodes/parser/expr.rs:362:17
kablam!     |
kablam! 362 |                 call_type = ExprCallType::Method;
kablam!     |                 ^^^^^^^^^
kablam! 
kablam! warning: value assigned to `arguments` is never read, #[warn(unused_assignments)] on by default
kablam!    --> src/nodes/parser/expr.rs:363:17
kablam!     |
kablam! 363 |                 arguments = try!(parse_unnamed_arguments(parser, false));
kablam!     |                 ^^^^^^^^^
kablam! 
kablam! warning: value assigned to `call_type` is never read, #[warn(unused_assignments)] on by default
kablam!    --> src/nodes/parser/expr.rs:373:13
kablam!     |
kablam! 373 |             call_type = ExprCallType::Array;
kablam!     |             ^^^^^^^^^
kablam! 
kablam! warning: unreachable expression, #[warn(unreachable_code)] on by default
kablam!    --> src/nodes/parser/expr.rs:379:5
kablam!     |
kablam! 379 |       Ok(Expr::new_at(
kablam!     |  _____^ starting here...
kablam! 380 | |         ExprValue::GetAttr {
kablam! 381 | |             node: Box::new(node),
kablam! 382 | |             arg: Box::new(arg),
kablam! 383 | |             arguments: arguments,
kablam! 384 | |             call_type: call_type
kablam! 385 | |         },
kablam! 386 | |         line
kablam! 387 | |     ))
kablam!     | |______^ ...ending here
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!    --> src/nodes/parser/expr.rs:390:40
kablam!     |
kablam! 390 | pub fn parse_filter_expression<'p, 'c>(parser: &mut Parser<'p, 'c>, expr: Expr<'c>)
kablam!     |                                        ^^^^^^
kablam! 
kablam! warning: unused variable: `expr`, #[warn(unused_variables)] on by default
kablam!    --> src/nodes/parser/expr.rs:390:69
kablam!     |
kablam! 390 | pub fn parse_filter_expression<'p, 'c>(parser: &mut Parser<'p, 'c>, expr: Expr<'c>)
kablam!     |                                                                     ^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!    --> src/nodes/parser/expr.rs:442:25
kablam!     |
kablam! 442 |         let (name_expr, token) = if definition {
kablam!     |                         ^^^^^
kablam! 
kablam! warning: unused variable: `other`, #[warn(unused_variables)] on by default
kablam!    --> src/nodes/parser/expr.rs:484:25
kablam!     |
kablam! 484 |                         other => unreachable!("twig bug: expected that expression is a name"),
kablam!     |                         ^^^^^
kablam! 
kablam! warning: unused variable: `name`, #[warn(unused_variables)] on by default
kablam!   --> src/instructions/compiler/expr.rs:36:39
kablam!    |
kablam! 36 |             ExprValue::FunctionCall { name, ref arguments } => {
kablam!    |                                       ^^^^
kablam! 
kablam! warning: unused variable: `arguments`, #[warn(unused_variables)] on by default
kablam!   --> src/instructions/compiler/expr.rs:36:45
kablam!    |
kablam! 36 |             ExprValue::FunctionCall { name, ref arguments } => {
kablam!    |                                             ^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `env`, #[warn(unused_variables)] on by default
kablam!   --> src/instructions/mod.rs:11:16
kablam!    |
kablam! 11 | pub fn compile(env: (), nodes: &Module) -> Result<Template<Value>> {
kablam!    |                ^^^
kablam! 
kablam! warning: unused variable: `config`, #[warn(unused_variables)] on by default
kablam!   --> src/environment/mod.rs:40:16
kablam!    |
kablam! 40 |     pub fn new(config: Config) -> Environment {
kablam!    |                ^^^^^^
kablam! 
kablam! warning: unused import: `little::Instruction`, #[warn(unused_imports)] on by default
kablam!  --> src/extension/core/mod.rs:6:5
kablam!   |
kablam! 6 | use little::Instruction;
kablam!   |     ^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_for.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_for.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_if.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_if.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_extends.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_extends.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_include.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_include.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_block.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_block.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_use.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_use.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_filter.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_filter.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_import.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_import.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_spaceless.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_spaceless.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_flush.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_flush.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_do.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_do.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_embed.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_embed.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `staging`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/mod.rs:70:63
kablam!    |
kablam! 70 |             Function::new_static("include", vec![Arg::Anon], |staging| {
kablam!    |                                                               ^^^^^^^
kablam! 
kablam! warning: unused variable: `env`, #[warn(unused_variables)] on by default
kablam!  --> src/extension/escaper/mod.rs:7:14
kablam!   |
kablam! 7 |     fn apply(env: &mut Environment) {
kablam!   |              ^^^
kablam! 
kablam! warning: unused import: `Write`, #[warn(unused_imports)] on by default
kablam!   --> src/engine/mod.rs:11:22
kablam!    |
kablam! 11 | use std::io::{ Read, Write };
kablam!    |                      ^^^^^
kablam! 
kablam! warning: field is never used: `functions`, #[warn(dead_code)] on by default
kablam!    --> src/engine/mod.rs:122:5
kablam!     |
kablam! 122 |     functions: HashMap<&'static str, Box<Function<Value>>>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `data`, #[warn(unused_variables)] on by default
kablam!    --> src/engine/mod.rs:139:55
kablam!     |
kablam! 139 |     pub fn get<D: Into<Value>>(&mut self, name: &str, data: D)
kablam!     |                                                       ^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 14.11 secs
boom! running `docker rm -f 0e6defbc2fc3096ac8ef8321659d51156a046c716eb5e858f0e6b327f4cd5b7d`
blam! 0e6defbc2fc3096ac8ef8321659d51156a046c716eb5e858f0e6b327f4cd5b7d
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 827bc7222a361478892f1c71881ff63bc660062ebacccd7c1e5cff72003e5b28
boom! running `docker start -a 827bc7222a361478892f1c71881ff63bc660062ebacccd7c1e5cff72003e5b28`
kablam!    Compiling serde v0.6.15
kablam!    Compiling serde_json v0.6.1
kablam!    Compiling twig v0.1.0 (file:///source)
kablam! warning: unused `#[macro_use]` import, #[warn(unused_imports)] on by default
kablam!  --> tests/fixture_tests.rs:5:1
kablam!   |
kablam! 5 | #[macro_use] extern crate log;
kablam!   | ^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `Expect`, #[warn(unused_imports)] on by default
kablam!  --> src/nodes/parser/body.rs:5:5
kablam!   |
kablam! 5 | use Expect;
kablam!   |     ^^^^^^
kablam! 
kablam! warning: unused import: `Expect`, #[warn(unused_imports)] on by default
kablam!  --> src/nodes/parser/expr.rs:6:5
kablam!   |
kablam! 6 | use Expect;
kablam!   |     ^^^^^^
kablam! 
kablam! warning: unused variable: `node`, #[warn(unused_variables)] on by default
kablam!    --> src/nodes/parser/expr.rs:339:72
kablam!     |
kablam! 339 | pub fn parse_subscript_expression<'p, 'c>(parser: &mut Parser<'p, 'c>, node: Expr<'c>)
kablam!     |                                                                        ^^^^
kablam! 
kablam! warning: variable `arguments` is assigned to, but never used, #[warn(unused_variables)] on by default
kablam!    --> src/nodes/parser/expr.rs:346:9
kablam!     |
kablam! 346 |     let mut arguments = Vec::<Expr<'c>>::new();
kablam!     |         ^^^^^^^^^^^^^
kablam! 
kablam! warning: variable `call_type` is assigned to, but never used, #[warn(unused_variables)] on by default
kablam!    --> src/nodes/parser/expr.rs:347:9
kablam!     |
kablam! 347 |     let mut call_type = ExprCallType::Any;
kablam!     |         ^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `arg`, #[warn(unused_variables)] on by default
kablam!    --> src/nodes/parser/expr.rs:349:9
kablam!     |
kablam! 349 |     let arg = match token.value {
kablam!     |         ^^^
kablam! 
kablam! warning: unused variable: `arg`, #[warn(unused_variables)] on by default
kablam!    --> src/nodes/parser/expr.rs:352:17
kablam!     |
kablam! 352 |             let arg = match token.value {
kablam!     |                 ^^^
kablam! 
kablam! warning: value assigned to `call_type` is never read, #[warn(unused_assignments)] on by default
kablam!    --> src/nodes/parser/expr.rs:362:17
kablam!     |
kablam! 362 |                 call_type = ExprCallType::Method;
kablam!     |                 ^^^^^^^^^
kablam! 
kablam! warning: value assigned to `arguments` is never read, #[warn(unused_assignments)] on by default
kablam!    --> src/nodes/parser/expr.rs:363:17
kablam!     |
kablam! 363 |                 arguments = try!(parse_unnamed_arguments(parser, false));
kablam!     |                 ^^^^^^^^^
kablam! 
kablam! warning: value assigned to `call_type` is never read, #[warn(unused_assignments)] on by default
kablam!    --> src/nodes/parser/expr.rs:373:13
kablam!     |
kablam! 373 |             call_type = ExprCallType::Array;
kablam!     |             ^^^^^^^^^
kablam! 
kablam! warning: unreachable expression, #[warn(unreachable_code)] on by default
kablam!    --> src/nodes/parser/expr.rs:379:5
kablam!     |
kablam! 379 |       Ok(Expr::new_at(
kablam!     |  _____^ starting here...
kablam! 380 | |         ExprValue::GetAttr {
kablam! 381 | |             node: Box::new(node),
kablam! 382 | |             arg: Box::new(arg),
kablam! 383 | |             arguments: arguments,
kablam! 384 | |             call_type: call_type
kablam! 385 | |         },
kablam! 386 | |         line
kablam! 387 | |     ))
kablam!     | |______^ ...ending here
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!    --> src/nodes/parser/expr.rs:390:40
kablam!     |
kablam! 390 | pub fn parse_filter_expression<'p, 'c>(parser: &mut Parser<'p, 'c>, expr: Expr<'c>)
kablam!     |                                        ^^^^^^
kablam! 
kablam! warning: unused variable: `expr`, #[warn(unused_variables)] on by default
kablam!    --> src/nodes/parser/expr.rs:390:69
kablam!     |
kablam! 390 | pub fn parse_filter_expression<'p, 'c>(parser: &mut Parser<'p, 'c>, expr: Expr<'c>)
kablam!     |                                                                     ^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!    --> src/nodes/parser/expr.rs:442:25
kablam!     |
kablam! 442 |         let (name_expr, token) = if definition {
kablam!     |                         ^^^^^
kablam! 
kablam! warning: unused variable: `other`, #[warn(unused_variables)] on by default
kablam!    --> src/nodes/parser/expr.rs:484:25
kablam!     |
kablam! 484 |                         other => unreachable!("twig bug: expected that expression is a name"),
kablam!     |                         ^^^^^
kablam! 
kablam! warning: unused variable: `name`, #[warn(unused_variables)] on by default
kablam!   --> src/instructions/compiler/expr.rs:36:39
kablam!    |
kablam! 36 |             ExprValue::FunctionCall { name, ref arguments } => {
kablam!    |                                       ^^^^
kablam! 
kablam! warning: unused variable: `arguments`, #[warn(unused_variables)] on by default
kablam!   --> src/instructions/compiler/expr.rs:36:45
kablam!    |
kablam! 36 |             ExprValue::FunctionCall { name, ref arguments } => {
kablam!    |                                             ^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `env`, #[warn(unused_variables)] on by default
kablam!   --> src/instructions/mod.rs:11:16
kablam!    |
kablam! 11 | pub fn compile(env: (), nodes: &Module) -> Result<Template<Value>> {
kablam!    |                ^^^
kablam! 
kablam! warning: unused variable: `config`, #[warn(unused_variables)] on by default
kablam!   --> src/environment/mod.rs:40:16
kablam!    |
kablam! 40 |     pub fn new(config: Config) -> Environment {
kablam!    |                ^^^^^^
kablam! 
kablam! warning: unused import: `little::Instruction`, #[warn(unused_imports)] on by default
kablam!  --> src/extension/core/mod.rs:6:5
kablam!   |
kablam! 6 | use little::Instruction;
kablam!   |     ^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_for.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_for.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_if.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_if.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_extends.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_extends.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_include.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_include.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_block.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_block.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_use.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_use.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_filter.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_filter.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_import.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_import.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_spaceless.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_spaceless.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_flush.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_flush.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_do.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_do.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `parser`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_embed.rs:15:29
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                             ^^^^^^
kablam! 
kablam! warning: unused variable: `token`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/token_parsers/parser_embed.rs:15:58
kablam!    |
kablam! 15 |     fn parse<'p, 'c>(&self, parser: &mut Parser<'p, 'c>, token: TokenRef<'c>)
kablam!    |                                                          ^^^^^
kablam! 
kablam! warning: unused variable: `staging`, #[warn(unused_variables)] on by default
kablam!   --> src/extension/core/mod.rs:70:63
kablam!    |
kablam! 70 |             Function::new_static("include", vec![Arg::Anon], |staging| {
kablam!    |                                                               ^^^^^^^
kablam! 
kablam! warning: unused variable: `env`, #[warn(unused_variables)] on by default
kablam!  --> src/extension/escaper/mod.rs:7:14
kablam!   |
kablam! 7 |     fn apply(env: &mut Environment) {
kablam!   |              ^^^
kablam! 
kablam! warning: constant `e` should have an upper case name such as `E`, #[warn(non_upper_case_globals)] on by default
kablam!    --> src/value/ops.rs:252:9
kablam!     |
kablam! 252 |         const e: f64 = 0.0000001;
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/value/mod.rs:241:9
kablam!     |
kablam! 241 |         point.set("x", Value::Int(42));
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/value/mod.rs:242:9
kablam!     |
kablam! 242 |         point.set("y", Value::Int(43));
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/value/mod.rs:251:9
kablam!     |
kablam! 251 |         point.set("x", Value::Str("48".into()));
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `Write`, #[warn(unused_imports)] on by default
kablam!   --> src/engine/mod.rs:11:22
kablam!    |
kablam! 11 | use std::io::{ Read, Write };
kablam!    |                      ^^^^^
kablam! 
kablam! warning: field is never used: `functions`, #[warn(dead_code)] on by default
kablam!    --> src/engine/mod.rs:122:5
kablam!     |
kablam! 122 |     functions: HashMap<&'static str, Box<Function<Value>>>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `data`, #[warn(unused_variables)] on by default
kablam!    --> src/engine/mod.rs:139:55
kablam!     |
kablam! 139 |     pub fn get<D: Into<Value>>(&mut self, name: &str, data: D)
kablam!     |                                                       ^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 25.41 secs
boom! running `docker rm -f 827bc7222a361478892f1c71881ff63bc660062ebacccd7c1e5cff72003e5b28`
blam! 827bc7222a361478892f1c71881ff63bc660062ebacccd7c1e5cff72003e5b28
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! af79350c28f05b084896327df391d00e6b911ccde1368c5d4fae4b78eeab892d
boom! running `docker start -a af79350c28f05b084896327df391d00e6b911ccde1368c5d4fae4b78eeab892d`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/fixture_tests-cb17f44c75c5a4cd
blam! 
blam! running 1 test
blam! test fixtures ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- fixtures stdout ----
blam! 	thread 'fixtures' panicked at 'called `Option::unwrap()` on a `None` value', /buildslave/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/libcore/option.rs:323
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! 
blam! failures:
blam!     fixtures
blam! 
blam! test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f af79350c28f05b084896327df391d00e6b911ccde1368c5d4fae4b78eeab892d`
blam! af79350c28f05b084896327df391d00e6b911ccde1368c5d4fae4b78eeab892d
