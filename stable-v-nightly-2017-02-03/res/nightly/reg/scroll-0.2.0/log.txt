boom! testing scroll-0.2.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 768ce95523cdf64c0e957a1c5aa65b049989626a6bb07f7f5fd1a177e163e069
boom! running `docker start -a 768ce95523cdf64c0e957a1c5aa65b049989626a6bb07f7f5fd1a177e163e069`
kablam!    Compiling scroll v0.2.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.43 secs
boom! running `docker rm -f 768ce95523cdf64c0e957a1c5aa65b049989626a6bb07f7f5fd1a177e163e069`
blam! 768ce95523cdf64c0e957a1c5aa65b049989626a6bb07f7f5fd1a177e163e069
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! d2877368756771487c617deea5cc2c7abb05c2adbca7f850f368503629363a6c
boom! running `docker start -a d2877368756771487c617deea5cc2c7abb05c2adbca7f850f368503629363a6c`
kablam!    Compiling scroll v0.2.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 4.4 secs
boom! running `docker rm -f d2877368756771487c617deea5cc2c7abb05c2adbca7f850f368503629363a6c`
blam! d2877368756771487c617deea5cc2c7abb05c2adbca7f850f368503629363a6c
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 73d16c713502735b819df0bf38e8d07dd96ce07042a7162f474ed4db3b02b65b
boom! running `docker start -a 73d16c713502735b819df0bf38e8d07dd96ce07042a7162f474ed4db3b02b65b`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/scroll-5bcb5a53f6dccb9a
blam! 
blam! running 42 tests
blam! test leb128::tests::uleb128 ... ok
blam! test leb128::tests::sleb128 ... ok
blam! test tests::g_bytes_api ... ok
blam! test leb128::tests::uleb128_overflow ... ok
blam! test tests::gread_f32 ... ok
blam! test tests::gread_f64 ... ok
blam! test tests::gread_gwrite_f32_3 ... ok
blam! test tests::gread_gwrite_f64_1 ... ok
blam! test tests::gread_gwrite_f64_2 ... ok
blam! test tests::gread_gwrite_f32_2 ... ok
blam! test tests::gread_gwrite_f32_1 ... ok
blam! test tests::gread_gwrite_i32_3 ... ok
blam! test tests::gread_gwrite_f64_3 ... ok
blam! test tests::gread_gwrite_i32_2 ... ok
blam! test tests::gread_gwrite_i64_1 ... ok
blam! test tests::gread_gwrite_i32_1 ... ok
blam! test tests::gread_gwrite_i64_2 ... ok
blam! test tests::gread_inout ... ok
blam! test tests::gread_gwrite_i64_3 ... ok
blam! test tests::p_buffer_api ... ok
blam! test tests::gread_with_byte ... ok
blam! test tests::gread_with_iter_bytes ... ok
blam! test tests::gread_slice ... ok
blam! test tests::p_bytes_api ... ok
blam! test tests::p_i16 ... ok
blam! test tests::p_u32 ... ok
blam! test tests::p_i32 ... ok
blam! test tests::p_u64 ... ok
blam! test tests::p_u16 ... ok
blam! test tests::p_i64 ... ok
blam! test tests::pread ... ok
blam! test tests::pread_slice ... ok
blam! test tests::pread_str ... ok
blam! test tests::pwrite_str_and_bytes ... ok
blam! test tests::pread_with_be ... ok
blam! test tests::pread_with_iter_bytes ... ok
blam! test tests::pread_str_weird ... ok
blam! test tests::simple_gread_u16 ... ok
blam! test tests::simple_gread_u32 ... ok
blam! test tests::simple_gread_i64 ... ok
blam! test tests::simple_gread_u64 ... ok
blam! test tests::test_measurable ... ok
blam! 
blam! test result: ok. 42 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests scroll
blam! 
blam! running 19 tests
blam! warning: unused variable: `buffer`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let buffer = Buffer::new(bytes);
blam!   |     ^^^^^^
blam! 
blam! test buffer::Buffer::new_0 ... ok
blam! warning: unused variable: `buffer`, #[warn(unused_variables)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let buffer = Buffer::try_from(cursor).unwrap();
blam!   |     ^^^^^^
blam! 
blam! warning: unused variable: `buffer`, #[warn(unused_variables)] on by default
blam!  --> <anon>:4:5
blam!   |
blam! 4 | let buffer = Buffer::with(0x0u8, 10);
blam!   |     ^^^^^^
blam! 
blam! test buffer::Buffer::try_from_0 ... ok
blam! test buffer::Buffer::with_0 ... ok
blam! warning: unused variable: `i`, #[warn(unused_variables)] on by default
blam!   --> <anon>:11:5
blam!    |
blam! 11 | let i: u32 = b.pread_with(0, scroll::BE).unwrap();
blam!    |     ^
blam! 
blam! warning: unused variable: `i2`, #[warn(unused_variables)] on by default
blam!   --> <anon>:13:5
blam!    |
blam! 13 | let i2 = b.pread_with::<u16>(2, scroll::BE).unwrap();
blam!    |     ^^
blam! 
blam! warning: unused variable: `byte`, #[warn(unused_variables)] on by default
blam!   --> <anon>:17:5
blam!    |
blam! 17 | let byte: u8 = b.pread(0).unwrap();
blam!    |     ^^^^
blam! 
blam! warning: unused variable: `i3`, #[warn(unused_variables)] on by default
blam!   --> <anon>:18:5
blam!    |
blam! 18 | let i3: u32 = b.pread(0).unwrap();
blam!    |     ^^
blam! 
blam! warning: unused variable: `byte`, #[warn(unused_variables)] on by default
blam!   --> <anon>:21:5
blam!    |
blam! 21 | let byte: scroll::Result<i64> = b.pread(0);
blam!    |     ^^^^
blam! 
blam! warning: unused variable: `slice`, #[warn(unused_variables)] on by default
blam!   --> <anon>:24:5
blam!    |
blam! 24 | let slice = b.pread_slice::<str>(0, 2).unwrap();
blam!    |     ^^^^^
blam! 
blam! warning: unused variable: `byte_slice`, #[warn(unused_variables)] on by default
blam!   --> <anon>:25:5
blam!    |
blam! 25 | let byte_slice: &[u8] = b.pread_slice(0, 2).unwrap();
blam!    |     ^^^^^^^^^^
blam! 
blam! test _0 ... ok
blam! test _1 ... ok
blam! warning: unused variable: `byte`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let byte = bytes.gread::<u8>(offset).unwrap();
blam!   |     ^^^^
blam! 
blam! test greater::Gread::gread_0 ... ok
blam! test greater::Gread::gread_inout_0 ... ok
blam! test buffer::Buffer_0 ... ok
blam! test ctx_0 ... ok
blam! test greater::Gread::gread_with_0 ... ok
blam! warning: unused variable: `byte`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let byte = bytes.pread::<u8>(0).unwrap();
blam!   |     ^^^^
blam! 
blam! test pread::Pread::pread_0 ... ok
blam! test greater::Gread::gread_slice_0 ... ok
blam! test greater::Gread::gread_inout_with_0 ... ok
blam! warning: unused variable: `foo`, #[warn(unused_variables)] on by default
blam!   --> <anon>:48:5
blam!    |
blam! 48 | let foo: Result<Foo, ExternalError> = bytes.pread(0);
blam!    |     ^^^
blam! 
blam! test pread::Pread_1 ... ok
blam! test pread::Pread::pread_with_0 ... ok
blam! test pread::Pread::pread_slice_0 ... ok
blam! test pread::Pread_0 ... ok
blam! test pwrite::Pwrite_0 ... ok
blam! warning: unused import: `Buffer`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:14
blam!   |
blam! 3 | use scroll::{Buffer, Pwrite, Pread, LE};
blam!   |              ^^^^^^
blam! 
blam! test pwrite::Pwrite::pwrite_with_0 ... ok
blam! 
blam! test result: ok. 19 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 73d16c713502735b819df0bf38e8d07dd96ce07042a7162f474ed4db3b02b65b`
blam! 73d16c713502735b819df0bf38e8d07dd96ce07042a7162f474ed4db3b02b65b
