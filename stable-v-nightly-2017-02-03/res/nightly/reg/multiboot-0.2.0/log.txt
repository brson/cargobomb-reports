boom! testing multiboot-0.2.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! a7277ae81051031fe1baf02abba21f604b3407e0c92e2a42aea35946f7a9a272
boom! running `docker start -a a7277ae81051031fe1baf02abba21f604b3407e0c92e2a42aea35946f7a9a272`
kablam!    Compiling multiboot v0.2.0 (file:///source)
kablam! warning: this feature has been stable since 1.6.0. Attribute no longer needed, #[warn(stable_features)] on by default
kablam!  --> src/lib.rs:8:28
kablam!   |
kablam! 8 | #![feature(core_slice_ext, no_std, raw)]
kablam!   |                            ^^^^^^
kablam! 
kablam! warning: unused or unknown feature, #[warn(unused_features)] on by default
kablam!  --> src/lib.rs:8:12
kablam!   |
kablam! 8 | #![feature(core_slice_ext, no_std, raw)]
kablam!   |            ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused or unknown feature, #[warn(unused_features)] on by default
kablam!  --> src/lib.rs:8:36
kablam!   |
kablam! 8 | #![feature(core_slice_ext, no_std, raw)]
kablam!   |                                    ^^^
kablam! 
kablam! warning: method is never used: `has_symbols`, #[warn(dead_code)] on by default
kablam!    --> src/lib.rs:122:9
kablam!     |
kablam! 122 |           fn $fun(&self) -> bool {
kablam!     |  _________^ starting here...
kablam! 123 | |             //assert!($bit1 <= 31);
kablam! 124 | |             //assert!($bit2 <= 31);
kablam! 125 | |             (self.header.flags & (1 << $bit1)) > 0 || (self.header.flags & (1 << $bit2)) > 0
kablam! 126 | |         }
kablam!     | |_________^ ...ending here
kablam! ...
kablam! 188 |       check_flag!(doc = "If true, then the `syms` field is valid.",
kablam!     |  _____- starting here...
kablam! 189 | |                has_symbols, 4, 5);
kablam!     | |__________________________________- ...ending here: in this macro invocation
kablam! 
kablam! warning: method is never used: `has_drives`, #[warn(dead_code)] on by default
kablam!    --> src/lib.rs:113:9
kablam!     |
kablam! 113 |           fn $fun(&self) -> bool {
kablam!     |  _________^ starting here...
kablam! 114 | |             //assert!($bit <= 31);
kablam! 115 | |             (self.header.flags & (1 << $bit)) > 0
kablam! 116 | |         }
kablam!     | |_________^ ...ending here
kablam! ...
kablam! 192 |       check_flag!(doc = "If true, then the `drives_addr` and `drives_length` fields are valid.",
kablam!     |  _____- starting here...
kablam! 193 | |                has_drives, 7);
kablam!     | |______________________________- ...ending here: in this macro invocation
kablam! 
kablam! warning: method is never used: `has_config_table`, #[warn(dead_code)] on by default
kablam!    --> src/lib.rs:113:9
kablam!     |
kablam! 113 |           fn $fun(&self) -> bool {
kablam!     |  _________^ starting here...
kablam! 114 | |             //assert!($bit <= 31);
kablam! 115 | |             (self.header.flags & (1 << $bit)) > 0
kablam! 116 | |         }
kablam!     | |_________^ ...ending here
kablam! ...
kablam! 194 |       check_flag!(doc = "If true, then the `config_table` field is valid.",
kablam!     |  _____- starting here...
kablam! 195 | |                has_config_table, 8);
kablam!     | |____________________________________- ...ending here: in this macro invocation
kablam! 
kablam! warning: method is never used: `has_boot_loader_name`, #[warn(dead_code)] on by default
kablam!    --> src/lib.rs:113:9
kablam!     |
kablam! 113 |           fn $fun(&self) -> bool {
kablam!     |  _________^ starting here...
kablam! 114 | |             //assert!($bit <= 31);
kablam! 115 | |             (self.header.flags & (1 << $bit)) > 0
kablam! 116 | |         }
kablam!     | |_________^ ...ending here
kablam! ...
kablam! 196 |       check_flag!(doc = "If true, then the `boot_loader_name` field is valid.",
kablam!     |  _____- starting here...
kablam! 197 | |                has_boot_loader_name, 9);
kablam!     | |________________________________________- ...ending here: in this macro invocation
kablam! 
kablam! warning: method is never used: `has_apm_table`, #[warn(dead_code)] on by default
kablam!    --> src/lib.rs:113:9
kablam!     |
kablam! 113 |           fn $fun(&self) -> bool {
kablam!     |  _________^ starting here...
kablam! 114 | |             //assert!($bit <= 31);
kablam! 115 | |             (self.header.flags & (1 << $bit)) > 0
kablam! 116 | |         }
kablam!     | |_________^ ...ending here
kablam! ...
kablam! 198 |       check_flag!(doc = "If true, then the `apm_table` field is valid.",
kablam!     |  _____- starting here...
kablam! 199 | |                has_apm_table, 10);
kablam!     | |__________________________________- ...ending here: in this macro invocation
kablam! 
kablam! warning: method is never used: `has_vbe`, #[warn(dead_code)] on by default
kablam!    --> src/lib.rs:113:9
kablam!     |
kablam! 113 |           fn $fun(&self) -> bool {
kablam!     |  _________^ starting here...
kablam! 114 | |             //assert!($bit <= 31);
kablam! 115 | |             (self.header.flags & (1 << $bit)) > 0
kablam! 116 | |         }
kablam!     | |_________^ ...ending here
kablam! ...
kablam! 200 |       check_flag!(doc = "If true, then the `vbe_*` fields are valid.",
kablam!     |  _____- starting here...
kablam! 201 | |                has_vbe, 11);
kablam!     | |____________________________- ...ending here: in this macro invocation
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.26 secs
boom! running `docker rm -f a7277ae81051031fe1baf02abba21f604b3407e0c92e2a42aea35946f7a9a272`
blam! a7277ae81051031fe1baf02abba21f604b3407e0c92e2a42aea35946f7a9a272
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! e30539eaaa661e57749865ce91bcbb7f4a41f02d4e7b977c826297d1bc2d8b35
boom! running `docker start -a e30539eaaa661e57749865ce91bcbb7f4a41f02d4e7b977c826297d1bc2d8b35`
kablam!    Compiling multiboot v0.2.0 (file:///source)
kablam! warning: this feature has been stable since 1.6.0. Attribute no longer needed, #[warn(stable_features)] on by default
kablam!  --> src/lib.rs:8:28
kablam!   |
kablam! 8 | #![feature(core_slice_ext, no_std, raw)]
kablam!   |                            ^^^^^^
kablam! 
kablam! warning: unused or unknown feature, #[warn(unused_features)] on by default
kablam!  --> src/lib.rs:8:36
kablam!   |
kablam! 8 | #![feature(core_slice_ext, no_std, raw)]
kablam!   |                                    ^^^
kablam! 
kablam! warning: unused or unknown feature, #[warn(unused_features)] on by default
kablam!  --> src/lib.rs:8:12
kablam!   |
kablam! 8 | #![feature(core_slice_ext, no_std, raw)]
kablam!   |            ^^^^^^^^^^^^^^
kablam! 
kablam! warning: method is never used: `has_symbols`, #[warn(dead_code)] on by default
kablam!    --> src/lib.rs:122:9
kablam!     |
kablam! 122 |           fn $fun(&self) -> bool {
kablam!     |  _________^ starting here...
kablam! 123 | |             //assert!($bit1 <= 31);
kablam! 124 | |             //assert!($bit2 <= 31);
kablam! 125 | |             (self.header.flags & (1 << $bit1)) > 0 || (self.header.flags & (1 << $bit2)) > 0
kablam! 126 | |         }
kablam!     | |_________^ ...ending here
kablam! ...
kablam! 188 |       check_flag!(doc = "If true, then the `syms` field is valid.",
kablam!     |  _____- starting here...
kablam! 189 | |                has_symbols, 4, 5);
kablam!     | |__________________________________- ...ending here: in this macro invocation
kablam! 
kablam! warning: method is never used: `has_drives`, #[warn(dead_code)] on by default
kablam!    --> src/lib.rs:113:9
kablam!     |
kablam! 113 |           fn $fun(&self) -> bool {
kablam!     |  _________^ starting here...
kablam! 114 | |             //assert!($bit <= 31);
kablam! 115 | |             (self.header.flags & (1 << $bit)) > 0
kablam! 116 | |         }
kablam!     | |_________^ ...ending here
kablam! ...
kablam! 192 |       check_flag!(doc = "If true, then the `drives_addr` and `drives_length` fields are valid.",
kablam!     |  _____- starting here...
kablam! 193 | |                has_drives, 7);
kablam!     | |______________________________- ...ending here: in this macro invocation
kablam! 
kablam! warning: method is never used: `has_config_table`, #[warn(dead_code)] on by default
kablam!    --> src/lib.rs:113:9
kablam!     |
kablam! 113 |           fn $fun(&self) -> bool {
kablam!     |  _________^ starting here...
kablam! 114 | |             //assert!($bit <= 31);
kablam! 115 | |             (self.header.flags & (1 << $bit)) > 0
kablam! 116 | |         }
kablam!     | |_________^ ...ending here
kablam! ...
kablam! 194 |       check_flag!(doc = "If true, then the `config_table` field is valid.",
kablam!     |  _____- starting here...
kablam! 195 | |                has_config_table, 8);
kablam!     | |____________________________________- ...ending here: in this macro invocation
kablam! 
kablam! warning: method is never used: `has_boot_loader_name`, #[warn(dead_code)] on by default
kablam!    --> src/lib.rs:113:9
kablam!     |
kablam! 113 |           fn $fun(&self) -> bool {
kablam!     |  _________^ starting here...
kablam! 114 | |             //assert!($bit <= 31);
kablam! 115 | |             (self.header.flags & (1 << $bit)) > 0
kablam! 116 | |         }
kablam!     | |_________^ ...ending here
kablam! ...
kablam! 196 |       check_flag!(doc = "If true, then the `boot_loader_name` field is valid.",
kablam!     |  _____- starting here...
kablam! 197 | |                has_boot_loader_name, 9);
kablam!     | |________________________________________- ...ending here: in this macro invocation
kablam! 
kablam! warning: method is never used: `has_apm_table`, #[warn(dead_code)] on by default
kablam!    --> src/lib.rs:113:9
kablam!     |
kablam! 113 |           fn $fun(&self) -> bool {
kablam!     |  _________^ starting here...
kablam! 114 | |             //assert!($bit <= 31);
kablam! 115 | |             (self.header.flags & (1 << $bit)) > 0
kablam! 116 | |         }
kablam!     | |_________^ ...ending here
kablam! ...
kablam! 198 |       check_flag!(doc = "If true, then the `apm_table` field is valid.",
kablam!     |  _____- starting here...
kablam! 199 | |                has_apm_table, 10);
kablam!     | |__________________________________- ...ending here: in this macro invocation
kablam! 
kablam! warning: method is never used: `has_vbe`, #[warn(dead_code)] on by default
kablam!    --> src/lib.rs:113:9
kablam!     |
kablam! 113 |           fn $fun(&self) -> bool {
kablam!     |  _________^ starting here...
kablam! 114 | |             //assert!($bit <= 31);
kablam! 115 | |             (self.header.flags & (1 << $bit)) > 0
kablam! 116 | |         }
kablam!     | |_________^ ...ending here
kablam! ...
kablam! 200 |       check_flag!(doc = "If true, then the `vbe_*` fields are valid.",
kablam!     |  _____- starting here...
kablam! 201 | |                has_vbe, 11);
kablam!     | |____________________________- ...ending here: in this macro invocation
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.55 secs
boom! running `docker rm -f e30539eaaa661e57749865ce91bcbb7f4a41f02d4e7b977c826297d1bc2d8b35`
blam! e30539eaaa661e57749865ce91bcbb7f4a41f02d4e7b977c826297d1bc2d8b35
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! f862d585e8a7f87769b111c387c6074c008260b4d583af5e85f8a5d315783027
boom! running `docker start -a f862d585e8a7f87769b111c387c6074c008260b4d583af5e85f8a5d315783027`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/multiboot-8808fd1bbf3260cd
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests multiboot
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f f862d585e8a7f87769b111c387c6074c008260b4d583af5e85f8a5d315783027`
blam! f862d585e8a7f87769b111c387c6074c008260b4d583af5e85f8a5d315783027
