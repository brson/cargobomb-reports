boom! testing ttl_cache-0.2.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 00823600ba329e34a9c6e32e78c007656c0000c629d9be3e288516584d597265
boom! running `docker start -a 00823600ba329e34a9c6e32e78c007656c0000c629d9be3e288516584d597265`
kablam!    Compiling ttl_cache v0.2.1 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.72 secs
boom! running `docker rm -f 00823600ba329e34a9c6e32e78c007656c0000c629d9be3e288516584d597265`
blam! 00823600ba329e34a9c6e32e78c007656c0000c629d9be3e288516584d597265
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 66b73e8f11bd4a0bf880b34898353f4d98aa742bcc3c607c2b26764dff6a8f7c
boom! running `docker start -a 66b73e8f11bd4a0bf880b34898353f4d98aa742bcc3c607c2b26764dff6a8f7c`
kablam!    Compiling ttl_cache v0.2.1 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.73 secs
boom! running `docker rm -f 66b73e8f11bd4a0bf880b34898353f4d98aa742bcc3c607c2b26764dff6a8f7c`
blam! 66b73e8f11bd4a0bf880b34898353f4d98aa742bcc3c607c2b26764dff6a8f7c
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! a6be377ddbac727f0494336314a74144f32a1ffdecc8955ff94a0d075e4ad021
boom! running `docker start -a a6be377ddbac727f0494336314a74144f32a1ffdecc8955ff94a0d075e4ad021`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/test-06c47f27eee0aa85
blam! 
blam! running 10 tests
blam! test test_change_capacity ... ok
blam! test test_clear ... ok
blam! test test_contains_key ... ok
blam! test test_iter ... ok
blam! test test_put_and_get ... ok
blam! test test_pop ... ok
blam! test test_put_update ... ok
blam! test test_remove ... ok
blam! test test_expire_value ... ok
blam! test test_iter_w_expired ... ok
blam! 
blam! test result: ok. 10 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/ttl_cache-ea4e3884d0f67bdf
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests ttl_cache
blam! 
blam! running 9 tests
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let mut cache: TtlCache<i32, &str> = TtlCache::new(Duration::from_secs(30), 2);
blam!   |     ^^^^^^^^^
blam! 
blam! test TtlCache<K, V, S>::capacity_0 ... ok
blam! test TtlCache<K, V, S>::contains_key_0 ... ok
blam! test TtlCache<K, V, S>::insert_0 ... ok
blam! test TtlCache<K, V, S>::get_mut_0 ... ok
blam! test TtlCache<K, V, S>::iter_0 ... ok
blam! test TtlCache<K, V, S>::iter_mut_0 ... ok
blam! test TtlCache<K, V, S>::remove_0 ... ok
blam! test TtlCache<K, V, S>::set_capacity_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let mut cache: TtlCache<i32, &str> = TtlCache::new(Duration::from_secs(30), 10);
blam!   |     ^^^^^^^^^
blam! 
blam! warning: unused variable: `cache`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let mut cache: TtlCache<i32, &str> = TtlCache::new(Duration::from_secs(30), 10);
blam!   |     ^^^^^^^^^
blam! 
blam! test TtlCache<K, V>::new_0 ... ok
blam! 
blam! test result: ok. 9 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f a6be377ddbac727f0494336314a74144f32a1ffdecc8955ff94a0d075e4ad021`
blam! a6be377ddbac727f0494336314a74144f32a1ffdecc8955ff94a0d075e4ad021
