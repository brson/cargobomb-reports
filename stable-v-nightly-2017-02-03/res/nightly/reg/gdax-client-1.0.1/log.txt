boom! testing gdax-client-1.0.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! e30477e6d99bb95c60cc157f6ccb1151a4dd176b2b97040d169f4cdf931bc123
boom! running `docker start -a e30477e6d99bb95c60cc157f6ccb1151a4dd176b2b97040d169f4cdf931bc123`
kablam!    Compiling aster v0.36.0
kablam!    Compiling openssl-sys-extras v0.7.14
kablam!    Compiling uuid v0.3.1
kablam!    Compiling chrono v0.2.25
blam! Build failed, waiting for other jobs to finish...
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::Field`
kablam!     --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/expr.rs:1108:21
kablam!      |
kablam! 1108 |         let field = ast::Field {
kablam!      |                     ^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error: no associated item named `Vec` found for type `syntax::ast::ExprKind` in the current scope
kablam!     --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/expr.rs:1907:38
kablam!      |
kablam! 1907 |         self.builder.build_expr_kind(ast::ExprKind::Vec(self.exprs))
kablam!      |                                      ^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error: no method named `into_vec` found for type `std::vec::Vec<syntax::ast::TyParam>` in the current scope
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/generics.rs:53:43
kablam!    |
kablam! 53 |             ty_params: generics.ty_params.into_vec(),
kablam!    |                                           ^^^^^^^^
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/generics.rs:203:31
kablam!     |
kablam! 203 |             ty_param.bounds = P::new();
kablam!     |                               ^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                found type `syntax::ptr::P<[_]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/generics.rs:216:24
kablam!     |
kablam! 216 |             ty_params: P::from_vec(self.ty_params),
kablam!     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParam>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TyParam]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/item.rs:899:13
kablam!     |
kablam! 899 |             P::from_vec(self.bounds),
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TyParamBound]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!     --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/item.rs:1113:45
kablam!      |
kablam! 1113 |         let node = ast::TraitItemKind::Type(bounds, ty);
kablam!      |                                             ^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!      |
kablam!      = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                 found type `syntax::ptr::P<[syntax::ast::TyParamBound]>`
kablam!      = help: here are some functions which might fulfill your needs:
kablam!              - .into_vec()
kablam!              - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/lit.rs:60:42
kablam!    |
kablam! 60 |         self.build_lit(ast::LitKind::Int(value, ast::LitIntType::Unsuffixed))
kablam!    |                                          ^^^^^ expected u128, found u64
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/lit.rs:64:42
kablam!    |
kablam! 64 |         self.build_lit(ast::LitKind::Int(value, ast::LitIntType::Signed(ty)))
kablam!    |                                          ^^^^^ expected u128, found u64
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/lit.rs:88:42
kablam!    |
kablam! 88 |         self.build_lit(ast::LitKind::Int(value, ast::LitIntType::Unsuffixed))
kablam!    |                                          ^^^^^ expected u128, found u64
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/lit.rs:92:42
kablam!    |
kablam! 92 |         self.build_lit(ast::LitKind::Int(value, ast::LitIntType::Unsigned(ty)))
kablam!    |                                          ^^^^^ expected u128, found u64
kablam! 
kablam! error[E0061]: this function takes 3 parameters but 2 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/pat.rs:124:49
kablam!     |
kablam! 124 |         self.build_pat_kind(ast::PatKind::Range(lhs, rhs))
kablam!     |                                                 ^^^^^^^^ expected 3 parameters
kablam! 
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::FieldPat`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/pat.rs:431:29
kablam!     |
kablam! 431 |         self.with_field_pat(ast::FieldPat {
kablam!     |                             ^^^^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::FieldPat`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/pat.rs:445:29
kablam!     |
kablam! 445 |         self.with_field_pat(ast::FieldPat {
kablam!     |                             ^^^^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::FieldPat`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/pat.rs:474:37
kablam!     |
kablam! 474 |         self.builder.with_field_pat(ast::FieldPat {
kablam!     |                                     ^^^^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error[E0560]: struct `syntax::ast::Path` has no field named `global`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/path.rs:159:13
kablam!     |
kablam! 159 |             global: self.global,
kablam!     |             ^^^^^^^ `syntax::ast::Path` does not have this field
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/path.rs:298:25
kablam!     |
kablam! 298 |             parameters: parameters,
kablam!     |                         ^^^^^^^^^^ expected enum `std::option::Option`, found enum `syntax::ast::PathParameters`
kablam!     |
kablam!     = note: expected type `std::option::Option<syntax::ptr::P<syntax::ast::PathParameters>>`
kablam!                found type `syntax::ast::PathParameters`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/path.rs:305:20
kablam!     |
kablam! 305 |             types: P::from_vec(self.tys),
kablam!     |                    ^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ptr::P<syntax::ast::Ty>>`
kablam!                found type `syntax::ptr::P<[syntax::ptr::P<syntax::ast::Ty>]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/path.rs:306:23
kablam!     |
kablam! 306 |             bindings: P::from_vec(self.bindings),
kablam!     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TypeBinding>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TypeBinding]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/path.rs:313:25
kablam!     |
kablam! 313 |             parameters: parameters,
kablam!     |                         ^^^^^^^^^^ expected enum `std::option::Option`, found enum `syntax::ast::PathParameters`
kablam!     |
kablam!     = note: expected type `std::option::Option<syntax::ptr::P<syntax::ast::PathParameters>>`
kablam!                found type `syntax::ast::PathParameters`
kablam! 
kablam! error[E0560]: struct `syntax::ast::Path` has no field named `global`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/qpath.rs:95:13
kablam!    |
kablam! 95 |             global: false,
kablam!    |             ^^^^^^^ `syntax::ast::Path` does not have this field
kablam! 
kablam! error[E0560]: struct `syntax::ast::Path` has no field named `global`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/qpath.rs:106:13
kablam!     |
kablam! 106 |             global: false,
kablam!     |             ^^^^^^^ `syntax::ast::Path` does not have this field
kablam! 
kablam! error: no associated item named `ObjectSum` found for type `syntax::ast::TyKind` in the current scope
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/ty.rs:526:36
kablam!     |
kablam! 526 |         self.builder.build_ty_kind(ast::TyKind::ObjectSum(self.ty, bounds))
kablam!     |                                    ^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/ty.rs:592:59
kablam!     |
kablam! 592 |         self.builder.build_ty_kind(ast::TyKind::ImplTrait(bounds))
kablam!     |                                                           ^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TyParamBound]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error: no method named `into_vec` found for type `std::vec::Vec<syntax::ast::TyParamBound>` in the current scope
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/ty_param.rs:54:37
kablam!    |
kablam! 54 |             bounds: ty_param.bounds.into_vec(),
kablam!    |                                     ^^^^^^^^
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/ty_param.rs:107:21
kablam!     |
kablam! 107 |             bounds: P::from_vec(self.bounds),
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TyParamBound]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/where_predicate.rs:243:21
kablam!     |
kablam! 243 |             bounds: P::from_vec(self.bounds),
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TyParamBound]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0560]: struct `syntax::ast::WhereEqPredicate` has no field named `path`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/where_predicate.rs:322:13
kablam!     |
kablam! 322 |             path: path,
kablam!     |             ^^^^^ `syntax::ast::WhereEqPredicate` does not have this field
kablam! 
kablam! error[E0560]: struct `syntax::ast::WhereEqPredicate` has no field named `ty`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.36.0/src/where_predicate.rs:323:13
kablam!     |
kablam! 323 |             ty: ty,
kablam!     |             ^^^ `syntax::ast::WhereEqPredicate` does not have this field
kablam! 
kablam! error: aborting due to 29 previous errors
kablam! 
blam! Build failed, waiting for other jobs to finish...
kablam! error: failed to run custom build command for `openssl-sys-extras v0.7.14`
kablam! process didn't exit successfully: `/target/debug/build/openssl-sys-extras-f9e8037051c16bfa/build-script-build` (exit code: 101)
kablam! --- stdout
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! OPT_LEVEL = Some("0")
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! HOST = Some("x86_64-unknown-linux-gnu")
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! HOST = Some("x86_64-unknown-linux-gnu")
kablam! CC_x86_64-unknown-linux-gnu = None
kablam! CC_x86_64_unknown_linux_gnu = None
kablam! HOST_CC = None
kablam! CC = None
kablam! HOST = Some("x86_64-unknown-linux-gnu")
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! HOST = Some("x86_64-unknown-linux-gnu")
kablam! CFLAGS_x86_64-unknown-linux-gnu = None
kablam! CFLAGS_x86_64_unknown_linux_gnu = None
kablam! HOST_CFLAGS = None
kablam! CFLAGS = None
kablam! PROFILE = Some("debug")
kablam! running: "cc" "-O0" "-ffunction-sections" "-fdata-sections" "-fPIC" "-g" "-m64" "-o" "/target/debug/build/openssl-sys-extras-8e2dc543f8892677/out/src/openssl_shim.o" "-c" "src/openssl_shim.c"
kablam! cargo:warning=src/openssl_shim.c:1:26: fatal error: openssl/hmac.h: No such file or directory
kablam! cargo:warning=compilation terminated.
kablam! ExitStatus(ExitStatus(256))
kablam! 
kablam! 
kablam! command did not execute successfully, got: exit code: 1
kablam! 
kablam! 
kablam! 
kablam! --- stderr
kablam! thread 'main' panicked at 'explicit panic', /cargo-home/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.42/src/lib.rs:1127
kablam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
kablam! 
boom! running `docker rm -f e30477e6d99bb95c60cc157f6ccb1151a4dd176b2b97040d169f4cdf931bc123`
blam! e30477e6d99bb95c60cc157f6ccb1151a4dd176b2b97040d169f4cdf931bc123
