boom! testing monster-0.1.27 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 9c3dbc1dec62fa73bd82c0066ab67165ed18391dfe91df30ca60173f4337c366
boom! running `docker start -a 9c3dbc1dec62fa73bd82c0066ab67165ed18391dfe91df30ca60173f4337c366`
kablam!    Compiling monster v0.1.27 (file:///source)
kablam! warning: unreachable expression, #[warn(unreachable_code)] on by default
kablam!   --> src/incubation/fmt/mod.rs:71:22
kablam!    |
kablam! 71 |                 _ => return return Err(Error::UnexpectedRightBrace) // No standalone right brace allowed
kablam!    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.28 secs
boom! running `docker rm -f 9c3dbc1dec62fa73bd82c0066ab67165ed18391dfe91df30ca60173f4337c366`
blam! 9c3dbc1dec62fa73bd82c0066ab67165ed18391dfe91df30ca60173f4337c366
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! b6c1b1d55e46b43056fff4302fc9636a92dccb4b097547672afda39bbc96de78
boom! running `docker start -a b6c1b1d55e46b43056fff4302fc9636a92dccb4b097547672afda39bbc96de78`
kablam!    Compiling monster v0.1.27 (file:///source)
kablam! warning: unreachable expression, #[warn(unreachable_code)] on by default
kablam!   --> src/incubation/fmt/mod.rs:71:22
kablam!    |
kablam! 71 |                 _ => return return Err(Error::UnexpectedRightBrace) // No standalone right brace allowed
kablam!    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.88 secs
boom! running `docker rm -f b6c1b1d55e46b43056fff4302fc9636a92dccb4b097547672afda39bbc96de78`
blam! b6c1b1d55e46b43056fff4302fc9636a92dccb4b097547672afda39bbc96de78
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 80ef242237d67c42483e371effd2e53a41b6738d44ca0174b570427968bad42f
boom! running `docker start -a 80ef242237d67c42483e371effd2e53a41b6738d44ca0174b570427968bad42f`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/monster-b0ef258fbf5643fd
blam! 
blam! running 18 tests
blam! test incubation::ref_eq::test::ref_eq_rc ... ok
blam! test incubation::ref_eq::test::ref_eq_literal ... ok
blam! test incubation::ref_eq::test::ref_eq_box ... ok
blam! test incubation::reverse_bitorder::test::sample_u8 ... ok
blam! test incubation::reverse_bitorder::test::sample_u16 ... ok
blam! test incubation::slice_take_while::test::slice_take_while_basic ... ok
blam! test incubation::reverse_bitorder::test::involution_u8 ... ok
blam! test incubation::slice_take_while::test::slice_take_while_empty ... ok
blam! test incubation::slice_take_while::test::slice_take_while_identity ... ok
blam! test incubation::split_int::test::mut_u16_get_high ... ok
blam! test incubation::split_int::test::mut_u16_get_low ... ok
blam! test incubation::split_int::test::mut_u16_set_high ... ok
blam! test incubation::split_int::test::mut_u16_set_low ... ok
blam! test incubation::split_int::test::u16_high ... ok
blam! test incubation::split_int::test::u16_low ... ok
blam! test incubation::swap_tuple::tests::swap_tuple_ref ... ok
blam! test incubation::swap_tuple::tests::swap_tuple_value ... ok
blam! test incubation::reverse_bitorder::test::involution_u16 ... ok
blam! 
blam! test result: ok. 18 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests monster
blam! 
blam! running 15 tests
blam! test anon_0 ... ok
blam! test array_type_0 ... ok
blam! test incubation::fmt::format_0 ... ok
blam! test incubation::find_and_take_0 ... ok
blam! test incubation::map_ref_mut::MapRefMutExt::map_ref_mut_0 ... ok
blam! warning: field is never used: `init_handle`, #[warn(dead_code)] on by default
blam!   --> <anon>:12:5
blam!    |
blam! 12 |     init_handle: LocalInitHandle<MyLib>
blam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: unused variable: `l1`, #[warn(unused_variables)] on by default
blam!   --> <anon>:29:9
blam!    |
blam! 29 |     let l1 = MyLib::new();
blam!    |         ^^
blam! 
blam! warning: unused variable: `l2`, #[warn(unused_variables)] on by default
blam!   --> <anon>:30:9
blam!    |
blam! 30 |     let l2 = MyLib::new();
blam!    |         ^^
blam! 
blam! warning: unused variable: `l3`, #[warn(unused_variables)] on by default
blam!   --> <anon>:31:9
blam!    |
blam! 31 |     let l3 = MyLib::new();
blam!    |         ^^
blam! 
blam! test incubation::global_init_cleanup_0 ... ok
blam! test incubation::map_ref_mut::map_ref_mut_0 ... ok
blam! test incubation::owning_ref_mut::OwningRefMut_0 ... ok
blam! test incubation::some_if::some_if_0 ... ok
blam! test incubation::slice_drop_last_0 ... ok
blam! test incubation::slice_drop_first_0 ... ok
blam! warning: function is never used: `is_palindrome`, #[warn(dead_code)] on by default
blam!  --> <anon>:5:1
blam!   |
blam! 5 |   fn is_palindrome<T: Eq + PartialEq>(slice: &[T]) -> bool {
blam!   |  _^ starting here...
blam! 6 | |     slice.zip_ends().all(|(a, b)| a == b)
blam! 7 | | }
blam!   | |_^ ...ending here
blam! 
blam! test incubation::with_lock::WithLock::with_lock_0 ... ok
blam! test incubation::zip_ends::ZipEnds_0 ... ok
blam! warning: static item is never used: `LOG_INIT`, #[warn(dead_code)] on by default
blam!  --> <anon>:6:2
blam!   |
blam! 6 |  static LOG_INIT: Once = ONCE_INIT;
blam!   |  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! test init_tests_0 ... ok
blam! test mutate_0 ... ok
blam! 
blam! test result: ok. 15 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 80ef242237d67c42483e371effd2e53a41b6738d44ca0174b570427968bad42f`
blam! 80ef242237d67c42483e371effd2e53a41b6738d44ca0174b570427968bad42f
