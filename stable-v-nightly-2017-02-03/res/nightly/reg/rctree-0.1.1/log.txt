boom! testing rctree-0.1.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! e55f4845b8fb200d9a3aeca0de65de11ef0523df7b61f131b7c8bf260722335a
boom! running `docker start -a e55f4845b8fb200d9a3aeca0de65de11ef0523df7b61f131b7c8bf260722335a`
kablam!    Compiling rctree v0.1.1 (file:///source)
kablam! error: no method named `downgrade` found for type `std::rc::Rc<std::cell::RefCell<Node<T>>>` in the current scope
kablam!    --> src/lib.rs:224:51
kablam!     |
kablam! 224 |             new_child_borrow.parent = Some(self.0.downgrade());
kablam!     |                                                   ^^^^^^^^^
kablam!     |
kablam!     = note: found the following associated functions; to be used as methods, functions must have a `self` parameter
kablam!     = note: candidate #1 is defined in an impl for the type `std::rc::Rc<_>`
kablam! 
kablam! error: no method named `downgrade` found for type `std::rc::Rc<std::cell::RefCell<Node<T>>>` in the current scope
kablam!    --> src/lib.rs:231:55
kablam!     |
kablam! 231 |             self_borrow.last_child = Some(new_child.0.downgrade());
kablam!     |                                                       ^^^^^^^^^
kablam!     |
kablam!     = note: found the following associated functions; to be used as methods, functions must have a `self` parameter
kablam!     = note: candidate #1 is defined in an impl for the type `std::rc::Rc<_>`
kablam! 
kablam! error: no method named `downgrade` found for type `std::rc::Rc<std::cell::RefCell<Node<T>>>` in the current scope
kablam!    --> src/lib.rs:255:51
kablam!     |
kablam! 255 |             new_child_borrow.parent = Some(self.0.downgrade());
kablam!     |                                                   ^^^^^^^^^
kablam!     |
kablam!     = note: found the following associated functions; to be used as methods, functions must have a `self` parameter
kablam!     = note: candidate #1 is defined in an impl for the type `std::rc::Rc<_>`
kablam! 
kablam! error: no method named `downgrade` found for type `std::rc::Rc<std::cell::RefCell<Node<T>>>` in the current scope
kablam!    --> src/lib.rs:261:80
kablam!     |
kablam! 261 |                         first_child_borrow.previous_sibling = Some(new_child.0.downgrade());
kablam!     |                                                                                ^^^^^^^^^
kablam!     |
kablam!     = note: found the following associated functions; to be used as methods, functions must have a `self` parameter
kablam!     = note: candidate #1 is defined in an impl for the type `std::rc::Rc<_>`
kablam! 
kablam! error: no method named `downgrade` found for type `std::rc::Rc<std::cell::RefCell<Node<T>>>` in the current scope
kablam!    --> src/lib.rs:267:63
kablam!     |
kablam! 267 |                     self_borrow.last_child = Some(new_child.0.downgrade());
kablam!     |                                                               ^^^^^^^^^
kablam!     |
kablam!     = note: found the following associated functions; to be used as methods, functions must have a `self` parameter
kablam!     = note: candidate #1 is defined in an impl for the type `std::rc::Rc<_>`
kablam! 
kablam! error: no method named `downgrade` found for type `std::rc::Rc<std::cell::RefCell<Node<T>>>` in the current scope
kablam!    --> src/lib.rs:285:63
kablam!     |
kablam! 285 |             new_sibling_borrow.previous_sibling = Some(self.0.downgrade());
kablam!     |                                                               ^^^^^^^^^
kablam!     |
kablam!     = note: found the following associated functions; to be used as methods, functions must have a `self` parameter
kablam!     = note: candidate #1 is defined in an impl for the type `std::rc::Rc<_>`
kablam! 
kablam! error: no method named `downgrade` found for type `std::rc::Rc<std::cell::RefCell<Node<T>>>` in the current scope
kablam!    --> src/lib.rs:294:83
kablam!     |
kablam! 294 |                         next_sibling_borrow.previous_sibling = Some(new_sibling.0.downgrade());
kablam!     |                                                                                   ^^^^^^^^^
kablam!     |
kablam!     = note: found the following associated functions; to be used as methods, functions must have a `self` parameter
kablam!     = note: candidate #1 is defined in an impl for the type `std::rc::Rc<_>`
kablam! 
kablam! error: no method named `downgrade` found for type `std::rc::Rc<std::cell::RefCell<Node<T>>>` in the current scope
kablam!    --> src/lib.rs:302:75
kablam!     |
kablam! 302 |                             parent_borrow.last_child = Some(new_sibling.0.downgrade());
kablam!     |                                                                           ^^^^^^^^^
kablam!     |
kablam!     = note: found the following associated functions; to be used as methods, functions must have a `self` parameter
kablam!     = note: candidate #1 is defined in an impl for the type `std::rc::Rc<_>`
kablam! 
kablam! error: no method named `downgrade` found for type `std::rc::Rc<std::cell::RefCell<Node<T>>>` in the current scope
kablam!    --> src/lib.rs:330:63
kablam!     |
kablam! 330 |             self_borrow.previous_sibling = Some(new_sibling.0.downgrade());
kablam!     |                                                               ^^^^^^^^^
kablam!     |
kablam!     = note: found the following associated functions; to be used as methods, functions must have a `self` parameter
kablam!     = note: candidate #1 is defined in an impl for the type `std::rc::Rc<_>`
kablam! 
kablam! error: aborting due to 9 previous errors
kablam! 
kablam! error: Could not compile `rctree`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f e55f4845b8fb200d9a3aeca0de65de11ef0523df7b61f131b7c8bf260722335a`
blam! e55f4845b8fb200d9a3aeca0de65de11ef0523df7b61f131b7c8bf260722335a
