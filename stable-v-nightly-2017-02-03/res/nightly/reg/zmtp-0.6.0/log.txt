boom! testing zmtp-0.6.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 220eee5365c23d04c6faa6765c1e4165ca2813c17184cd65ab1278b249356d59
boom! running `docker start -a 220eee5365c23d04c6faa6765c1e4165ca2813c17184cd65ab1278b249356d59`
kablam!    Compiling zmtp v0.6.0 (file:///source)
kablam! warning: patterns aren't allowed in methods without bodies, #[warn(patterns_in_fns_without_body)] on by default
kablam!   --> src/types.rs:36:24
kablam!    |
kablam! 36 |     fn peek(&mut self, mut buf: &mut [u8])  -> io::Result<usize>;
kablam!    |                        ^^^^^^^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #35203 <https://github.com/rust-lang/rust/issues/35203>
kablam! 
kablam! warning: unused import: `ReadBytesExt`, #[warn(unused_imports)] on by default
kablam!  --> src/reader.rs:4:34
kablam!   |
kablam! 4 | use self::byteorder::{ByteOrder, ReadBytesExt, BigEndian};
kablam!   |                                  ^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.49 secs
boom! running `docker rm -f 220eee5365c23d04c6faa6765c1e4165ca2813c17184cd65ab1278b249356d59`
blam! 220eee5365c23d04c6faa6765c1e4165ca2813c17184cd65ab1278b249356d59
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 322fc36a11f958605a3f4b285e332216712f03318d644918425e75cf41be8109
boom! running `docker start -a 322fc36a11f958605a3f4b285e332216712f03318d644918425e75cf41be8109`
kablam!    Compiling zmtp v0.6.0 (file:///source)
kablam! warning: patterns aren't allowed in methods without bodies, #[warn(patterns_in_fns_without_body)] on by default
kablam!   --> src/types.rs:36:24
kablam!    |
kablam! 36 |     fn peek(&mut self, mut buf: &mut [u8])  -> io::Result<usize>;
kablam!    |                        ^^^^^^^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #35203 <https://github.com/rust-lang/rust/issues/35203>
kablam! 
kablam! warning: unused import: `ReadBytesExt`, #[warn(unused_imports)] on by default
kablam!  --> src/reader.rs:4:34
kablam!   |
kablam! 4 | use self::byteorder::{ByteOrder, ReadBytesExt, BigEndian};
kablam!   |                                  ^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `Read`, #[warn(unused_imports)] on by default
kablam!   --> src/lib.rs:17:19
kablam!    |
kablam! 17 |     use std::io::{Read, Write};
kablam!    |                   ^^^^
kablam! 
kablam! warning: unused import: `Write`, #[warn(unused_imports)] on by default
kablam!   --> src/lib.rs:17:25
kablam!    |
kablam! 17 |     use std::io::{Read, Write};
kablam!    |                         ^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 4.36 secs
boom! running `docker rm -f 322fc36a11f958605a3f4b285e332216712f03318d644918425e75cf41be8109`
blam! 322fc36a11f958605a3f4b285e332216712f03318d644918425e75cf41be8109
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! c7b29d61bf933937d861ba72bb7272228d936c2c61115b73962f1c012544001d
boom! running `docker start -a c7b29d61bf933937d861ba72bb7272228d936c2c61115b73962f1c012544001d`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/zmtp-ad6d2c69fc3db06c
blam! 
blam! running 21 tests
blam! test zmtp_tests::deserialize_greeting ... ok
blam! test zmtp_tests::create_cmd_with_name_too_long ... ok
blam! test zmtp_tests::deserialize_frame ... ok
blam! test zmtp_tests::deserialize_multiframe_msg ... ok
blam! test zmtp_tests::deserialize_long_cmd ... ok
blam! test zmtp_tests::deserialize_single_frame_msg ... ok
blam! test zmtp_tests::deserialize_short_cmd ... ok
blam! test zmtp_tests::serialize_frame ... ok
blam! test zmtp_tests::deserialize_traffic ... ok
blam! test zmtp_tests::serialize_greeting ... ok
blam! test zmtp_tests::serialize_short_cmd ... ok
blam! test zmtp_tests::serialize_long_cmd ... ok
blam! test zmtp_tests::serialize_multiframe_msg ... ok
blam! test zmtp_tests::serialize_single_frame_msg ... ok
blam! test zmtp_tests::serialize_traffic ... ok
blam! test zmtp_tests::validate_basic_cmd ... ok
blam! test zmtp_tests::validate_basic_cmd_with_invalid_name_char ... ok
blam! test zmtp_tests::validate_basic_cmd_with_name_digit ... ok
blam! test zmtp_tests::validate_basic_cmd_with_name_too_short ... ok
blam! test zmtp_tests::validate_basic_cmd_with_null_name_char ... ok
blam! test zmtp_tests::validate_basic_cmd_with_special_name_char ... ok
blam! 
blam! test result: ok. 21 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests zmtp
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f c7b29d61bf933937d861ba72bb7272228d936c2c61115b73962f1c012544001d`
blam! c7b29d61bf933937d861ba72bb7272228d936c2c61115b73962f1c012544001d
