boom! testing specialize-0.0.3 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! a5f5d7ca14e5317dee544056448121176230dae2607c612c0eb89a6ae7fc7949
boom! running `docker start -a a5f5d7ca14e5317dee544056448121176230dae2607c612c0eb89a6ae7fc7949`
kablam!    Compiling specialize v0.0.3 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.57 secs
boom! running `docker rm -f a5f5d7ca14e5317dee544056448121176230dae2607c612c0eb89a6ae7fc7949`
blam! a5f5d7ca14e5317dee544056448121176230dae2607c612c0eb89a6ae7fc7949
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! b486874fcb4a3534350bf7f49810e33a795b658c143e8c3f8f6fb8b064222e4b
boom! running `docker start -a b486874fcb4a3534350bf7f49810e33a795b658c143e8c3f8f6fb8b064222e4b`
kablam!    Compiling specialize v0.0.3 (file:///source)
kablam! warning: patterns aren't allowed in methods without bodies, #[warn(patterns_in_fns_without_body)] on by default
kablam!    --> src/lib.rs:594:65
kablam!     |
kablam! 593 |               specialize! {
kablam!     |  _____________- starting here...
kablam! 594 | |                 trait fn WriteTest::write_test[W: Write](&self, mut w: W) -> io::Result<()>;
kablam!     | |                                                                 ^^^^^
kablam! 595 | |
kablam! 596 | |                 match impl[T: ?Sized] for T {
kablam! 597 | |                     where [T: Display] => writeln!(w, "{}", self),
kablam! 598 | |                     _ => Err(io::Error::new(io::ErrorKind::Other, "unimplemented")),
kablam! 599 | |                 }
kablam! 600 | |             }
kablam!     | |_____________- ...ending here: in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #35203 <https://github.com/rust-lang/rust/issues/35203>
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/lib.rs:594:65
kablam!     |
kablam! 593 |               specialize! {
kablam!     |  _____________- starting here...
kablam! 594 | |                 trait fn WriteTest::write_test[W: Write](&self, mut w: W) -> io::Result<()>;
kablam!     | |                                                                 ^^^^^
kablam! 595 | |
kablam! 596 | |                 match impl[T: ?Sized] for T {
kablam! 597 | |                     where [T: Display] => writeln!(w, "{}", self),
kablam! 598 | |                     _ => Err(io::Error::new(io::ErrorKind::Other, "unimplemented")),
kablam! 599 | |                 }
kablam! 600 | |             }
kablam!     | |_____________- ...ending here: in this macro invocation
kablam! 
kablam! warning: unused variable: `w`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:594:65
kablam!     |
kablam! 593 |               specialize! {
kablam!     |  _____________- starting here...
kablam! 594 | |                 trait fn WriteTest::write_test[W: Write](&self, mut w: W) -> io::Result<()>;
kablam!     | |                                                                 ^^^^^
kablam! 595 | |
kablam! 596 | |                 match impl[T: ?Sized] for T {
kablam! 597 | |                     where [T: Display] => writeln!(w, "{}", self),
kablam! 598 | |                     _ => Err(io::Error::new(io::ErrorKind::Other, "unimplemented")),
kablam! 599 | |                 }
kablam! 600 | |             }
kablam!     | |_____________- ...ending here: in this macro invocation
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.23 secs
boom! running `docker rm -f b486874fcb4a3534350bf7f49810e33a795b658c143e8c3f8f6fb8b064222e4b`
blam! b486874fcb4a3534350bf7f49810e33a795b658c143e8c3f8f6fb8b064222e4b
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 5743674d9e232d756f5b5aff90ae567edab75ce6e89d5b39ae8446e367a19b65
boom! running `docker start -a 5743674d9e232d756f5b5aff90ae567edab75ce6e89d5b39ae8446e367a19b65`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/specialize-1f28c552bef3b1e1
blam! 
blam! running 7 tests
blam! test test::constrain_eq_value ... ok
blam! test test::constrain_eq ... ok
blam! test test::by_value ... ok
blam! test test::constrain_mut ... ok
blam! test test::constrain_ref ... ok
blam! test test::by_type ... ok
blam! test test::fn_bounds ... ok
blam! 
blam! test result: ok. 7 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests specialize
blam! 
blam! running 3 tests
blam! warning: function is never used: `generic_function`, #[warn(dead_code)] on by default
blam!   --> <anon>:5:1
blam!    |
blam! 5  |   fn generic_function<T: ?Sized>(value: &T) -> bool {
blam!    |  _^ starting here...
blam! 6  | |     if let Some(value_bool) = constrain!(ref value as bool) {
blam! 7  | |         *value_bool
blam! 8  | |     } else if constrain!(type T as i32) {
blam! 9  | |         true
blam! 10 | |     } else {
blam! 11 | |         false
blam! 12 | |     }
blam! 13 | | }
blam!    | |_^ ...ending here
blam! 
blam! test _1 ... ok
blam! warning: function is never used: `generic_function`, #[warn(dead_code)] on by default
blam!   --> <anon>:7:1
blam!    |
blam! 7  |   fn generic_function<T: Read>(read: &mut T) {
blam!    |  _^ starting here...
blam! 8  | |     if let Some(read_seek) = constrain!(ref mut [read: Read + Seek] = Cursor<Repeat>) {
blam! 9  | |         read_seek.seek(SeekFrom::Start(0));
blam! 10 | |     } else if constrain!(type [T: Write]) {
blam! 11 | |         // ...
blam! 12 | |     }
blam! 13 | | }
blam!    | |_^ ...ending here
blam! 
blam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
blam!  --> <anon>:9:9
blam!   |
blam! 9 |         read_seek.seek(SeekFrom::Start(0));
blam!   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! test _0 ... ok
blam! warning: function is never used: `generic_function`, #[warn(dead_code)] on by default
blam!   --> <anon>:7:1
blam!    |
blam! 7  | fn generic_function<T: Read>(read: &mut T) {
blam!    | ^
blam! 
blam! test _2 ... ok
blam! 
blam! test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 5743674d9e232d756f5b5aff90ae567edab75ce6e89d5b39ae8446e367a19b65`
blam! 5743674d9e232d756f5b5aff90ae567edab75ce6e89d5b39ae8446e367a19b65
