boom! testing must-0.2.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 031362943b7598228a6e176dfe953b522a9f2987e31dd85f0f2bf6ec42b62119
boom! running `docker start -a 031362943b7598228a6e176dfe953b522a9f2987e31dd85f0f2bf6ec42b62119`
kablam!    Compiling mutator v0.1.0
kablam!    Compiling must v0.2.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.7 secs
boom! running `docker rm -f 031362943b7598228a6e176dfe953b522a9f2987e31dd85f0f2bf6ec42b62119`
blam! 031362943b7598228a6e176dfe953b522a9f2987e31dd85f0f2bf6ec42b62119
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 9b442f3c9d0c96073e6205cdbf75365f89c2cfa835b580583ccbe53c08957b5e
boom! running `docker start -a 9b442f3c9d0c96073e6205cdbf75365f89c2cfa835b580583ccbe53c08957b5e`
kablam!    Compiling must v0.2.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.93 secs
boom! running `docker rm -f 9b442f3c9d0c96073e6205cdbf75365f89c2cfa835b580583ccbe53c08957b5e`
blam! 9b442f3c9d0c96073e6205cdbf75365f89c2cfa835b580583ccbe53c08957b5e
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! c16297d389992038d6d52bb0f3005267a91015ce0a174b119833d3af0584d62d
boom! running `docker start -a c16297d389992038d6d52bb0f3005267a91015ce0a174b119833d3af0584d62d`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/compile-4d3d1bfce8746e88
blam! 
blam! running 5 tests
blam! test must_have_len ... ok
blam! test must_be_in_range ... ok
blam! test must_be ... ok
blam! test must_be_upper ... ok
blam! test test_some ... ok
blam! 
blam! test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/failure-eb245fbf5de78162
blam! 
blam! running 4 tests
blam! test test_it ... ok
blam! test test ... ok
blam! test custom_msg ... ok
blam! test custom_msg_fmt ... ok
blam! 
blam! test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/must-aba3a1ac5359411c
blam! 
blam! running 2 tests
blam! test matchers::range::test_is_in_range ... ok
blam! test marker::collections::tests::test ... ok
blam! 
blam! test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/panic_on_drop-a5106b154f7ab4bf
blam! 
blam! running 2 tests
blam! test test_on_drop ... ok
blam! test test_only_once_when_or_called ... ok
blam! 
blam! test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests must
blam! 
blam! running 21 tests
blam! test _0 ... ignored
blam! test _1 ... ignored
blam! test _2 ... ignored
blam! test _3 ... ignored
blam! error[E0308]: mismatched types
blam!  --> <anon>:9:1
blam!   |
blam! 9 | assert_eq!((..10).start(), None);
blam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `collections::Bound`, found enum `std::option::Option`
blam!   |
blam!   = note: expected type `collections::Bound<&{integer}>`
blam!              found type `std::option::Option<_>`
blam!   = help: here are some functions which might fulfill your needs:
blam!           - .unwrap()
blam!           - .unwrap_or_default()
blam!   = note: this error originates in a macro outside of the current crate
blam! 
blam! error[E0308]: mismatched types
blam!   --> <anon>:10:1
blam!    |
blam! 10 | assert_eq!((3..10).start(), Some(&3));
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `collections::Bound`, found enum `std::option::Option`
blam!    |
blam!    = note: expected type `collections::Bound<&{integer}>`
blam!               found type `std::option::Option<&{integer}>`
blam!    = help: here are some functions which might fulfill your needs:
blam!            - .unwrap()
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'rustc' panicked at 'Box<Any>', /buildslave/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/librustc/session/mod.rs:203
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! test marker::range::RangeArgument::start_0 ... FAILED
blam! error[E0308]: mismatched types
blam!  --> <anon>:9:1
blam!   |
blam! 9 | assert_eq!((3..).end(), None);
blam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `collections::Bound`, found enum `std::option::Option`
blam!   |
blam!   = note: expected type `collections::Bound<&{integer}>`
blam!              found type `std::option::Option<_>`
blam!   = help: here are some functions which might fulfill your needs:
blam!           - .unwrap()
blam!           - .unwrap_or_default()
blam!   = note: this error originates in a macro outside of the current crate
blam! 
blam! error[E0308]: mismatched types
blam!   --> <anon>:10:1
blam!    |
blam! 10 | assert_eq!((3..10).end(), Some(&10));
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `collections::Bound`, found enum `std::option::Option`
blam!    |
blam!    = note: expected type `collections::Bound<&{integer}>`
blam!               found type `std::option::Option<&{integer}>`
blam!    = help: here are some functions which might fulfill your needs:
blam!            - .unwrap()
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'rustc' panicked at 'Box<Any>', /buildslave/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/librustc/session/mod.rs:203
blam! test marker::range::RangeArgument::end_0 ... FAILED
blam! test _4 ... ok
blam! test lazy_0 ... ok
blam! warning: unused `#[macro_use]` import, #[warn(unused_imports)] on by default
blam!  --> <anon>:1:1
blam!   |
blam! 1 | #[macro_use] extern crate must;
blam!   | ^^^^^^^^^^^^
blam! 
blam! warning: unused `#[macro_use]` import, #[warn(unused_imports)] on by default
blam!  --> <anon>:1:1
blam!   |
blam! 1 | #[macro_use] extern crate must;
blam!   | ^^^^^^^^^^^^
blam! 
blam! test matchers::collections::MustHaveLength::must_have_len_0 ... ok
blam! test matchers::collections::MustHaveLength::must_be_empty_0 ... ok
blam! warning: unused `#[macro_use]` import, #[warn(unused_imports)] on by default
blam!  --> <anon>:1:1
blam!   |
blam! 1 | #[macro_use] extern crate must;
blam!   | ^^^^^^^^^^^^
blam! 
blam! test matchers::option::OptionMust::must_be_some_and_0 ... ok
blam! warning: unused `#[macro_use]` import, #[warn(unused_imports)] on by default
blam!  --> <anon>:1:1
blam!   |
blam! 1 | #[macro_use] extern crate must;
blam!   | ^^^^^^^^^^^^
blam! 
blam! test matchers::option::OptionMust::must_be_some_and_1 ... ok
blam! warning: unused `#[macro_use]` import, #[warn(unused_imports)] on by default
blam!  --> <anon>:1:1
blam!   |
blam! 1 | #[macro_use] extern crate must;
blam!   | ^^^^^^^^^^^^
blam! 
blam! warning: unused `#[macro_use]` import, #[warn(unused_imports)] on by default
blam!  --> <anon>:1:1
blam!   |
blam! 1 | #[macro_use] extern crate must;
blam!   | ^^^^^^^^^^^^
blam! 
blam! test matchers::partial_eq::PartialEqMust::must_be_0 ... ok
blam! test matchers::partial_eq::MustBeBool::must_be_true_0 ... ok
blam! warning: unused `#[macro_use]` import, #[warn(unused_imports)] on by default
blam!  --> <anon>:1:1
blam!   |
blam! 1 | #[macro_use] extern crate must;
blam!   | ^^^^^^^^^^^^
blam! 
blam! test matchers::range::MustBeInRange::must_be_in_range_0 ... ok
blam! warning: unused `#[macro_use]` import, #[warn(unused_imports)] on by default
blam!  --> <anon>:1:1
blam!   |
blam! 1 | #[macro_use] extern crate must;
blam!   | ^^^^^^^^^^^^
blam! 
blam! test matchers::range::MustBeInRange::must_not_be_in_range_0 ... ok
blam! warning: unused `#[macro_use]` import, #[warn(unused_imports)] on by default
blam!  --> <anon>:1:1
blam!   |
blam! 1 | #[macro_use] extern crate must;
blam!   | ^^^^^^^^^^^^
blam! 
blam! test matchers::result::ResultMust::must_be_ok_and_0 ... ok
blam! test matchers::result::ResultMust::must_be_ok_0 ... ok
blam! warning: unused `#[macro_use]` import, #[warn(unused_imports)] on by default
blam!  --> <anon>:1:1
blam!   |
blam! 1 | #[macro_use] extern crate must;
blam!   | ^^^^^^^^^^^^
blam! 
blam! test matchers::text::CasedTextMust::must_be_lowercase_0 ... ok
blam! warning: unused `#[macro_use]` import, #[warn(unused_imports)] on by default
blam!  --> <anon>:1:1
blam!   |
blam! 1 | #[macro_use] extern crate must;
blam!   | ^^^^^^^^^^^^
blam! 
blam! test matchers::result::ResultMust::must_be_ok_and_1 ... ok
blam! warning: unused `#[macro_use]` import, #[warn(unused_imports)] on by default
blam!  --> <anon>:1:1
blam!   |
blam! 1 | #[macro_use] extern crate must;
blam!   | ^^^^^^^^^^^^
blam! 
kablam! error: test failed
blam! test matchers::text::CasedTextMust::must_be_uppercase_0 ... ok
blam! 
blam! failures:
blam! 
blam! failures:
blam!     marker::range::RangeArgument::end_0
blam!     marker::range::RangeArgument::start_0
blam! 
blam! test result: FAILED. 15 passed; 2 failed; 4 ignored; 0 measured
blam! 
boom! running `docker rm -f c16297d389992038d6d52bb0f3005267a91015ce0a174b119833d3af0584d62d`
blam! c16297d389992038d6d52bb0f3005267a91015ce0a174b119833d3af0584d62d
