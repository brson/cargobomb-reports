boom! testing multimap-0.3.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 68e75b0ecddfc6345e097528fcdce93e228641c2fcda67192bb22f752729b227
boom! running `docker start -a 68e75b0ecddfc6345e097528fcdce93e228641c2fcda67192bb22f752729b227`
kablam!    Compiling multimap v0.3.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.82 secs
boom! running `docker rm -f 68e75b0ecddfc6345e097528fcdce93e228641c2fcda67192bb22f752729b227`
blam! 68e75b0ecddfc6345e097528fcdce93e228641c2fcda67192bb22f752729b227
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! b98821485a47d27bd4148622adeca714848110362bc8ff430d9e6938bdf78801
boom! running `docker start -a b98821485a47d27bd4148622adeca714848110362bc8ff430d9e6938bdf78801`
kablam!    Compiling multimap v0.3.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.44 secs
boom! running `docker rm -f b98821485a47d27bd4148622adeca714848110362bc8ff430d9e6938bdf78801`
blam! b98821485a47d27bd4148622adeca714848110362bc8ff430d9e6938bdf78801
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 9bb28e60f4b0083a6d804f9872063172866963b1ff8fe23481dc627aba4fc157
boom! running `docker start -a 9bb28e60f4b0083a6d804f9872063172866963b1ff8fe23481dc627aba4fc157`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/multimap-568b38730b2c07b3
blam! 
blam! running 37 tests
blam! test capacity ... ok
blam! test clear ... ok
blam! test contains_key_false ... ok
blam! test contains_key_true ... ok
blam! test get_mut ... ok
blam! test create ... ok
blam! test get_present ... ok
blam! test get_vec_present ... ok
blam! test get_vec_not_present ... ok
blam! test get_vec_mut ... ok
blam! test get_not_present ... ok
blam! test index ... ok
blam! test index_no_entry ... ok
blam! test insert ... ok
blam! test insert_existing ... ok
blam! test intoiterator_consuming ... ok
blam! test intoiterator_for_mutable_reference_type ... ok
blam! test intoiterator_for_reference_type ... ok
blam! test is_empty_false ... ok
blam! test is_empty_true ... ok
blam! test iter ... ok
blam! test keys ... ok
blam! test new ... ok
blam! test len ... ok
blam! test remove_not_present ... ok
blam! test remove_present ... ok
blam! test test_default ... ok
blam! test test_entry ... ok
blam! test test_entry_vec ... ok
blam! test test_eq ... ok
kablam!    Doc-tests multimap
blam! test test_extend_consuming_hashmap ... ok
blam! test test_extend_consuming_multimap ... ok
blam! test test_extend_ref_hashmap ... ok
blam! test test_extend_ref_multimap ... ok
blam! test test_fmt_debug ... ok
blam! test test_from_iterator ... ok
blam! test with_capacity ... ok
blam! 
blam! test result: ok. 37 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 20 tests
blam! warning: comparison is useless due to type limits, #[warn(unused_comparisons)] on by default
blam!  --> <anon>:6:9
blam!   |
blam! 6 | assert!(map.capacity() >= 0);
blam!   |         ^^^^^^^^^^^^^^^^^^^
blam! 
blam! test MultiMap<K, V>::capacity_0 ... ok
blam! test MultiMap<K, V>::clear_0 ... ok
blam! test MultiMap<K, V>::contains_key_0 ... ok
blam! test MultiMap<K, V>::entry_0 ... ok
blam! test MultiMap<K, V>::get_0 ... ok
blam! test MultiMap<K, V>::get_mut_0 ... ok
blam! test MultiMap<K, V>::get_vec_0 ... ok
blam! test MultiMap<K, V>::get_vec_mut_0 ... ok
blam! test MultiMap<K, V>::is_empty_0 ... ok
blam! test MultiMap<K, V>::insert_0 ... ok
blam! test MultiMap<K, V>::iter_0 ... ok
blam! test MultiMap<K, V>::iter_all_0 ... ok
blam! warning: unused variable: `key`, #[warn(unused_variables)] on by default
blam!   --> <anon>:11:6
blam!    |
blam! 11 | for (key, values) in map.iter_all_mut() {
blam!    |      ^^^
blam! 
blam! test MultiMap<K, V>::iter_all_mut_0 ... ok
blam! test MultiMap<K, V>::iter_mut_0 ... ok
blam! test MultiMap<K, V>::keys_0 ... ok
blam! test MultiMap<K, V>::len_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut map: MultiMap<&str, isize> = MultiMap::new();
blam!   |     ^^^^^^^
blam! 
blam! warning: unused variable: `map`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut map: MultiMap<&str, isize> = MultiMap::new();
blam!   |     ^^^^^^^
blam! 
blam! test MultiMap<K, V>::new_0 ... ok
blam! test MultiMap<K, V>::remove_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut map: MultiMap<&str, isize> = MultiMap::with_capacity(20);
blam!   |     ^^^^^^^
blam! 
blam! warning: unused variable: `map`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut map: MultiMap<&str, isize> = MultiMap::with_capacity(20);
blam!   |     ^^^^^^^
blam! 
blam! test MultiMap<K, V>::with_capacity_0 ... ok
blam! test _0 ... ok
blam! 
blam! test result: ok. 20 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 9bb28e60f4b0083a6d804f9872063172866963b1ff8fe23481dc627aba4fc157`
blam! 9bb28e60f4b0083a6d804f9872063172866963b1ff8fe23481dc627aba4fc157
