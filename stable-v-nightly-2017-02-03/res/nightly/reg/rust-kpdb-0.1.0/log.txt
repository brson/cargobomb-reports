boom! testing rust-kpdb-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! e5c22650508c634c08ebe793d5ece03eb10d1d4757856e0699e5166eecd5451b
boom! running `docker start -a e5c22650508c634c08ebe793d5ece03eb10d1d4757856e0699e5166eecd5451b`
kablam!    Compiling chrono v0.2.25
kablam!    Compiling rust-kpdb v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 22.49 secs
boom! running `docker rm -f e5c22650508c634c08ebe793d5ece03eb10d1d4757856e0699e5166eecd5451b`
blam! e5c22650508c634c08ebe793d5ece03eb10d1d4757856e0699e5166eecd5451b
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! db0aa4c11f5b0e2d94e9c8b3f787b3507fdcfe5e08c8970a8cf4a334d9b26d59
boom! running `docker start -a db0aa4c11f5b0e2d94e9c8b3f787b3507fdcfe5e08c8970a8cf4a334d9b26d59`
kablam!    Compiling rust-kpdb v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 19.5 secs
boom! running `docker rm -f db0aa4c11f5b0e2d94e9c8b3f787b3507fdcfe5e08c8970a8cf4a334d9b26d59`
blam! db0aa4c11f5b0e2d94e9c8b3f787b3507fdcfe5e08c8970a8cf4a334d9b26d59
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! fcfb4c7e0958671c3368eeb9ca58563f9ce1f9b50a08136f30d0c65ce565ec30
boom! running `docker start -a fcfb4c7e0958671c3368eeb9ca58563f9ce1f9b50a08136f30d0c65ce565ec30`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.2 secs
kablam!      Running /target/debug/deps/integration_test-03b5a52caaa1789e
blam! 
blam! running 11 tests
blam! test test_database_open_can_read_saved_database ... ok
blam! test test_database_open_with_correct_password_succeeds ... ok
blam! test test_key_file_open_can_read_saved_binary_key_file ... ok
blam! test test_key_file_open_can_read_saved_hex_key_file ... ok
blam! test test_key_file_open_can_read_saved_xml_key_file ... ok
blam! test test_key_file_open_with_binary_key_returns_correct_data ... ok
blam! test test_key_file_open_with_hex_key_returns_correct_data ... ok
blam! test test_key_file_open_with_xml_key_returns_correct_data ... ok
blam! test test_database_open_with_correct_key_file_and_password_succeeds ... ok
blam! test test_database_open_with_correct_key_file_succeeds ... ok
blam! test test_database_open_with_incorrect_password_fails ... ok
blam! 
blam! test result: ok. 11 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/kpdb-cede66ff0224c239
blam! 
blam! running 63 tests
blam! test crypto::random_gen::tests::test_next_16_bytes_returns_random_bytes ... ok
blam! test crypto::random_gen::tests::test_next_32_bytes_returns_random_bytes ... ok
blam! test crypto::sha256::tests::test_hash_returns_correct_result ... ok
blam! test io::log_reader::tests::test_clear_clears_logged_data ... ok
blam! test io::log_reader::tests::test_logged_returns_correct_data ... ok
blam! test io::log_reader::tests::test_start_and_stop_starts_and_stops_the_logging ... ok
blam! test io::log_writer::tests::test_clear_clears_logged_data ... ok
blam! test io::log_writer::tests::test_logged_returns_correct_data ... ok
blam! test io::log_writer::tests::test_start_and_stop_starts_and_stops_the_logging ... ok
blam! test types::color::tests::test_from_hex_string_inverses_to_hex_string ... ok
blam! test types::color::tests::test_from_hex_string_with_invalid_blue_value_returns_error ... ok
blam! test types::color::tests::test_from_hex_string_with_invalid_green_value_returns_error ... ok
blam! test types::color::tests::test_from_hex_string_with_invalid_red_value_returns_error ... ok
blam! test types::color::tests::test_from_hex_string_with_too_long_hex_string_returns_error ... ok
blam! test types::color::tests::test_from_hex_string_with_too_short_hex_string_returns_error ... ok
blam! test types::color::tests::test_from_hex_string_with_valid_hex_string_returns_color ... ok
blam! test types::color::tests::test_from_hex_string_without_hash_sign_returns_error ... ok
blam! test types::color::tests::test_to_hex_string_with_valid_color_returns_hex_string ... ok
blam! test types::composite_key::tests::test_from_both_returns_correct_instance ... ok
blam! test types::composite_key::tests::test_from_key_file_returns_correct_instance ... ok
blam! test types::composite_key::tests::test_from_password_returns_correct_instance ... ok
blam! test types::composite_key::tests::test_unsecure_inverses_secure ... ok
blam! test types::custom_icon_uuid::tests::test_default_returns_nil_custom_icon_uuid ... ok
blam! test types::custom_icon_uuid::tests::test_new_random_returns_random_custom_icon_uuids ... ok
blam! test types::custom_icon_uuid::tests::test_nil_returns_nil_uuid ... ok
blam! test types::database::tests::test_new_returns_correct_instance ... ok
blam! test types::entry::tests::test_default_returns_correct_instance ... ok
blam! test types::entry::tests::test_new_returns_correct_instance ... ok
blam! test types::entry_uuid::tests::test_default_returns_nil_entry_uuid ... ok
blam! test types::entry_uuid::tests::test_new_random_returns_random_entry_uuids ... ok
blam! test crypto::salsa20::tests::test_decrypt_inverses_encrypt ... ok
blam! test types::entry_uuid::tests::test_nil_returns_nil_uuid ... ok
blam! test types::group::tests::test_default_returns_correct_instance ... ok
blam! test types::group_uuid::tests::test_default_returns_nil_group_uuid ... ok
blam! test types::group::tests::test_new_returns_correct_instance ... ok
blam! test types::group_uuid::tests::test_new_random_returns_random_group_uuids ... ok
blam! test types::group_uuid::tests::test_nil_returns_nil_uuid ... ok
blam! test types::icon::tests::test_from_i32_with_invalid_i32_returns_error ... ok
blam! test types::icon::tests::test_from_i32_with_valid_i32_returns_icon ... ok
blam! test types::icon::tests::test_to_i32_inverses_from_i32 ... ok
blam! test types::icon::tests::test_to_i32_returns_correct_i32 ... ok
blam! test types::key_file::tests::test_new_binary_returns_correct_instance ... ok
blam! test types::key_file::tests::test_new_hex_returns_correct_instance ... ok
blam! test types::key_file::tests::test_new_returns_xml_instance ... ok
blam! test types::key_file::tests::test_new_xml_returns_correct_instance ... ok
blam! test types::master_key::tests::test_new_returns_correct_instance ... ok
blam! test types::master_key::tests::test_unsecure_inverses_secure ... ok
blam! test types::obfuscation::tests::test_default_returns_correct_value ... ok
blam! test types::obfuscation::tests::test_from_i32_with_invalid_i32_returns_error ... ok
blam! test types::obfuscation::tests::test_to_i32_returns_correct_i32 ... ok
blam! test types::obfuscation::tests::test_from_i32_with_valid_i32_returns_obfuscation ... ok
blam! test types::stream_key::tests::test_unpack_returns_correct_array ... ok
blam! test types::stream_key::tests::test_new_returns_correct_instance ... ok
blam! test types::string_key::tests::test_to_string_returns_correct_string ... ok
blam! test types::string_value::tests::test_new_with_plain_value_returns_correct_string_value ... ok
blam! test types::string_key::tests::test_from_string_returns_correct_string_key ... ok
blam! test types::string_value::tests::test_new_with_protected_value_returns_correct_string_value ... ok
blam! test types::transformed_key::tests::test_new_returns_correct_instance ... ok
blam! test types::version::tests::test_new_kdb2_returns_correct_instance ... ok
blam! test types::xml_data::tests::test_default_returns_correct_instance ... ok
blam! test crypto::aes256::tests::test_decrypt_inverses_encrypt ... ok
blam! test types::transformed_key::tests::test_unsecure_inverses_secure ... ok
blam! test compression::gzip::tests::test_decode_inverses_encode ... ok
blam! 
blam! test result: ok. 63 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests kpdb
blam! 
blam! running 26 tests
blam! warning: unused variable: `db`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let db = Database::new(&key);
blam!   |     ^^
blam! 
blam! test _1 ... ok
blam! test _0 ... ok
blam! test _3 ... ok
blam! test _2 ... ok
blam! test _4 ... ok
blam! warning: function is never used: `convert`, #[warn(dead_code)] on by default
blam!  --> <anon>:6:1
blam!   |
blam! 6 |   fn convert() -> Result<(), ColorError> {
blam!   |  _^ starting here...
blam! 7 | | let color = try!(Color::from_hex_string("#abcdef"));
blam! 8 | | Ok(())
blam! 9 | | }
blam!   | |_^ ...ending here
blam! 
blam! warning: unused variable: `color`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let color = try!(Color::from_hex_string("#abcdef"));
blam!   |     ^^^^^
blam! 
blam! test types::color::Color::from_hex_string_0 ... ok
blam! warning: function is never used: `from_both_example`, #[warn(dead_code)] on by default
blam!   --> <anon>:7:1
blam!    |
blam! 7  |   fn from_both_example() -> Result<()> {
blam!    |  _^ starting here...
blam! 8  | | let mut file = try!(File::open("database.key"));
blam! 9  | | let key_file = try!(KeyFile::open(&mut file));
blam! 10 | | let key = CompositeKey::from_both("secret", key_file);
blam! 11 | | Ok(())
blam! 12 | | }
blam!    | |_^ ...ending here
blam! 
blam! warning: unused variable: `key`, #[warn(unused_variables)] on by default
blam!   --> <anon>:10:5
blam!    |
blam! 10 | let key = CompositeKey::from_both("secret", key_file);
blam!    |     ^^^
blam! 
blam! test types::composite_key::CompositeKey::from_both_0 ... ok
blam! warning: function is never used: `from_key_file_example`, #[warn(dead_code)] on by default
blam!   --> <anon>:7:1
blam!    |
blam! 7  |   fn from_key_file_example() -> Result<()> {
blam!    |  _^ starting here...
blam! 8  | | let mut file = try!(File::open("database.key"));
blam! 9  | | let key_file = try!(KeyFile::open(&mut file));
blam! 10 | | let key = CompositeKey::from_key_file(key_file);
blam! 11 | | Ok(())
blam! 12 | | }
blam!    | |_^ ...ending here
blam! 
blam! warning: unused variable: `key`, #[warn(unused_variables)] on by default
blam!   --> <anon>:10:5
blam!    |
blam! 10 | let key = CompositeKey::from_key_file(key_file);
blam!    |     ^^^
blam! 
blam! test types::composite_key::CompositeKey::from_key_file_0 ... ok
blam! warning: unused variable: `hex`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let hex = color.to_hex_string();
blam!   |     ^^^
blam! 
blam! test types::color::Color::to_hex_string_0 ... ok
blam! warning: function is never used: `open_example`, #[warn(dead_code)] on by default
blam!   --> <anon>:7:1
blam!    |
blam! 7  |   fn open_example() -> Result<()> {
blam!    |  _^ starting here...
blam! 8  | | let mut file = try!(File::open("passwords.kdbx"));
blam! 9  | | let key = CompositeKey::from_password("password");
blam! 10 | | let db = try!(Database::open(&mut file, &key));
blam! 11 | | Ok(())
blam! 12 | | }
blam!    | |_^ ...ending here
blam! 
blam! warning: unused variable: `db`, #[warn(unused_variables)] on by default
blam!   --> <anon>:10:5
blam!    |
blam! 10 | let db = try!(Database::open(&mut file, &key));
blam!    |     ^^
blam! 
blam! test types::database::Database::open_0 ... ok
blam! warning: function is never used: `save_example`, #[warn(dead_code)] on by default
blam!   --> <anon>:7:1
blam!    |
blam! 7  |   fn save_example() -> Result<()> {
blam!    |  _^ starting here...
blam! 8  | | let key = CompositeKey::from_password("password");
blam! 9  | | let db = Database::new(&key);
blam! 10 | | let mut file = try!(File::create("new.kdbx"));
blam! 11 | |
blam! 12 | | try!(db.save(&mut file));
blam! 13 | | Ok(())
blam! 14 | | }
blam!    | |_^ ...ending here
blam! 
blam! test types::database::Database::save_0 ... ok
blam! warning: unused variable: `key`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let key = CompositeKey::from_password("secret");
blam!   |     ^^^
blam! 
blam! test types::composite_key::CompositeKey::from_password_0 ... ok
blam! warning: unused variable: `db`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let db = Database::new(&key);
blam!   |     ^^
blam! 
blam! test types::database::Database::new_0 ... ok
blam! warning: unused variable: `icon_id`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let icon_id = icon.to_i32();
blam!   |     ^^^^^^^
blam! 
blam! test types::icon::Icon::to_i32_0 ... ok
blam! warning: function is never used: `from_i32_example`, #[warn(dead_code)] on by default
blam!  --> <anon>:6:1
blam!   |
blam! 6 |   fn from_i32_example() -> Result<Icon, IconError> {
blam!   |  _^ starting here...
blam! 7 | | let icon = try!(Icon::from_i32(0));
blam! 8 | | Ok(icon)
blam! 9 | | }
blam!   | |_^ ...ending here
blam! 
blam! test types::icon::Icon::from_i32_0 ... ok
blam! warning: unused variable: `group`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let group = Group::new("Websites");
blam!   |     ^^^^^
blam! 
blam! test types::group::Group::new_0 ... ok
blam! warning: function is never used: `new_example`, #[warn(dead_code)] on by default
blam!  --> <anon>:6:1
blam!   |
blam! 6 |   fn new_example() -> Result<()> {
blam!   |  _^ starting here...
blam! 7 | | let key = try!(KeyFile::new_binary());
blam! 8 | | Ok(())
blam! 9 | | }
blam!   | |_^ ...ending here
blam! 
blam! warning: unused variable: `key`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let key = try!(KeyFile::new_binary());
blam!   |     ^^^
blam! 
blam! test types::key_file::KeyFile::new_binary_0 ... ok
blam! warning: function is never used: `open_example`, #[warn(dead_code)] on by default
blam!   --> <anon>:7:1
blam!    |
blam! 7  |   fn open_example() -> Result<()> {
blam!    |  _^ starting here...
blam! 8  | | let mut file = try!(File::open("passwords.key"));
blam! 9  | | let key = try!(KeyFile::open(&mut file));
blam! 10 | | Ok(())
blam! 11 | | }
blam!    | |_^ ...ending here
blam! 
blam! warning: unused variable: `key`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:5
blam!   |
blam! 9 | let key = try!(KeyFile::open(&mut file));
blam!   |     ^^^
blam! 
blam! test types::key_file::KeyFile::open_0 ... ok
blam! warning: function is never used: `new_example`, #[warn(dead_code)] on by default
blam!  --> <anon>:6:1
blam!   |
blam! 6 |   fn new_example() -> Result<()> {
blam!   |  _^ starting here...
blam! 7 | | let key = try!(KeyFile::new_hex());
blam! 8 | | Ok(())
blam! 9 | | }
blam!   | |_^ ...ending here
blam! 
blam! warning: unused variable: `key`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let key = try!(KeyFile::new_hex());
blam!   |     ^^^
blam! 
blam! test types::key_file::KeyFile::new_hex_0 ... ok
blam! warning: function is never used: `new_example`, #[warn(dead_code)] on by default
blam!  --> <anon>:6:1
blam!   |
blam! 6 |   fn new_example() -> Result<()> {
blam!   |  _^ starting here...
blam! 7 | | let key = try!(KeyFile::new_xml());
blam! 8 | | Ok(())
blam! 9 | | }
blam!   | |_^ ...ending here
blam! 
blam! warning: unused variable: `key`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let key = try!(KeyFile::new_xml());
blam!   |     ^^^
blam! 
blam! test types::key_file::KeyFile::new_xml_0 ... ok
blam! warning: function is never used: `save_example`, #[warn(dead_code)] on by default
blam!   --> <anon>:7:1
blam!    |
blam! 7  |   fn save_example() -> Result<()> {
blam!    |  _^ starting here...
blam! 8  | | let key = try!(KeyFile::new());
blam! 9  | | let mut file = try!(File::create("new.key"));
blam! 10 | |
blam! 11 | | try!(key.save(&mut file));
blam! 12 | | Ok(())
blam! 13 | | }
blam!    | |_^ ...ending here
blam! 
blam! test types::key_file::KeyFile::save_0 ... ok
blam! warning: unused variable: `integer`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let integer = obfuscation.to_i32();
blam!   |     ^^^^^^^
blam! 
blam! test types::obfuscation::Obfuscation::to_i32_0 ... ok
blam! warning: function is never used: `from_i32_example`, #[warn(dead_code)] on by default
blam!  --> <anon>:6:1
blam!   |
blam! 6 |   fn from_i32_example() -> Result<Obfuscation, ObfuscationError> {
blam!   |  _^ starting here...
blam! 7 | | let obfuscation = try!(Obfuscation::from_i32(0));
blam! 8 | | Ok(obfuscation)
blam! 9 | | }
blam!   | |_^ ...ending here
blam! 
blam! test types::obfuscation::Obfuscation::from_i32_0 ... ok
blam! warning: unused variable: `notes_key`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let notes_key = StringKey::from_string("Notes");
blam!   |     ^^^^^^^^^
blam! 
blam! warning: unused variable: `password_key`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let password_key = StringKey::from_string("Password");
blam!   |     ^^^^^^^^^^^^
blam! 
blam! warning: unused variable: `title_key`, #[warn(unused_variables)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 | let title_key = StringKey::from_string("Title");
blam!   |     ^^^^^^^^^
blam! 
blam! warning: unused variable: `url_key`, #[warn(unused_variables)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 | let url_key = StringKey::from_string("URL");
blam!   |     ^^^^^^^
blam! 
blam! warning: unused variable: `username_key`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:5
blam!   |
blam! 9 | let username_key = StringKey::from_string("UserName");
blam!   |     ^^^^^^^^^^^^
blam! 
blam! warning: unused variable: `other_key`, #[warn(unused_variables)] on by default
blam!   --> <anon>:10:5
blam!    |
blam! 10 | let other_key = StringKey::from_string("Foo");
blam!    |     ^^^^^^^^^
blam! 
blam! test types::string_key::StringKey::from_string_0 ... ok
blam! warning: unused variable: `string`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let string = notes_key.to_string();
blam!   |     ^^^^^^
blam! 
blam! test types::string_key::StringKey::to_string_0 ... ok
blam! warning: unused variable: `plain_value`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let plain_value = StringValue::new("plain", false);
blam!   |     ^^^^^^^^^^^
blam! 
blam! warning: unused variable: `protected_value`, #[warn(unused_variables)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | let protected_value = StringValue::new("secret", true);
blam!   |     ^^^^^^^^^^^^^^^
blam! 
blam! test types::string_value::StringValue::new_0 ... ok
blam! 
blam! test result: ok. 26 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f fcfb4c7e0958671c3368eeb9ca58563f9ce1f9b50a08136f30d0c65ce565ec30`
blam! fcfb4c7e0958671c3368eeb9ca58563f9ce1f9b50a08136f30d0c65ce565ec30
