boom! testing bus-1.1.3 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 94f14f5ea6c05846dc7561889b660d02ee14209f5e71272b390684930970096f
boom! running `docker start -a 94f14f5ea6c05846dc7561889b660d02ee14209f5e71272b390684930970096f`
kablam!    Compiling parking_lot_core v0.1.4
kablam!    Compiling bus v1.1.3 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 7.15 secs
boom! running `docker rm -f 94f14f5ea6c05846dc7561889b660d02ee14209f5e71272b390684930970096f`
blam! 94f14f5ea6c05846dc7561889b660d02ee14209f5e71272b390684930970096f
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 02dfe27145cc6c3d4f1ca3723e0ae77c4b5ea5a82711852cda3bf43ebf138076
boom! running `docker start -a 02dfe27145cc6c3d4f1ca3723e0ae77c4b5ea5a82711852cda3bf43ebf138076`
kablam!    Compiling bus v1.1.3 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 5.53 secs
boom! running `docker rm -f 02dfe27145cc6c3d4f1ca3723e0ae77c4b5ea5a82711852cda3bf43ebf138076`
blam! 02dfe27145cc6c3d4f1ca3723e0ae77c4b5ea5a82711852cda3bf43ebf138076
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! c6f4947d0466f2011dfa838bb7ac6a2a071399f416046a12d6e371eea86a3403
boom! running `docker start -a c6f4947d0466f2011dfa838bb7ac6a2a071399f416046a12d6e371eea86a3403`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/bench-03544da096e53f78
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/bus-ccac615fec3536f0
kablam!      Running /target/debug/deps/lib-6ffb21def6357762
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 13 tests
blam! test it_detects_closure ... ok
blam! test it_fails_when_empty ... ok
blam! test it_handles_leaves ... ok
blam! test it_reads_when_full ... ok
blam! test it_fails_when_full ... ok
blam! test it_recvs_after_close ... ok
blam! test it_runs_blocked_reads ... ok
blam! test it_succeeds_when_not_full ... ok
blam! test it_works ... ok
blam! test it_runs_blocked_writes ... ok
blam! test it_iterates ... ok
blam! test it_can_count_to_10000 ... ok
blam! test test_busy ... ok
blam! 
blam! test result: ok. 13 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests bus
blam! 
blam! running 7 tests
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut rx = tx.add_rx();
blam!   |     ^^^^^^
blam! 
blam! warning: unused variable: `rx`, #[warn(unused_variables)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 | let mut rx = tx.add_rx();
blam!   |     ^^^^^^
blam! 
blam! test Bus<T>::try_broadcast_0 ... ok
blam! test BusReader<T>::try_recv_0 ... ok
blam! test BusReader_0 ... ok
blam! test Bus<T>::add_rx_0 ... ok
blam! test _0 ... ok
blam! test _1 ... ok
blam! test _2 ... ok
blam! 
blam! test result: ok. 7 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f c6f4947d0466f2011dfa838bb7ac6a2a071399f416046a12d6e371eea86a3403`
blam! c6f4947d0466f2011dfa838bb7ac6a2a071399f416046a12d6e371eea86a3403
