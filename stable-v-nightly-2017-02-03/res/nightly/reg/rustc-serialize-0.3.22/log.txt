boom! testing rustc-serialize-0.3.22 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 414cb2634ebfa803a0b0ce83dd08dd44c89031427855532d893b36b87dab3237
boom! running `docker start -a 414cb2634ebfa803a0b0ce83dd08dd44c89031427855532d893b36b87dab3237`
kablam!    Compiling rustc-serialize v0.3.22 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 8.30 secs
boom! running `docker rm -f 414cb2634ebfa803a0b0ce83dd08dd44c89031427855532d893b36b87dab3237`
blam! 414cb2634ebfa803a0b0ce83dd08dd44c89031427855532d893b36b87dab3237
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 40cb8276a4930917a5c8e6e97973e41fef72609c728e0d18e584159d09075822
boom! running `docker start -a 40cb8276a4930917a5c8e6e97973e41fef72609c728e0d18e584159d09075822`
kablam!    Compiling rustc-serialize v0.3.22 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 20.68 secs
boom! running `docker rm -f 40cb8276a4930917a5c8e6e97973e41fef72609c728e0d18e584159d09075822`
blam! 40cb8276a4930917a5c8e6e97973e41fef72609c728e0d18e584159d09075822
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 0a7ea122b98dce4a124aec0c62cb814733f7297636f22e2aa01fd1868384be11
boom! running `docker start -a 0a7ea122b98dce4a124aec0c62cb814733f7297636f22e2aa01fd1868384be11`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/rustc_serialize-c16081de9a2b61a0
blam! 
blam! running 98 tests
blam! test base64::tests::test_from_base64_invalid_char ... ok
blam! test base64::tests::test_from_base64_bytes ... ok
blam! test base64::tests::test_from_base64_basic ... ok
blam! test base64::tests::test_from_base64_invalid_padding ... ok
blam! test base64::tests::test_from_base64_newlines ... ok
blam! test base64::tests::test_to_base64_basic ... ok
blam! test base64::tests::test_from_base64_urlsafe ... ok
blam! test base64::tests::test_to_base64_lf_line_break ... ok
blam! test base64::tests::test_to_base64_padding ... ok
blam! test base64::tests::test_to_base64_url_safe ... ok
blam! test base64::tests::test_to_base64_empty_line_length ... ok
blam! test base64::tests::test_to_base64_crlf_line_break ... ok
blam! test hex::tests::test_from_hex_ignores_whitespace ... ok
blam! test hex::tests::test_from_hex_invalid_char ... ok
blam! test hex::tests::test_from_hex_odd_len ... ok
blam! test hex::tests::test_from_hex_okay ... ok
blam! test hex::tests::test_from_hex_all_bytes ... ok
blam! test json::tests::fixed_length_array ... ok
blam! test json::tests::test_as_array ... ok
blam! test json::tests::test_as_boolean ... ok
blam! test json::tests::test_as_f64 ... ok
blam! test json::tests::test_as_i64 ... ok
blam! test json::tests::test_as_null ... ok
blam! test json::tests::test_as_object ... ok
blam! test json::tests::test_as_string ... ok
blam! test json::tests::test_as_u64 ... ok
blam! test json::tests::test_bad_json_stack_depleted ... ok
blam! test json::tests::test_decode_array ... ok
blam! test json::tests::test_decode_enum ... ok
blam! test hex::tests::test_to_hex ... ok
blam! test json::tests::test_decode_errors_enum ... ok
blam! test json::tests::test_decode_identifiers ... ok
blam! test json::tests::test_decode_errors_struct ... ok
blam! test json::tests::test_decode_map ... ok
blam! test json::tests::test_decode_numbers ... ok
blam! test json::tests::test_decode_option ... ok
blam! test json::tests::test_decode_option_malformed ... ok
blam! test json::tests::test_decode_option_some ... ok
blam! test json::tests::test_decode_result ... ok
blam! test json::tests::test_decode_str ... ok
blam! test hex::tests::test_to_hex_all_bytes ... ok
blam! test json::tests::test_decode_struct_with_nan ... ok
blam! test json::tests::test_decode_tuple ... ok
blam! test json::tests::test_decode_tuple_malformed_length ... ok
blam! test json::tests::test_decode_tuple_malformed_types ... ok
blam! test json::tests::test_encode_decode_phantom_data ... ok
blam! test json::tests::test_encode_hashmap_with_arbitrary_key ... ok
blam! test json::tests::test_encode_hashmap_with_numeric_key ... ok
blam! test json::tests::test_find ... ok
blam! test json::tests::test_find_path ... ok
blam! test json::tests::test_from_str_trait ... ok
blam! test json::tests::test_hashmap_with_enum_key ... ok
blam! test json::tests::test_hashmap_with_numeric_key_can_handle_double_quote_delimited_key ... ok
blam! test json::tests::test_hashmap_with_numeric_key_will_error_with_string_keys ... ok
blam! test json::tests::test_index ... ok
blam! test json::tests::test_is_array ... ok
blam! test json::tests::test_is_boolean ... ok
blam! test json::tests::test_is_f64 ... ok
blam! test json::tests::test_is_i64 ... ok
blam! test json::tests::test_is_null ... ok
blam! test json::tests::test_is_number ... ok
blam! test json::tests::test_is_object ... ok
blam! test json::tests::test_is_string ... ok
blam! test json::tests::test_is_u64 ... ok
blam! test json::tests::test_multiline_errors ... ok
blam! test json::tests::test_negative_zero ... ok
blam! test json::tests::test_prettyencode_hashmap_with_numeric_key ... ok
blam! test json::tests::test_prettyencoder_indent_level_param ... ok
blam! test json::tests::test_read_array ... ok
blam! test json::tests::test_read_array_streaming ... ok
blam! test json::tests::test_read_identifiers ... ok
blam! test json::tests::test_read_identifiers_streaming ... ok
blam! test json::tests::test_read_number ... ok
blam! test json::tests::test_read_object ... ok
blam! test json::tests::test_read_object_streaming ... ok
blam! test json::tests::test_read_str ... ok
blam! test json::tests::test_search ... ok
blam! test json::tests::test_stack ... ok
blam! test json::tests::test_streaming_parser ... ok
blam! test json::tests::test_to_json ... ok
blam! test json::tests::test_trailing_characters ... ok
blam! test json::tests::test_trailing_characters_streaming ... ok
blam! test json::tests::test_decode_option_none ... ok
blam! test json::tests::test_unexpected_token ... ok
blam! test json::tests::test_decode_struct ... ok
blam! test json::tests::test_write_bool ... ok
blam! test json::tests::test_write_array ... ok
blam! test json::tests::test_write_char ... ok
blam! test json::tests::test_write_f64 ... ok
blam! test json::tests::test_write_enum ... ok
blam! test json::tests::test_write_none ... ok
blam! test json::tests::test_write_null ... ok
blam! test json::tests::test_write_object ... ok
blam! test json::tests::test_write_str ... ok
blam! test json::tests::test_write_some ... ok
blam! test json::tests::test_write_i64 ... ok
blam! test serialize::capacity_rules ... ok
blam! test base64::tests::test_base64_random ... ok
blam! 
blam! test result: ok. 98 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests rustc-serialize
blam! 
blam! running 21 tests
blam! test _0 ... ok
blam! test hex::[u8]::to_hex_0 ... ok
blam! test json_0 ... ignored
blam! test base64::str::from_base64_0 ... ok
blam! test base64::[u8]::to_base64_0 ... ok
blam! test hex::str::from_hex_0 ... ok
blam! test json_2 ... ok
blam! warning: unused variable: `decoded`, #[warn(unused_variables)] on by default
blam!   --> <anon>:24:9
blam!    |
blam! 24 |     let decoded: TestStruct = json::decode(&encoded).unwrap();
blam!    |         ^^^^^^^
blam! 
blam! test json_1 ... ok
blam! warning: unused variable: `decoded`, #[warn(unused_variables)] on by default
blam!   --> <anon>:36:9
blam!    |
blam! 36 |     let decoded: TestStruct = json::decode(&json_str).unwrap();
blam!    |         ^^^^^^^
blam! 
blam! test json_3 ... ok
blam! warning: field is never used: `x`, #[warn(dead_code)] on by default
blam!  --> <anon>:5:5
blam!   |
blam! 5 |     x: i32,
blam!   |     ^^^^^^
blam! 
blam! warning: field is never used: `y`, #[warn(dead_code)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 |     y: i32,
blam!   |     ^^^^^^
blam! 
blam! test serialize::Decodable_0 ... ok
blam! test json_4 ... ok
blam! warning: field is never used: `x`, #[warn(dead_code)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 |     x: i32,
blam!   |     ^^^^^^
blam! 
blam! warning: field is never used: `y`, #[warn(dead_code)] on by default
blam!  --> <anon>:7:5
blam!   |
blam! 7 |     y: i32,
blam!   |     ^^^^^^
blam! 
blam! test serialize::Decodable_1 ... ok
blam! warning: struct is never used: `Point`, #[warn(dead_code)] on by default
blam!  --> <anon>:4:1
blam!   |
blam! 4 |   struct Point {
blam!   |  _^ starting here...
blam! 5 | |     x: i32,
blam! 6 | |     y: i32,
blam! 7 | | }
blam!   | |_^ ...ending here
blam! 
blam! test serialize::Encodable_0 ... ok
blam! warning: struct is never used: `Point`, #[warn(dead_code)] on by default
blam!  --> <anon>:5:1
blam!   |
blam! 5 |   struct Point {
blam!   |  _^ starting here...
blam! 6 | |     x: i32,
blam! 7 | |     y: i32,
blam! 8 | | }
blam!   | |_^ ...ending here
blam! 
blam! test serialize::Encodable_1 ... ok
blam! warning: field is never used: `elements`, #[warn(dead_code)] on by default
blam!  --> <anon>:8:5
blam!   |
blam! 8 |     elements: Vec<i32>,
blam!   |     ^^^^^^^^^^^^^^^^^^
blam! 
blam! test serialize::DecoderHelpers::read_to_vec_0 ... ok
blam! warning: enum is never used: `Message`, #[warn(dead_code)] on by default
blam!  --> <anon>:6:1
blam!   |
blam! 6 |   enum Message {
blam!   |  _^ starting here...
blam! 7 | |     Quit,
blam! 8 | |     Move { x: i32, y: i32 },
blam! 9 | | }
blam!   | |_^ ...ending here
blam! 
blam! warning: unused variable: `s`, #[warn(unused_variables)] on by default
blam!   --> <anon>:16:63
blam!    |
blam! 16 |                     s.emit_enum_struct_variant("Quit", 0, 0, |s| Ok(()))
blam!    |                                                               ^
blam! 
blam! warning: the `x:` in this pattern is redundant and can be removed, #[warn(non_shorthand_field_patterns)] on by default
blam!   --> <anon>:18:33
blam!    |
blam! 18 |                 Message::Move { x: x, y: y } => {
blam!    |                                 ^^^^
blam! 
blam! warning: the `y:` in this pattern is redundant and can be removed, #[warn(non_shorthand_field_patterns)] on by default
blam!   --> <anon>:18:39
blam!    |
blam! 18 |                 Message::Move { x: x, y: y } => {
blam!    |                                       ^^^^
blam! 
blam! test serialize::Encoder::emit_enum_struct_variant_0 ... ok
blam! warning: enum is never used: `Message`, #[warn(dead_code)] on by default
blam!  --> <anon>:6:1
blam!   |
blam! 6 |   enum Message {
blam!   |  _^ starting here...
blam! 7 | |     Quit,
blam! 8 | |     ChangeColor(i32, i32, i32),
blam! 9 | | }
blam!   | |_^ ...ending here
blam! 
blam! warning: unused variable: `s`, #[warn(unused_variables)] on by default
blam!   --> <anon>:16:56
blam!    |
blam! 16 |                     s.emit_enum_variant("Quit", 0, 0, |s| Ok(()))
blam!    |                                                        ^
blam! 
blam! test serialize::Encoder::emit_enum_variant_0 ... ok
blam! warning: struct is never used: `Point`, #[warn(dead_code)] on by default
blam!  --> <anon>:6:1
blam!   |
blam! 6 |   struct Point {
blam!   |  _^ starting here...
blam! 7 | |     x: i32,
blam! 8 | |     y: i32,
blam! 9 | | }
blam!   | |_^ ...ending here
blam! 
blam! test serialize::Encoder::emit_struct_0 ... ok
blam! warning: struct is never used: `SimpleMap`, #[warn(dead_code)] on by default
blam!  --> <anon>:6:1
blam!   |
blam! 6 |   struct SimpleMap<K,V> {
blam!   |  _^ starting here...
blam! 7 | |     entries: Vec<(K,V)>,
blam! 8 | | }
blam!   | |_^ ...ending here
blam! 
blam! test serialize::Encoder::emit_map_0 ... ok
blam! warning: struct is never used: `NumberSequence`, #[warn(dead_code)] on by default
blam!  --> <anon>:7:1
blam!   |
blam! 7 |   struct NumberSequence {
blam!   |  _^ starting here...
blam! 8 | |     elements: Vec<i32>,
blam! 9 | | }
blam!   | |_^ ...ending here
blam! 
blam! test serialize::EncoderHelpers::emit_from_vec_0 ... ok
blam! warning: struct is never used: `Pair`, #[warn(dead_code)] on by default
blam!  --> <anon>:6:1
blam!   |
blam! 6 | struct Pair(i32,i32);
blam!   | ^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! test serialize::Encoder::emit_tuple_struct_0 ... ok
blam! 
blam! test result: ok. 20 passed; 0 failed; 1 ignored; 0 measured
blam! 
boom! running `docker rm -f 0a7ea122b98dce4a124aec0c62cb814733f7297636f22e2aa01fd1868384be11`
blam! 0a7ea122b98dce4a124aec0c62cb814733f7297636f22e2aa01fd1868384be11
