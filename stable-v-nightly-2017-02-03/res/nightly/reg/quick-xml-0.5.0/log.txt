boom! testing quick-xml-0.5.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! e51bd2648bc6ad52bdcd61dc4d52d520ba57c2272b1b5e6aac6c8de416569d4e
boom! running `docker start -a e51bd2648bc6ad52bdcd61dc4d52d520ba57c2272b1b5e6aac6c8de416569d4e`
kablam!    Compiling quick-xml v0.5.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.81 secs
boom! running `docker rm -f e51bd2648bc6ad52bdcd61dc4d52d520ba57c2272b1b5e6aac6c8de416569d4e`
blam! e51bd2648bc6ad52bdcd61dc4d52d520ba57c2272b1b5e6aac6c8de416569d4e
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 851caf178cfb627044a09c1caa6133537d8ec9ced5e9ad52995f71961ec26611
boom! running `docker start -a 851caf178cfb627044a09c1caa6133537d8ec9ced5e9ad52995f71961ec26611`
kablam!    Compiling quick-xml v0.5.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 6.69 secs
boom! running `docker rm -f 851caf178cfb627044a09c1caa6133537d8ec9ced5e9ad52995f71961ec26611`
blam! 851caf178cfb627044a09c1caa6133537d8ec9ced5e9ad52995f71961ec26611
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! b98df1acf16cda43b377b34cb90f0d08a8e8aced662cfb340d114f9da50d1749
boom! running `docker start -a b98df1acf16cda43b377b34cb90f0d08a8e8aced662cfb340d114f9da50d1749`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/quick_xml-c4786e02bd4582e9
blam! 
blam! running 29 tests
blam! test test::test_cdata ... ok
blam! test test::test_buf_position ... ok
blam! test test::test_cdata_open_close ... ok
blam! test test::test_closing_bracket_in_double_quote_attr ... ok
blam! test test::test_closing_bracket_in_double_quote_mixed ... ok
blam! test escape::test_escape ... ok
blam! test test::test_closing_bracket_in_single_quote_attr ... ok
blam! test test::test_closing_bracket_in_single_quote_mixed ... ok
blam! test test::test_comment ... ok
blam! test test::test_default_namespace ... ok
blam! test test::test_default_namespace_reset ... ok
blam! test test::test_empty ... ok
blam! test test::test_empty_attr ... ok
blam! test test::test_empty_can_be_expanded ... ok
blam! test test::test_escaped_content ... ok
blam! test test::test_namespace ... ok
blam! test test::test_nested ... ok
blam! test test::test_read_write_roundtrip_results_in_identity ... ok
blam! test test::test_start ... ok
blam! test test::test_start_attr ... ok
blam! test test::test_start_end ... ok
blam! test test::test_start_end_attr ... ok
blam! test test::test_start_end_comment ... ok
blam! test test::test_start_txt_end ... ok
blam! test test::test_trim_test ... ok
blam! test test::test_write_attrs ... ok
blam! test test::test_write_empty_element_attrs ... ok
blam! test test::test_writer ... ok
blam! test test::test_xml_decl ... ok
blam! 
blam! test result: ok. 29 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/test-3f705aa6d63224af
blam! 
blam! running 7 tests
blam! test test_attribute_equal ... ok
blam! test test_attributes_empty ... ok
blam! test test_attributes_empty_ns ... ok
blam! test test_attributes_empty_ns_expanded ... ok
blam! test test_default_ns_shadowing_empty ... ok
blam! test test_default_ns_shadowing_expanded ... ok
blam! test test_sample ... ok
blam! 
blam! test result: ok. 7 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/xmlrs_reader_tests-00b009d9908f2a70
blam! 
blam! running 16 tests
blam! test eof_1 ... ok
blam! test bad_1 ... ok
blam! test default_namespace_applies_to_end_elem ... ok
blam! test dashes_in_comments ... ok
blam! test issue_93_large_characters_in_entity_references ... ok
blam! test issue_98_cdata_ending_with_right_bracket ... ok
blam! test issue_default_namespace_on_outermost_element ... ok
blam! test issue_attributes_have_no_default_namespace ... ok
blam! test issue_83_duplicate_attributes ... ok
blam! test issue_105_unexpected_double_dash ... ok
blam! test sample_1_short ... ok
blam! test sample_1_full ... ok
blam! test sample_2_full ... ok
blam! test sample_2_short ... ok
blam! test sample_ns_short ... ok
blam! test tabs_1 ... ok
blam! 
blam! test result: ok. 16 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests quick-xml
blam! 
blam! running 7 tests
blam! test Element_0 ... ignored
blam! warning: variable `count` is assigned to, but never used, #[warn(unused_variables)] on by default
blam!   --> <anon>:15:5
blam!    |
blam! 15 | let mut count = 0;
blam!    |     ^^^^^^^^^
blam! 
blam! warning: variable `count` is assigned to, but never used, #[warn(unused_variables)] on by default
blam!   --> <anon>:10:5
blam!    |
blam! 10 | let mut count = 0;
blam!    |     ^^^^^^^^^
blam! 
blam! test XmlReader<B>::read_text_unescaped_0 ... ok
blam! warning: unused import: `AsStr`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:17
blam!   |
blam! 3 | use quick_xml::{AsStr, Element, Event, XmlReader, XmlWriter};
blam!   |                 ^^^^^
blam! 
blam! warning: unused import: `std::iter`, #[warn(unused_imports)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | use std::iter;
blam!   |     ^^^^^^^^^
blam! 
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!   --> <anon>:15:17
blam!    |
blam! 15 |             let mut attrs = e.attributes()
blam!    |                 ^^^^^^^^^
blam! 
blam! test XmlReader_0 ... ok
blam! test _0 ... ok
blam! test XmlWriter_0 ... ok
blam! warning: unused import: `AsStr`, #[warn(unused_imports)] on by default
blam!  --> <anon>:3:17
blam!   |
blam! 3 | use quick_xml::{AsStr, Element, Event, XmlReader, XmlWriter};
blam!   |                 ^^^^^
blam! 
blam! warning: unused import: `std::iter`, #[warn(unused_imports)] on by default
blam!  --> <anon>:6:5
blam!   |
blam! 6 | use std::iter;
blam!   |     ^^^^^^^^^
blam! 
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!   --> <anon>:15:17
blam!    |
blam! 15 |             let mut attrs = e.attributes().map(|attr| attr.unwrap()).collect::<Vec<_>>();
blam!    |                 ^^^^^^^^^
blam! 
blam! test _1 ... ok
blam! warning: unused import: `quick_xml::namespace::XmlnsReader`, #[warn(unused_imports)] on by default
blam!  --> <anon>:4:5
blam!   |
blam! 4 | use quick_xml::namespace::XmlnsReader;
blam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
blam! 
blam! warning: variable `count` is assigned to, but never used, #[warn(unused_variables)] on by default
blam!   --> <anon>:12:5
blam!    |
blam! 12 | let mut count = 0;
blam!    |     ^^^^^^^^^
blam! 
blam! warning: unused variable: `n`, #[warn(unused_variables)] on by default
blam!   --> <anon>:20:13
blam!    |
blam! 20 |         Ok((ref n, Event::Start(ref e))) => {
blam!    |             ^^^^^
blam! 
blam! test namespace::XmlnsReader_0 ... ok
blam! 
blam! test result: ok. 6 passed; 0 failed; 1 ignored; 0 measured
blam! 
boom! running `docker rm -f b98df1acf16cda43b377b34cb90f0d08a8e8aced662cfb340d114f9da50d1749`
blam! b98df1acf16cda43b377b34cb90f0d08a8e8aced662cfb340d114f9da50d1749
