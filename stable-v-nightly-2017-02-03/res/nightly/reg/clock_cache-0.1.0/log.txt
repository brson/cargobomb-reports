boom! testing clock_cache-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! c105456fe4f40268cbe54fbca575996dcba212ca20338b55b8f046b89513504d
boom! running `docker start -a c105456fe4f40268cbe54fbca575996dcba212ca20338b55b8f046b89513504d`
kablam!    Compiling clock_cache v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.85 secs
boom! running `docker rm -f c105456fe4f40268cbe54fbca575996dcba212ca20338b55b8f046b89513504d`
blam! c105456fe4f40268cbe54fbca575996dcba212ca20338b55b8f046b89513504d
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 02e3899c38e5e11d60ee71c74c47d93446e10163c6842a108a5adf9e15d57d0f
boom! running `docker start -a 02e3899c38e5e11d60ee71c74c47d93446e10163c6842a108a5adf9e15d57d0f`
kablam!    Compiling clock_cache v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.64 secs
boom! running `docker rm -f 02e3899c38e5e11d60ee71c74c47d93446e10163c6842a108a5adf9e15d57d0f`
blam! 02e3899c38e5e11d60ee71c74c47d93446e10163c6842a108a5adf9e15d57d0f
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! aa65eb7d477505070bf4965130e2f158e2bf0418583030447c704dbbfbcd276e
boom! running `docker start -a aa65eb7d477505070bf4965130e2f158e2bf0418583030447c704dbbfbcd276e`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/clock_cache-9cd36031f8ca1ac1
blam! 
blam! running 5 tests
blam! test tests::test_contains ... ok
blam! test tests::test_peek ... ok
blam! test tests::test_pop ... ok
blam! test tests::test_put_and_get ... ok
blam! test tests::test_put_update ... ok
blam! 
kablam!    Doc-tests clock_cache
blam! test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 9 tests
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:4:5
blam!   |
blam! 4 | let mut cache: ClockCache<isize, &str> = ClockCache::new(2);
blam!   |     ^^^^^^^^^
blam! 
blam! test ClockCache<K, V>::cap_0 ... ok
blam! test ClockCache<K, V>::contains_0 ... ok
blam! test ClockCache<K, V>::len_0 ... ok
blam! test ClockCache<K, V>::get_0 ... ok
blam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
blam!  --> <anon>:4:5
blam!   |
blam! 4 | let mut cache: ClockCache<isize, &str> = ClockCache::new(10);
blam!   |     ^^^^^^^^^
blam! 
blam! warning: unused variable: `cache`, #[warn(unused_variables)] on by default
blam!  --> <anon>:4:5
blam!   |
blam! 4 | let mut cache: ClockCache<isize, &str> = ClockCache::new(10);
blam!   |     ^^^^^^^^^
blam! 
blam! test ClockCache<K, V>::new_0 ... ok
blam! test ClockCache<K, V>::put_0 ... ok
blam! test ClockCache<K, V>::pop_0 ... ok
blam! test ClockCache<K, V>::peek_0 ... ok
blam! test _0 ... ok
blam! 
blam! test result: ok. 9 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f aa65eb7d477505070bf4965130e2f158e2bf0418583030447c704dbbfbcd276e`
blam! aa65eb7d477505070bf4965130e2f158e2bf0418583030447c704dbbfbcd276e
