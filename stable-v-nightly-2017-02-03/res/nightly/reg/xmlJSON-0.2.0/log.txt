boom! testing xmlJSON-0.2.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 8cd740908df6972c1f5d941d37d544558f0c4598541d0367de24ed8ad9695701
boom! running `docker start -a 8cd740908df6972c1f5d941d37d544558f0c4598541d0367de24ed8ad9695701`
kablam!    Compiling xmlJSON v0.2.0 (file:///source)
kablam! warning: crate `xmlJSON` should have a snake case name such as `xml_json`, #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/lib.rs:216:13
kablam!     |
kablam! 216 |         let mut parser = EventReader::new(source);
kablam!     |             ^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 4.82 secs
boom! running `docker rm -f 8cd740908df6972c1f5d941d37d544558f0c4598541d0367de24ed8ad9695701`
blam! 8cd740908df6972c1f5d941d37d544558f0c4598541d0367de24ed8ad9695701
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 9b33cad47132991fc6695f0b4c939e5f1f6cfe1c9d2df8503392d6352454a114
boom! running `docker start -a 9b33cad47132991fc6695f0b4c939e5f1f6cfe1c9d2df8503392d6352454a114`
kablam!    Compiling xmlJSON v0.2.0 (file:///source)
kablam! warning: crate `xmlJSON` should have a snake case name such as `xml_json`, #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/lib.rs:216:13
kablam!     |
kablam! 216 |         let mut parser = EventReader::new(source);
kablam!     |             ^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 4.11 secs
boom! running `docker rm -f 9b33cad47132991fc6695f0b4c939e5f1f6cfe1c9d2df8503392d6352454a114`
blam! 9b33cad47132991fc6695f0b4c939e5f1f6cfe1c9d2df8503392d6352454a114
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 55b89cba2663994d38e5321b4c9dac3436a0b04f860065177cf9fa60a5b0ff58
boom! running `docker start -a 55b89cba2663994d38e5321b4c9dac3436a0b04f860065177cf9fa60a5b0ff58`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/main-e96f724443f6a5fb
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/xmlJSON-07a34e6a2462bc27
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests xmlJSON
blam! 
blam! running 1 test
blam! warning: unused variable: `data`, #[warn(unused_variables)] on by default
blam!  --> <anon>:9:5
blam!   |
blam! 9 | let data = XmlDocument::from_str(test);
blam!   |     ^^^^
blam! 
blam! test _0 ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 55b89cba2663994d38e5321b4c9dac3436a0b04f860065177cf9fa60a5b0ff58`
blam! 55b89cba2663994d38e5321b4c9dac3436a0b04f860065177cf9fa60a5b0ff58
