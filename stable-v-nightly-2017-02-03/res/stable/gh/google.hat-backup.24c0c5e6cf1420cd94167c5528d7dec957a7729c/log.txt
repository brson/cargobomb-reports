boom! testing https://github.com/google/hat-backup#24c0c5e6cf1420cd94167c5528d7dec957a7729c against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 7d2aa4c0e01d66104935bcb6c5d5b43fcb3a6b944802c105841c971c41604f76
boom! running `docker start -a 7d2aa4c0e01d66104935bcb6c5d5b43fcb3a6b944802c105841c971c41604f76`
kablam!    Compiling libsqlite3-sys v0.4.0
kablam!    Compiling libsodium-sys v0.0.13
kablam!    Compiling void v1.0.2
kablam!    Compiling capnp v0.8.0
kablam!    Compiling unreachable v0.1.1
kablam!    Compiling rand v0.3.15
kablam!    Compiling thread-id v2.0.0
kablam!    Compiling memchr v0.1.11
kablam!    Compiling thread_local v0.2.7
kablam!    Compiling aho-corasick v0.5.3
kablam!    Compiling term_size v0.2.1
kablam!    Compiling clap v2.19.3
kablam!    Compiling regex v0.1.80
kablam!    Compiling diesel_codegen_syntex v0.9.0
kablam!    Compiling capnpc v0.8.1
kablam!    Compiling thread_local v0.3.2
kablam!    Compiling regex v0.2.1
kablam!    Compiling diesel v0.9.1
kablam!    Compiling env_logger v0.3.5
kablam!    Compiling quickcheck v0.4.1
blam! Build failed, waiting for other jobs to finish...
kablam! error: failed to run custom build command for `libsodium-sys v0.0.13`
kablam! process didn't exit successfully: `/target/debug/build/libsodium-sys-a5f3610a6b16fd0a/build-script-build` (exit code: 101)
kablam! --- stderr
kablam! thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: "Failed to run `\"pkg-config\" \"--libs\" \"--cflags\" \"libsodium\"`: No such file or directory (os error 2)"', ../src/libcore/result.rs:837
kablam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
kablam! 
boom! running `docker rm -f 7d2aa4c0e01d66104935bcb6c5d5b43fcb3a6b944802c105841c971c41604f76`
blam! 7d2aa4c0e01d66104935bcb6c5d5b43fcb3a6b944802c105841c971c41604f76
