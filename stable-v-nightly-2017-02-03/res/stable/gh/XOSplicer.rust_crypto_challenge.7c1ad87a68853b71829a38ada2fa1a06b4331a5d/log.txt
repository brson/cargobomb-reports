boom! testing https://github.com/XOSplicer/rust_crypto_challenge#7c1ad87a68853b71829a38ada2fa1a06b4331a5d against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 99749590e8836953ce9348816d334525d09a6ea6d5473a199345bdbd0d40d72a
boom! running `docker start -a 99749590e8836953ce9348816d334525d09a6ea6d5473a199345bdbd0d40d72a`
kablam!    Compiling crypto_challenge v0.1.0 (file:///source)
kablam! warning: method is never used: `new`, #[warn(dead_code)] on by default
kablam!   --> src/core.rs:21:2
kablam!    |
kablam! 21 | 	pub fn new() -> Hex {
kablam!    | 	^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> src/core.rs:49:7
kablam!    |
kablam! 49 | 		let mut vec6bit = Vec::new();
kablam!    | 		    ^^^^^^^^^^^
kablam! 
kablam! warning: method is never used: `new`, #[warn(dead_code)] on by default
kablam!   --> src/core.rs:91:2
kablam!    |
kablam! 91 | 	pub fn new() -> Base64 {
kablam!    | 	^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.71 secs
boom! running `docker rm -f 99749590e8836953ce9348816d334525d09a6ea6d5473a199345bdbd0d40d72a`
blam! 99749590e8836953ce9348816d334525d09a6ea6d5473a199345bdbd0d40d72a
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! ab0f5e59f50408269af22396c9edf531d8e48096b3d5e76dd86dfc9784115f31
boom! running `docker start -a ab0f5e59f50408269af22396c9edf531d8e48096b3d5e76dd86dfc9784115f31`
kablam!    Compiling crypto_challenge v0.1.0 (file:///source)
kablam! warning: method is never used: `new`, #[warn(dead_code)] on by default
kablam!   --> src/core.rs:21:2
kablam!    |
kablam! 21 | 	pub fn new() -> Hex {
kablam!    | 	^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> src/core.rs:49:7
kablam!    |
kablam! 49 | 		let mut vec6bit = Vec::new();
kablam!    | 		    ^^^^^^^^^^^
kablam! 
kablam! warning: method is never used: `new`, #[warn(dead_code)] on by default
kablam!   --> src/core.rs:91:2
kablam!    |
kablam! 91 | 	pub fn new() -> Base64 {
kablam!    | 	^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.87 secs
boom! running `docker rm -f ab0f5e59f50408269af22396c9edf531d8e48096b3d5e76dd86dfc9784115f31`
blam! ab0f5e59f50408269af22396c9edf531d8e48096b3d5e76dd86dfc9784115f31
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 89d7fc93999b051f5e04b06fecd334054cf7fea22de0a4050a35096071f6562d
boom! running `docker start -a 89d7fc93999b051f5e04b06fecd334054cf7fea22de0a4050a35096071f6562d`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/crypto_challenge-26f83c51dfe35ff4
blam! 
blam! running 1 test
blam! test core::test_hex_to_base64 ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- core::test_hex_to_base64 stdout ----
blam! 	Converting to Base64
blam! "49276d206b696c6c696e6720796f757220627261696e206c696b65206120706f69736f6e6f7573206d757368726f6f6d"
blam! (4, 9, 2, 7, 6, 13)
blam! d67294
blam! (2, 0, 6, 11, 6, 9)
blam! 96b602
blam! (6, 12, 6, 12, 6, 9)
blam! 96c6c6
blam! (6, 14, 6, 7, 2, 0)
blam! 276e6
blam! (7, 9, 6, 15, 7, 5)
blam! 57f697
blam! (7, 2, 2, 0, 6, 2)
blam! 260227
blam! (7, 2, 6, 1, 6, 9)
blam! 961627
blam! (6, 14, 2, 0, 6, 12)
blam! c602e6
blam! (6, 9, 6, 11, 6, 5)
blam! 56b696
blam! (2, 0, 6, 1, 2, 0)
blam! 21602
blam! (7, 0, 6, 15, 6, 9)
blam! 96f607
blam! (7, 3, 6, 15, 6, 14)
blam! e6f637
blam! (6, 15, 7, 5, 7, 3)
blam! 3757f6
blam! (2, 0, 6, 13, 7, 5)
blam! 57d602
blam! (7, 3, 6, 8, 7, 2)
blam! 278637
blam! (6, 15, 6, 15, 6, 13)
blam! d6f6f6
blam! []
kablam! error: test failed
blam! thread 'core::test_hex_to_base64' panicked at 'assertion failed: `(left == right)` (left: `Base64 { data: [18, 18, 29, 45, 8, 6, 45, 41, 27, 6, 49, 41, 27, 38, 28, 32, 30, 22, 61, 53, 28, 34, 1, 34, 28, 38, 5, 41, 27, 34, 1, 44, 26, 22, 45, 37, 8, 6, 4, 32, 28, 6, 61, 41, 28, 54, 61, 46, 27, 55, 21, 51, 8, 6, 53, 53, 28, 54, 33, 50, 27, 54, 61, 45] }`, right: `Base64 { data: [] }`)', src/core.rs:127
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! 
blam! failures:
blam!     core::test_hex_to_base64
blam! 
blam! test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 89d7fc93999b051f5e04b06fecd334054cf7fea22de0a4050a35096071f6562d`
blam! 89d7fc93999b051f5e04b06fecd334054cf7fea22de0a4050a35096071f6562d
