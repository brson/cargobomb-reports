boom! testing https://github.com/boinc-next/boinc-rpc-rs#77b9da412e12287f5883f93448e0620d94208a4e against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! e10d4a6349a78851d0b32aa03b339d6b1b1e80c7760b4b4f70e69a04601ee446
boom! running `docker start -a e10d4a6349a78851d0b32aa03b339d6b1b1e80c7760b4b4f70e69a04601ee446`
kablam!    Compiling rand v0.3.14
kablam!    Compiling rust-crypto v0.2.36
kablam!    Compiling time v0.1.35
kablam!    Compiling boinc-rpc v0.1.0 (file:///source)
kablam! warning: enum is never used: `Component`, #[warn(dead_code)] on by default
kablam!   --> src/models.rs:21:1
kablam!    |
kablam! 21 | pub enum Component {
kablam!    | ^
kablam! 
kablam! warning: enum is never used: `RunMode`, #[warn(dead_code)] on by default
kablam!   --> src/models.rs:27:1
kablam!    |
kablam! 27 | pub enum RunMode {
kablam!    | ^
kablam! 
kablam! warning: enum is never used: `CpuSched`, #[warn(dead_code)] on by default
kablam!   --> src/models.rs:34:1
kablam!    |
kablam! 34 | pub enum CpuSched {
kablam!    | ^
kablam! 
kablam! warning: enum is never used: `ResultState`, #[warn(dead_code)] on by default
kablam!   --> src/models.rs:40:1
kablam!    |
kablam! 40 | pub enum ResultState {
kablam!    | ^
kablam! 
kablam! warning: variant `ABORT_PENDING` should have a camel case name such as `AbortPending`, #[warn(non_camel_case_types)] on by default
kablam!   --> src/models.rs:55:5
kablam!    |
kablam! 55 |     ABORT_PENDING = 5,
kablam!    |     ^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: variant `QUIT_PENDING` should have a camel case name such as `QuitPending`, #[warn(non_camel_case_types)] on by default
kablam!   --> src/models.rs:56:5
kablam!    |
kablam! 56 |     QUIT_PENDING = 8,
kablam!    |     ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: variant `COPY_PENDING` should have a camel case name such as `CopyPending`, #[warn(non_camel_case_types)] on by default
kablam!   --> src/models.rs:57:5
kablam!    |
kablam! 57 |     COPY_PENDING = 10,
kablam!    |     ^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: enum is never used: `Process`, #[warn(dead_code)] on by default
kablam!   --> src/models.rs:51:1
kablam!    |
kablam! 51 | pub enum Process {
kablam!    | ^
kablam! 
kablam! warning: struct is never used: `VersionInfo`, #[warn(dead_code)] on by default
kablam!   --> src/models.rs:60:1
kablam!    |
kablam! 60 | pub struct VersionInfo {
kablam!    | ^
kablam! 
kablam! warning: struct is never used: `HostInfo`, #[warn(dead_code)] on by default
kablam!   --> src/models.rs:66:1
kablam!    |
kablam! 66 | pub struct HostInfo {
kablam!    | ^
kablam! 
kablam! warning: function is never used: `query_daemon_simple`, #[warn(dead_code)] on by default
kablam!   --> src/rpc.rs:39:1
kablam!    |
kablam! 39 | pub fn query_daemon_simple(host: &std::net::SocketAddr,
kablam!    | ^
kablam! 
kablam! warning: function is never used: `query_daemon_request_only`, #[warn(dead_code)] on by default
kablam!   --> src/rpc.rs:45:1
kablam!    |
kablam! 45 | pub fn query_daemon_request_only<F>(host: &std::net::SocketAddr,
kablam!    | ^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 14.66 secs
boom! running `docker rm -f e10d4a6349a78851d0b32aa03b339d6b1b1e80c7760b4b4f70e69a04601ee446`
blam! e10d4a6349a78851d0b32aa03b339d6b1b1e80c7760b4b4f70e69a04601ee446
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 14bcf80277a6543eee2cb29b06bd927290d8dede5126f43fb6058a159c06cc45
boom! running `docker start -a 14bcf80277a6543eee2cb29b06bd927290d8dede5126f43fb6058a159c06cc45`
kablam!    Compiling boinc-rpc v0.1.0 (file:///source)
kablam! error[E0277]: the trait bound `sxd_document::QName<'_>: std::convert::From<fn() -> std::string::String {std::string::String::new}>` is not satisfied
kablam!    --> src/lib.rs:503:27
kablam!     |
kablam! 503 |         let fixture = doc.create_element(String::new);
kablam!     |                           ^^^^^^^^^^^^^^ the trait `std::convert::From<fn() -> std::string::String {std::string::String::new}>` is not implemented for `sxd_document::QName<'_>`
kablam!     |
kablam!     = help: the following implementations were found:
kablam!     = help:   <sxd_document::QName<'s> as std::convert::From<(&'s str, &'s str)>>
kablam!     = help:   <sxd_document::QName<'s> as std::convert::From<&'s str>>
kablam!     = note: required because of the requirements on the impl of `std::convert::Into<sxd_document::QName<'_>>` for `fn() -> std::string::String {std::string::String::new}`
kablam! 
kablam! error: aborting due to previous error
kablam! 
kablam! error: Could not compile `boinc-rpc`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 14bcf80277a6543eee2cb29b06bd927290d8dede5126f43fb6058a159c06cc45`
blam! 14bcf80277a6543eee2cb29b06bd927290d8dede5126f43fb6058a159c06cc45
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! c182aa92bcea4477e0cd7d50f17cfa165514d738f385cd6bd9bd85814e49b777
boom! running `docker start -a c182aa92bcea4477e0cd7d50f17cfa165514d738f385cd6bd9bd85814e49b777`
kablam!    Compiling boinc-rpc v0.1.0 (file:///source)
kablam! error[E0277]: the trait bound `sxd_document::QName<'_>: std::convert::From<fn() -> std::string::String {std::string::String::new}>` is not satisfied
kablam!    --> src/lib.rs:503:27
kablam!     |
kablam! 503 |         let fixture = doc.create_element(String::new);
kablam!     |                           ^^^^^^^^^^^^^^ the trait `std::convert::From<fn() -> std::string::String {std::string::String::new}>` is not implemented for `sxd_document::QName<'_>`
kablam!     |
kablam!     = help: the following implementations were found:
kablam!     = help:   <sxd_document::QName<'s> as std::convert::From<(&'s str, &'s str)>>
kablam!     = help:   <sxd_document::QName<'s> as std::convert::From<&'s str>>
kablam!     = note: required because of the requirements on the impl of `std::convert::Into<sxd_document::QName<'_>>` for `fn() -> std::string::String {std::string::String::new}`
kablam! 
kablam! error: aborting due to previous error
kablam! 
kablam! error: Could not compile `boinc-rpc`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f c182aa92bcea4477e0cd7d50f17cfa165514d738f385cd6bd9bd85814e49b777`
blam! c182aa92bcea4477e0cd7d50f17cfa165514d738f385cd6bd9bd85814e49b777
