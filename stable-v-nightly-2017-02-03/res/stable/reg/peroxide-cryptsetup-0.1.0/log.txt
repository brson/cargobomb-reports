boom! testing peroxide-cryptsetup-0.1.0 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 22c6fba69aaeb1447c4ecb4e1c1ee37a24912306f6cd9f08315c30af3cde7a7b
boom! running `docker start -a 22c6fba69aaeb1447c4ecb4e1c1ee37a24912306f6cd9f08315c30af3cde7a7b`
kablam!    Compiling bitflags v0.7.0
kablam!    Compiling serde v0.8.23
kablam!    Compiling regex-syntax v0.3.9
kablam!    Compiling unicode-xid v0.0.4
kablam!    Compiling num-traits v0.1.36
kablam!    Compiling log v0.3.6
kablam!    Compiling dtoa v0.2.2
kablam!    Compiling libc v0.2.20
kablam!    Compiling unicode-xid v0.0.3
kablam!    Compiling byteorder v0.5.3
kablam!    Compiling memchr v0.1.11
kablam!    Compiling errno v0.2.1
kablam!    Compiling rand v0.3.15
kablam!    Compiling quote v0.3.12
kablam!    Compiling serde v0.9.4
kablam!    Compiling lazy_static v0.2.2
kablam!    Compiling syn v0.10.8
kablam!    Compiling termios v0.2.2
kablam!    Compiling pkg-config v0.3.9
kablam!    Compiling uuid v0.3.1
kablam!    Compiling libsodium-sys v0.0.14
kablam!    Compiling libykpers-sys v0.1.0
blam! Build failed, waiting for other jobs to finish...
kablam! error: failed to run custom build command for `libsodium-sys v0.0.14`
kablam! process didn't exit successfully: `/target/debug/build/libsodium-sys-ad302ccd515f0947/build-script-build` (exit code: 101)
kablam! --- stderr
kablam! thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: "Failed to run `\"pkg-config\" \"--libs\" \"--cflags\" \"libsodium\"`: No such file or directory (os error 2)"', ../src/libcore/result.rs:837
kablam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
kablam! 
boom! running `docker rm -f 22c6fba69aaeb1447c4ecb4e1c1ee37a24912306f6cd9f08315c30af3cde7a7b`
blam! 22c6fba69aaeb1447c4ecb4e1c1ee37a24912306f6cd9f08315c30af3cde7a7b
