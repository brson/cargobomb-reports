boom! testing rustproof-libsmt-0.1.0 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 1a9ba60e90f30730e70d907a62ecb37c126846fdc114983cb1ee735225f1b97c
boom! running `docker start -a 1a9ba60e90f30730e70d907a62ecb37c126846fdc114983cb1ee735225f1b97c`
kablam!    Compiling rustproof-libsmt v0.1.0 (file:///source)
kablam! warning: type `QF_BV_Sorts` should have a camel case name such as `QfBvSorts`, #[warn(non_camel_case_types)] on by default
kablam!   --> src/logics/utils.rs:7:9
kablam!    |
kablam! 7  |         pub enum $logic {
kablam!    |         ^
kablam!    | 
kablam!   ::: src/logics/qf_bv.rs
kablam!    |
kablam! 11 | define_sorts_for_logic!(QF_BV_Sorts,
kablam!    | - in this macro invocation
kablam! 
kablam! warning: type `QF_BV_Fn` should have a camel case name such as `QfBvFn`, #[warn(non_camel_case_types)] on by default
kablam!   --> src/logics/utils.rs:38:9
kablam!    |
kablam! 38 |         pub enum $logic {
kablam!    |         ^
kablam!    | 
kablam!   ::: src/logics/qf_bv.rs
kablam!    |
kablam! 16 | define_fns_for_logic!(QF_BV_Fn,
kablam!    | - in this macro invocation
kablam! 
kablam! warning: type `QF_BV` should have a camel case name such as `QfBv`, #[warn(non_camel_case_types)] on by default
kablam!   --> src/logics/utils.rs:87:9
kablam!    |
kablam! 87 |         pub struct $logic;
kablam!    |         ^^^^^^^^^^^^^^^^^^
kablam!    | 
kablam!   ::: src/logics/qf_bv.rs
kablam!    |
kablam! 21 | define_logic!(QF_BV,
kablam!    | - in this macro invocation
kablam! 
kablam! warning: type `QF_AUFBV_Sorts` should have a camel case name such as `QfAufbvSorts`, #[warn(non_camel_case_types)] on by default
kablam!   --> src/logics/utils.rs:7:9
kablam!    |
kablam! 7  |         pub enum $logic {
kablam!    |         ^
kablam!    | 
kablam!   ::: src/logics/qf_aufbv.rs
kablam!    |
kablam! 6  | define_sorts_for_logic!(QF_AUFBV_Sorts,
kablam!    | - in this macro invocation
kablam! 
kablam! warning: type `QF_AUFBV_Fn` should have a camel case name such as `QfAufbvFn`, #[warn(non_camel_case_types)] on by default
kablam!   --> src/logics/utils.rs:38:9
kablam!    |
kablam! 38 |         pub enum $logic {
kablam!    |         ^
kablam!    | 
kablam!   ::: src/logics/qf_aufbv.rs
kablam!    |
kablam! 12 | define_fns_for_logic!(QF_AUFBV_Fn,
kablam!    | - in this macro invocation
kablam! 
kablam! warning: type `QF_AUFBV` should have a camel case name such as `QfAufbv`, #[warn(non_camel_case_types)] on by default
kablam!   --> src/logics/utils.rs:87:9
kablam!    |
kablam! 87 |         pub struct $logic;
kablam!    |         ^^^^^^^^^^^^^^^^^^
kablam!    | 
kablam!   ::: src/logics/qf_aufbv.rs
kablam!    |
kablam! 18 | define_logic!(QF_AUFBV,
kablam!    | - in this macro invocation
kablam! 
kablam! warning: type `QF_ABV_Sorts` should have a camel case name such as `QfAbvSorts`, #[warn(non_camel_case_types)] on by default
kablam!   --> src/logics/utils.rs:7:9
kablam!    |
kablam! 7  |         pub enum $logic {
kablam!    |         ^
kablam!    | 
kablam!   ::: src/logics/qf_abv.rs
kablam!    |
kablam! 6  | define_sorts_for_logic!(QF_ABV_Sorts,
kablam!    | - in this macro invocation
kablam! 
kablam! warning: type `QF_ABV_Fn` should have a camel case name such as `QfAbvFn`, #[warn(non_camel_case_types)] on by default
kablam!   --> src/logics/utils.rs:38:9
kablam!    |
kablam! 38 |         pub enum $logic {
kablam!    |         ^
kablam!    | 
kablam!   ::: src/logics/qf_abv.rs
kablam!    |
kablam! 12 | define_fns_for_logic!(QF_ABV_Fn,
kablam!    | - in this macro invocation
kablam! 
kablam! warning: type `QF_ABV` should have a camel case name such as `QfAbv`, #[warn(non_camel_case_types)] on by default
kablam!   --> src/logics/utils.rs:87:9
kablam!    |
kablam! 87 |         pub struct $logic;
kablam!    |         ^^^^^^^^^^^^^^^^^^
kablam!    | 
kablam!   ::: src/logics/qf_abv.rs
kablam!    |
kablam! 18 | define_logic!(QF_ABV,
kablam!    | - in this macro invocation
kablam! 
kablam! warning: type `LIA_Sorts` should have a camel case name such as `LiaSorts`, #[warn(non_camel_case_types)] on by default
kablam!   --> src/logics/utils.rs:7:9
kablam!    |
kablam! 7  |         pub enum $logic {
kablam!    |         ^
kablam!    | 
kablam!   ::: src/logics/lia.rs
kablam!    |
kablam! 10 | define_sorts_for_logic!(LIA_Sorts,
kablam!    | - in this macro invocation
kablam! 
kablam! warning: type `LIA_Fn` should have a camel case name such as `LiaFn`, #[warn(non_camel_case_types)] on by default
kablam!   --> src/logics/utils.rs:38:9
kablam!    |
kablam! 38 |         pub enum $logic {
kablam!    |         ^
kablam!    | 
kablam!   ::: src/logics/lia.rs
kablam!    |
kablam! 15 | define_fns_for_logic!(LIA_Fn,
kablam!    | - in this macro invocation
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/backends/smtlib2.rs:207:9
kablam!     |
kablam! 207 |         smt_proc.write(format!("(set-logic {})\n", logic));
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/backends/smtlib2.rs:241:13
kablam!     |
kablam! 241 |             smt_proc.write(w);
kablam!     |             ^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/backends/smtlib2.rs:244:9
kablam!     |
kablam! 244 |         smt_proc.write("(check-sat)\n".to_owned());
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/backends/smtlib2.rs:257:13
kablam!     |
kablam! 257 |         let mut result = HashMap::new();
kablam!     |             ^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/backends/smtlib2.rs:262:17
kablam!     |
kablam! 262 |                 smt_proc.write("(get-model)\n".to_owned());
kablam!     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 1.55 secs
boom! running `docker rm -f 1a9ba60e90f30730e70d907a62ecb37c126846fdc114983cb1ee735225f1b97c`
blam! 1a9ba60e90f30730e70d907a62ecb37c126846fdc114983cb1ee735225f1b97c
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! edff236a664a276292544bd28462b419ec5e8242dc5ac756bd8131ce4c48e45d
boom! running `docker start -a edff236a664a276292544bd28462b419ec5e8242dc5ac756bd8131ce4c48e45d`
kablam!    Compiling rustproof-libsmt v0.1.0 (file:///source)
kablam! error[E0463]: can't find crate for `libsmt`
kablam!   --> examples/simple_example.rs:22:1
kablam!    |
kablam! 22 | extern crate libsmt;
kablam!    | ^^^^^^^^^^^^^^^^^^^^ can't find crate
kablam! 
kablam! error: aborting due to previous error
kablam! 
blam! Build failed, waiting for other jobs to finish...
kablam! error[E0463]: can't find crate for `libsmt`
kablam!   --> examples/bitvec_x86_64.rs:19:1
kablam!    |
kablam! 19 | extern crate libsmt;
kablam!    | ^^^^^^^^^^^^^^^^^^^^ can't find crate
kablam! 
kablam! error: aborting due to previous error
kablam! 
blam! Build failed, waiting for other jobs to finish...
kablam! error[E0463]: can't find crate for `libsmt`
kablam!  --> examples/fiestel.rs:6:14
kablam!   |
kablam! 6 | #[macro_use] extern crate libsmt;
kablam!   |              ^^^^^^^^^^^^^^^^^^^^ can't find crate
kablam! 
kablam! error: aborting due to previous error
kablam! 
blam! Build failed, waiting for other jobs to finish...
kablam! error[E0061]: this function takes 2 parameters but 1 parameter was supplied
kablam!   --> src/backends/z3.rs:70:35
kablam!    |
kablam! 70 |         let result = solver.solve(&mut z3).unwrap();
kablam!    |                                   ^^^^^^^
kablam!    |
kablam!    = note: the following parameter types were expected:
kablam!    = note: &mut _, bool
kablam! 
kablam! error: no method named `unwrap` found for type `(std::result::Result<std::collections::HashMap<petgraph::graph::NodeIndex, u64>, backends::backend::SMTError>, backends::backend::SMTRes)` in the current scope
kablam!   --> src/backends/z3.rs:70:44
kablam!    |
kablam! 70 |         let result = solver.solve(&mut z3).unwrap();
kablam!    |                                            ^^^^^^
kablam! 
kablam! error[E0061]: this function takes 2 parameters but 1 parameter was supplied
kablam!   --> src/backends/z3.rs:86:35
kablam!    |
kablam! 86 |         let result = solver.solve(&mut z3).unwrap();
kablam!    |                                   ^^^^^^^
kablam!    |
kablam!    = note: the following parameter types were expected:
kablam!    = note: &mut _, bool
kablam! 
kablam! error: no method named `unwrap` found for type `(std::result::Result<std::collections::HashMap<petgraph::graph::NodeIndex, u64>, backends::backend::SMTError>, backends::backend::SMTRes)` in the current scope
kablam!   --> src/backends/z3.rs:86:44
kablam!    |
kablam! 86 |         let result = solver.solve(&mut z3).unwrap();
kablam!    |                                            ^^^^^^
kablam! 
kablam! error[E0061]: this function takes 2 parameters but 1 parameter was supplied
kablam!   --> src/backends/z3.rs:99:35
kablam!    |
kablam! 99 |         let result = solver.solve(&mut z3).unwrap();
kablam!    |                                   ^^^^^^^
kablam!    |
kablam!    = note: the following parameter types were expected:
kablam!    = note: &mut _, bool
kablam! 
kablam! error: no method named `unwrap` found for type `(std::result::Result<std::collections::HashMap<petgraph::graph::NodeIndex, u64>, backends::backend::SMTError>, backends::backend::SMTRes)` in the current scope
kablam!   --> src/backends/z3.rs:99:44
kablam!    |
kablam! 99 |         let result = solver.solve(&mut z3).unwrap();
kablam!    |                                            ^^^^^^
kablam! 
kablam! error: aborting due to 6 previous errors
kablam! 
kablam! error: Could not compile `rustproof-libsmt`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f edff236a664a276292544bd28462b419ec5e8242dc5ac756bd8131ce4c48e45d`
blam! edff236a664a276292544bd28462b419ec5e8242dc5ac756bd8131ce4c48e45d
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 3163bbfb04cc24122f162b28d67dfb6d4f6e6711a62a503a864ee72e358b9d30
boom! running `docker start -a 3163bbfb04cc24122f162b28d67dfb6d4f6e6711a62a503a864ee72e358b9d30`
kablam!    Compiling rustproof-libsmt v0.1.0 (file:///source)
kablam! error[E0463]: can't find crate for `libsmt`
kablam!   --> examples/bajr.rs:22:1
kablam!    |
kablam! 22 | extern crate libsmt;
kablam!    | ^^^^^^^^^^^^^^^^^^^^ can't find crate
kablam! 
kablam! error: aborting due to previous error
kablam! 
blam! Build failed, waiting for other jobs to finish...
kablam! error[E0463]: can't find crate for `libsmt`
kablam!   --> examples/bitvec_x86_64.rs:19:1
kablam!    |
kablam! 19 | extern crate libsmt;
kablam!    | ^^^^^^^^^^^^^^^^^^^^ can't find crate
kablam! 
kablam! error: aborting due to previous error
kablam! 
blam! Build failed, waiting for other jobs to finish...
kablam! error[E0463]: can't find crate for `libsmt`
kablam!  --> examples/fiestel.rs:6:14
kablam!   |
kablam! 6 | #[macro_use] extern crate libsmt;
kablam!   |              ^^^^^^^^^^^^^^^^^^^^ can't find crate
kablam! 
kablam! error: aborting due to previous error
kablam! 
blam! Build failed, waiting for other jobs to finish...
kablam! error[E0061]: this function takes 2 parameters but 1 parameter was supplied
kablam!   --> src/backends/z3.rs:70:35
kablam!    |
kablam! 70 |         let result = solver.solve(&mut z3).unwrap();
kablam!    |                                   ^^^^^^^
kablam!    |
kablam!    = note: the following parameter types were expected:
kablam!    = note: &mut _, bool
kablam! 
kablam! error: no method named `unwrap` found for type `(std::result::Result<std::collections::HashMap<petgraph::graph::NodeIndex, u64>, backends::backend::SMTError>, backends::backend::SMTRes)` in the current scope
kablam!   --> src/backends/z3.rs:70:44
kablam!    |
kablam! 70 |         let result = solver.solve(&mut z3).unwrap();
kablam!    |                                            ^^^^^^
kablam! 
kablam! error[E0061]: this function takes 2 parameters but 1 parameter was supplied
kablam!   --> src/backends/z3.rs:86:35
kablam!    |
kablam! 86 |         let result = solver.solve(&mut z3).unwrap();
kablam!    |                                   ^^^^^^^
kablam!    |
kablam!    = note: the following parameter types were expected:
kablam!    = note: &mut _, bool
kablam! 
kablam! error: no method named `unwrap` found for type `(std::result::Result<std::collections::HashMap<petgraph::graph::NodeIndex, u64>, backends::backend::SMTError>, backends::backend::SMTRes)` in the current scope
kablam!   --> src/backends/z3.rs:86:44
kablam!    |
kablam! 86 |         let result = solver.solve(&mut z3).unwrap();
kablam!    |                                            ^^^^^^
kablam! 
kablam! error[E0061]: this function takes 2 parameters but 1 parameter was supplied
kablam!   --> src/backends/z3.rs:99:35
kablam!    |
kablam! 99 |         let result = solver.solve(&mut z3).unwrap();
kablam!    |                                   ^^^^^^^
kablam!    |
kablam!    = note: the following parameter types were expected:
kablam!    = note: &mut _, bool
kablam! 
kablam! error: no method named `unwrap` found for type `(std::result::Result<std::collections::HashMap<petgraph::graph::NodeIndex, u64>, backends::backend::SMTError>, backends::backend::SMTRes)` in the current scope
kablam!   --> src/backends/z3.rs:99:44
kablam!    |
kablam! 99 |         let result = solver.solve(&mut z3).unwrap();
kablam!    |                                            ^^^^^^
kablam! 
kablam! error: aborting due to 6 previous errors
kablam! 
kablam! error: Could not compile `rustproof-libsmt`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 3163bbfb04cc24122f162b28d67dfb6d4f6e6711a62a503a864ee72e358b9d30`
blam! 3163bbfb04cc24122f162b28d67dfb6d4f6e6711a62a503a864ee72e358b9d30
