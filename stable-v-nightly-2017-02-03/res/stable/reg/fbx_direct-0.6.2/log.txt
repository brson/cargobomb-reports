boom! testing fbx_direct-0.6.2 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 73c8be6f8b6d5b5196fccfa258d46a6b23c8d4bf7682e27e84de8bf80f461e79
boom! running `docker start -a 73c8be6f8b6d5b5196fccfa258d46a6b23c8d4bf7682e27e84de8bf80f461e79`
kablam!    Compiling flate2 v0.2.17
kablam!    Compiling fbx_direct v0.6.2 (file:///source)
kablam! warning: private type in public interface (error E0446), #[warn(private_in_public)] on by default
kablam!   --> src/reader/parser/ascii.rs:22:67
kablam!    |
kablam! 22 |     pub fn next<R: Read>(&mut self, _reader: &mut R, common: &mut CommonState) -> Result<FbxEvent> {
kablam!    |                                                                   ^^^^^^^^^^^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #34537 <https://github.com/rust-lang/rust/issues/34537>
kablam! 
kablam! warning: private type in public interface (error E0446), #[warn(private_in_public)] on by default
kablam!   --> src/reader/parser/binary.rs:27:66
kablam!    |
kablam! 27 |     pub fn next<R: Read>(&mut self, reader: &mut R, common: &mut CommonState) -> Result<FbxEvent> {
kablam!    |                                                                  ^^^^^^^^^^^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #34537 <https://github.com/rust-lang/rust/issues/34537>
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 3.89 secs
boom! running `docker rm -f 73c8be6f8b6d5b5196fccfa258d46a6b23c8d4bf7682e27e84de8bf80f461e79`
blam! 73c8be6f8b6d5b5196fccfa258d46a6b23c8d4bf7682e27e84de8bf80f461e79
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! dac9e26504a6b4603f867e0c36483c7dc548ebd5c51c3320a59e753f00c8026b
boom! running `docker start -a dac9e26504a6b4603f867e0c36483c7dc548ebd5c51c3320a59e753f00c8026b`
kablam!    Compiling fbx_direct v0.6.2 (file:///source)
kablam! warning: unused import: `std::io::Write`, #[warn(unused_imports)] on by default
kablam!   --> examples/convert-to-ascii.rs:21:9
kablam!    |
kablam! 21 |     use std::io::Write;
kablam!    |         ^^^^^^^^^^^^^^
kablam! 
kablam! warning: private type in public interface (error E0446), #[warn(private_in_public)] on by default
kablam!   --> src/reader/parser/ascii.rs:22:67
kablam!    |
kablam! 22 |     pub fn next<R: Read>(&mut self, _reader: &mut R, common: &mut CommonState) -> Result<FbxEvent> {
kablam!    |                                                                   ^^^^^^^^^^^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #34537 <https://github.com/rust-lang/rust/issues/34537>
kablam! 
kablam! warning: private type in public interface (error E0446), #[warn(private_in_public)] on by default
kablam!   --> src/reader/parser/binary.rs:27:66
kablam!    |
kablam! 27 |     pub fn next<R: Read>(&mut self, reader: &mut R, common: &mut CommonState) -> Result<FbxEvent> {
kablam!    |                                                                  ^^^^^^^^^^^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #34537 <https://github.com/rust-lang/rust/issues/34537>
kablam! 
kablam! warning: unused import: `std::io::Write`, #[warn(unused_imports)] on by default
kablam!   --> examples/import-export-binary.rs:20:9
kablam!    |
kablam! 20 |     use std::io::Write;
kablam!    |         ^^^^^^^^^^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 11.70 secs
boom! running `docker rm -f dac9e26504a6b4603f867e0c36483c7dc548ebd5c51c3320a59e753f00c8026b`
blam! dac9e26504a6b4603f867e0c36483c7dc548ebd5c51c3320a59e753f00c8026b
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 76b774a0ca6f657e1b9ff27cdd43ea38ef8c16585c9b1a4db22ebe5e1ca00d2d
boom! running `docker start -a 76b774a0ca6f657e1b9ff27cdd43ea38ef8c16585c9b1a4db22ebe5e1ca00d2d`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/binary_export_import-510a7e77d70f201d
blam! 
blam! running 1 test
blam! test binary_export_import ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/fbx_direct-df9e92d26653883d
blam! 
blam! running 2 tests
blam! test common::property_tests::borrowed_vec_i32_to_vec_i64 ... ok
blam! test common::property_tests::owned_vec_i32_to_vec_i64 ... ok
blam! 
blam! test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests fbx_direct
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 76b774a0ca6f657e1b9ff27cdd43ea38ef8c16585c9b1a4db22ebe5e1ca00d2d`
blam! 76b774a0ca6f657e1b9ff27cdd43ea38ef8c16585c9b1a4db22ebe5e1ca00d2d
