boom! testing mkv-0.0.5 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 6025a3c3d54e2a7a4e116a89c7c12d3fbf12f01a1204765142739fdc6d2d3450
boom! running `docker start -a 6025a3c3d54e2a7a4e116a89c7c12d3fbf12f01a1204765142739fdc6d2d3450`
kablam!    Compiling mkv v0.0.5 (file:///source)
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 1.58 secs
boom! running `docker rm -f 6025a3c3d54e2a7a4e116a89c7c12d3fbf12f01a1204765142739fdc6d2d3450`
blam! 6025a3c3d54e2a7a4e116a89c7c12d3fbf12f01a1204765142739fdc6d2d3450
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 558e34c46ccd3d4563099b4c7342916d9b00f0899bbe762d18f7f21c3e101c21
boom! running `docker start -a 558e34c46ccd3d4563099b4c7342916d9b00f0899bbe762d18f7f21c3e101c21`
kablam!    Compiling mkv v0.0.5 (file:///source)
kablam! warning: unused variable: `element_logger`, #[warn(unused_variables)] on by default
kablam!   --> examples/dom_dumper.rs:32:9
kablam!    |
kablam! 32 |     let element_logger = mkv::elements::parser::debug::DebugPrint::new(log::LogLevel::Info);
kablam!    |         ^^^^^^^^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> examples/dom_dumper.rs:23:9
kablam!    |
kablam! 23 |     let mut reader : Box<Read> = match args().len() {
kablam!    |         ^^^^^^^^^^
kablam! 
kablam! error[E0433]: failed to resolve. Maybe a missing `extern crate log;`?
kablam!  --> examples/simplelogger.rs:2:6
kablam!   |
kablam! 2 | impl ::log::Log for SimpleLogger {
kablam!   |      ^^^^^^^^^^ Maybe a missing `extern crate log;`?
kablam! 
kablam! error[E0433]: failed to resolve. Maybe a missing `extern crate log;`?
kablam!  --> examples/simplelogger.rs:3:27
kablam!   |
kablam! 3 |     fn enabled(&self, _: &::log::LogMetadata) -> bool { true     }
kablam!   |                           ^^^^^^^^^^^^^^^^^^ Maybe a missing `extern crate log;`?
kablam! 
kablam! error[E0433]: failed to resolve. Maybe a missing `extern crate log;`?
kablam!  --> examples/simplelogger.rs:4:28
kablam!   |
kablam! 4 |     fn log(&self, record: &::log::LogRecord) { println!("{}", record.args());  }
kablam!   |                            ^^^^^^^^^^^^^^^^ Maybe a missing `extern crate log;`?
kablam! 
kablam! error: main function not found
kablam! 
kablam! error: cannot continue compilation due to previous error
kablam! 
blam! Build failed, waiting for other jobs to finish...
kablam! warning: function `eldb_test__id_to_class` should have a snake case name such as `eldb_test_id_to_class`, #[warn(non_snake_case)] on by default
kablam!    --> src/elements/database.rs:266:1
kablam!     |
kablam! 266 | fn eldb_test__id_to_class() {
kablam!     | ^
kablam! 
kablam! warning: function `eldb_test__class_to_id` should have a snake case name such as `eldb_test_class_to_id`, #[warn(non_snake_case)] on by default
kablam!    --> src/elements/database.rs:275:1
kablam!     |
kablam! 275 | fn eldb_test__class_to_id() {
kablam!     | ^
kablam! 
kablam! warning: function `eldb_test__class_to_type` should have a snake case name such as `eldb_test_class_to_type`, #[warn(non_snake_case)] on by default
kablam!    --> src/elements/database.rs:283:1
kablam!     |
kablam! 283 | fn eldb_test__class_to_type() {
kablam!     | ^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> examples/event_dumper.rs:22:9
kablam!    |
kablam! 22 |     let mut reader : Box<Read> = match args().len() {
kablam!    |         ^^^^^^^^^^
kablam! 
kablam! error: Could not compile `mkv`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 558e34c46ccd3d4563099b4c7342916d9b00f0899bbe762d18f7f21c3e101c21`
blam! 558e34c46ccd3d4563099b4c7342916d9b00f0899bbe762d18f7f21c3e101c21
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! c214433cdd510e467486a6979c00702e34d4e8d14f82621c94202bfc41ce892f
boom! running `docker start -a c214433cdd510e467486a6979c00702e34d4e8d14f82621c94202bfc41ce892f`
kablam!    Compiling mkv v0.0.5 (file:///source)
kablam! error[E0433]: failed to resolve. Maybe a missing `extern crate log;`?
kablam!  --> examples/simplelogger.rs:2:6
kablam!   |
kablam! 2 | impl ::log::Log for SimpleLogger {
kablam!   |      ^^^^^^^^^^ Maybe a missing `extern crate log;`?
kablam! 
kablam! error[E0433]: failed to resolve. Maybe a missing `extern crate log;`?
kablam!  --> examples/simplelogger.rs:3:27
kablam!   |
kablam! 3 |     fn enabled(&self, _: &::log::LogMetadata) -> bool { true     }
kablam!   |                           ^^^^^^^^^^^^^^^^^^ Maybe a missing `extern crate log;`?
kablam! 
kablam! error[E0433]: failed to resolve. Maybe a missing `extern crate log;`?
kablam!  --> examples/simplelogger.rs:4:28
kablam!   |
kablam! 4 |     fn log(&self, record: &::log::LogRecord) { println!("{}", record.args());  }
kablam!   |                            ^^^^^^^^^^^^^^^^ Maybe a missing `extern crate log;`?
kablam! 
kablam! error: main function not found
kablam! 
kablam! error: cannot continue compilation due to previous error
kablam! 
kablam! error: Could not compile `mkv`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f c214433cdd510e467486a6979c00702e34d4e8d14f82621c94202bfc41ce892f`
blam! c214433cdd510e467486a6979c00702e34d4e8d14f82621c94202bfc41ce892f
