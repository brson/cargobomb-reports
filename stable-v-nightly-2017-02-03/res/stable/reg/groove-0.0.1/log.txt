boom! testing groove-0.0.1 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 71f1a62583fdb63c07ed1f8cef9ad2512ab62ff6a709ed485b427c72b5fdf759
boom! running `docker start -a 71f1a62583fdb63c07ed1f8cef9ad2512ab62ff6a709ed485b427c72b5fdf759`
kablam!    Compiling groove v0.0.1 (file:///source)
kablam! error[E0432]: unresolved import `std::collections::hash_map::Hasher`
kablam!   --> src/lib.rs:16:5
kablam!    |
kablam! 16 | use std::collections::hash_map::Hasher;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `Hasher` in `std::collections::hash_map`
kablam! 
kablam! error[E0531]: unresolved struct, variant or union type `std::raw::Slice`
kablam!    --> src/lib.rs:243:29
kablam!     |
kablam! 243 |             let raw_slice = std::raw::Slice {
kablam!     |                             ^^^^^^^^^^^^^^^
kablam! 
kablam! error[E0412]: type name `std::raw::Slice` is undefined or not in scope
kablam!    --> src/lib.rs:247:35
kablam!     |
kablam! 247 |             std::mem::transmute::<std::raw::Slice<uint8_t>, &[u8]>(raw_slice)
kablam!     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^ undefined or not in scope
kablam!     |
kablam!     = help: no candidates by the name of `Slice` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0531]: unresolved struct, variant or union type `std::raw::Slice`
kablam!    --> src/lib.rs:280:29
kablam!     |
kablam! 280 |             let raw_slice = std::raw::Slice {
kablam!     |                             ^^^^^^^^^^^^^^^
kablam! 
kablam! error[E0412]: type name `std::raw::Slice` is undefined or not in scope
kablam!    --> src/lib.rs:284:35
kablam!     |
kablam! 284 |             std::mem::transmute::<std::raw::Slice<uint8_t>, &[u8]>(raw_slice)
kablam!     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^ undefined or not in scope
kablam!     |
kablam!     = help: no candidates by the name of `Slice` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0531]: unresolved struct, variant or union type `std::raw::Slice`
kablam!    --> src/lib.rs:293:29
kablam!     |
kablam! 293 |             let raw_slice = std::raw::Slice {
kablam!     |                             ^^^^^^^^^^^^^^^
kablam! 
kablam! error[E0412]: type name `std::raw::Slice` is undefined or not in scope
kablam!    --> src/lib.rs:297:35
kablam!     |
kablam! 297 |             std::mem::transmute::<std::raw::Slice<uint8_t>, &[u8]>(raw_slice)
kablam!     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^ undefined or not in scope
kablam!     |
kablam!     = help: no candidates by the name of `Slice` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0412]: type name `Path` is undefined or not in scope
kablam!    --> src/lib.rs:519:28
kablam!     |
kablam! 519 |     pub fn open(filename: &Path) -> Option<File> {
kablam!     |                            ^^^^ undefined or not in scope
kablam!     |
kablam!     = help: you can import it into scope: `use std::path::Path;`.
kablam! 
kablam! error[E0412]: type name `Path` is undefined or not in scope
kablam!    --> src/lib.rs:534:31
kablam!     |
kablam! 534 |     pub fn filename(&self) -> Path {
kablam!     |                               ^^^^ undefined or not in scope
kablam!     |
kablam!     = help: you can import it into scope: `use std::path::Path;`.
kablam! 
kablam! error[E0425]: unresolved name `std::ffi::c_str_to_bytes`
kablam!    --> src/lib.rs:536:25
kablam!     |
kablam! 536 |             let slice = std::ffi::c_str_to_bytes(&(*self.groove_file).filename);
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0433]: failed to resolve. Use of undeclared type or module `Path`
kablam!    --> src/lib.rs:537:13
kablam!     |
kablam! 537 |             Path::new(slice)
kablam!     |             ^^^^^^^^^ Use of undeclared type or module `Path`
kablam! 
kablam! error[E0425]: unresolved name `std::ffi::c_str_to_bytes`
kablam!    --> src/lib.rs:810:25
kablam!     |
kablam! 810 |             let slice = std::ffi::c_str_to_bytes(&key_c_str);
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `std::ffi::c_str_to_bytes`
kablam!    --> src/lib.rs:820:25
kablam!     |
kablam! 820 |             let slice = std::ffi::c_str_to_bytes(&val_c_str);
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `std::ffi::c_str_to_bytes`
kablam!     --> src/lib.rs:1081:21
kablam!      |
kablam! 1081 |         let slice = std::ffi::c_str_to_bytes(&version);
kablam!      |                     ^^^^^^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0244]: wrong number of type arguments
kablam!     --> src/lib.rs:1096:45
kablam!      |
kablam! 1096 | struct PointerReferenceCounter<P: Destroy + Hash<Hasher> + Eq> {
kablam!      |                                             ^^^^^^^^^^^^ expected no type arguments, found 1
kablam! 
kablam! error[E0244]: wrong number of type arguments
kablam!     --> src/lib.rs:1100:19
kablam!      |
kablam! 1100 | impl<P: Destroy + Hash<Hasher> + Eq> PointerReferenceCounter<P> {
kablam!      |                   ^^^^^^^^^^^^ expected no type arguments, found 1
kablam! 
kablam! error: aborting due to 2 previous errors
kablam! 
kablam! error: Could not compile `groove`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 71f1a62583fdb63c07ed1f8cef9ad2512ab62ff6a709ed485b427c72b5fdf759`
blam! 71f1a62583fdb63c07ed1f8cef9ad2512ab62ff6a709ed485b427c72b5fdf759
