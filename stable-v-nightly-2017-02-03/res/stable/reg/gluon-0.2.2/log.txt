boom! testing gluon-0.2.2 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 597a3d363441454df3446ba903247176800dcfcb1d203a7d9fe83354e5bea171
boom! running `docker start -a 597a3d363441454df3446ba903247176800dcfcb1d203a7d9fe83354e5bea171`
kablam!    Compiling gluon v0.2.2 (file:///source)
kablam!    Compiling combine v2.0.0-beta3
kablam!    Compiling pretty v0.1.0
kablam!    Compiling gluon_base v0.2.2
kablam!    Compiling combine-language v2.0.0-beta4
kablam!    Compiling gluon_vm v0.2.2
kablam!    Compiling gluon_check v0.2.2
kablam!    Compiling gluon_parser v0.2.2
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 52.65 secs
boom! running `docker rm -f 597a3d363441454df3446ba903247176800dcfcb1d203a7d9fe83354e5bea171`
blam! 597a3d363441454df3446ba903247176800dcfcb1d203a7d9fe83354e5bea171
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 12a9b0f18e512a118631da68df1ebe179320f220f42ebf39707b729483346d0f
boom! running `docker start -a 12a9b0f18e512a118631da68df1ebe179320f220f42ebf39707b729483346d0f`
kablam!    Compiling gluon v0.2.2 (file:///source)
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 22.42 secs
boom! running `docker rm -f 12a9b0f18e512a118631da68df1ebe179320f220f42ebf39707b729483346d0f`
blam! 12a9b0f18e512a118631da68df1ebe179320f220f42ebf39707b729483346d0f
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 32abd5306c1fb56ab6da2ba5aa66701e44808172e26ad72c25c4291fae8bb51d
boom! running `docker start -a 32abd5306c1fb56ab6da2ba5aa66701e44808172e26ad72c25c4291fae8bb51d`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/api-eb51fbc73227ba92
blam! 
blam! running 4 tests
blam! test array ... ok
blam! test root_string ... ok
blam! test root_data ... ok
blam! test call_function ... ok
blam! 
blam! test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/compiletest-655fecfbfd02b79b
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/error-00f8aeba02fc4625
blam! 
blam! running 1 test
blam! test dont_panic_when_error_span_is_at_eof ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/gluon-4dd769d27091a0aa
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/io-109770f1bdced5c3
blam! 
blam! running 1 test
blam! test read_file ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- read_file stdout ----
blam! 	thread 'read_file' panicked at 'Assertion failed', tests/io.rs:30
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! 
blam! failures:
blam!     read_file
blam! 
blam! test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f 32abd5306c1fb56ab6da2ba5aa66701e44808172e26ad72c25c4291fae8bb51d`
blam! 32abd5306c1fb56ab6da2ba5aa66701e44808172e26ad72c25c4291fae8bb51d
