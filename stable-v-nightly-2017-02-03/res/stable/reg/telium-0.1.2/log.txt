boom! testing telium-0.1.2 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 25c33c0ec7750327c93507c07e9c6379a3d78d5b2009ff3358b8d08e43521b3c
boom! running `docker start -a 25c33c0ec7750327c93507c07e9c6379a3d78d5b2009ff3358b8d08e43521b3c`
kablam!    Compiling num v0.1.36
kablam!    Compiling nalgebra v0.5.1
kablam!    Compiling telium v0.1.2 (file:///source)
kablam! warning: unnecessary parentheses around assigned value, #[warn(unused_parens)] on by default
kablam!   --> src/numeric/interpolate.rs:26:20
kablam!    |
kablam! 26 |             B[i] = ((self[i+1] - self[i]) / h[i] - (self[i] - self[i-1]) / h[i-1]);
kablam!    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `val`, #[warn(unused_variables)] on by default
kablam!   --> src/numeric/polynomial.rs:59:19
kablam!    |
kablam! 59 |         for (pow, val) in self.coeffs.iter().enumerate() {
kablam!    |                   ^^^
kablam! 
kablam! warning: unused variable: `val`, #[warn(unused_variables)] on by default
kablam!   --> src/numeric/polynomial.rs:69:19
kablam!    |
kablam! 69 |         for (pow, val) in self.coeffs.iter().enumerate() {
kablam!    |                   ^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> src/numeric/polynomial.rs:80:13
kablam!    |
kablam! 80 |             write!(f, "+ {}x^{} ", coeff, pow);
kablam!    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused variable: `c`, #[warn(unused_variables)] on by default
kablam!  --> src/numeric/calculus.rs:5:28
kablam!   |
kablam! 5 |     fn integral(&mut self, c: f32) {}
kablam!   |                            ^
kablam! 
kablam! warning: unused import: `Domain`, #[warn(unused_imports)] on by default
kablam!  --> src/numeric/interpolate.rs:1:25
kablam!   |
kablam! 1 | use numeric::function::{Domain, Eval};
kablam!   |                         ^^^^^^
kablam! 
kablam! warning: unused import: `Eval`, #[warn(unused_imports)] on by default
kablam!  --> src/numeric/interpolate.rs:1:33
kablam!   |
kablam! 1 | use numeric::function::{Domain, Eval};
kablam!   |                                 ^^^^
kablam! 
kablam! warning: unused import: `CheckedAdd`, #[warn(unused_imports)] on by default
kablam!   --> src/numeric/interpolate.rs:12:31
kablam!    |
kablam! 12 | use self::num::traits::{Zero, CheckedAdd};
kablam!    |                               ^^^^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> src/numeric/interpolate.rs:23:14
kablam!    |
kablam! 23 |         let (mut h, mut coeffs_mat) = gen_coeffs_matrix(range(0f32, self.len() as f32).collect()); // generates a Vec<f32> comparable to the index
kablam!    |              ^^^^^
kablam! 
kablam! warning: variable `B` should have a snake case name such as `b`, #[warn(non_snake_case)] on by default
kablam!   --> src/numeric/interpolate.rs:24:13
kablam!    |
kablam! 24 |         let mut B: DVec<f32> = DVec::new_zeros(self.len());
kablam!    |             ^^^^^
kablam! 
kablam! warning: unused import: `num::Complex`, #[warn(unused_imports)] on by default
kablam!  --> src/main.rs:5:5
kablam!   |
kablam! 5 | use num::Complex;
kablam!   |     ^^^^^^^^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 16.17 secs
boom! running `docker rm -f 25c33c0ec7750327c93507c07e9c6379a3d78d5b2009ff3358b8d08e43521b3c`
blam! 25c33c0ec7750327c93507c07e9c6379a3d78d5b2009ff3358b8d08e43521b3c
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! a396c668cb82f77ec82a9ce1143adc239df14744928e4d1cd0b4d9f24d7fbb72
boom! running `docker start -a a396c668cb82f77ec82a9ce1143adc239df14744928e4d1cd0b4d9f24d7fbb72`
kablam!    Compiling telium v0.1.2 (file:///source)
kablam! warning: unnecessary parentheses around assigned value, #[warn(unused_parens)] on by default
kablam!   --> src/numeric/interpolate.rs:26:20
kablam!    |
kablam! 26 |             B[i] = ((self[i+1] - self[i]) / h[i] - (self[i] - self[i-1]) / h[i-1]);
kablam!    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `num::Complex`, #[warn(unused_imports)] on by default
kablam!  --> src/main.rs:5:5
kablam!   |
kablam! 5 | use num::Complex;
kablam!   |     ^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `val`, #[warn(unused_variables)] on by default
kablam!   --> src/numeric/polynomial.rs:59:19
kablam!    |
kablam! 59 |         for (pow, val) in self.coeffs.iter().enumerate() {
kablam!    |                   ^^^
kablam! 
kablam! warning: unused variable: `val`, #[warn(unused_variables)] on by default
kablam!   --> src/numeric/polynomial.rs:69:19
kablam!    |
kablam! 69 |         for (pow, val) in self.coeffs.iter().enumerate() {
kablam!    |                   ^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> src/numeric/polynomial.rs:80:13
kablam!    |
kablam! 80 |             write!(f, "+ {}x^{} ", coeff, pow);
kablam!    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused variable: `c`, #[warn(unused_variables)] on by default
kablam!  --> src/numeric/calculus.rs:5:28
kablam!   |
kablam! 5 |     fn integral(&mut self, c: f32) {}
kablam!   |                            ^
kablam! 
kablam! warning: unused import: `Domain`, #[warn(unused_imports)] on by default
kablam!  --> src/numeric/interpolate.rs:1:25
kablam!   |
kablam! 1 | use numeric::function::{Domain, Eval};
kablam!   |                         ^^^^^^
kablam! 
kablam! warning: unused import: `Eval`, #[warn(unused_imports)] on by default
kablam!  --> src/numeric/interpolate.rs:1:33
kablam!   |
kablam! 1 | use numeric::function::{Domain, Eval};
kablam!   |                                 ^^^^
kablam! 
kablam! warning: unused import: `CheckedAdd`, #[warn(unused_imports)] on by default
kablam!   --> src/numeric/interpolate.rs:12:31
kablam!    |
kablam! 12 | use self::num::traits::{Zero, CheckedAdd};
kablam!    |                               ^^^^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> src/numeric/interpolate.rs:23:14
kablam!    |
kablam! 23 |         let (mut h, mut coeffs_mat) = gen_coeffs_matrix(range(0f32, self.len() as f32).collect()); // generates a Vec<f32> comparable to the index
kablam!    |              ^^^^^
kablam! 
kablam! warning: variable `B` should have a snake case name such as `b`, #[warn(non_snake_case)] on by default
kablam!   --> src/numeric/interpolate.rs:24:13
kablam!    |
kablam! 24 |         let mut B: DVec<f32> = DVec::new_zeros(self.len());
kablam!    |             ^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 3.0 secs
boom! running `docker rm -f a396c668cb82f77ec82a9ce1143adc239df14744928e4d1cd0b4d9f24d7fbb72`
blam! a396c668cb82f77ec82a9ce1143adc239df14744928e4d1cd0b4d9f24d7fbb72
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! ac387185a22418316eb0107644964fd188eae40cc2cc4aa753e0afc060a002c8
boom! running `docker start -a ac387185a22418316eb0107644964fd188eae40cc2cc4aa753e0afc060a002c8`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/main-935b65772fb6bbcb
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/telium-a4b59fd788d56bfe
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests telium
kablam! warning: unnecessary parentheses around assigned value, #[warn(unused_parens)] on by default
kablam!   --> /source/src/numeric/interpolate.rs:26:20
kablam!    |
kablam! 26 |             B[i] = ((self[i+1] - self[i]) / h[i] - (self[i] - self[i-1]) / h[i-1]);
kablam!    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f ac387185a22418316eb0107644964fd188eae40cc2cc4aa753e0afc060a002c8`
blam! ac387185a22418316eb0107644964fd188eae40cc2cc4aa753e0afc060a002c8
