boom! testing act-0.1.1 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 9028b07811feb60f409a6ecc4415a65254d58c76f394ce6537d3caa7ba79c425
boom! running `docker start -a 9028b07811feb60f409a6ecc4415a65254d58c76f394ce6537d3caa7ba79c425`
kablam!    Compiling ansi-escapes v0.1.0
kablam!    Compiling act v0.1.1 (file:///source)
kablam! warning: unused import: `std::io`, #[warn(unused_imports)] on by default
kablam!    --> src/lib.rs:225:17
kablam!     |
kablam! 225 |             use std::io;
kablam!     |                 ^^^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 3.87 secs
boom! running `docker rm -f 9028b07811feb60f409a6ecc4415a65254d58c76f394ce6537d3caa7ba79c425`
blam! 9028b07811feb60f409a6ecc4415a65254d58c76f394ce6537d3caa7ba79c425
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 881c85c913ea3f41ac1d551c55792c3570ab860cc8b1312d8efb8f10b4d7de43
boom! running `docker start -a 881c85c913ea3f41ac1d551c55792c3570ab860cc8b1312d8efb8f10b4d7de43`
kablam!    Compiling act v0.1.1 (file:///source)
kablam! warning: unused import: `std::io`, #[warn(unused_imports)] on by default
kablam!    --> src/lib.rs:225:17
kablam!     |
kablam! 225 |             use std::io;
kablam!     |                 ^^^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 2.54 secs
boom! running `docker rm -f 881c85c913ea3f41ac1d551c55792c3570ab860cc8b1312d8efb8f10b4d7de43`
blam! 881c85c913ea3f41ac1d551c55792c3570ab860cc8b1312d8efb8f10b4d7de43
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! c46927fe30f4cf2e79f71e830a2c284df69f8850660bd1010d1c49f9ff185152
boom! running `docker start -a c46927fe30f4cf2e79f71e830a2c284df69f8850660bd1010d1c49f9ff185152`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/act-3c2366031a28ecca
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/act-7c4bda9f4874eced
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests act
blam! 
blam! running 2 tests
blam! test Action_0 ... FAILED
blam! test _0 ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- Action_0 stdout ----
blam! 	error[E0308]: mismatched types
blam!  --> <anon>:5:39
blam!   |
blam! 5 |     let move_to_locked = Action::Move("Unlock the door ","locked_room","LockedRoomKey");
blam!   |                                       ^^^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found reference
blam!   |
blam!   = note: expected type `std::string::String`
blam!   = note:    found type `&'static str`
blam! 
blam! error[E0308]: mismatched types
blam!  --> <anon>:5:58
blam!   |
blam! 5 |     let move_to_locked = Action::Move("Unlock the door ","locked_room","LockedRoomKey");
blam!   |                                                          ^^^^^^^^^^^^^ expected struct `std::string::String`, found reference
blam!   |
blam!   = note: expected type `std::string::String`
blam!   = note:    found type `&'static str`
blam! 
blam! error[E0308]: mismatched types
blam!  --> <anon>:5:72
blam!   |
blam! 5 |     let move_to_locked = Action::Move("Unlock the door ","locked_room","LockedRoomKey");
blam!   |                                                                        ^^^^^^^^^^^^^^^ expected struct `std::string::String`, found reference
blam!   |
blam!   = note: expected type `std::string::String`
blam!   = note:    found type `&'static str`
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'Action_0' panicked at 'Box<Any>', ../src/librustc/session/mod.rs:191
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! ---- _0 stdout ----
blam! 	thread '_0' panicked at 'test executable failed:
blam! Made with 
blam! 
blam! 
blam!       _/           _//   _//! _//!//!
blam!      _/ //      _//   _//     _//
blam!     _/  _//    _//            _//
blam!    _//   _//   _//            _//
blam!   _//!//! _//  _//            _//
blam!  _//       _//  _//   _//     _//
blam! _//         _//   _//!/       _//
blam! 
blam! Make your own game at github.com/ichy-wayland/act
blam! cIm a starting room! Welcome to this example game.
blam! 
blam! 0. Move to another room
blam! 
blam! 
blam! 
blam! thread 'main' panicked at 'called `Option::unwrap()` on a `None` value', ../src/libcore/option.rs:323
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! ', ../src/librustdoc/test.rs:315
blam! 
blam! 
blam! failures:
blam!     Action_0
blam!     _0
blam! 
blam! test result: FAILED. 0 passed; 2 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f c46927fe30f4cf2e79f71e830a2c284df69f8850660bd1010d1c49f9ff185152`
blam! c46927fe30f4cf2e79f71e830a2c284df69f8850660bd1010d1c49f9ff185152
