boom! testing basichll-0.3.1 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 732c84663d504c08fee367d4657f2228a572bb313c62353c8c4824cc75986d2e
boom! running `docker start -a 732c84663d504c08fee367d4657f2228a572bb313c62353c8c4824cc75986d2e`
kablam!    Compiling basichll v0.3.1 (file:///source)
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead, #[warn(deprecated)] on by default
kablam!   --> src/lib.rs:12:32
kablam!    |
kablam! 12 | use std::hash::{ Hash, Hasher, SipHasher };
kablam!    |                                ^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead, #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:126:26
kablam!     |
kablam! 126 |         let mut hasher = SipHasher::new();
kablam!     |                          ^^^^^^^^^^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.61 secs
boom! running `docker rm -f 732c84663d504c08fee367d4657f2228a572bb313c62353c8c4824cc75986d2e`
blam! 732c84663d504c08fee367d4657f2228a572bb313c62353c8c4824cc75986d2e
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 96c6a12b6653dd4c5678a1b20ec26520ff5805ba461e67216200264ca2dbee36
boom! running `docker start -a 96c6a12b6653dd4c5678a1b20ec26520ff5805ba461e67216200264ca2dbee36`
kablam!    Compiling basichll v0.3.1 (file:///source)
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead, #[warn(deprecated)] on by default
kablam!   --> src/lib.rs:12:32
kablam!    |
kablam! 12 | use std::hash::{ Hash, Hasher, SipHasher };
kablam!    |                                ^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead, #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:126:26
kablam!     |
kablam! 126 |         let mut hasher = SipHasher::new();
kablam!     |                          ^^^^^^^^^^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 1.75 secs
boom! running `docker rm -f 96c6a12b6653dd4c5678a1b20ec26520ff5805ba461e67216200264ca2dbee36`
blam! 96c6a12b6653dd4c5678a1b20ec26520ff5805ba461e67216200264ca2dbee36
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! b9f220fc33562659461e21fe1f5c381f77aae2d89e4af010ca7b526e4d5f402d
boom! running `docker start -a b9f220fc33562659461e21fe1f5c381f77aae2d89e4af010ca7b526e4d5f402d`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/addition-09888b3822386933
blam! 
blam! running 4 tests
blam! test tests::adding_two_empty_hlls_results_in_an_empty_hll ... ok
blam! test tests::add_together_two_hlls_doesnt_double_count_duplicate_elements ... ok
blam! test tests::adding_together_two_hlls_preserves_the_sum_of_their_counts ... ok
blam! test tests::monoid_laws_should_hold_for_hll ... ok
blam! 
blam! test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/basichll-3bc994c3a06802de
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/counting-a49f7b14e2fa1fae
blam! 
blam! running 2 tests
blam! test tests::a_hll_can_count_heterogenuous_items ... ok
blam! test tests::a_hll_can_count_small_numbers ... ok
blam! 
blam! test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/equality-3e1d6a7a3cc397a2
blam! 
blam! running 3 tests
blam! test tests::adding_two_different_elements_to_two_different_hlls_produces_differences ... ok
blam! test tests::a_non_empty_hll_is_not_equal_to_an_empty_one ... ok
blam! test tests::two_empty_hlls_are_equal ... ok
blam! 
blam! test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/estimation-098d881215d4c869
blam! 
blam! running 2 tests
blam! test tests::can_estimate_a_small_range_subset_of_the_system_dictionary ... FAILED
kablam! error: test failed
blam! test tests::can_estimate_a_large_sequence_of_floating_points ... ok
blam! 
blam! failures:
blam! 
blam! ---- tests::can_estimate_a_small_range_subset_of_the_system_dictionary stdout ----
blam! 	thread 'tests::can_estimate_a_small_range_subset_of_the_system_dictionary' panicked at 'called `Result::unwrap()` on an `Err` value: Error { repr: Os { code: 2, message: "No such file or directory" } }', ../src/libcore/result.rs:837
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! 
blam! failures:
blam!     tests::can_estimate_a_small_range_subset_of_the_system_dictionary
blam! 
blam! test result: FAILED. 1 passed; 1 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f b9f220fc33562659461e21fe1f5c381f77aae2d89e4af010ca7b526e4d5f402d`
blam! b9f220fc33562659461e21fe1f5c381f77aae2d89e4af010ca7b526e4d5f402d
