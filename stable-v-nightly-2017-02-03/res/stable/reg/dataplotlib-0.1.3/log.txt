boom! testing dataplotlib-0.1.3 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 47fa8ddb59741e1353c76f2f78b4562b482148aef72292383faf5071b9c9733e
boom! running `docker start -a 47fa8ddb59741e1353c76f2f78b4562b482148aef72292383faf5071b9c9733e`
kablam!    Compiling phf_shared v0.7.21
kablam!    Compiling pistoncore-window v0.22.1
kablam!    Compiling odds v0.2.25
kablam!    Compiling piston2d-graphics v0.17.3
kablam!    Compiling pistoncore-event_loop v0.25.1
kablam!    Compiling phf v0.7.21
kablam!    Compiling piston v0.25.1
kablam!    Compiling phf_generator v0.7.21
kablam!    Compiling rayon v0.6.0
kablam!    Compiling phf_codegen v0.7.21
kablam!    Compiling nodrop v0.1.8
kablam!    Compiling arrayvec v0.3.20
kablam!    Compiling target_build_utils v0.1.2
kablam!    Compiling rusttype v0.2.1
kablam!    Compiling jpeg-decoder v0.1.11
kablam!    Compiling libloading v0.3.1
kablam!    Compiling dlib v0.3.1
kablam!    Compiling wayland-sys v0.5.11
kablam!    Compiling image v0.10.4
kablam!    Compiling wayland-client v0.5.12
kablam!    Compiling wayland-window v0.2.3
kablam!    Compiling wayland-kbd v0.3.6
kablam!    Compiling glutin v0.6.2
kablam!    Compiling pistoncore-glutin_window v0.29.0
kablam!    Compiling piston-gfx_texture v0.17.0
kablam!    Compiling piston2d-gfx_graphics v0.31.2
kablam!    Compiling piston_window v0.52.0
kablam!    Compiling dataplotlib v0.1.3 (file:///source)
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 50.17 secs
boom! running `docker rm -f 47fa8ddb59741e1353c76f2f78b4562b482148aef72292383faf5071b9c9733e`
blam! 47fa8ddb59741e1353c76f2f78b4562b482148aef72292383faf5071b9c9733e
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 96e1175c63e48f4f98456a01e3b0e14c0ac8c8d214eaa117a7e91372e399fb65
boom! running `docker start -a 96e1175c63e48f4f98456a01e3b0e14c0ac8c8d214eaa117a7e91372e399fb65`
kablam!    Compiling dataplotlib v0.1.3 (file:///source)
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 5.72 secs
boom! running `docker rm -f 96e1175c63e48f4f98456a01e3b0e14c0ac8c8d214eaa117a7e91372e399fb65`
blam! 96e1175c63e48f4f98456a01e3b0e14c0ac8c8d214eaa117a7e91372e399fb65
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! dd694a82dcddc25e980b5ec161903d02a0bccb97b533ae3663770cd16659a33a
boom! running `docker start -a dd694a82dcddc25e980b5ec161903d02a0bccb97b533ae3663770cd16659a33a`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/dataplotlib-7d28448779ed3b4b
blam! 
blam! running 1 test
kablam! thread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: "No backend is available"', ../src/libcore/result.rs:837
kablam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! test plotter::test::plot2d_test ... ok
kablam!    Doc-tests dataplotlib
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 1 test
blam! test _0 ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f dd694a82dcddc25e980b5ec161903d02a0bccb97b533ae3663770cd16659a33a`
blam! dd694a82dcddc25e980b5ec161903d02a0bccb97b533ae3663770cd16659a33a
