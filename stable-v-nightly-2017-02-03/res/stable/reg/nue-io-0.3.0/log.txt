boom! testing nue-io-0.3.0 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 73372366bf00056f3a6de6e13f89157b54444ed1158627648be204fdc1d6566a
boom! running `docker start -a 73372366bf00056f3a6de6e13f89157b54444ed1158627648be204fdc1d6566a`
kablam!    Compiling resize-slice v0.1.2
kablam!    Compiling nue-io v0.3.0 (file:///source)
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.60 secs
boom! running `docker rm -f 73372366bf00056f3a6de6e13f89157b54444ed1158627648be204fdc1d6566a`
blam! 73372366bf00056f3a6de6e13f89157b54444ed1158627648be204fdc1d6566a
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 17aeca41cd7b3e66a10e59c717a99928bf3012da7b45437a05bdf044323d4c36
boom! running `docker start -a 17aeca41cd7b3e66a10e59c717a99928bf3012da7b45437a05bdf044323d4c36`
kablam!    Compiling nue-io v0.3.0 (file:///source)
kablam! error[E0034]: multiple applicable items in scope
kablam!    --> src/region.rs:167:16
kablam!     |
kablam! 167 |         region.read_exact(&mut odata).unwrap();
kablam!     |                ^^^^^^^^^^ multiple `read_exact` found
kablam!     |
kablam! note: candidate #1 is defined in an impl of the trait `read_exact::ReadExactExt` for the type `_`
kablam!    --> src/read_exact.rs:21:5
kablam!     |
kablam! 21  |     fn read_exact(&mut self, buf: &mut [u8]) -> Result<(), Error> {
kablam!     |     ^
kablam! note: candidate #2 is defined in an impl of the trait `std::io::Read` for the type `region::Region<_>`
kablam!    --> src/region.rs:65:1
kablam!     |
kablam! 65  | impl<T: Read + Tell + SeekAbsolute> Read for Region<T> {
kablam!     | ^
kablam!     = note: candidate #3 is defined in an impl of the trait `std::io::Read` for the type `&mut _`
kablam! 
kablam! error[E0034]: multiple applicable items in scope
kablam!    --> src/region.rs:171:16
kablam!     |
kablam! 171 |         region.read_exact(&mut odata[..0x20]).unwrap();
kablam!     |                ^^^^^^^^^^ multiple `read_exact` found
kablam!     |
kablam! note: candidate #1 is defined in an impl of the trait `read_exact::ReadExactExt` for the type `_`
kablam!    --> src/read_exact.rs:21:5
kablam!     |
kablam! 21  |     fn read_exact(&mut self, buf: &mut [u8]) -> Result<(), Error> {
kablam!     |     ^
kablam! note: candidate #2 is defined in an impl of the trait `std::io::Read` for the type `region::Region<_>`
kablam!    --> src/region.rs:65:1
kablam!     |
kablam! 65  | impl<T: Read + Tell + SeekAbsolute> Read for Region<T> {
kablam!     | ^
kablam!     = note: candidate #3 is defined in an impl of the trait `std::io::Read` for the type `&mut _`
kablam! 
kablam! error[E0034]: multiple applicable items in scope
kablam!    --> src/region.rs:175:16
kablam!     |
kablam! 175 |         region.read_exact(&mut odata[..]).unwrap();
kablam!     |                ^^^^^^^^^^ multiple `read_exact` found
kablam!     |
kablam! note: candidate #1 is defined in an impl of the trait `read_exact::ReadExactExt` for the type `_`
kablam!    --> src/read_exact.rs:21:5
kablam!     |
kablam! 21  |     fn read_exact(&mut self, buf: &mut [u8]) -> Result<(), Error> {
kablam!     |     ^
kablam! note: candidate #2 is defined in an impl of the trait `std::io::Read` for the type `region::Region<_>`
kablam!    --> src/region.rs:65:1
kablam!     |
kablam! 65  | impl<T: Read + Tell + SeekAbsolute> Read for Region<T> {
kablam!     | ^
kablam!     = note: candidate #3 is defined in an impl of the trait `std::io::Read` for the type `&mut _`
kablam! 
kablam! error: aborting due to 3 previous errors
kablam! 
kablam! error: Could not compile `nue-io`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 17aeca41cd7b3e66a10e59c717a99928bf3012da7b45437a05bdf044323d4c36`
blam! 17aeca41cd7b3e66a10e59c717a99928bf3012da7b45437a05bdf044323d4c36
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 0263ca8dbe387a75e638c33314281e2ba8c9722de5817b36f6274aed22cdf94e
boom! running `docker start -a 0263ca8dbe387a75e638c33314281e2ba8c9722de5817b36f6274aed22cdf94e`
kablam!    Compiling nue-io v0.3.0 (file:///source)
kablam! error[E0034]: multiple applicable items in scope
kablam!    --> src/region.rs:167:16
kablam!     |
kablam! 167 |         region.read_exact(&mut odata).unwrap();
kablam!     |                ^^^^^^^^^^ multiple `read_exact` found
kablam!     |
kablam! note: candidate #1 is defined in an impl of the trait `read_exact::ReadExactExt` for the type `_`
kablam!    --> src/read_exact.rs:21:5
kablam!     |
kablam! 21  |     fn read_exact(&mut self, buf: &mut [u8]) -> Result<(), Error> {
kablam!     |     ^
kablam! note: candidate #2 is defined in an impl of the trait `std::io::Read` for the type `region::Region<_>`
kablam!    --> src/region.rs:65:1
kablam!     |
kablam! 65  | impl<T: Read + Tell + SeekAbsolute> Read for Region<T> {
kablam!     | ^
kablam!     = note: candidate #3 is defined in an impl of the trait `std::io::Read` for the type `&mut _`
kablam! 
kablam! error[E0034]: multiple applicable items in scope
kablam!    --> src/region.rs:171:16
kablam!     |
kablam! 171 |         region.read_exact(&mut odata[..0x20]).unwrap();
kablam!     |                ^^^^^^^^^^ multiple `read_exact` found
kablam!     |
kablam! note: candidate #1 is defined in an impl of the trait `read_exact::ReadExactExt` for the type `_`
kablam!    --> src/read_exact.rs:21:5
kablam!     |
kablam! 21  |     fn read_exact(&mut self, buf: &mut [u8]) -> Result<(), Error> {
kablam!     |     ^
kablam! note: candidate #2 is defined in an impl of the trait `std::io::Read` for the type `region::Region<_>`
kablam!    --> src/region.rs:65:1
kablam!     |
kablam! 65  | impl<T: Read + Tell + SeekAbsolute> Read for Region<T> {
kablam!     | ^
kablam!     = note: candidate #3 is defined in an impl of the trait `std::io::Read` for the type `&mut _`
kablam! 
kablam! error[E0034]: multiple applicable items in scope
kablam!    --> src/region.rs:175:16
kablam!     |
kablam! 175 |         region.read_exact(&mut odata[..]).unwrap();
kablam!     |                ^^^^^^^^^^ multiple `read_exact` found
kablam!     |
kablam! note: candidate #1 is defined in an impl of the trait `read_exact::ReadExactExt` for the type `_`
kablam!    --> src/read_exact.rs:21:5
kablam!     |
kablam! 21  |     fn read_exact(&mut self, buf: &mut [u8]) -> Result<(), Error> {
kablam!     |     ^
kablam! note: candidate #2 is defined in an impl of the trait `std::io::Read` for the type `region::Region<_>`
kablam!    --> src/region.rs:65:1
kablam!     |
kablam! 65  | impl<T: Read + Tell + SeekAbsolute> Read for Region<T> {
kablam!     | ^
kablam!     = note: candidate #3 is defined in an impl of the trait `std::io::Read` for the type `&mut _`
kablam! 
kablam! error: aborting due to 3 previous errors
kablam! 
kablam! error: Could not compile `nue-io`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 0263ca8dbe387a75e638c33314281e2ba8c9722de5817b36f6274aed22cdf94e`
blam! 0263ca8dbe387a75e638c33314281e2ba8c9722de5817b36f6274aed22cdf94e
