boom! testing socket-0.0.7 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 2547a46bdfdf8a07ddeee014bd1a86078e141cbeae8d584faf08bd6bd216a26f
boom! running `docker start -a 2547a46bdfdf8a07ddeee014bd1a86078e141cbeae8d584faf08bd6bd216a26f`
kablam!    Compiling num-iter v0.1.32
kablam!    Compiling num-bigint v0.1.35
kablam!    Compiling num-complex v0.1.35
kablam!    Compiling num-rational v0.1.35
kablam!    Compiling num v0.1.36
kablam!    Compiling socket v0.0.7 (file:///source)
kablam! warning: found Rust slice type in foreign module, consider using a raw pointer instead, #[warn(improper_ctypes)] on by default
kablam!   --> src/lib.rs:49:71
kablam!    |
kablam! 49 |     fn c_socketpair(domain: c_int, type_: c_int, protocol: c_int, sv: *mut [c_int]) -> c_int;
kablam!    |                                                                       ^^^^^^^^^^^^
kablam! 
kablam! warning: unnecessary `unsafe` block, #[warn(unused_unsafe)] on by default
kablam!   --> src/lib.rs:39:21
kablam!    |
kablam! 39 |         let value = unsafe { $fun($($x,)*) };
kablam!    |                     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 83 |         _try!(c_socketpair, domain as c_int, type_ as c_int, protocol as c_int, &mut fds as *mut [c_int]);
kablam!    |         -------------------------------------------------------------------------------------------------- in this macro invocation
kablam! 
kablam! warning: unnecessary `unsafe` block, #[warn(unused_unsafe)] on by default
kablam!    --> src/lib.rs:39:21
kablam!     |
kablam! 39  |         let value = unsafe { $fun($($x,)*) };
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 131 |             _try!(
kablam!     |             - in this macro invocation
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 4.29 secs
boom! running `docker rm -f 2547a46bdfdf8a07ddeee014bd1a86078e141cbeae8d584faf08bd6bd216a26f`
blam! 2547a46bdfdf8a07ddeee014bd1a86078e141cbeae8d584faf08bd6bd216a26f
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! df855598ba7d0d3cb5683c47d3c3ce3c5dcae07be2ebec1f65205ad0cc32b806
boom! running `docker start -a df855598ba7d0d3cb5683c47d3c3ce3c5dcae07be2ebec1f65205ad0cc32b806`
kablam!    Compiling socket v0.0.7 (file:///source)
kablam! warning: found Rust slice type in foreign module, consider using a raw pointer instead, #[warn(improper_ctypes)] on by default
kablam!   --> src/lib.rs:49:71
kablam!    |
kablam! 49 |     fn c_socketpair(domain: c_int, type_: c_int, protocol: c_int, sv: *mut [c_int]) -> c_int;
kablam!    |                                                                       ^^^^^^^^^^^^
kablam! 
kablam! warning: unnecessary `unsafe` block, #[warn(unused_unsafe)] on by default
kablam!   --> src/lib.rs:39:21
kablam!    |
kablam! 39 |         let value = unsafe { $fun($($x,)*) };
kablam!    |                     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 83 |         _try!(c_socketpair, domain as c_int, type_ as c_int, protocol as c_int, &mut fds as *mut [c_int]);
kablam!    |         -------------------------------------------------------------------------------------------------- in this macro invocation
kablam! 
kablam! warning: unnecessary `unsafe` block, #[warn(unused_unsafe)] on by default
kablam!    --> src/lib.rs:39:21
kablam!     |
kablam! 39  |         let value = unsafe { $fun($($x,)*) };
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 131 |             _try!(
kablam!     |             - in this macro invocation
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:370:9
kablam!     |
kablam! 370 |         thread.join();
kablam!     |         ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:384:9
kablam!     |
kablam! 384 |         thread.join();
kablam!     |         ^^^^^^^^^^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 1.49 secs
boom! running `docker rm -f df855598ba7d0d3cb5683c47d3c3ce3c5dcae07be2ebec1f65205ad0cc32b806`
blam! df855598ba7d0d3cb5683c47d3c3ce3c5dcae07be2ebec1f65205ad0cc32b806
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 8cc57e4d23bba24a4b8c517afc700f0fcab552211f089b582e97ed2d98801e5d
boom! running `docker start -a 8cc57e4d23bba24a4b8c517afc700f0fcab552211f089b582e97ed2d98801e5d`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/socket-1e87e6326861e447
blam! 
blam! running 5 tests
blam! test tests::some_basic_socket_stuff_works ... ok
blam! test tests::getsockname_works ... ok
blam! test tests::socketpair_and_unix_sockets_work ... ok
blam! test tests::udp_communication_works ... ok
blam! test tests::tcp_communication_works ... ok
blam! 
blam! test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests socket
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 8cc57e4d23bba24a4b8c517afc700f0fcab552211f089b582e97ed2d98801e5d`
blam! 8cc57e4d23bba24a4b8c517afc700f0fcab552211f089b582e97ed2d98801e5d
