boom! testing linux-api-math-0.0.1 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 243cc5ac340d513674fb0a36300b230a4402edb0d47f414677ae8ce07b6f0f06
boom! running `docker start -a 243cc5ac340d513674fb0a36300b230a4402edb0d47f414677ae8ce07b6f0f06`
kablam!    Compiling linux-api-math v0.0.1 (file:///source)
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.15 secs
boom! running `docker rm -f 243cc5ac340d513674fb0a36300b230a4402edb0d47f414677ae8ce07b6f0f06`
blam! 243cc5ac340d513674fb0a36300b230a4402edb0d47f414677ae8ce07b6f0f06
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 150015b8067673746f28fc2181e887576c7d93c2ed56cf62f02144db910a223a
boom! running `docker start -a 150015b8067673746f28fc2181e887576c7d93c2ed56cf62f02144db910a223a`
kablam!    Compiling linux-api-math v0.0.1 (file:///source)
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdim` in C). If you truly need the positive difference, consider using that expression or the C function `fdim`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:211:28
kablam!     |
kablam! 211 |             assert!(result.abs_sub(0.5) <= 0.000001);
kablam!     |                            ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:224:28
kablam!     |
kablam! 224 |             assert!(result.abs_sub(0.5) <= 0.000001);
kablam!     |                            ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdim` in C). If you truly need the positive difference, consider using that expression or the C function `fdim`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:237:28
kablam!     |
kablam! 237 |             assert!(result.abs_sub(0.5) <= 0.000001);
kablam!     |                            ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:250:28
kablam!     |
kablam! 250 |             assert!(result.abs_sub(0.5) <= 0.000001);
kablam!     |                            ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdim` in C). If you truly need the positive difference, consider using that expression or the C function `fdim`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:263:28
kablam!     |
kablam! 263 |             assert!(result.abs_sub(1.0) <= 0.000001);
kablam!     |                            ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:276:28
kablam!     |
kablam! 276 |             assert!(result.abs_sub(1.0) <= 0.000001);
kablam!     |                            ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdim` in C). If you truly need the positive difference, consider using that expression or the C function `fdim`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:289:28
kablam!     |
kablam! 289 |             assert!(result.abs_sub(60.0) <= 0.0000001);
kablam!     |                            ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:302:28
kablam!     |
kablam! 302 |             assert!(result.abs_sub(60.0) <= 0.0000001);
kablam!     |                            ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdim` in C). If you truly need the positive difference, consider using that expression or the C function `fdim`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:315:28
kablam!     |
kablam! 315 |             assert!(result.abs_sub(30.0) <= 0.0000001);
kablam!     |                            ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:328:28
kablam!     |
kablam! 328 |             assert!(result.abs_sub(30.0) <= 0.0000001);
kablam!     |                            ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdim` in C). If you truly need the positive difference, consider using that expression or the C function `fdim`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:341:28
kablam!     |
kablam! 341 |             assert!(result.abs_sub(45.0) <= 0.0000001);
kablam!     |                            ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:354:28
kablam!     |
kablam! 354 |             assert!(result.abs_sub(45.0) <= 0.0000001);
kablam!     |                            ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdim` in C). If you truly need the positive difference, consider using that expression or the C function `fdim`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:368:28
kablam!     |
kablam! 368 |             assert!(result.abs_sub(135.0) <= 0.000001);
kablam!     |                            ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:382:28
kablam!     |
kablam! 382 |             assert!(result.abs_sub(135.0) <= 0.000001);
kablam!     |                            ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdim` in C). If you truly need the positive difference, consider using that expression or the C function `fdim`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:393:33
kablam!     |
kablam! 393 |             assert!(cosh(param).abs_sub(1.25) <= 0.00001);
kablam!     |                                 ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:406:34
kablam!     |
kablam! 406 |             assert!(coshf(param).abs_sub(1.25) <= 0.00001);
kablam!     |                                  ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdim` in C). If you truly need the positive difference, consider using that expression or the C function `fdim`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:419:33
kablam!     |
kablam! 419 |             assert!(sinh(param).abs_sub(0.75) <= 0.00001);
kablam!     |                                 ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:432:34
kablam!     |
kablam! 432 |             assert!(sinhf(param).abs_sub(0.75) <= 0.00001);
kablam!     |                                  ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdim` in C). If you truly need the positive difference, consider using that expression or the C function `fdim`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:445:33
kablam!     |
kablam! 445 |             assert!(tanh(param).abs_sub(0.6) <= 0.00001);
kablam!     |                                 ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:458:34
kablam!     |
kablam! 458 |             assert!(tanhf(param).abs_sub(0.6) <= 0.00001);
kablam!     |                                  ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdim` in C). If you truly need the positive difference, consider using that expression or the C function `fdim`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:471:34
kablam!     |
kablam! 471 |             assert!(acosh(param).abs_sub(2.0) <= 0.00001);
kablam!     |                                  ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:484:35
kablam!     |
kablam! 484 |             assert!(acoshf(param).abs_sub(2.0) <= 0.00001);
kablam!     |                                   ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdim` in C). If you truly need the positive difference, consider using that expression or the C function `fdim`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:497:34
kablam!     |
kablam! 497 |             assert!(asinh(param).abs_sub(2.0) <= 0.00001);
kablam!     |                                  ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:510:35
kablam!     |
kablam! 510 |             assert!(asinhf(param).abs_sub(2.0) <= 0.00001);
kablam!     |                                   ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdim` in C). If you truly need the positive difference, consider using that expression or the C function `fdim`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:523:34
kablam!     |
kablam! 523 |             assert!(atanh(param).abs_sub(1.0) <= 0.00001);
kablam!     |                                  ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:536:35
kablam!     |
kablam! 536 |             assert!(atanhf(param).abs_sub(1.0) <= 0.00001);
kablam!     |                                   ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdim` in C). If you truly need the positive difference, consider using that expression or the C function `fdim`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:548:32
kablam!     |
kablam! 548 |             assert!(exp(param).abs_sub(148.413159) <= 0.000001);
kablam!     |                                ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:559:33
kablam!     |
kablam! 559 |             assert!(expf(param).abs_sub(148.413159) <= 0.000001);
kablam!     |                                 ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdim` in C). If you truly need the positive difference, consider using that expression or the C function `fdim`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:570:32
kablam!     |
kablam! 570 |             assert!(log(param).abs_sub(1.704748) <= 0.000001);
kablam!     |                                ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:581:33
kablam!     |
kablam! 581 |             assert!(logf(param).abs_sub(1.704748) <= 0.000001);
kablam!     |                                 ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdim` in C). If you truly need the positive difference, consider using that expression or the C function `fdim`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:692:52
kablam!     |
kablam! 692 |             assert!(remainder(number, denominator).abs_sub(1.7) <= 0.0000001);
kablam!     |                                                    ^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:702:53
kablam!     |
kablam! 702 |             assert!(remainderf(number, denominator).abs_sub(0.7) <= 0.0000001);
kablam!     |                                                     ^^^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.49 secs
boom! running `docker rm -f 150015b8067673746f28fc2181e887576c7d93c2ed56cf62f02144db910a223a`
blam! 150015b8067673746f28fc2181e887576c7d93c2ed56cf62f02144db910a223a
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 0c4b49440cad8c248b2629d52399754430bac8130eb86621a5e466825d30be32
boom! running `docker start -a 0c4b49440cad8c248b2629d52399754430bac8130eb86621a5e466825d30be32`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/linux_api_math-494d01202b1bdd8e
blam! 
blam! running 40 tests
blam! test test::test_acos ... ok
blam! test test::test_acoshf ... ok
blam! test test::test_acosf ... ok
blam! test test::test_acosh ... ok
blam! test test::test_asinhf ... ok
blam! test test::test_asinh ... ok
blam! test test::test_asinf ... ok
blam! test test::test_atan ... ok
blam! test test::test_asin ... ok
blam! test test::test_atan2 ... ok
blam! test test::test_atan2f ... ok
blam! test test::test_atanf ... ok
blam! test test::test_atanh ... ok
blam! test test::test_cosf ... ok
blam! test test::test_atanhf ... ok
blam! test test::test_cosh ... ok
blam! test test::test_exp ... ok
blam! test test::test_llrint ... ok
blam! test test::test_cos ... ok
blam! test test::test_coshf ... ok
blam! test test::test_expf ... ok
blam! test test::test_llrintf ... ok
blam! test test::test_log ... ok
blam! test test::test_logf ... ok
blam! test test::test_lrint ... ok
blam! test test::test_lrintf ... ok
blam! test test::test_nearbyint ... ok
blam! test test::test_nearbyintf ... ok
blam! test test::test_rint ... ok
blam! test test::test_remainder ... ok
blam! test test::test_remainderf ... ok
blam! test test::test_rintf ... ok
blam! test test::test_sin ... ok
blam! test test::test_sinf ... ok
blam! test test::test_sinh ... ok
blam! test test::test_sinhf ... ok
blam! test test::test_tan ... ok
blam! test test::test_tanf ... ok
blam! test test::test_tanh ... ok
blam! test test::test_tanhf ... ok
blam! 
blam! test result: ok. 40 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests linux-api-math
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 0c4b49440cad8c248b2629d52399754430bac8130eb86621a5e466825d30be32`
blam! 0c4b49440cad8c248b2629d52399754430bac8130eb86621a5e466825d30be32
