boom! testing sflow-0.0.1 against beta for beta
boom! running: cargo +beta build --frozen
boom! creating container for: cargo +beta build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta build --frozen cargobomb`
blam! e1eb4de319693b182ef13422ab575b697b486a10717ac32e83e2bfddfac8ee78
boom! running `docker start -a e1eb4de319693b182ef13422ab575b697b486a10717ac32e83e2bfddfac8ee78`
kablam! warning: only one of `license` or `license-file` is necessary
kablam!    Compiling sflow v0.0.1 (file:///source)
kablam! warning: unused import: `ByteOrder`, #[warn(unused_imports)] on by default
kablam!  --> src/utils.rs:1:23
kablam!   |
kablam! 1 | use byteorder::{self, ByteOrder, BigEndian, ReadBytesExt};
kablam!   |                       ^^^^^^^^^
kablam! 
kablam! warning: unused import: `Read`, #[warn(unused_imports)] on by default
kablam!  --> src/utils.rs:5:31
kablam!   |
kablam! 5 | use std::io::{self, SeekFrom, Read};
kablam!   |                               ^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.80 secs
boom! running `docker rm -f e1eb4de319693b182ef13422ab575b697b486a10717ac32e83e2bfddfac8ee78`
blam! e1eb4de319693b182ef13422ab575b697b486a10717ac32e83e2bfddfac8ee78
boom! running: cargo +beta test --frozen --no-run
boom! creating container for: cargo +beta test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta test --frozen --no-run cargobomb`
blam! 53472333499fae6c37358c9cca021e5ffa4ed03ce9c1b0538107ad619362a154
boom! running `docker start -a 53472333499fae6c37358c9cca021e5ffa4ed03ce9c1b0538107ad619362a154`
kablam! warning: only one of `license` or `license-file` is necessary
kablam!    Compiling sflow v0.0.1 (file:///source)
kablam! warning: unused import: `ByteOrder`, #[warn(unused_imports)] on by default
kablam!  --> src/utils.rs:1:23
kablam!   |
kablam! 1 | use byteorder::{self, ByteOrder, BigEndian, ReadBytesExt};
kablam!   |                       ^^^^^^^^^
kablam! 
kablam! warning: unused import: `Read`, #[warn(unused_imports)] on by default
kablam!  --> src/utils.rs:5:31
kablam!   |
kablam! 5 | use std::io::{self, SeekFrom, Read};
kablam!   |                               ^^^^
kablam! 
kablam! warning: unused import: `datagram::Datagram`, #[warn(unused_imports)] on by default
kablam!  --> src/test.rs:5:5
kablam!   |
kablam! 5 | use datagram::Datagram;
kablam!   |     ^^^^^^^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.21 secs
boom! running `docker rm -f 53472333499fae6c37358c9cca021e5ffa4ed03ce9c1b0538107ad619362a154`
blam! 53472333499fae6c37358c9cca021e5ffa4ed03ce9c1b0538107ad619362a154
boom! running: cargo +beta test --frozen
boom! creating container for: cargo +beta test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta test --frozen cargobomb`
blam! 5792c62a6c5f9b5c2bf83f3af41de04f0b82f802d0b99159d8c533255941f054
boom! running `docker start -a 5792c62a6c5f9b5c2bf83f3af41de04f0b82f802d0b99159d8c533255941f054`
kablam! warning: only one of `license` or `license-file` is necessary
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/sflow-569ddabfc9efb7f9
blam! 
blam! running 1 test
kablam!    Doc-tests sflow
blam! test test::test_decode_string ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 5792c62a6c5f9b5c2bf83f3af41de04f0b82f802d0b99159d8c533255941f054`
blam! 5792c62a6c5f9b5c2bf83f3af41de04f0b82f802d0b99159d8c533255941f054
