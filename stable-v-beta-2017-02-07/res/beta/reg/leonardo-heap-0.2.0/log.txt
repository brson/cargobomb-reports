boom! testing leonardo-heap-0.2.0 against beta for beta
boom! running: cargo +beta build --frozen
boom! creating container for: cargo +beta build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta build --frozen cargobomb`
blam! 1719c6fd8be2711c02fd7bbcca5e862130d11b0c456c6d73b54b719670aaa259
boom! running `docker start -a 1719c6fd8be2711c02fd7bbcca5e862130d11b0c456c6d73b54b719670aaa259`
kablam!    Compiling leonardo-heap v0.2.0 (file:///source)
kablam! warning: method is never used: `new`, #[warn(dead_code)] on by default
kablam!   --> src/subheap.rs:20:5
kablam!    |
kablam! 20 |       pub fn new(data: &[T], order: u32) -> SubHeap<T> {
kablam!    |  _____^ starting here...
kablam! 21 | |         assert_eq!(data.len(), leonardo(order));
kablam! 22 | |
kablam! 23 | |         SubHeap {
kablam! 24 | |             data: data,
kablam! 25 | |             order: order,
kablam! 26 | |         }
kablam! 27 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: method is never used: `destructure`, #[warn(dead_code)] on by default
kablam!   --> src/subheap.rs:29:5
kablam!    |
kablam! 29 |     pub fn destructure(&self) -> (&T, Option<(SubHeap<T>, SubHeap<T>)>) {
kablam!    |     ^
kablam! 
kablam! warning: method is never used: `value`, #[warn(dead_code)] on by default
kablam!   --> src/subheap.rs:47:5
kablam!    |
kablam! 47 |       pub fn value(&self) -> &T {
kablam!    |  _____^ starting here...
kablam! 48 | |         self.data.last().unwrap()
kablam! 49 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: method is never used: `children`, #[warn(dead_code)] on by default
kablam!   --> src/subheap.rs:52:5
kablam!    |
kablam! 52 |       pub fn children(&self) -> Option<(SubHeap<T>, SubHeap<T>)> {
kablam!    |  _____^ starting here...
kablam! 53 | |         let (_, children) = self.destructure();
kablam! 54 | |         return children
kablam! 55 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: method is never used: `destructure`, #[warn(dead_code)] on by default
kablam!   --> src/subheap.rs:76:5
kablam!    |
kablam! 76 |     pub fn destructure(&self) -> (&T, Option<(SubHeap<T>, SubHeap<T>)>) {
kablam!    |     ^
kablam! 
kablam! warning: method is never used: `children`, #[warn(dead_code)] on by default
kablam!    --> src/subheap.rs:143:5
kablam!     |
kablam! 143 |       fn children(&self) -> Option<(SubHeap<T>, SubHeap<T>)> {
kablam!     |  _____^ starting here...
kablam! 144 | |         let (_, children) = self.destructure();
kablam! 145 | |         return children
kablam! 146 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: method is never used: `children_mut`, #[warn(dead_code)] on by default
kablam!    --> src/subheap.rs:149:5
kablam!     |
kablam! 149 |       fn children_mut(&mut self) -> Option<(SubHeapMut<T>, SubHeapMut<T>)> {
kablam!     |  _____^ starting here...
kablam! 150 | |         let (_, children) = self.destructure_mut();
kablam! 151 | |         return children
kablam! 152 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: method is never used: `into_children`, #[warn(dead_code)] on by default
kablam!    --> src/subheap.rs:155:5
kablam!     |
kablam! 155 |       fn into_children(self) -> Option<(SubHeapMut<'a, T>, SubHeapMut<'a, T>)> {
kablam!     |  _____^ starting here...
kablam! 156 | |         let (_, children) = self.into_components();
kablam! 157 | |         return children
kablam! 158 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: method is never used: `new_from_len`, #[warn(dead_code)] on by default
kablam!   --> src/layout.rs:30:5
kablam!    |
kablam! 30 |     pub fn new_from_len(size: usize) -> Self {
kablam!    |     ^
kablam! 
kablam! warning: unused import: `leonardo::leonardo`, #[warn(unused_imports)] on by default
kablam!   --> src/lib.rs:17:5
kablam!    |
kablam! 17 | use leonardo::leonardo;
kablam!    |     ^^^^^^^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.97 secs
boom! running `docker rm -f 1719c6fd8be2711c02fd7bbcca5e862130d11b0c456c6d73b54b719670aaa259`
blam! 1719c6fd8be2711c02fd7bbcca5e862130d11b0c456c6d73b54b719670aaa259
boom! running: cargo +beta test --frozen --no-run
boom! creating container for: cargo +beta test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta test --frozen --no-run cargobomb`
blam! 6c9e00d10d26b0713ca5cc0684952f55bacf11bc3e9c3e3074bc7e7e023f2024
boom! running `docker start -a 6c9e00d10d26b0713ca5cc0684952f55bacf11bc3e9c3e3074bc7e7e023f2024`
kablam!    Compiling leonardo-heap v0.2.0 (file:///source)
kablam! warning: method is never used: `new`, #[warn(dead_code)] on by default
kablam!   --> src/subheap.rs:20:5
kablam!    |
kablam! 20 |       pub fn new(data: &[T], order: u32) -> SubHeap<T> {
kablam!    |  _____^ starting here...
kablam! 21 | |         assert_eq!(data.len(), leonardo(order));
kablam! 22 | |
kablam! 23 | |         SubHeap {
kablam! 24 | |             data: data,
kablam! 25 | |             order: order,
kablam! 26 | |         }
kablam! 27 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: method is never used: `destructure`, #[warn(dead_code)] on by default
kablam!   --> src/subheap.rs:29:5
kablam!    |
kablam! 29 |     pub fn destructure(&self) -> (&T, Option<(SubHeap<T>, SubHeap<T>)>) {
kablam!    |     ^
kablam! 
kablam! warning: method is never used: `value`, #[warn(dead_code)] on by default
kablam!   --> src/subheap.rs:47:5
kablam!    |
kablam! 47 |       pub fn value(&self) -> &T {
kablam!    |  _____^ starting here...
kablam! 48 | |         self.data.last().unwrap()
kablam! 49 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: method is never used: `children`, #[warn(dead_code)] on by default
kablam!   --> src/subheap.rs:52:5
kablam!    |
kablam! 52 |       pub fn children(&self) -> Option<(SubHeap<T>, SubHeap<T>)> {
kablam!    |  _____^ starting here...
kablam! 53 | |         let (_, children) = self.destructure();
kablam! 54 | |         return children
kablam! 55 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: method is never used: `destructure`, #[warn(dead_code)] on by default
kablam!   --> src/subheap.rs:76:5
kablam!    |
kablam! 76 |     pub fn destructure(&self) -> (&T, Option<(SubHeap<T>, SubHeap<T>)>) {
kablam!    |     ^
kablam! 
kablam! warning: method is never used: `children`, #[warn(dead_code)] on by default
kablam!    --> src/subheap.rs:143:5
kablam!     |
kablam! 143 |       fn children(&self) -> Option<(SubHeap<T>, SubHeap<T>)> {
kablam!     |  _____^ starting here...
kablam! 144 | |         let (_, children) = self.destructure();
kablam! 145 | |         return children
kablam! 146 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: method is never used: `children_mut`, #[warn(dead_code)] on by default
kablam!    --> src/subheap.rs:149:5
kablam!     |
kablam! 149 |       fn children_mut(&mut self) -> Option<(SubHeapMut<T>, SubHeapMut<T>)> {
kablam!     |  _____^ starting here...
kablam! 150 | |         let (_, children) = self.destructure_mut();
kablam! 151 | |         return children
kablam! 152 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: method is never used: `into_children`, #[warn(dead_code)] on by default
kablam!    --> src/subheap.rs:155:5
kablam!     |
kablam! 155 |       fn into_children(self) -> Option<(SubHeapMut<'a, T>, SubHeapMut<'a, T>)> {
kablam!     |  _____^ starting here...
kablam! 156 | |         let (_, children) = self.into_components();
kablam! 157 | |         return children
kablam! 158 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: unused import: `leonardo::leonardo`, #[warn(unused_imports)] on by default
kablam!   --> src/lib.rs:17:5
kablam!    |
kablam! 17 | use leonardo::leonardo;
kablam!    |     ^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused imports: `Iter`, `restring`, #[warn(unused_imports)] on by default
kablam!    --> src/lib.rs:338:24
kablam!     |
kablam! 338 |     use {LeonardoHeap, Iter, restring, sift_down, balance_after_push, balance_after_pop};
kablam!     |                        ^^^^  ^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.98 secs
boom! running `docker rm -f 6c9e00d10d26b0713ca5cc0684952f55bacf11bc3e9c3e3074bc7e7e023f2024`
blam! 6c9e00d10d26b0713ca5cc0684952f55bacf11bc3e9c3e3074bc7e7e023f2024
boom! running: cargo +beta test --frozen
boom! creating container for: cargo +beta test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta test --frozen cargobomb`
blam! 04f3502401c0071c4906db2a96be283edda76453190f4d64c839a452b7a39666
boom! running `docker start -a 04f3502401c0071c4906db2a96be283edda76453190f4d64c839a452b7a39666`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/leonardo_heap-b399487fb2781a51
blam! 
blam! running 21 tests
blam! test tests::test_balance_after_pop_empty ... ok
blam! test tests::test_balance_after_pop_mutiple_layers ... ok
blam! test tests::test_balance_after_pop_mismatched_lengths ... ok
blam! test tests::test_balance_after_pop_one ... ok
blam! test tests::test_balance_after_pop_restring_after_sift ... ok
blam! test tests::test_balance_after_push_first ... ok
blam! test tests::test_balance_after_push_merge ... ok
blam! test tests::test_balance_after_pop_split_heaps ... ok
blam! test tests::test_balance_after_push_mismatched_lengths ... ok
blam! test tests::test_iter ... ok
blam! test tests::test_push_pop ... ok
blam! test tests::test_balance_after_push_second ... ok
blam! test tests::test_balance_after_pop_two ... ok
blam! test tests::test_sift_down_three ... ok
blam! test tests::test_sift_down_two ... ok
blam! test tests::test_sift_down_one ... ok
blam! test tests::test_random ... ok
blam! test tests::test_sift_down_zero ... ok
blam! test tests::test_sift_down_wrong_order ... ok
blam! test tests::test_sift_down_sorting ... ok
blam! test tests::test_sort_random ... ok
blam! 
blam! test result: ok. 21 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 04f3502401c0071c4906db2a96be283edda76453190f4d64c839a452b7a39666`
blam! 04f3502401c0071c4906db2a96be283edda76453190f4d64c839a452b7a39666
