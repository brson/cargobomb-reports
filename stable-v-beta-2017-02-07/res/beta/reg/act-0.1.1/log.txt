boom! testing act-0.1.1 against beta for beta
boom! running: cargo +beta build --frozen
boom! creating container for: cargo +beta build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta build --frozen cargobomb`
blam! 28e4a763aed10f18cd28ef94aed78d1b19c836e1f88abf43ca4279b4939aca73
boom! running `docker start -a 28e4a763aed10f18cd28ef94aed78d1b19c836e1f88abf43ca4279b4939aca73`
kablam!    Compiling ansi-escapes v0.1.0
kablam!    Compiling act v0.1.1 (file:///source)
kablam! warning: unused import: `std::io`, #[warn(unused_imports)] on by default
kablam!    --> src/lib.rs:225:17
kablam!     |
kablam! 225 |             use std::io;
kablam!     |                 ^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.99 secs
boom! running `docker rm -f 28e4a763aed10f18cd28ef94aed78d1b19c836e1f88abf43ca4279b4939aca73`
blam! 28e4a763aed10f18cd28ef94aed78d1b19c836e1f88abf43ca4279b4939aca73
boom! running: cargo +beta test --frozen --no-run
boom! creating container for: cargo +beta test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta test --frozen --no-run cargobomb`
blam! 89a459ab7031300a7f7e22883eed04067f4dac68b34ae702035241607be61674
boom! running `docker start -a 89a459ab7031300a7f7e22883eed04067f4dac68b34ae702035241607be61674`
kablam!    Compiling act v0.1.1 (file:///source)
kablam! warning: unused import: `std::io`, #[warn(unused_imports)] on by default
kablam!    --> src/lib.rs:225:17
kablam!     |
kablam! 225 |             use std::io;
kablam!     |                 ^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.22 secs
boom! running `docker rm -f 89a459ab7031300a7f7e22883eed04067f4dac68b34ae702035241607be61674`
blam! 89a459ab7031300a7f7e22883eed04067f4dac68b34ae702035241607be61674
boom! running: cargo +beta test --frozen
boom! creating container for: cargo +beta test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta test --frozen cargobomb`
blam! 4bdb5a872e8b362bbbde0455b5d62e4d922d3ae1464eef372ebae42c27ff0032
boom! running `docker start -a 4bdb5a872e8b362bbbde0455b5d62e4d922d3ae1464eef372ebae42c27ff0032`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/act-9b761f811c5d8513
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/act-7972b819308ab7c2
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests act
blam! 
blam! running 2 tests
blam! test Action_0 ... FAILED
blam! test _0 ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- Action_0 stdout ----
blam! 	error[E0308]: mismatched types
blam!  --> <anon>:5:39
blam!   |
blam! 5 |     let move_to_locked = Action::Move("Unlock the door ","locked_room","LockedRoomKey");
blam!   |                                       ^^^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found reference
blam!   |
blam!   = note: expected type `std::string::String`
blam!              found type `&'static str`
blam!   = help: here are some functions which might fulfill your needs:
blam!           - .escape_debug()
blam!           - .escape_default()
blam!           - .escape_unicode()
blam!           - .to_lowercase()
blam!           - .to_uppercase()
blam! 
blam! error[E0308]: mismatched types
blam!  --> <anon>:5:58
blam!   |
blam! 5 |     let move_to_locked = Action::Move("Unlock the door ","locked_room","LockedRoomKey");
blam!   |                                                          ^^^^^^^^^^^^^ expected struct `std::string::String`, found reference
blam!   |
blam!   = note: expected type `std::string::String`
blam!              found type `&'static str`
blam!   = help: here are some functions which might fulfill your needs:
blam!           - .escape_debug()
blam!           - .escape_default()
blam!           - .escape_unicode()
blam!           - .to_lowercase()
blam!           - .to_uppercase()
blam! 
blam! error[E0308]: mismatched types
blam!  --> <anon>:5:72
blam!   |
blam! 5 |     let move_to_locked = Action::Move("Unlock the door ","locked_room","LockedRoomKey");
blam!   |                                                                        ^^^^^^^^^^^^^^^ expected struct `std::string::String`, found reference
blam!   |
blam!   = note: expected type `std::string::String`
blam!              found type `&'static str`
blam!   = help: here are some functions which might fulfill your needs:
blam!           - .escape_debug()
blam!           - .escape_default()
blam!           - .escape_unicode()
blam!           - .to_lowercase()
blam!           - .to_uppercase()
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'rustc' panicked at 'Box<Any>', /buildslave/rust-buildbot/slave/beta-dist-rustc-linux/build/src/librustc/session/mod.rs:203
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! ---- _0 stdout ----
blam! 	thread 'rustc' panicked at 'test executable failed:
blam! Made with 
blam! 
blam! 
blam!       _/           _//   _//! _//!//!
blam!      _/ //      _//   _//     _//
blam!     _/  _//    _//            _//
blam!    _//   _//   _//            _//
blam!   _//!//! _//  _//            _//
blam!  _//       _//  _//   _//     _//
blam! _//         _//   _//!/       _//
blam! 
blam! Make your own game at github.com/ichy-wayland/act
blam! cIm a starting room! Welcome to this example game.
blam! 
blam! 0. Move to another room
blam! 
blam! 
blam! 
blam! thread 'main' panicked at 'called `Option::unwrap()` on a `None` value', /buildslave/rust-buildbot/slave/beta-dist-rustc-linux/build/src/libcore/option.rs:323
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! ', /buildslave/rust-buildbot/slave/beta-dist-rustc-linux/build/src/librustdoc/test.rs:305
blam! 
blam! 
blam! failures:
blam!     Action_0
blam!     _0
blam! 
blam! test result: FAILED. 0 passed; 2 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f 4bdb5a872e8b362bbbde0455b5d62e4d922d3ae1464eef372ebae42c27ff0032`
blam! 4bdb5a872e8b362bbbde0455b5d62e4d922d3ae1464eef372ebae42c27ff0032
