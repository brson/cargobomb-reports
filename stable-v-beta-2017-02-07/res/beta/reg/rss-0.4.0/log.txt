boom! testing rss-0.4.0 against beta for beta
boom! running: cargo +beta build --frozen
boom! creating container for: cargo +beta build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta build --frozen cargobomb`
blam! bb2a4e2bcec8377bbfe4b90f95765c1e5d317296feb945ee882a6998713a079a
boom! running `docker start -a bb2a4e2bcec8377bbfe4b90f95765c1e5d317296feb945ee882a6998713a079a`
kablam!    Compiling rss v0.4.0 (file:///source)
kablam! warning: patterns aren't allowed in methods without bodies, #[warn(patterns_in_fns_without_body)] on by default
kablam!   --> src/fromxml.rs:11:40
kablam!    |
kablam! 11 |     fn from_xml<R: ::std::io::BufRead>(mut reader: XmlReader<R>,
kablam!    |                                        ^^^^^^^^^^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #35203 <https://github.com/rust-lang/rust/issues/35203>
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 5.60 secs
boom! running `docker rm -f bb2a4e2bcec8377bbfe4b90f95765c1e5d317296feb945ee882a6998713a079a`
blam! bb2a4e2bcec8377bbfe4b90f95765c1e5d317296feb945ee882a6998713a079a
boom! running: cargo +beta test --frozen --no-run
boom! creating container for: cargo +beta test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta test --frozen --no-run cargobomb`
blam! 6b6f5615bdf79c45067cc6ca3ff1d32aa21e13f935ff2633d34f1194ca2e7d47
boom! running `docker start -a 6b6f5615bdf79c45067cc6ca3ff1d32aa21e13f935ff2633d34f1194ca2e7d47`
kablam!    Compiling rss v0.4.0 (file:///source)
kablam! warning: patterns aren't allowed in methods without bodies, #[warn(patterns_in_fns_without_body)] on by default
kablam!   --> src/fromxml.rs:11:40
kablam!    |
kablam! 11 |     fn from_xml<R: ::std::io::BufRead>(mut reader: XmlReader<R>,
kablam!    |                                        ^^^^^^^^^^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #35203 <https://github.com/rust-lang/rust/issues/35203>
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 5.71 secs
boom! running `docker rm -f 6b6f5615bdf79c45067cc6ca3ff1d32aa21e13f935ff2633d34f1194ca2e7d47`
blam! 6b6f5615bdf79c45067cc6ca3ff1d32aa21e13f935ff2633d34f1194ca2e7d47
boom! running: cargo +beta test --frozen
boom! creating container for: cargo +beta test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta test --frozen cargobomb`
blam! ee4c57b6d029845d3c9c324bb1c38a244e51cf138c1f8932b77de405accbd011
boom! running `docker start -a ee4c57b6d029845d3c9c324bb1c38a244e51cf138c1f8932b77de405accbd011`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/rss-c4727afff3267892
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests rss
blam! 
blam! running 4 tests
blam! test channel::Channel::read_from_0 ... ignored
blam! test channel::Channel::write_to_0 ... ignored
blam! test _0 ... ok
blam! test _1 ... ok
blam! 
blam! test result: ok. 2 passed; 0 failed; 2 ignored; 0 measured
blam! 
boom! running `docker rm -f ee4c57b6d029845d3c9c324bb1c38a244e51cf138c1f8932b77de405accbd011`
blam! ee4c57b6d029845d3c9c324bb1c38a244e51cf138c1f8932b77de405accbd011
