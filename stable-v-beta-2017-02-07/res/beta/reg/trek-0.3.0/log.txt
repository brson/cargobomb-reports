boom! testing trek-0.3.0 against beta for beta
boom! running: cargo +beta build --frozen
boom! creating container for: cargo +beta build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta build --frozen cargobomb`
blam! 6ddb6a035c045643eacd837b1de99e17c8d27f085fbdbf5cc9363e83d1d1ff66
boom! running `docker start -a 6ddb6a035c045643eacd837b1de99e17c8d27f085fbdbf5cc9363e83d1d1ff66`
kablam!    Compiling trek v0.3.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.26 secs
boom! running `docker rm -f 6ddb6a035c045643eacd837b1de99e17c8d27f085fbdbf5cc9363e83d1d1ff66`
blam! 6ddb6a035c045643eacd837b1de99e17c8d27f085fbdbf5cc9363e83d1d1ff66
boom! running: cargo +beta test --frozen --no-run
boom! creating container for: cargo +beta test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta test --frozen --no-run cargobomb`
blam! d60d95a7c1312b12ffce1a54b99eeb03fa4891709a5c584fea1a018e579f3420
boom! running `docker start -a d60d95a7c1312b12ffce1a54b99eeb03fa4891709a5c584fea1a018e579f3420`
kablam!    Compiling trek v0.3.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.84 secs
boom! running `docker rm -f d60d95a7c1312b12ffce1a54b99eeb03fa4891709a5c584fea1a018e579f3420`
blam! d60d95a7c1312b12ffce1a54b99eeb03fa4891709a5c584fea1a018e579f3420
boom! running: cargo +beta test --frozen
boom! creating container for: cargo +beta test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta test --frozen cargobomb`
blam! 66514c2d783e9a2406315bf182391b7c16ea93c275f10940f17322d45f73d307
boom! running `docker start -a 66514c2d783e9a2406315bf182391b7c16ea93c275f10940f17322d45f73d307`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/test-bf44497ee5059a4b
blam! 
blam! running 6 tests
blam! test can_rollback_migration ... FAILED
blam! test can_apply_migrations_sequentially ... FAILED
blam! test can_rollback_migrations_sequentially ... FAILED
blam! test can_run_migration ... FAILED
blam! test fails_gracefully_on_migration_rollback_error ... FAILED
blam! test fails_gracefully_on_migration_run_error ... FAILED
kablam! error: test failed
blam! 
blam! failures:
blam! 
blam! ---- can_rollback_migration stdout ----
blam! 	thread 'can_rollback_migration' panicked at 'TREK_TEST_DB_PARAMS environment variable is unset. This environment variable should contain a database connection string for a PostgreSQL database to use when testing. This string should take the form:
blam! postgresql://user[:password]@host[:port][/database][?param1=val1[[&param2=val2]...]]
blam! See the rust-postgres documentation for more details:
blam! https://sfackler.github.io/rust-postgres/doc/postgres/struct.Connection.html#method.connect
blam! ', /buildslave/rust-buildbot/slave/beta-dist-rustc-linux/build/src/libcore/option.rs:715
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! ---- can_apply_migrations_sequentially stdout ----
blam! 	thread 'can_apply_migrations_sequentially' panicked at 'TREK_TEST_DB_PARAMS environment variable is unset. This environment variable should contain a database connection string for a PostgreSQL database to use when testing. This string should take the form:
blam! postgresql://user[:password]@host[:port][/database][?param1=val1[[&param2=val2]...]]
blam! See the rust-postgres documentation for more details:
blam! https://sfackler.github.io/rust-postgres/doc/postgres/struct.Connection.html#method.connect
blam! ', /buildslave/rust-buildbot/slave/beta-dist-rustc-linux/build/src/libcore/option.rs:715
blam! 
blam! ---- can_rollback_migrations_sequentially stdout ----
blam! 	thread 'can_rollback_migrations_sequentially' panicked at 'TREK_TEST_DB_PARAMS environment variable is unset. This environment variable should contain a database connection string for a PostgreSQL database to use when testing. This string should take the form:
blam! postgresql://user[:password]@host[:port][/database][?param1=val1[[&param2=val2]...]]
blam! See the rust-postgres documentation for more details:
blam! https://sfackler.github.io/rust-postgres/doc/postgres/struct.Connection.html#method.connect
blam! ', /buildslave/rust-buildbot/slave/beta-dist-rustc-linux/build/src/libcore/option.rs:715
blam! 
blam! ---- can_run_migration stdout ----
blam! 	thread 'can_run_migration' panicked at 'TREK_TEST_DB_PARAMS environment variable is unset. This environment variable should contain a database connection string for a PostgreSQL database to use when testing. This string should take the form:
blam! postgresql://user[:password]@host[:port][/database][?param1=val1[[&param2=val2]...]]
blam! See the rust-postgres documentation for more details:
blam! https://sfackler.github.io/rust-postgres/doc/postgres/struct.Connection.html#method.connect
blam! ', /buildslave/rust-buildbot/slave/beta-dist-rustc-linux/build/src/libcore/option.rs:715
blam! 
blam! ---- fails_gracefully_on_migration_rollback_error stdout ----
blam! 	thread 'fails_gracefully_on_migration_rollback_error' panicked at 'TREK_TEST_DB_PARAMS environment variable is unset. This environment variable should contain a database connection string for a PostgreSQL database to use when testing. This string should take the form:
blam! postgresql://user[:password]@host[:port][/database][?param1=val1[[&param2=val2]...]]
blam! See the rust-postgres documentation for more details:
blam! https://sfackler.github.io/rust-postgres/doc/postgres/struct.Connection.html#method.connect
blam! ', /buildslave/rust-buildbot/slave/beta-dist-rustc-linux/build/src/libcore/option.rs:715
blam! 
blam! ---- fails_gracefully_on_migration_run_error stdout ----
blam! 	thread 'fails_gracefully_on_migration_run_error' panicked at 'TREK_TEST_DB_PARAMS environment variable is unset. This environment variable should contain a database connection string for a PostgreSQL database to use when testing. This string should take the form:
blam! postgresql://user[:password]@host[:port][/database][?param1=val1[[&param2=val2]...]]
blam! See the rust-postgres documentation for more details:
blam! https://sfackler.github.io/rust-postgres/doc/postgres/struct.Connection.html#method.connect
blam! ', /buildslave/rust-buildbot/slave/beta-dist-rustc-linux/build/src/libcore/option.rs:715
blam! 
blam! 
blam! failures:
blam!     can_apply_migrations_sequentially
blam!     can_rollback_migration
blam!     can_rollback_migrations_sequentially
blam!     can_run_migration
blam!     fails_gracefully_on_migration_rollback_error
blam!     fails_gracefully_on_migration_run_error
blam! 
blam! test result: FAILED. 0 passed; 6 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 66514c2d783e9a2406315bf182391b7c16ea93c275f10940f17322d45f73d307`
blam! 66514c2d783e9a2406315bf182391b7c16ea93c275f10940f17322d45f73d307
