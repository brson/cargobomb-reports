boom! testing char_set-0.0.1 against beta for beta
boom! running: cargo +beta build --frozen
boom! creating container for: cargo +beta build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta build --frozen cargobomb`
blam! d2437848c7ea897c93281680534ac03ee6e36966b0a4944bfdc1fc6fd09d075d
boom! running `docker start -a d2437848c7ea897c93281680534ac03ee6e36966b0a4944bfdc1fc6fd09d075d`
kablam!    Compiling interval v0.0.1
kablam! error: invalid suffix `i` for numeric literal
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/interval-0.0.1/src/lib.rs:146:27
kablam!     |
kablam! 146 |     let i = Interval::new(0i, 1);
kablam!     |                           ^^
kablam!     |
kablam!     = help: the suffix must be one of the integral types (`u32`, `isize`, etc)
kablam! 
kablam! error: invalid suffix `i` for numeric literal
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/interval-0.0.1/src/lib.rs:159:27
kablam!     |
kablam! 159 |     let i = Interval::new(0i, 1);
kablam!     |                           ^^
kablam!     |
kablam!     = help: the suffix must be one of the integral types (`u32`, `isize`, etc)
kablam! 
kablam! error: invalid suffix `i` for numeric literal
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/interval-0.0.1/src/lib.rs:169:32
kablam!     |
kablam! 169 |     let before = Interval::new(0i, 2);
kablam!     |                                ^^
kablam!     |
kablam!     = help: the suffix must be one of the integral types (`u32`, `isize`, etc)
kablam! 
kablam! error: invalid suffix `i` for numeric literal
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/interval-0.0.1/src/lib.rs:170:31
kablam!     |
kablam! 170 |     let after = Interval::new(3i, 5);
kablam!     |                               ^^
kablam!     |
kablam!     = help: the suffix must be one of the integral types (`u32`, `isize`, etc)
kablam! 
kablam! error: invalid suffix `i` for numeric literal
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/interval-0.0.1/src/lib.rs:175:38
kablam!     |
kablam! 175 |     let intersecting = Interval::new(1i, 4);
kablam!     |                                      ^^
kablam!     |
kablam!     = help: the suffix must be one of the integral types (`u32`, `isize`, etc)
kablam! 
kablam! error: invalid suffix `i` for numeric literal
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/interval-0.0.1/src/lib.rs:229:35
kablam!     |
kablam! 229 |     let singleton = Interval::new(1i, 1);
kablam!     |                                   ^^
kablam!     |
kablam!     = help: the suffix must be one of the integral types (`u32`, `isize`, etc)
kablam! 
kablam! error: invalid suffix `i` for numeric literal
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/interval-0.0.1/src/lib.rs:244:31
kablam!     |
kablam! 244 |     let first = Interval::new(0i, 1);
kablam!     |                               ^^
kablam!     |
kablam!     = help: the suffix must be one of the integral types (`u32`, `isize`, etc)
kablam! 
kablam! error: invalid suffix `i` for numeric literal
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/interval-0.0.1/src/lib.rs:245:32
kablam!     |
kablam! 245 |     let second = Interval::new(1i, 2);
kablam!     |                                ^^
kablam!     |
kablam!     = help: the suffix must be one of the integral types (`u32`, `isize`, etc)
kablam! 
kablam! error: invalid suffix `i` for numeric literal
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/interval-0.0.1/src/lib.rs:254:31
kablam!     |
kablam! 254 |     let first = Interval::new(0i, 1);
kablam!     |                               ^^
kablam!     |
kablam!     = help: the suffix must be one of the integral types (`u32`, `isize`, etc)
kablam! 
kablam! error: invalid suffix `i` for numeric literal
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/interval-0.0.1/src/lib.rs:255:32
kablam!     |
kablam! 255 |     let second = Interval::new(2i, 3);
kablam!     |                                ^^
kablam!     |
kablam!     = help: the suffix must be one of the integral types (`u32`, `isize`, etc)
kablam! 
kablam! error[E0432]: unresolved import `std::fmt::Show`
kablam!  --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/interval-0.0.1/src/lib.rs:9:5
kablam!   |
kablam! 9 | use std::fmt::Show;
kablam!   |     ^^^^^^^^^^^^^^ no `Show` in `fmt`
kablam! 
kablam! error[E0432]: unresolved import `std::num::Int`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/interval-0.0.1/src/lib.rs:10:5
kablam!    |
kablam! 10 | use std::num::Int;
kablam!    |     ^^^^^^^^^^^^^ no `Int` in `num`
kablam! 
kablam! error[E0412]: cannot find type `Ordering` in this scope
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/interval-0.0.1/src/lib.rs:70:58
kablam!    |
kablam! 70 |     fn partial_cmp(&self, other: &Interval<T>) -> Option<Ordering> {
kablam!    |                                                          ^^^^^^^^ not found in this scope
kablam!    |
kablam!    = help: possible candidates are found in other modules, you can import them into scope:
kablam!              `use std::cmp::Ordering;`
kablam!              `use std::sync::atomic::Ordering;`
kablam! 
kablam! error[E0425]: cannot find value `Equal` in this scope
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/interval-0.0.1/src/lib.rs:77:40
kablam!    |
kablam! 77 |         if self == other { return Some(Equal); }
kablam!    |                                        ^^^^^ not found in this scope
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use std::cmp::Ordering::Equal;`
kablam! 
kablam! error[E0425]: cannot find value `Less` in this scope
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/interval-0.0.1/src/lib.rs:78:49
kablam!    |
kablam! 78 |         if self.end < other.begin { return Some(Less); }
kablam!    |                                                 ^^^^ not found in this scope
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use std::cmp::Ordering::Less;`
kablam! 
kablam! error[E0425]: cannot find value `Greater` in this scope
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/interval-0.0.1/src/lib.rs:79:49
kablam!    |
kablam! 79 |         if self.begin > other.end { return Some(Greater); }
kablam!    |                                                 ^^^^^^^ not found in this scope
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use std::cmp::Ordering::Greater;`
kablam! 
kablam! error[E0412]: cannot find type `uint` in this scope
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/interval-0.0.1/src/lib.rs:106:22
kablam!     |
kablam! 106 |     fn len(&self) -> uint;
kablam!     |                      ^^^^ not found in this scope
kablam! 
kablam! error[E0412]: cannot find type `uint` in this scope
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/interval-0.0.1/src/lib.rs:112:22
kablam!     |
kablam! 112 |     fn len(&self) -> uint {
kablam!     |                      ^^^^ not found in this scope
kablam! 
kablam! error: The attribute `deriving` is currently unknown to the compiler and may have meaning added to it in the future (see issue #29642)
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/interval-0.0.1/src/lib.rs:33:1
kablam!    |
kablam! 33 | #[deriving(Clone, Copy, PartialEq, Eq)]
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error: aborting due to previous error
kablam! 
kablam! error: Could not compile `interval`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f d2437848c7ea897c93281680534ac03ee6e36966b0a4944bfdc1fc6fd09d075d`
blam! d2437848c7ea897c93281680534ac03ee6e36966b0a4944bfdc1fc6fd09d075d
