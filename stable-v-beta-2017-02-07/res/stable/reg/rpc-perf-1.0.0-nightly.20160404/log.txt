boom! testing rpc-perf-1.0.0-nightly.20160404 against stable for beta
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! d8af64b17f08766146ba596f6cfb7d2bfe161527573ceb083792b67951e2f665
boom! running `docker start -a d8af64b17f08766146ba596f6cfb7d2bfe161527573ceb083792b67951e2f665`
kablam!    Compiling log v0.3.6
kablam!    Compiling c_vec v1.0.12
kablam!    Compiling bytes v0.3.0
kablam!    Compiling hsl v0.1.1
kablam!    Compiling shuteye v0.1.1
kablam!    Compiling unicode-width v0.1.4
kablam!    Compiling toml v0.1.30
kablam!    Compiling simple_logger v0.4.0
kablam!    Compiling ratelimit v0.2.4
kablam!    Compiling bitflags v0.4.0
kablam!    Compiling lodepng v0.5.3
kablam!    Compiling nix v0.5.1
kablam!    Compiling ws2_32-sys v0.2.1
kablam!    Compiling cfg-if v0.1.0
kablam!    Compiling net2 v0.2.26
kablam!    Compiling slab v0.1.3
kablam!    Compiling odds v0.2.25
kablam!    Compiling getopts v0.2.14
kablam!    Compiling crc v1.4.0
kablam!    Compiling nodrop v0.1.8
kablam!    Compiling arrayvec v0.3.20
kablam!    Compiling mpmc v0.1.2
kablam!    Compiling byteorder v0.5.3
blam! Build failed, waiting for other jobs to finish...
kablam! error: failed to run custom build command for `lodepng v0.5.3`
kablam! process didn't exit successfully: `/target/debug/build/lodepng-0d0edb1d235fc6eb/build-script-build` (exit code: 101)
kablam! --- stderr
kablam! thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Error { repr: Os { code: 2, message: "No such file or directory" } }', /buildslave/rust-buildbot/slave/stable-dist-rustc-linux/build/src/libcore/result.rs:837
kablam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
kablam! 
boom! running `docker rm -f d8af64b17f08766146ba596f6cfb7d2bfe161527573ceb083792b67951e2f665`
blam! d8af64b17f08766146ba596f6cfb7d2bfe161527573ceb083792b67951e2f665
