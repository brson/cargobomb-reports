boom! testing named_pipe-0.2.2 against stable for beta
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! d52e5dd4359cfc5c70a1775362efe32abc3d731b7a4d5a665191acdd0fa8a125
boom! running `docker start -a d52e5dd4359cfc5c70a1775362efe32abc3d731b7a4d5a665191acdd0fa8a125`
kablam! warning: unused manifest key: package.crate-type
kablam!    Compiling named_pipe v0.2.2 (file:///source)
kablam! error[E0432]: unresolved import `std::os::windows::io::RawHandle`
kablam!   --> src/lib.rs:38:5
kablam!    |
kablam! 38 | use std::os::windows::io::RawHandle;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Could not find `windows` in `os`
kablam! 
kablam! error[E0432]: unresolved import `std::os::windows::ffi::OsStrExt`
kablam!   --> src/lib.rs:39:5
kablam!    |
kablam! 39 | use std::os::windows::ffi::OsStrExt;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Could not find `windows` in `os`
kablam! 
kablam! error[E0425]: unresolved name `CloseHandle`
kablam!   --> src/lib.rs:52:26
kablam!    |
kablam! 52 |         let _ = unsafe { CloseHandle(self.value) };
kablam!    |                          ^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `CreateEventW`
kablam!   --> src/lib.rs:67:13
kablam!    |
kablam! 67 |             CreateEventW(ptr::null_mut(),
kablam!    |             ^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `SetEvent`
kablam!   --> src/lib.rs:80:31
kablam!    |
kablam! 80 |         let result = unsafe { SetEvent(self.handle.value) };
kablam!    |                               ^^^^^^^^ unresolved name
kablam! 
kablam! error[E0412]: type name `OVERLAPPED` is undefined or not in scope
kablam!   --> src/lib.rs:91:10
kablam!    |
kablam! 91 |     ovl: OVERLAPPED,
kablam!    |          ^^^^^^^^^^ undefined or not in scope
kablam!    |
kablam!    = help: no candidates by the name of `OVERLAPPED` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0412]: type name `OVERLAPPED` is undefined or not in scope
kablam!   --> src/lib.rs:98:22
kablam!    |
kablam! 98 |         let mut ovl: OVERLAPPED = unsafe { mem::zeroed() };
kablam!    |                      ^^^^^^^^^^ undefined or not in scope
kablam!    |
kablam!    = help: no candidates by the name of `OVERLAPPED` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0412]: type name `OVERLAPPED` is undefined or not in scope
kablam!    --> src/lib.rs:111:35
kablam!     |
kablam! 111 |     fn get_mut(&mut self) -> &mut OVERLAPPED {
kablam!     |                                   ^^^^^^^^^^ undefined or not in scope
kablam!     |
kablam!     = help: no candidates by the name of `OVERLAPPED` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0425]: unresolved name `PIPE_ACCESS_INBOUND`
kablam!    --> src/lib.rs:129:32
kablam!     |
kablam! 129 |             &OpenMode::Read => PIPE_ACCESS_INBOUND,
kablam!     |                                ^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `PIPE_ACCESS_OUTBOUND`
kablam!    --> src/lib.rs:130:33
kablam!     |
kablam! 130 |             &OpenMode::Write => PIPE_ACCESS_OUTBOUND,
kablam!     |                                 ^^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `PIPE_ACCESS_DUPLEX`
kablam!    --> src/lib.rs:131:34
kablam!     |
kablam! 131 |             &OpenMode::Duplex => PIPE_ACCESS_DUPLEX,
kablam!     |                                  ^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `CreateNamedPipeW`
kablam!    --> src/lib.rs:158:13
kablam!     |
kablam! 158 |             CreateNamedPipeW(self.name.as_ptr(),
kablam!     |             ^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `FILE_FLAG_OVERLAPPED`
kablam!    --> src/lib.rs:159:54
kablam!     |
kablam! 159 |                              (self.open_mode.val() | FILE_FLAG_OVERLAPPED |
kablam!     |                                                      ^^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `FILE_FLAG_FIRST_PIPE_INSTANCE`
kablam!    --> src/lib.rs:160:41
kablam!     |
kablam! 160 |                               if first {FILE_FLAG_FIRST_PIPE_INSTANCE} else {0}),
kablam!     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `PIPE_TYPE_BYTE`
kablam!    --> src/lib.rs:161:30
kablam!     |
kablam! 161 |                              PIPE_TYPE_BYTE | PIPE_READMODE_BYTE | PIPE_WAIT,
kablam!     |                              ^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `PIPE_READMODE_BYTE`
kablam!    --> src/lib.rs:161:47
kablam!     |
kablam! 161 |                              PIPE_TYPE_BYTE | PIPE_READMODE_BYTE | PIPE_WAIT,
kablam!     |                                               ^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `PIPE_WAIT`
kablam!    --> src/lib.rs:161:68
kablam!     |
kablam! 161 |                              PIPE_TYPE_BYTE | PIPE_READMODE_BYTE | PIPE_WAIT,
kablam!     |                                                                    ^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `PIPE_UNLIMITED_INSTANCES`
kablam!    --> src/lib.rs:162:30
kablam!     |
kablam! 162 |                              PIPE_UNLIMITED_INSTANCES,
kablam!     |                              ^^^^^^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `INVALID_HANDLE_VALUE`
kablam!    --> src/lib.rs:169:22
kablam!     |
kablam! 169 |         if handle != INVALID_HANDLE_VALUE {
kablam!     |                      ^^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `INFINITE`
kablam!    --> src/lib.rs:256:33
kablam!     |
kablam! 256 |         match try!(self.wait_ms(INFINITE)) {
kablam!     |                                 ^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `FlushFileBuffers`
kablam!    --> src/lib.rs:296:35
kablam!     |
kablam! 296 |         let mut result = unsafe { FlushFileBuffers(handle.value) };
kablam!     |                                   ^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `DisconnectNamedPipe`
kablam!    --> src/lib.rs:299:31
kablam!     |
kablam! 299 |             result = unsafe { DisconnectNamedPipe(handle.value) };
kablam!     |                               ^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `FlushFileBuffers`
kablam!    --> src/lib.rs:403:39
kablam!     |
kablam! 403 |                 let result = unsafe { FlushFileBuffers(handle.value) };
kablam!     |                                       ^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `FlushFileBuffers`
kablam!    --> src/lib.rs:418:30
kablam!     |
kablam! 418 |             let _ = unsafe { FlushFileBuffers(handle.value) };
kablam!     |                              ^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `DisconnectNamedPipe`
kablam!    --> src/lib.rs:419:30
kablam!     |
kablam! 419 |             let _ = unsafe { DisconnectNamedPipe(handle.value) };
kablam!     |                              ^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0412]: type name `DWORD` is undefined or not in scope
kablam!    --> src/lib.rs:434:43
kablam!     |
kablam! 434 |     fn create_file(name: &Vec<u16>, mode: DWORD) -> io::Result<Handle> {
kablam!     |                                           ^^^^^ undefined or not in scope
kablam!     |
kablam!     = help: no candidates by the name of `DWORD` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0425]: unresolved name `CreateFileW`
kablam!    --> src/lib.rs:437:17
kablam!     |
kablam! 437 |                 CreateFileW(name.as_ptr(),
kablam!     |                 ^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `OPEN_EXISTING`
kablam!    --> src/lib.rs:441:29
kablam!     |
kablam! 441 |                             OPEN_EXISTING,
kablam!     |                             ^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `FILE_FLAG_OVERLAPPED`
kablam!    --> src/lib.rs:442:29
kablam!     |
kablam! 442 |                             FILE_FLAG_OVERLAPPED,
kablam!     |                             ^^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `INVALID_HANDLE_VALUE`
kablam!    --> src/lib.rs:446:26
kablam!     |
kablam! 446 |             if handle != INVALID_HANDLE_VALUE {
kablam!     |                          ^^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `GetLastError`
kablam!    --> src/lib.rs:450:28
kablam!     |
kablam! 450 |             match unsafe { GetLastError() } {
kablam!     |                            ^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `WaitNamedPipeW`
kablam!    --> src/lib.rs:452:30
kablam!     |
kablam! 452 |                     unsafe { WaitNamedPipeW(name.as_ptr(), 0) };
kablam!     |                              ^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `GENERIC_READ`
kablam!    --> src/lib.rs:455:38
kablam!     |
kablam! 455 |                     mode if mode == (GENERIC_READ | GENERIC_WRITE) => {
kablam!     |                                      ^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `GENERIC_WRITE`
kablam!    --> src/lib.rs:455:53
kablam!     |
kablam! 455 |                     mode if mode == (GENERIC_READ | GENERIC_WRITE) => {
kablam!     |                                                     ^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `GENERIC_READ`
kablam!    --> src/lib.rs:456:62
kablam!     |
kablam! 456 |                         return PipeClient::create_file(name, GENERIC_READ | FILE_WRITE_ATTRIBUTES);
kablam!     |                                                              ^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `FILE_WRITE_ATTRIBUTES`
kablam!    --> src/lib.rs:456:77
kablam!     |
kablam! 456 |                         return PipeClient::create_file(name, GENERIC_READ | FILE_WRITE_ATTRIBUTES);
kablam!     |                                                                             ^^^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `GENERIC_READ`
kablam!    --> src/lib.rs:458:38
kablam!     |
kablam! 458 |                     mode if mode == (GENERIC_READ | FILE_WRITE_ATTRIBUTES) => {
kablam!     |                                      ^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `FILE_WRITE_ATTRIBUTES`
kablam!    --> src/lib.rs:458:53
kablam!     |
kablam! 458 |                     mode if mode == (GENERIC_READ | FILE_WRITE_ATTRIBUTES) => {
kablam!     |                                                     ^^^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `GENERIC_WRITE`
kablam!    --> src/lib.rs:459:62
kablam!     |
kablam! 459 |                         return PipeClient::create_file(name, GENERIC_WRITE | FILE_READ_ATTRIBUTES);
kablam!     |                                                              ^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `FILE_READ_ATTRIBUTES`
kablam!    --> src/lib.rs:459:78
kablam!     |
kablam! 459 |                         return PipeClient::create_file(name, GENERIC_WRITE | FILE_READ_ATTRIBUTES);
kablam!     |                                                                              ^^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `GENERIC_READ`
kablam!    --> src/lib.rs:484:55
kablam!     |
kablam! 484 |             match PipeClient::create_file(&full_name, GENERIC_READ | GENERIC_WRITE) {
kablam!     |                                                       ^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `GENERIC_WRITE`
kablam!    --> src/lib.rs:484:70
kablam!     |
kablam! 484 |             match PipeClient::create_file(&full_name, GENERIC_READ | GENERIC_WRITE) {
kablam!     |                                                                      ^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `PIPE_TYPE_BYTE`
kablam!    --> src/lib.rs:487:40
kablam!     |
kablam! 487 |                         let mut mode = PIPE_TYPE_BYTE | PIPE_READMODE_BYTE | PIPE_WAIT;
kablam!     |                                        ^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `PIPE_READMODE_BYTE`
kablam!    --> src/lib.rs:487:57
kablam!     |
kablam! 487 |                         let mut mode = PIPE_TYPE_BYTE | PIPE_READMODE_BYTE | PIPE_WAIT;
kablam!     |                                                         ^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `PIPE_WAIT`
kablam!    --> src/lib.rs:487:78
kablam!     |
kablam! 487 |                         let mut mode = PIPE_TYPE_BYTE | PIPE_READMODE_BYTE | PIPE_WAIT;
kablam!     |                                                                              ^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `SetNamedPipeHandleState`
kablam!    --> src/lib.rs:488:25
kablam!     |
kablam! 488 |                         SetNamedPipeHandleState(handle.value,
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `ERROR_PIPE_BUSY`
kablam!    --> src/lib.rs:506:55
kablam!     |
kablam! 506 |                     if err.raw_os_error().unwrap() == ERROR_PIPE_BUSY as i32 {
kablam!     |                                                       ^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `WaitNamedPipeW`
kablam!    --> src/lib.rs:509:51
kablam!     |
kablam! 509 |                             let result = unsafe { WaitNamedPipeW(full_name.as_ptr(), timeout) };
kablam!     |                                                   ^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `FlushFileBuffers`
kablam!    --> src/lib.rs:611:31
kablam!     |
kablam! 611 |         let result = unsafe { FlushFileBuffers(self.handle.value) };
kablam!     |                               ^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `INFINITE`
kablam!    --> src/lib.rs:875:61
kablam!     |
kablam! 875 |             let timeout = self.get_read_timeout().unwrap_or(INFINITE);
kablam!     |                                                             ^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `INFINITE`
kablam!    --> src/lib.rs:954:62
kablam!     |
kablam! 954 |             let timeout = self.get_write_timeout().unwrap_or(INFINITE);
kablam!     |                                                              ^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `ConnectNamedPipe`
kablam!     --> src/lib.rs:1002:27
kablam!      |
kablam! 1002 |     let result = unsafe { ConnectNamedPipe(handle.value, ovl.get_mut()) };
kablam!      |                           ^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `TRUE`
kablam!     --> src/lib.rs:1003:18
kablam!      |
kablam! 1003 |     if result == TRUE {
kablam!      |                  ^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `ReadFile`
kablam!     --> src/lib.rs:1023:9
kablam!      |
kablam! 1023 |         ReadFile(io_obj.handle,
kablam!      |         ^^^^^^^^ unresolved name
kablam! 
kablam! error[E0412]: type name `c_void` is undefined or not in scope
kablam!     --> src/lib.rs:1024:43
kablam!      |
kablam! 1024 |                  buf.as_mut_ptr() as *mut c_void,
kablam!      |                                           ^^^^^^ undefined or not in scope
kablam!      |
kablam!      = help: you can import it into scope: `use std::os::raw::c_void;`.
kablam! 
kablam! error[E0425]: unresolved name `ERROR_IO_PENDING`
kablam!     --> src/lib.rs:1040:58
kablam!      |
kablam! 1040 |         if result == 0 && err.raw_os_error().unwrap() == ERROR_IO_PENDING as i32 {
kablam!      |                                                          ^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `ReadFile`
kablam!     --> src/lib.rs:1058:9
kablam!      |
kablam! 1058 |         ReadFile(io_obj.handle,
kablam!      |         ^^^^^^^^ unresolved name
kablam! 
kablam! error[E0412]: type name `c_void` is undefined or not in scope
kablam!     --> src/lib.rs:1059:43
kablam!      |
kablam! 1059 |                  buf.as_mut_ptr() as *mut c_void,
kablam!      |                                           ^^^^^^ undefined or not in scope
kablam!      |
kablam!      = help: you can import it into scope: `use std::os::raw::c_void;`.
kablam! 
kablam! error[E0425]: unresolved name `ERROR_IO_PENDING`
kablam!     --> src/lib.rs:1075:58
kablam!      |
kablam! 1075 |         if result == 0 && err.raw_os_error().unwrap() == ERROR_IO_PENDING as i32 {
kablam!      |                                                          ^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `WriteFile`
kablam!     --> src/lib.rs:1095:9
kablam!      |
kablam! 1095 |         WriteFile(io_obj.handle,
kablam!      |         ^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0412]: type name `c_void` is undefined or not in scope
kablam!     --> src/lib.rs:1096:40
kablam!      |
kablam! 1096 |                   buf.as_ptr() as *mut c_void,
kablam!      |                                        ^^^^^^ undefined or not in scope
kablam!      |
kablam!      = help: you can import it into scope: `use std::os::raw::c_void;`.
kablam! 
kablam! error[E0425]: unresolved name `ERROR_IO_PENDING`
kablam!     --> src/lib.rs:1113:58
kablam!      |
kablam! 1113 |         if result == 0 && err.raw_os_error().unwrap() == ERROR_IO_PENDING as i32 {
kablam!      |                                                          ^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `WriteFile`
kablam!     --> src/lib.rs:1134:9
kablam!      |
kablam! 1134 |         WriteFile(io_obj.handle,
kablam!      |         ^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0412]: type name `c_void` is undefined or not in scope
kablam!     --> src/lib.rs:1135:40
kablam!      |
kablam! 1135 |                   buf.as_ptr() as *mut c_void,
kablam!      |                                        ^^^^^^ undefined or not in scope
kablam!      |
kablam!      = help: you can import it into scope: `use std::os::raw::c_void;`.
kablam! 
kablam! error[E0425]: unresolved name `ERROR_IO_PENDING`
kablam!     --> src/lib.rs:1152:58
kablam!      |
kablam! 1152 |         if result == 0 && err.raw_os_error().unwrap() == ERROR_IO_PENDING as i32 {
kablam!      |                                                          ^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `GetOverlappedResult`
kablam!     --> src/lib.rs:1171:9
kablam!      |
kablam! 1171 |         GetOverlappedResult(io_obj.handle,
kablam!      |         ^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `TRUE`
kablam!     --> src/lib.rs:1174:29
kablam!      |
kablam! 1174 |                             TRUE)
kablam!      |                             ^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `WaitForSingleObject`
kablam!     --> src/lib.rs:1187:9
kablam!      |
kablam! 1187 |         WaitForSingleObject(io_obj.ovl.event.handle.value,
kablam!      |         ^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `MAXIMUM_WAIT_OBJECTS`
kablam!     --> src/lib.rs:1201:27
kablam!      |
kablam! 1201 |     assert!(list.len() <= MAXIMUM_WAIT_OBJECTS as usize);
kablam!      |                           ^^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `WaitForMultipleObjects`
kablam!     --> src/lib.rs:1212:13
kablam!      |
kablam! 1212 |             WaitForMultipleObjects(events.len() as u32,
kablam!      |             ^^^^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `TRUE`
kablam!     --> src/lib.rs:1214:45
kablam!      |
kablam! 1214 |                                    if all { TRUE } else { FALSE },
kablam!      |                                             ^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `FALSE`
kablam!     --> src/lib.rs:1214:59
kablam!      |
kablam! 1214 |                                    if all { TRUE } else { FALSE },
kablam!      |                                                           ^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `INFINITE`
kablam!     --> src/lib.rs:1244:51
kablam!      |
kablam! 1244 |     match try!(wait_for_multiple_obj(list, false, INFINITE)) {
kablam!      |                                                   ^^^^^^^^ unresolved name
kablam! 
kablam! error: no method named `encode_wide` found for type `std::ffi::OsString` in the current scope
kablam!    --> src/lib.rs:179:35
kablam!     |
kablam! 179 |         let full_name = full_name.encode_wide().collect::<Vec<u16>>();
kablam!     |                                   ^^^^^^^^^^^
kablam! 
kablam! error: no method named `encode_wide` found for type `std::ffi::OsString` in the current scope
kablam!    --> src/lib.rs:481:35
kablam!     |
kablam! 481 |         let full_name = full_name.encode_wide().collect::<Vec<u16>>();
kablam!     |                                   ^^^^^^^^^^^
kablam! 
kablam! error: aborting due to 2 previous errors
kablam! 
kablam! error: Could not compile `named_pipe`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f d52e5dd4359cfc5c70a1775362efe32abc3d731b7a4d5a665191acdd0fa8a125`
blam! d52e5dd4359cfc5c70a1775362efe32abc3d731b7a4d5a665191acdd0fa8a125
