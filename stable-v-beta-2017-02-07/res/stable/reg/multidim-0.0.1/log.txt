boom! testing multidim-0.0.1 against stable for beta
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! c4d26dd38395ae0306b0251e56b95a404d2ba22e0e8fe212da6cb68f1bd0ae25
boom! running `docker start -a c4d26dd38395ae0306b0251e56b95a404d2ba22e0e8fe212da6cb68f1bd0ae25`
kablam!    Compiling multidim v0.0.1 (file:///source)
kablam! error[E0412]: type name `uint` is undefined or not in scope
kablam!   --> src/lib.rs:14:8
kablam!    |
kablam! 14 | 	rows: uint,
kablam!    | 	      ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: no candidates by the name of `uint` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0412]: type name `uint` is undefined or not in scope
kablam!   --> src/lib.rs:15:8
kablam!    |
kablam! 15 | 	cols: uint,
kablam!    | 	      ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: no candidates by the name of `uint` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0412]: type name `uint` is undefined or not in scope
kablam!   --> src/lib.rs:19:25
kablam!    |
kablam! 19 | 	pub fn from_elem(rows: uint, cols: uint, e: T) -> Matrix<T> {
kablam!    | 	                       ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: no candidates by the name of `uint` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0412]: type name `uint` is undefined or not in scope
kablam!   --> src/lib.rs:19:37
kablam!    |
kablam! 19 | 	pub fn from_elem(rows: uint, cols: uint, e: T) -> Matrix<T> {
kablam!    | 	                                   ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: no candidates by the name of `uint` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0412]: type name `uint` is undefined or not in scope
kablam!   --> src/lib.rs:29:23
kablam!    |
kablam! 29 | 	pub fn default(rows: uint, cols: uint) -> Matrix<T> {
kablam!    | 	                     ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: no candidates by the name of `uint` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0412]: type name `uint` is undefined or not in scope
kablam!   --> src/lib.rs:29:35
kablam!    |
kablam! 29 | 	pub fn default(rows: uint, cols: uint) -> Matrix<T> {
kablam!    | 	                                 ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: no candidates by the name of `uint` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0412]: type name `uint` is undefined or not in scope
kablam!   --> src/lib.rs:35:24
kablam!    |
kablam! 35 | 	pub fn rows(&self) -> uint { self.rows }
kablam!    | 	                      ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: no candidates by the name of `uint` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0412]: type name `uint` is undefined or not in scope
kablam!   --> src/lib.rs:36:24
kablam!    |
kablam! 36 | 	pub fn cols(&self) -> uint { self.cols }
kablam!    | 	                      ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: no candidates by the name of `uint` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0405]: trait `Index` is not in scope
kablam!   --> src/lib.rs:39:9
kablam!    |
kablam! 39 | impl<T> Index<(uint, uint), T> for Matrix<T> {
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^ `Index` is not in scope
kablam!    |
kablam!    = help: you can import it into scope: `use std::ops::Index;`.
kablam! 
kablam! error[E0412]: type name `uint` is undefined or not in scope
kablam!   --> src/lib.rs:39:16
kablam!    |
kablam! 39 | impl<T> Index<(uint, uint), T> for Matrix<T> {
kablam!    |                ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: no candidates by the name of `uint` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0412]: type name `uint` is undefined or not in scope
kablam!   --> src/lib.rs:39:22
kablam!    |
kablam! 39 | impl<T> Index<(uint, uint), T> for Matrix<T> {
kablam!    |                      ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: no candidates by the name of `uint` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0412]: type name `uint` is undefined or not in scope
kablam!   --> src/lib.rs:40:33
kablam!    |
kablam! 40 | 	fn index(&self, &(row, col): &(uint, uint)) -> &T {
kablam!    | 	                               ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: no candidates by the name of `uint` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0412]: type name `uint` is undefined or not in scope
kablam!   --> src/lib.rs:40:39
kablam!    |
kablam! 40 | 	fn index(&self, &(row, col): &(uint, uint)) -> &T {
kablam!    | 	                                     ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: no candidates by the name of `uint` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0405]: trait `IndexMut` is not in scope
kablam!   --> src/lib.rs:45:9
kablam!    |
kablam! 45 | impl<T> IndexMut<(uint, uint), T> for Matrix<T> {
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ `IndexMut` is not in scope
kablam!    |
kablam!    = help: you can import it into scope: `use std::ops::IndexMut;`.
kablam! 
kablam! error[E0412]: type name `uint` is undefined or not in scope
kablam!   --> src/lib.rs:45:19
kablam!    |
kablam! 45 | impl<T> IndexMut<(uint, uint), T> for Matrix<T> {
kablam!    |                   ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: no candidates by the name of `uint` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0412]: type name `uint` is undefined or not in scope
kablam!   --> src/lib.rs:45:25
kablam!    |
kablam! 45 | impl<T> IndexMut<(uint, uint), T> for Matrix<T> {
kablam!    |                         ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: no candidates by the name of `uint` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0412]: type name `uint` is undefined or not in scope
kablam!   --> src/lib.rs:46:41
kablam!    |
kablam! 46 | 	fn index_mut(&mut self, &(row, col): &(uint, uint)) -> &mut T {
kablam!    | 	                                       ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: no candidates by the name of `uint` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0412]: type name `uint` is undefined or not in scope
kablam!   --> src/lib.rs:46:47
kablam!    |
kablam! 46 | 	fn index_mut(&mut self, &(row, col): &(uint, uint)) -> &mut T {
kablam!    | 	                                             ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: no candidates by the name of `uint` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error: cannot continue compilation due to previous error
kablam! 
kablam! error: Could not compile `multidim`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f c4d26dd38395ae0306b0251e56b95a404d2ba22e0e8fe212da6cb68f1bd0ae25`
blam! c4d26dd38395ae0306b0251e56b95a404d2ba22e0e8fe212da6cb68f1bd0ae25
