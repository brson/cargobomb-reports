boom! testing json_rpc-0.2.0 against stable for beta
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! fdc555a9cb67890bd83571191509cb0c6f5ea452e199100110a3fe62016a9c16
boom! running `docker start -a fdc555a9cb67890bd83571191509cb0c6f5ea452e199100110a3fe62016a9c16`
kablam!    Compiling asynchronous v0.4.5
kablam!    Compiling json_rpc v0.2.0 (file:///source)
kablam! warning: extern crate `rustc_serialize` is private, and cannot be reexported (error E0364), consider declaring with `pub`, #[warn(private_in_public)] on by default
kablam!   --> src/lib.rs:68:9
kablam!    |
kablam! 68 | pub use rustc_serialize as serialize;
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #34537 <https://github.com/rust-lang/rust/issues/34537>
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 2.24 secs
boom! running `docker rm -f fdc555a9cb67890bd83571191509cb0c6f5ea452e199100110a3fe62016a9c16`
blam! fdc555a9cb67890bd83571191509cb0c6f5ea452e199100110a3fe62016a9c16
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 438b16782ee71c16795f05ed45dbc324db73c1f823098e56f035a8f21495d470
boom! running `docker start -a 438b16782ee71c16795f05ed45dbc324db73c1f823098e56f035a8f21495d470`
kablam!    Compiling json_rpc v0.2.0 (file:///source)
kablam! warning: extern crate `rustc_serialize` is private, and cannot be reexported (error E0364), consider declaring with `pub`, #[warn(private_in_public)] on by default
kablam!   --> src/lib.rs:68:9
kablam!    |
kablam! 68 | pub use rustc_serialize as serialize;
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #34537 <https://github.com/rust-lang/rust/issues/34537>
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:389:9
kablam!     |
kablam! 389 |         thread::sleep_ms(300);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:412:9
kablam!     |
kablam! 412 |         thread::sleep_ms(300);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:438:9
kablam!     |
kablam! 438 |         thread::sleep_ms(300);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:470:9
kablam!     |
kablam! 470 |         thread::sleep_ms(300);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:510:9
kablam!     |
kablam! 510 |         thread::sleep_ms(300);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:540:9
kablam!     |
kablam! 540 |         thread::sleep_ms(300);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:564:9
kablam!     |
kablam! 564 |         thread::sleep_ms(300);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 3.1 secs
boom! running `docker rm -f 438b16782ee71c16795f05ed45dbc324db73c1f823098e56f035a8f21495d470`
blam! 438b16782ee71c16795f05ed45dbc324db73c1f823098e56f035a8f21495d470
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 1b6c42d78f357217f1127d6e31a1fa569e3d044eab50276f5756f1e1fee75849
boom! running `docker start -a 1b6c42d78f357217f1127d6e31a1fa569e3d044eab50276f5756f1e1fee75849`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/json_rpc-1a4dfadd5c10eff5
blam! 
blam! running 7 tests
blam! test test::test_manual_register ... ok
blam! test test::test_method_by_name ... ok
blam! test test::test_custom_error ... ok
blam! test test::test_error_method_not_found ... ok
blam! test test::test_method_by_position ... ok
blam! test test::test_method_returns_array ... ok
blam! test test::test_method_returns_object ... ok
blam! 
blam! test result: ok. 7 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests json_rpc
blam! 
blam! running 1 test
blam! test _0 ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 1b6c42d78f357217f1127d6e31a1fa569e3d044eab50276f5756f1e1fee75849`
blam! 1b6c42d78f357217f1127d6e31a1fa569e3d044eab50276f5756f1e1fee75849
