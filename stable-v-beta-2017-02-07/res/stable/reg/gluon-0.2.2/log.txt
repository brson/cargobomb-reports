boom! testing gluon-0.2.2 against stable for beta
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 60391dda3500e82faf2e2ffec6764d7aa2eb63a50460533a4f5c123b12d2b311
boom! running `docker start -a 60391dda3500e82faf2e2ffec6764d7aa2eb63a50460533a4f5c123b12d2b311`
kablam!    Compiling pretty v0.1.0
kablam!    Compiling gluon v0.2.2 (file:///source)
kablam!    Compiling combine v2.0.0-beta3
kablam!    Compiling gluon_base v0.2.2
kablam!    Compiling combine-language v2.0.0-beta4
kablam!    Compiling gluon_parser v0.2.2
kablam!    Compiling gluon_vm v0.2.2
kablam!    Compiling gluon_check v0.2.2
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 64.68 secs
boom! running `docker rm -f 60391dda3500e82faf2e2ffec6764d7aa2eb63a50460533a4f5c123b12d2b311`
blam! 60391dda3500e82faf2e2ffec6764d7aa2eb63a50460533a4f5c123b12d2b311
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 4ee3b56ae3a97d3b6ab967886c8c8378552ce5460fcc5a4e96785932a4a00e1f
boom! running `docker start -a 4ee3b56ae3a97d3b6ab967886c8c8378552ce5460fcc5a4e96785932a4a00e1f`
kablam!    Compiling gluon v0.2.2 (file:///source)
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 40.53 secs
boom! running `docker rm -f 4ee3b56ae3a97d3b6ab967886c8c8378552ce5460fcc5a4e96785932a4a00e1f`
blam! 4ee3b56ae3a97d3b6ab967886c8c8378552ce5460fcc5a4e96785932a4a00e1f
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! ef7051aa97b6657b12ee272ed0adbd5b88262b466a6e42643736d6e1093f7602
boom! running `docker start -a ef7051aa97b6657b12ee272ed0adbd5b88262b466a6e42643736d6e1093f7602`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/api-0b2f09b1a5d965d2
blam! 
blam! running 4 tests
blam! test root_data ... ok
blam! test root_string ... ok
blam! test array ... ok
blam! test call_function ... ok
blam! 
blam! test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/compiletest-a6831430ab170a52
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/error-934a4b5874fed052
blam! 
blam! running 1 test
blam! test dont_panic_when_error_span_is_at_eof ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/gluon-a607b4510a518c69
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/io-a731b32d370ca78c
blam! 
blam! running 1 test
blam! test read_file ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- read_file stdout ----
blam! 	thread 'read_file' panicked at 'Assertion failed', tests/io.rs:30
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! 
blam! failures:
blam!     read_file
blam! 
blam! test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f ef7051aa97b6657b12ee272ed0adbd5b88262b466a6e42643736d6e1093f7602`
blam! ef7051aa97b6657b12ee272ed0adbd5b88262b466a6e42643736d6e1093f7602
