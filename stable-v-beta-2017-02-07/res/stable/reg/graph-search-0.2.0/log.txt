boom! testing graph-search-0.2.0 against stable for beta
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 38b7fd3bdc946529690aa0783025b20cc79d8c6ad746e2367b8526f53ed98224
boom! running `docker start -a 38b7fd3bdc946529690aa0783025b20cc79d8c6ad746e2367b8526f53ed98224`
kablam!    Compiling graph-search v0.2.0 (file:///source)
kablam! warning: unnecessary parentheses around `for` head expression, #[warn(unused_parens)] on by default
kablam!    --> src/lib.rs:141:20
kablam!     |
kablam! 141 |           for i in (0..self.graph[position].len()) {
kablam!     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unnecessary parentheses around `for` head expression, #[warn(unused_parens)] on by default
kablam!    --> src/lib.rs:171:14
kablam!     |
kablam! 171 |     for i in (0..path.len()-1) {
kablam!     |              ^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unnecessary parentheses around `for` head expression, #[warn(unused_parens)] on by default
kablam!    --> src/lib.rs:201:20
kablam!     |
kablam! 201 |           for i in (0..self.graph[v].len()) {
kablam!     |                    ^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error[E0277]: the trait bound `State: std::clone::Clone` is not satisfied
kablam!  --> src/lib.rs:7:10
kablam!   |
kablam! 7 | #[derive(Copy, Eq, PartialEq, Debug)]
kablam!   |          ^^^^ the trait `std::clone::Clone` is not implemented for `State`
kablam!   |
kablam!   = note: required by `std::marker::Copy`
kablam! 
kablam! error: aborting due to previous error
kablam! 
kablam! error: Could not compile `graph-search`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 38b7fd3bdc946529690aa0783025b20cc79d8c6ad746e2367b8526f53ed98224`
blam! 38b7fd3bdc946529690aa0783025b20cc79d8c6ad746e2367b8526f53ed98224
