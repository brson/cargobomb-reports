boom! testing zmtp-0.6.0 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 018d9f3bae55fa5c023eb150e35fbd76204bbd44ed0d001ad5ef6c78d1184f1e
boom! running `docker start -a 018d9f3bae55fa5c023eb150e35fbd76204bbd44ed0d001ad5ef6c78d1184f1e`
kablam!    Compiling zmtp v0.6.0 (file:///source)
kablam! warning: patterns aren't allowed in methods without bodies, #[warn(patterns_in_fns_without_body)] on by default
kablam!   --> src/types.rs:36:24
kablam!    |
kablam! 36 |     fn peek(&mut self, mut buf: &mut [u8])  -> io::Result<usize>;
kablam!    |                        ^^^^^^^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #35203 <https://github.com/rust-lang/rust/issues/35203>
kablam! 
kablam! warning: unused import: `ReadBytesExt`, #[warn(unused_imports)] on by default
kablam!  --> src/reader.rs:4:34
kablam!   |
kablam! 4 | use self::byteorder::{ByteOrder, ReadBytesExt, BigEndian};
kablam!   |                                  ^^^^^^^^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 2.47 secs
boom! running `docker rm -f 018d9f3bae55fa5c023eb150e35fbd76204bbd44ed0d001ad5ef6c78d1184f1e`
blam! 018d9f3bae55fa5c023eb150e35fbd76204bbd44ed0d001ad5ef6c78d1184f1e
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! d5de8a39e04ba83ce126f534af2bc808815086336cbeff2cdd64daa3ff42586c
boom! running `docker start -a d5de8a39e04ba83ce126f534af2bc808815086336cbeff2cdd64daa3ff42586c`
kablam!    Compiling zmtp v0.6.0 (file:///source)
kablam! warning: patterns aren't allowed in methods without bodies, #[warn(patterns_in_fns_without_body)] on by default
kablam!   --> src/types.rs:36:24
kablam!    |
kablam! 36 |     fn peek(&mut self, mut buf: &mut [u8])  -> io::Result<usize>;
kablam!    |                        ^^^^^^^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #35203 <https://github.com/rust-lang/rust/issues/35203>
kablam! 
kablam! warning: unused import: `ReadBytesExt`, #[warn(unused_imports)] on by default
kablam!  --> src/reader.rs:4:34
kablam!   |
kablam! 4 | use self::byteorder::{ByteOrder, ReadBytesExt, BigEndian};
kablam!   |                                  ^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `Read`, #[warn(unused_imports)] on by default
kablam!   --> src/lib.rs:17:19
kablam!    |
kablam! 17 |     use std::io::{Read, Write};
kablam!    |                   ^^^^
kablam! 
kablam! warning: unused import: `Write`, #[warn(unused_imports)] on by default
kablam!   --> src/lib.rs:17:25
kablam!    |
kablam! 17 |     use std::io::{Read, Write};
kablam!    |                         ^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 3.39 secs
boom! running `docker rm -f d5de8a39e04ba83ce126f534af2bc808815086336cbeff2cdd64daa3ff42586c`
blam! d5de8a39e04ba83ce126f534af2bc808815086336cbeff2cdd64daa3ff42586c
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 8546b5d12cd5c045fa47cbbd8408c22fd2e4698aaa0eee35755ee10c0760ed5c
boom! running `docker start -a 8546b5d12cd5c045fa47cbbd8408c22fd2e4698aaa0eee35755ee10c0760ed5c`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/zmtp-1fc514a68b63f191
blam! 
blam! running 21 tests
blam! test zmtp_tests::deserialize_greeting ... ok
blam! test zmtp_tests::deserialize_frame ... ok
blam! test zmtp_tests::deserialize_multiframe_msg ... ok
blam! test zmtp_tests::create_cmd_with_name_too_long ... ok
blam! test zmtp_tests::deserialize_short_cmd ... ok
blam! test zmtp_tests::deserialize_long_cmd ... ok
blam! test zmtp_tests::deserialize_single_frame_msg ... ok
blam! test zmtp_tests::deserialize_traffic ... ok
blam! test zmtp_tests::serialize_frame ... ok
blam! test zmtp_tests::serialize_greeting ... ok
blam! test zmtp_tests::serialize_long_cmd ... ok
blam! test zmtp_tests::serialize_multiframe_msg ... ok
blam! test zmtp_tests::serialize_short_cmd ... ok
blam! test zmtp_tests::serialize_single_frame_msg ... ok
blam! test zmtp_tests::serialize_traffic ... ok
blam! test zmtp_tests::validate_basic_cmd_with_invalid_name_char ... ok
blam! test zmtp_tests::validate_basic_cmd_with_null_name_char ... ok
blam! test zmtp_tests::validate_basic_cmd_with_name_too_short ... ok
blam! test zmtp_tests::validate_basic_cmd_with_name_digit ... ok
blam! test zmtp_tests::validate_basic_cmd_with_special_name_char ... ok
blam! test zmtp_tests::validate_basic_cmd ... ok
blam! 
blam! test result: ok. 21 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests zmtp
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 8546b5d12cd5c045fa47cbbd8408c22fd2e4698aaa0eee35755ee10c0760ed5c`
blam! 8546b5d12cd5c045fa47cbbd8408c22fd2e4698aaa0eee35755ee10c0760ed5c
