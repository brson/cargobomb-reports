boom! testing json_rpc-0.2.0 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 7f13c7991c93ae77a644f627abdbc9790526d9c46a0b291fd91425210b50cb78
boom! running `docker start -a 7f13c7991c93ae77a644f627abdbc9790526d9c46a0b291fd91425210b50cb78`
kablam!    Compiling asynchronous v0.4.5
kablam!    Compiling json_rpc v0.2.0 (file:///source)
kablam! warning: extern crate `rustc_serialize` is private, and cannot be reexported (error E0364), consider declaring with `pub`, #[warn(private_in_public)] on by default
kablam!   --> src/lib.rs:68:9
kablam!    |
kablam! 68 | pub use rustc_serialize as serialize;
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #34537 <https://github.com/rust-lang/rust/issues/34537>
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 2.16 secs
boom! running `docker rm -f 7f13c7991c93ae77a644f627abdbc9790526d9c46a0b291fd91425210b50cb78`
blam! 7f13c7991c93ae77a644f627abdbc9790526d9c46a0b291fd91425210b50cb78
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! b3b110ff434e46121c7e4c16de162a1ebbf246378937e3329b54f4302f77f467
boom! running `docker start -a b3b110ff434e46121c7e4c16de162a1ebbf246378937e3329b54f4302f77f467`
kablam!    Compiling json_rpc v0.2.0 (file:///source)
kablam! warning: extern crate `rustc_serialize` is private, and cannot be reexported (error E0364), consider declaring with `pub`, #[warn(private_in_public)] on by default
kablam!   --> src/lib.rs:68:9
kablam!    |
kablam! 68 | pub use rustc_serialize as serialize;
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #34537 <https://github.com/rust-lang/rust/issues/34537>
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:389:9
kablam!     |
kablam! 389 |         thread::sleep_ms(300);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:412:9
kablam!     |
kablam! 412 |         thread::sleep_ms(300);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:438:9
kablam!     |
kablam! 438 |         thread::sleep_ms(300);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:470:9
kablam!     |
kablam! 470 |         thread::sleep_ms(300);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:510:9
kablam!     |
kablam! 510 |         thread::sleep_ms(300);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:540:9
kablam!     |
kablam! 540 |         thread::sleep_ms(300);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`, #[warn(deprecated)] on by default
kablam!    --> src/lib.rs:564:9
kablam!     |
kablam! 564 |         thread::sleep_ms(300);
kablam!     |         ^^^^^^^^^^^^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 2.97 secs
boom! running `docker rm -f b3b110ff434e46121c7e4c16de162a1ebbf246378937e3329b54f4302f77f467`
blam! b3b110ff434e46121c7e4c16de162a1ebbf246378937e3329b54f4302f77f467
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 8c1d00bb0d079d3c5a17f7682a5dfe07ceedb8d5bada90095fa4717fc8cf2820
boom! running `docker start -a 8c1d00bb0d079d3c5a17f7682a5dfe07ceedb8d5bada90095fa4717fc8cf2820`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/json_rpc-1a4dfadd5c10eff5
blam! 
blam! running 7 tests
blam! test test::test_error_method_not_found ... ok
blam! test test::test_custom_error ... ok
blam! test test::test_manual_register ... ok
blam! test test::test_method_by_name ... ok
blam! test test::test_method_by_position ... ok
blam! test test::test_method_returns_object ... ok
blam! test test::test_method_returns_array ... ok
blam! 
blam! test result: ok. 7 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests json_rpc
blam! 
blam! running 1 test
blam! test _0 ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 8c1d00bb0d079d3c5a17f7682a5dfe07ceedb8d5bada90095fa4717fc8cf2820`
blam! 8c1d00bb0d079d3c5a17f7682a5dfe07ceedb8d5bada90095fa4717fc8cf2820
