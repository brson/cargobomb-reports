boom! testing quire-0.1.8 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 957c41f5d5954e06ce0b29b45730ea436443bd5915060046dc40d5fdcb60c205
boom! running `docker start -a 957c41f5d5954e06ce0b29b45730ea436443bd5915060046dc40d5fdcb60c205`
kablam!    Compiling quire v0.1.8 (file:///source)
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/parser.rs:611:9
kablam!     |
kablam! 611 |     let mut tag = maybe_parse_tag(tokiter);
kablam!     |         ^^^^^^^
kablam! 
kablam! warning: variant is never used: `SingleQuoted`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:26:5
kablam!    |
kablam! 26 |     SingleQuoted,
kablam!    |     ^^^^^^^^^^^^
kablam! 
kablam! warning: variant is never used: `DoubleQuoted`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:27:5
kablam!    |
kablam! 27 |     DoubleQuoted,
kablam!    |     ^^^^^^^^^^^^
kablam! 
kablam! warning: variant is never used: `Literal`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:28:5
kablam!    |
kablam! 28 |     Literal,
kablam!    |     ^^^^^^^
kablam! 
kablam! warning: variant is never used: `Folded`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:29:5
kablam!    |
kablam! 29 |     Folded,
kablam!    |     ^^^^^^
kablam! 
kablam! warning: variant is never used: `Tilde`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:35:5
kablam!    |
kablam! 35 |     Tilde,
kablam!    |     ^^^^^
kablam! 
kablam! warning: variant is never used: `MapValue`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:44:5
kablam!    |
kablam! 44 |     MapValue,
kablam!    |     ^^^^^^^^
kablam! 
kablam! warning: variant is never used: `Comment`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:64:5
kablam!    |
kablam! 64 |     Comment(&'a str),
kablam!    |     ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `tag`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:250:53
kablam!     |
kablam! 250 |             (S::MapSimpleKeyValue, Opcode::SeqStart(tag, anchor)) => {
kablam!     |                                                     ^^^
kablam! 
kablam! warning: unused variable: `anchor`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:250:58
kablam!     |
kablam! 250 |             (S::MapSimpleKeyValue, Opcode::SeqStart(tag, anchor)) => {
kablam!     |                                                          ^^^^^^
kablam! 
kablam! warning: method is never used: `to_buffer`, #[warn(dead_code)] on by default
kablam!    --> src/emit.rs:366:5
kablam!     |
kablam! 366 |       fn to_buffer<'x, T: Encodable, W: Write>(
kablam!     |  _____^ starting here...
kablam! 367 | |         val: &T, wr: &'x mut W)
kablam! 368 | |     {
kablam! 369 | |         let mut encoder = Context::new(wr);
kablam! 370 | |         val.encode(&mut encoder).unwrap();
kablam! 371 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: unused variable: `name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:461:32
kablam!     |
kablam! 461 |     fn emit_enum<F>(&mut self, name: &str, f: F) -> Result<(), IoError> {
kablam!     |                                ^^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:461:44
kablam!     |
kablam! 461 |     fn emit_enum<F>(&mut self, name: &str, f: F) -> Result<(), IoError> {
kablam!     |                                            ^
kablam! 
kablam! warning: unused variable: `v_name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:464:40
kablam!     |
kablam! 464 |     fn emit_enum_variant<F>(&mut self, v_name: &str, v_id: usize, len: usize, f: F)
kablam!     |                                        ^^^^^^
kablam! 
kablam! warning: unused variable: `v_id`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:464:54
kablam!     |
kablam! 464 |     fn emit_enum_variant<F>(&mut self, v_name: &str, v_id: usize, len: usize, f: F)
kablam!     |                                                      ^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:464:67
kablam!     |
kablam! 464 |     fn emit_enum_variant<F>(&mut self, v_name: &str, v_id: usize, len: usize, f: F)
kablam!     |                                                                   ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:464:79
kablam!     |
kablam! 464 |     fn emit_enum_variant<F>(&mut self, v_name: &str, v_id: usize, len: usize, f: F)
kablam!     |                                                                               ^
kablam! 
kablam! warning: unused variable: `a_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:469:44
kablam!     |
kablam! 469 |     fn emit_enum_variant_arg<F>(&mut self, a_idx: usize, f: F)
kablam!     |                                            ^^^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:469:58
kablam!     |
kablam! 469 |     fn emit_enum_variant_arg<F>(&mut self, a_idx: usize, f: F)
kablam!     |                                                          ^
kablam! 
kablam! warning: unused variable: `v_name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:474:47
kablam!     |
kablam! 474 |     fn emit_enum_struct_variant<F>(&mut self, v_name: &str,
kablam!     |                                               ^^^^^^
kablam! 
kablam! warning: unused variable: `v_id`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:475:9
kablam!     |
kablam! 475 |         v_id: usize, len: usize, f: F)
kablam!     |         ^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:475:22
kablam!     |
kablam! 475 |         v_id: usize, len: usize, f: F)
kablam!     |                      ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:475:34
kablam!     |
kablam! 475 |         v_id: usize, len: usize, f: F)
kablam!     |                                  ^
kablam! 
kablam! warning: unused variable: `f_name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:480:53
kablam!     |
kablam! 480 |     fn emit_enum_struct_variant_field<F>(&mut self, f_name: &str, f_idx: usize,
kablam!     |                                                     ^^^^^^
kablam! 
kablam! warning: unused variable: `f_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:480:67
kablam!     |
kablam! 480 |     fn emit_enum_struct_variant_field<F>(&mut self, f_name: &str, f_idx: usize,
kablam!     |                                                                   ^^^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:481:9
kablam!     |
kablam! 481 |         f: F)
kablam!     |         ^
kablam! 
kablam! warning: unused variable: `name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:486:34
kablam!     |
kablam! 486 |     fn emit_struct<F>(&mut self, name: &str, len: usize, f: F)
kablam!     |                                  ^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:486:46
kablam!     |
kablam! 486 |     fn emit_struct<F>(&mut self, name: &str, len: usize, f: F)
kablam!     |                                              ^^^
kablam! 
kablam! warning: unused variable: `f_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:494:54
kablam!     |
kablam! 494 |     fn emit_struct_field<F>(&mut self, f_name: &str, f_idx: usize, f: F)
kablam!     |                                                      ^^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:501:33
kablam!     |
kablam! 501 |     fn emit_tuple<F>(&mut self, len: usize, f: F)
kablam!     |                                 ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:501:45
kablam!     |
kablam! 501 |     fn emit_tuple<F>(&mut self, len: usize, f: F)
kablam!     |                                             ^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:507:37
kablam!     |
kablam! 507 |     fn emit_tuple_arg<F>(&mut self, idx: usize, f: F)
kablam!     |                                     ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:507:49
kablam!     |
kablam! 507 |     fn emit_tuple_arg<F>(&mut self, idx: usize, f: F)
kablam!     |                                                 ^
kablam! 
kablam! warning: unused variable: `name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:513:40
kablam!     |
kablam! 513 |     fn emit_tuple_struct<F>(&mut self, name: &str, len: usize, f: F)
kablam!     |                                        ^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:513:52
kablam!     |
kablam! 513 |     fn emit_tuple_struct<F>(&mut self, name: &str, len: usize, f: F)
kablam!     |                                                    ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:513:64
kablam!     |
kablam! 513 |     fn emit_tuple_struct<F>(&mut self, name: &str, len: usize, f: F)
kablam!     |                                                                ^
kablam! 
kablam! warning: unused variable: `f_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:519:44
kablam!     |
kablam! 519 |     fn emit_tuple_struct_arg<F>(&mut self, f_idx: usize, f: F)
kablam!     |                                            ^^^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:519:58
kablam!     |
kablam! 519 |     fn emit_tuple_struct_arg<F>(&mut self, f_idx: usize, f: F)
kablam!     |                                                          ^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:525:34
kablam!     |
kablam! 525 |     fn emit_option<F>(&mut self, f: F) -> Result<(), IoError>
kablam!     |                                  ^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:533:39
kablam!     |
kablam! 533 |     fn emit_option_some<F>(&mut self, f: F) -> Result<(), IoError>
kablam!     |                                       ^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:538:31
kablam!     |
kablam! 538 |     fn emit_seq<F>(&mut self, len: usize, f: F) -> Result<(), IoError>
kablam!     |                               ^^^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:545:35
kablam!     |
kablam! 545 |     fn emit_seq_elt<F>(&mut self, idx: usize, f: F) -> Result<(), IoError>
kablam!     |                                   ^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:550:31
kablam!     |
kablam! 550 |     fn emit_map<F>(&mut self, len: usize, f: F) -> Result<(), IoError>
kablam!     |                               ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:550:43
kablam!     |
kablam! 550 |     fn emit_map<F>(&mut self, len: usize, f: F) -> Result<(), IoError>
kablam!     |                                           ^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:555:39
kablam!     |
kablam! 555 |     fn emit_map_elt_key<F>(&mut self, idx: usize, f: F) -> Result<(), IoError>
kablam!     |                                       ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:555:51
kablam!     |
kablam! 555 |     fn emit_map_elt_key<F>(&mut self, idx: usize, f: F) -> Result<(), IoError>
kablam!     |                                                   ^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:560:39
kablam!     |
kablam! 560 |     fn emit_map_elt_val<F>(&mut self, idx: usize, f: F) -> Result<(), IoError>
kablam!     |                                       ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:560:51
kablam!     |
kablam! 560 |     fn emit_map_elt_val<F>(&mut self, idx: usize, f: F) -> Result<(), IoError>
kablam!     |                                                   ^
kablam! 
kablam! warning: field is never used: `options`, #[warn(dead_code)] on by default
kablam!    --> src/ast.rs:110:5
kablam!     |
kablam! 110 |     options: Options,
kablam!     |     ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: field is never used: `directives`, #[warn(dead_code)] on by default
kablam!    --> src/ast.rs:112:5
kablam!     |
kablam! 112 |     directives: Vec<Directive<'a>>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `pos`, #[warn(unused_variables)] on by default
kablam!    --> src/decode.rs:198:28
kablam!     |
kablam! 198 |             Node(A::Scalar(ref pos, _, _, ref val)) | Key(ref pos, ref val) => {
kablam!     |                            ^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/decode.rs:283:59
kablam!     |
kablam! 283 |     fn read_enum_variant_arg<T, F>(&mut self, idx: usize, mut f: F)
kablam!     |                                                           ^^^^^
kablam! 
kablam! warning: unused variable: `names`, #[warn(unused_variables)] on by default
kablam!    --> src/decode.rs:293:50
kablam!     |
kablam! 293 |     fn read_enum_struct_variant<T, F>(&mut self, names: &[&str], f: F)
kablam!     |                                                  ^^^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/decode.rs:293:66
kablam!     |
kablam! 293 |     fn read_enum_struct_variant<T, F>(&mut self, names: &[&str], f: F)
kablam!     |                                                                  ^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 7.1 secs
boom! running `docker rm -f 957c41f5d5954e06ce0b29b45730ea436443bd5915060046dc40d5fdcb60c205`
blam! 957c41f5d5954e06ce0b29b45730ea436443bd5915060046dc40d5fdcb60c205
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 9844d861e3d1cc423dfc01c4ae349c609fd867be0e8b5e26f0744eb4863f4e1f
boom! running `docker start -a 9844d861e3d1cc423dfc01c4ae349c609fd867be0e8b5e26f0744eb4863f4e1f`
kablam!    Compiling quire v0.1.8 (file:///source)
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/parser.rs:611:9
kablam!     |
kablam! 611 |     let mut tag = maybe_parse_tag(tokiter);
kablam!     |         ^^^^^^^
kablam! 
kablam! warning: variant is never used: `SingleQuoted`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:26:5
kablam!    |
kablam! 26 |     SingleQuoted,
kablam!    |     ^^^^^^^^^^^^
kablam! 
kablam! warning: variant is never used: `DoubleQuoted`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:27:5
kablam!    |
kablam! 27 |     DoubleQuoted,
kablam!    |     ^^^^^^^^^^^^
kablam! 
kablam! warning: variant is never used: `Literal`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:28:5
kablam!    |
kablam! 28 |     Literal,
kablam!    |     ^^^^^^^
kablam! 
kablam! warning: variant is never used: `Folded`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:29:5
kablam!    |
kablam! 29 |     Folded,
kablam!    |     ^^^^^^
kablam! 
kablam! warning: variant is never used: `Tilde`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:35:5
kablam!    |
kablam! 35 |     Tilde,
kablam!    |     ^^^^^
kablam! 
kablam! warning: variant is never used: `MapValue`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:44:5
kablam!    |
kablam! 44 |     MapValue,
kablam!    |     ^^^^^^^^
kablam! 
kablam! warning: variant is never used: `Comment`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:64:5
kablam!    |
kablam! 64 |     Comment(&'a str),
kablam!    |     ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `tag`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:250:53
kablam!     |
kablam! 250 |             (S::MapSimpleKeyValue, Opcode::SeqStart(tag, anchor)) => {
kablam!     |                                                     ^^^
kablam! 
kablam! warning: unused variable: `anchor`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:250:58
kablam!     |
kablam! 250 |             (S::MapSimpleKeyValue, Opcode::SeqStart(tag, anchor)) => {
kablam!     |                                                          ^^^^^^
kablam! 
kablam! warning: unused variable: `name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:461:32
kablam!     |
kablam! 461 |     fn emit_enum<F>(&mut self, name: &str, f: F) -> Result<(), IoError> {
kablam!     |                                ^^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:461:44
kablam!     |
kablam! 461 |     fn emit_enum<F>(&mut self, name: &str, f: F) -> Result<(), IoError> {
kablam!     |                                            ^
kablam! 
kablam! warning: unused variable: `v_name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:464:40
kablam!     |
kablam! 464 |     fn emit_enum_variant<F>(&mut self, v_name: &str, v_id: usize, len: usize, f: F)
kablam!     |                                        ^^^^^^
kablam! 
kablam! warning: unused variable: `v_id`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:464:54
kablam!     |
kablam! 464 |     fn emit_enum_variant<F>(&mut self, v_name: &str, v_id: usize, len: usize, f: F)
kablam!     |                                                      ^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:464:67
kablam!     |
kablam! 464 |     fn emit_enum_variant<F>(&mut self, v_name: &str, v_id: usize, len: usize, f: F)
kablam!     |                                                                   ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:464:79
kablam!     |
kablam! 464 |     fn emit_enum_variant<F>(&mut self, v_name: &str, v_id: usize, len: usize, f: F)
kablam!     |                                                                               ^
kablam! 
kablam! warning: unused variable: `a_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:469:44
kablam!     |
kablam! 469 |     fn emit_enum_variant_arg<F>(&mut self, a_idx: usize, f: F)
kablam!     |                                            ^^^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:469:58
kablam!     |
kablam! 469 |     fn emit_enum_variant_arg<F>(&mut self, a_idx: usize, f: F)
kablam!     |                                                          ^
kablam! 
kablam! warning: unused variable: `v_name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:474:47
kablam!     |
kablam! 474 |     fn emit_enum_struct_variant<F>(&mut self, v_name: &str,
kablam!     |                                               ^^^^^^
kablam! 
kablam! warning: unused variable: `v_id`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:475:9
kablam!     |
kablam! 475 |         v_id: usize, len: usize, f: F)
kablam!     |         ^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:475:22
kablam!     |
kablam! 475 |         v_id: usize, len: usize, f: F)
kablam!     |                      ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:475:34
kablam!     |
kablam! 475 |         v_id: usize, len: usize, f: F)
kablam!     |                                  ^
kablam! 
kablam! warning: unused variable: `f_name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:480:53
kablam!     |
kablam! 480 |     fn emit_enum_struct_variant_field<F>(&mut self, f_name: &str, f_idx: usize,
kablam!     |                                                     ^^^^^^
kablam! 
kablam! warning: unused variable: `f_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:480:67
kablam!     |
kablam! 480 |     fn emit_enum_struct_variant_field<F>(&mut self, f_name: &str, f_idx: usize,
kablam!     |                                                                   ^^^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:481:9
kablam!     |
kablam! 481 |         f: F)
kablam!     |         ^
kablam! 
kablam! warning: unused variable: `name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:486:34
kablam!     |
kablam! 486 |     fn emit_struct<F>(&mut self, name: &str, len: usize, f: F)
kablam!     |                                  ^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:486:46
kablam!     |
kablam! 486 |     fn emit_struct<F>(&mut self, name: &str, len: usize, f: F)
kablam!     |                                              ^^^
kablam! 
kablam! warning: unused variable: `f_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:494:54
kablam!     |
kablam! 494 |     fn emit_struct_field<F>(&mut self, f_name: &str, f_idx: usize, f: F)
kablam!     |                                                      ^^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:501:33
kablam!     |
kablam! 501 |     fn emit_tuple<F>(&mut self, len: usize, f: F)
kablam!     |                                 ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:501:45
kablam!     |
kablam! 501 |     fn emit_tuple<F>(&mut self, len: usize, f: F)
kablam!     |                                             ^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:507:37
kablam!     |
kablam! 507 |     fn emit_tuple_arg<F>(&mut self, idx: usize, f: F)
kablam!     |                                     ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:507:49
kablam!     |
kablam! 507 |     fn emit_tuple_arg<F>(&mut self, idx: usize, f: F)
kablam!     |                                                 ^
kablam! 
kablam! warning: unused variable: `name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:513:40
kablam!     |
kablam! 513 |     fn emit_tuple_struct<F>(&mut self, name: &str, len: usize, f: F)
kablam!     |                                        ^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:513:52
kablam!     |
kablam! 513 |     fn emit_tuple_struct<F>(&mut self, name: &str, len: usize, f: F)
kablam!     |                                                    ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:513:64
kablam!     |
kablam! 513 |     fn emit_tuple_struct<F>(&mut self, name: &str, len: usize, f: F)
kablam!     |                                                                ^
kablam! 
kablam! warning: unused variable: `f_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:519:44
kablam!     |
kablam! 519 |     fn emit_tuple_struct_arg<F>(&mut self, f_idx: usize, f: F)
kablam!     |                                            ^^^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:519:58
kablam!     |
kablam! 519 |     fn emit_tuple_struct_arg<F>(&mut self, f_idx: usize, f: F)
kablam!     |                                                          ^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:525:34
kablam!     |
kablam! 525 |     fn emit_option<F>(&mut self, f: F) -> Result<(), IoError>
kablam!     |                                  ^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:533:39
kablam!     |
kablam! 533 |     fn emit_option_some<F>(&mut self, f: F) -> Result<(), IoError>
kablam!     |                                       ^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:538:31
kablam!     |
kablam! 538 |     fn emit_seq<F>(&mut self, len: usize, f: F) -> Result<(), IoError>
kablam!     |                               ^^^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:545:35
kablam!     |
kablam! 545 |     fn emit_seq_elt<F>(&mut self, idx: usize, f: F) -> Result<(), IoError>
kablam!     |                                   ^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:550:31
kablam!     |
kablam! 550 |     fn emit_map<F>(&mut self, len: usize, f: F) -> Result<(), IoError>
kablam!     |                               ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:550:43
kablam!     |
kablam! 550 |     fn emit_map<F>(&mut self, len: usize, f: F) -> Result<(), IoError>
kablam!     |                                           ^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:555:39
kablam!     |
kablam! 555 |     fn emit_map_elt_key<F>(&mut self, idx: usize, f: F) -> Result<(), IoError>
kablam!     |                                       ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:555:51
kablam!     |
kablam! 555 |     fn emit_map_elt_key<F>(&mut self, idx: usize, f: F) -> Result<(), IoError>
kablam!     |                                                   ^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:560:39
kablam!     |
kablam! 560 |     fn emit_map_elt_val<F>(&mut self, idx: usize, f: F) -> Result<(), IoError>
kablam!     |                                       ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:560:51
kablam!     |
kablam! 560 |     fn emit_map_elt_val<F>(&mut self, idx: usize, f: F) -> Result<(), IoError>
kablam!     |                                                   ^
kablam! 
kablam! warning: unused import: `Encodable`, #[warn(unused_imports)] on by default
kablam!    --> src/emit.rs:572:27
kablam!     |
kablam! 572 |     use rustc_serialize::{Encodable, Encoder};
kablam!     |                           ^^^^^^^^^
kablam! 
kablam! warning: unused import: `Encoder`, #[warn(unused_imports)] on by default
kablam!    --> src/emit.rs:572:38
kablam!     |
kablam! 572 |     use rustc_serialize::{Encodable, Encoder};
kablam!     |                                      ^^^^^^^
kablam! 
kablam! warning: field is never used: `options`, #[warn(dead_code)] on by default
kablam!    --> src/ast.rs:110:5
kablam!     |
kablam! 110 |     options: Options,
kablam!     |     ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: field is never used: `directives`, #[warn(dead_code)] on by default
kablam!    --> src/ast.rs:112:5
kablam!     |
kablam! 112 |     directives: Vec<Directive<'a>>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `pos`, #[warn(unused_variables)] on by default
kablam!    --> src/decode.rs:198:28
kablam!     |
kablam! 198 |             Node(A::Scalar(ref pos, _, _, ref val)) | Key(ref pos, ref val) => {
kablam!     |                            ^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/decode.rs:283:59
kablam!     |
kablam! 283 |     fn read_enum_variant_arg<T, F>(&mut self, idx: usize, mut f: F)
kablam!     |                                                           ^^^^^
kablam! 
kablam! warning: unused variable: `names`, #[warn(unused_variables)] on by default
kablam!    --> src/decode.rs:293:50
kablam!     |
kablam! 293 |     fn read_enum_struct_variant<T, F>(&mut self, names: &[&str], f: F)
kablam!     |                                                  ^^^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/decode.rs:293:66
kablam!     |
kablam! 293 |     fn read_enum_struct_variant<T, F>(&mut self, names: &[&str], f: F)
kablam!     |                                                                  ^
kablam! 
kablam! warning: unused import: `Decoder`, #[warn(unused_imports)] on by default
kablam!    --> src/decode.rs:549:38
kablam!     |
kablam! 549 |     use rustc_serialize::{Decodable, Decoder};
kablam!     |                                      ^^^^^^^
kablam! 
kablam! warning: unused variable: `warnings`, #[warn(unused_variables)] on by default
kablam!    --> src/validate.rs:743:19
kablam!     |
kablam! 743 |         let (ast, warnings) = parse(Rc::new("<inline text>".to_string()), body,
kablam!     |                   ^^^^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 13.83 secs
boom! running `docker rm -f 9844d861e3d1cc423dfc01c4ae349c609fd867be0e8b5e26f0744eb4863f4e1f`
blam! 9844d861e3d1cc423dfc01c4ae349c609fd867be0e8b5e26f0744eb4863f4e1f
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! def02e71ee40f16c47bef8e43706854f0f209bc27da1a31d800017a021cae231
boom! running `docker start -a def02e71ee40f16c47bef8e43706854f0f209bc27da1a31d800017a021cae231`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/quire-70459632cf6c697f
blam! 
blam! running 199 tests
blam! test decode::test::decode_map ... ok
blam! test decode::test::decode_list_error ... ok
blam! test decode::test::decode_list ... ok
blam! test chars::test_printable ... ok
blam! test decode::test::decode_option_no_key ... ok
blam! test decode::test::decode_option_none ... ok
blam! test decode::test::decode_option_some ... ok
blam! test decode::test::decode_path ... ok
blam! test decode::test::decode_path_map ... ok
blam! test decode::test::decode_struct ... ok
blam! test decode::test::test_enum_1 ... ok
blam! test decode::test::test_enum_2 ... ok
blam! test decode::test::test_enum_2_e ... ok
blam! test decode::test::test_enum_3 ... ok
blam! test decode::test::test_enum_4 ... ok
blam! test decode::test::test_enum_5 ... ok
blam! test decode::test::test_enum_map ... ok
blam! test decode::test::test_enum_map_flow ... ok
blam! test decode::test::test_enum_seq ... ok
blam! test decode::test::test_struct_items_tag ... ok
blam! test decode::test::test_enum_seq_flow ... ok
blam! test emit::test::encode_int ... ok
blam! test emit::test::encode_struct ... ok
blam! test emit::test::encode_seq ... ok
blam! test emit::test::test_empty ... ok
blam! test emit::test::test_map ... ok
blam! test emit::test::test_plain ... ok
blam! test emit::test::yaml_list ... ok
blam! test emit::test::yaml_map ... ok
blam! test emit::test::yaml_list_map ... ok
blam! test emit::test::yaml_list_tag ... ok
blam! test emit::test::yaml_map_list ... ok
blam! test emit::test::yaml_scalar ... ok
blam! test emit::test::yaml_map_map ... ok
blam! test emit::test::yaml_tag_map ... ok
blam! test emit::test::yaml_tag_list ... ok
blam! test emit::test::yaml_tag_map3 ... ok
blam! test emit::test::yaml_tag_null ... ok
blam! test json::test::indented_map ... ok
blam! test emit::test::yaml_tag_map2 ... ok
blam! test emit::test::yaml_tag_map_map ... ok
blam! test json::test::test_alias ... ok
blam! test json::test::test_combined ... ok
blam! test json::test::test_flow_list_1 ... ok
blam! test json::test::test_flow_list_2 ... ok
blam! test json::test::test_flow_list_3 ... ok
blam! test json::test::test_flow_list_4 ... ok
blam! test json::test::test_flow_map_1 ... ok
blam! test json::test::test_flow_list_5 ... ok
blam! test json::test::test_flow_map_2 ... ok
blam! test json::test::test_flow_map_4 ... ok
blam! test json::test::map_map ... ok
blam! test json::test::test_flow_map_5 ... ok
blam! test emit::test::yaml_tag_scalar ... ok
blam! test json::test::test_flow_map_3 ... ok
blam! test json::test::test_literal ... ok
blam! test json::test::test_flow_map_quotes_no_space ... ok
blam! test json::test::test_map_and_scalar ... ok
blam! test json::test::test_multiple_merge ... ok
blam! test json::test::test_multiple_alias_merge ... ok
blam! test json::test::test_nl2_quoted ... ok
blam! test json::test::test_merge1 ... ok
blam! test json::test::test_nl_dquoted ... ok
blam! test json::test::test_nl2_dquoted ... ok
blam! test json::test::test_nl2_plain ... ok
blam! test json::test::test_nl_quoted ... ok
blam! test json::test::test_nl_plain ... ok
blam! test json::test::test_nl_slash_middle_dquoted ... ok
blam! test json::test::test_nl_slash_dquoted ... ok
blam! test json::test::test_no_merge1 ... ok
blam! test json::test::test_slash_dquoted ... ok
blam! test json::test::test_slash_dquoted_nospace ... ok
blam! test json::test::test_slash_middle_dquoted ... ok
blam! test json::test::test_to_json_list_1 ... ok
blam! test json::test::test_to_json_1 ... ok
blam! test json::test::test_to_json_1level ... ok
blam! test json::test::test_to_json_list_4 ... ok
blam! test json::test::test_to_json_list_5 ... ok
blam! test json::test::test_to_json_list_2 ... ok
blam! test json::test::test_to_json_list_3 ... ok
blam! test json::test::test_to_json_list_7 ... ok
blam! test json::test::test_to_json_list_8 ... ok
blam! test json::test::test_to_json_list_6 ... ok
blam! test json::test::test_to_json_list_map ... ok
blam! test json::test::test_to_json_list_map2 ... ok
blam! test json::test::test_to_json_map1 ... ok
blam! test json::test::test_to_json_map3 ... ok
blam! test json::test::test_to_json_map2 ... ok
blam! test json::test::test_to_json_list_map3 ... ok
blam! test json::test::test_to_json_map4 ... ok
blam! test json::test::test_to_json_map_list_1 ... ok
blam! test json::test::test_to_json_map5 ... ok
blam! test json::test::test_to_json_nested_2 ... ok
blam! test json::test::test_to_json_map_list_2 ... ok
blam! test json::test::test_to_json_str_1_sq ... ok
blam! test json::test::test_to_json_nested ... ok
blam! test json::test::test_to_json_str_quoted ... ok
blam! test json::test::test_to_json_str ... ok
blam! test json::test::test_to_json_str_apos ... ok
blam! test json::test::test_to_json_str_1_dq ... ok
blam! test json::test::test_to_json_two_keys ... ok
blam! test json::test::yaml_literal_with_empty_line_in_a_list ... ok
blam! test json::test::yaml_literal_in_list ... ok
blam! test json::test::yaml_words_in_list ... ok
blam! test json::test::yaml_words_with_space ... ok
blam! test test_errors::test_unknown_alias ... ok
blam! test test_errors::test_path ... ok
blam! test json::test::test_to_json_two_nested ... ok
blam! test tokenizer::test_bad_char_ctl ... ok
blam! test tokenizer::test_anchor ... ok
blam! test tokenizer::test_alias ... ok
blam! test tokenizer::test_bad_char_tab ... ok
blam! test tokenizer::test_bad_char_tab2 ... ok
blam! test test_errors::test_unknown_alias_flow ... ok
blam! test tokenizer::test_bad_char_tab4 ... ok
blam! test tokenizer::test_bad_char_tab3 ... ok
blam! test tokenizer::test_block_flow ... ok
blam! test tokenizer::test_block ... ok
blam! test tokenizer::test_block_in_list ... ok
blam! test tokenizer::test_comment ... ok
blam! test tokenizer::test_double_quoted ... ok
blam! test tokenizer::test_directive ... ok
blam! test tokenizer::test_flow_list ... ok
blam! test tokenizer::test_flow_map_map ... ok
blam! test tokenizer::test_list ... ok
blam! test tokenizer::test_flow_map_json ... ok
blam! test tokenizer::test_list_map ... ok
blam! test tokenizer::test_list_tag ... ok
blam! test tokenizer::test_map_key ... ok
blam! test tokenizer::test_nested ... ok
blam! test tokenizer::test_plain1 ... ok
blam! test tokenizer::test_map_map ... ok
blam! test tokenizer::test_map_value ... ok
blam! test tokenizer::test_plain2 ... ok
blam! test tokenizer::test_plain4 ... ok
blam! test tokenizer::test_plain3 ... ok
blam! test tokenizer::test_plain5 ... ok
blam! test tokenizer::test_plain8 ... ok
blam! test tokenizer::test_plain6 ... ok
blam! test tokenizer::test_plain7 ... ok
blam! test tokenizer::test_plain_words ... ok
blam! test tokenizer::test_plain_scalar_braces ... ok
blam! test tokenizer::test_single_quoted ... ok
blam! test tokenizer::test_tag ... ok
blam! test tokenizer::test_reserved ... ok
blam! test tokenizer::test_tokenize_map ... ok
blam! test tokenizer::test_tokenize_map_two_nulls ... ok
blam! test tokenizer::test_tag_map_flow ... ok
blam! test tokenizer::test_tag_map ... ok
blam! test tokenizer::test_words_in_list ... ok
blam! test validate::test::test_all_fields ... ok
blam! test validate::test::test_cmap_2 ... ok
blam! test validate::test::test_dash_str ... ok
blam! test validate::test::test_cmap_1 ... ok
blam! test validate::test::test_cmap_3 ... ok
blam! test validate::test::test_enum_1 ... ok
blam! test validate::test::test_enum_2 ... ok
blam! test validate::test::test_enum_3 ... ok
blam! test validate::test::test_additional_keys ... ok
blam! test validate::test::test_enum_4 ... ok
blam! test validate::test::test_enum_7 ... ok
blam! test validate::test::test_enum_opt_struct ... ok
blam! test validate::test::test_enum_5 ... ok
blam! test validate::test::test_enum_opt_struct_2 ... ok
blam! test validate::test::test_enum_6 ... ok
blam! test validate::test::test_enum_list_null ... ok
blam! test validate::test::test_enum_opt_struct_3 ... ok
blam! test validate::test::test_enum_str ... ok
blam! val: 
blam! 
blam! test validate::test::test_enum_val_none ... ok
blam! test validate::test::test_hash_map ... ok
blam! val: !Epsilon
blam! test validate::test::test_map_1 ... ok
blam! test validate::test::test_map_empty ... ok
blam! test validate::test::test_enum_val_some ... ok
blam! test validate::test::test_map_null ... ok
blam! test validate::test::test_map_2 ... ok
blam! test validate::test::test_only_str ... ok
blam! test validate::test::test_numeric ... ok
blam! test validate::test::test_only_int ... ok
blam! test validate::test::test_opt_no_key ... ok
blam! test validate::test::test_opt_val ... ok
blam! test validate::test::test_opt_none ... ok
blam! test validate::test::test_no_fields ... ok
blam! test validate::test::test_path_abs ... ok
blam! test validate::test::test_path_abs_abs ... ok
blam! test validate::test::test_path_abs_rel ... ok
blam! test validate::test::test_path_down ... ok
blam! test validate::test::test_path_down_rel ... ok
blam! test validate::test::test_path_null ... ok
blam! test validate::test::test_path_rel ... ok
blam! test validate::test::test_path_rel_rel ... ok
blam! test validate::test::test_path_down_abs ... ok
blam! test validate::test::test_path_rel_abs ... ok
blam! test validate::test::test_seq_empty ... ok
blam! test validate::test::test_seq_1 ... ok
blam! test validate::test::test_seq_2 ... ok
blam! test validate::test::test_underscore_keys ... ok
blam! test validate::test::test_seq_null ... ok
blam! test validate::test::test_unit ... ok
blam! test validate::test::test_underscore_str ... ok
blam! 
blam! test result: ok. 199 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests quire
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f def02e71ee40f16c47bef8e43706854f0f209bc27da1a31d800017a021cae231`
blam! def02e71ee40f16c47bef8e43706854f0f209bc27da1a31d800017a021cae231
