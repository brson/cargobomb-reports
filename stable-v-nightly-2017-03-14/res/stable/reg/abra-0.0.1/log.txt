boom! testing abra-0.0.1 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! afaddda408811546e807feecd2d5687c9cfdac8b1f35027c6fe60db884373a2c
boom! running `docker start -a afaddda408811546e807feecd2d5687c9cfdac8b1f35027c6fe60db884373a2c`
kablam!    Compiling maplit v0.1.4
kablam!    Compiling unicode-segmentation v1.1.0
kablam!    Compiling time v0.1.36
kablam!    Compiling num-bigint v0.1.37
kablam!    Compiling num-iter v0.1.33
kablam!    Compiling log v0.3.7
kablam!    Compiling byteorder v0.5.3
kablam!    Compiling num-complex v0.1.36
kablam!    Compiling num-rational v0.1.36
kablam!    Compiling num v0.1.37
kablam!    Compiling roaring v0.4.2
kablam!    Compiling chrono v0.2.25
kablam!    Compiling abra v0.0.1 (file:///source)
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> src/analysis/tokenizers/standard.rs:28:18
kablam!    |
kablam! 28 |             Some(mut word) => {
kablam!    |                  ^^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> src/analysis/filters/ngram.rs:41:29
kablam!    |
kablam! 41 |                         let mut ngram_generator = NGramGenerator::new(&word, self.min_size, self.max_size, self.edge);
kablam!    |                             ^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: variant `TF_IDF` should have a camel case name such as `TfIdf`, #[warn(non_camel_case_types)] on by default
kablam!  --> src/similarity.rs:3:5
kablam!   |
kablam! 3 |     TF_IDF,
kablam!   |     ^^^^^^
kablam! 
kablam! warning: unused variable: `scorer`, #[warn(unused_variables)] on by default
kablam!    --> src/query/mod.rs:123:64
kablam!     |
kablam! 123 |             Query::MatchTerm{ref field, ref term, ref matcher, ref scorer} => {
kablam!     |                                                                ^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `boost`, #[warn(unused_variables)] on by default
kablam!    --> src/query/mod.rs:182:37
kablam!     |
kablam! 182 |             Query::Boost{ref query, boost} => {
kablam!     |                                     ^^^^^
kablam! 
kablam! warning: unused variable: `scorer`, #[warn(unused_variables)] on by default
kablam!    --> src/query_set.rs:227:60
kablam!     |
kablam! 227 |         Query::MatchTerm{ref field, ref term, ref matcher, ref scorer} => {
kablam!     |                                                            ^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `queries`, #[warn(unused_variables)] on by default
kablam!    --> src/query_set.rs:320:29
kablam!     |
kablam! 320 |         Query::NDisjunction{ref queries, minimum_should_match} => {
kablam!     |                             ^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `minimum_should_match`, #[warn(unused_variables)] on by default
kablam!    --> src/query_set.rs:320:42
kablam!     |
kablam! 320 |         Query::NDisjunction{ref queries, minimum_should_match} => {
kablam!     |                                          ^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `boost`, #[warn(unused_variables)] on by default
kablam!    --> src/query_set.rs:351:33
kablam!     |
kablam! 351 |         Query::Boost{ref query, boost} => {
kablam!     |                                 ^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> src/request.rs:21:13
kablam!    |
kablam! 21 |         let mut iterator = build_iterator_from_query(index_reader, &self.query);
kablam!    |             ^^^^^^^^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 14.1 secs
boom! running `docker rm -f afaddda408811546e807feecd2d5687c9cfdac8b1f35027c6fe60db884373a2c`
blam! afaddda408811546e807feecd2d5687c9cfdac8b1f35027c6fe60db884373a2c
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 4371e067bf098b622e98e7cddf242e34b6ab45b5a34ca027d60093ba151c0002
boom! running `docker start -a 4371e067bf098b622e98e7cddf242e34b6ab45b5a34ca027d60093ba151c0002`
kablam!    Compiling abra v0.0.1 (file:///source)
kablam! warning: unused import: `term::Term`, #[warn(unused_imports)] on by default
kablam!    --> src/analysis/ngram_generator.rs:120:9
kablam!     |
kablam! 120 |     use term::Term;
kablam!     |         ^^^^^^^^^^
kablam! 
kablam! warning: unused import: `token::Token`, #[warn(unused_imports)] on by default
kablam!    --> src/analysis/ngram_generator.rs:121:9
kablam!     |
kablam! 121 |     use token::Token;
kablam!     |         ^^^^^^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> src/analysis/tokenizers/standard.rs:28:18
kablam!    |
kablam! 28 |             Some(mut word) => {
kablam!    |                  ^^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> src/analysis/filters/ngram.rs:41:29
kablam!    |
kablam! 41 |                         let mut ngram_generator = NGramGenerator::new(&word, self.min_size, self.max_size, self.edge);
kablam!    |                             ^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `MemoryIndexStoreReader`, #[warn(unused_imports)] on by default
kablam!    --> src/store/memory.rs:237:35
kablam!     |
kablam! 237 |     use super::{MemoryIndexStore, MemoryIndexStoreReader};
kablam!     |                                   ^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: variant `TF_IDF` should have a camel case name such as `TfIdf`, #[warn(non_camel_case_types)] on by default
kablam!  --> src/similarity.rs:3:5
kablam!   |
kablam! 3 |     TF_IDF,
kablam!   |     ^^^^^^
kablam! 
kablam! warning: unused variable: `scorer`, #[warn(unused_variables)] on by default
kablam!    --> src/query/mod.rs:123:64
kablam!     |
kablam! 123 |             Query::MatchTerm{ref field, ref term, ref matcher, ref scorer} => {
kablam!     |                                                                ^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `boost`, #[warn(unused_variables)] on by default
kablam!    --> src/query/mod.rs:182:37
kablam!     |
kablam! 182 |             Query::Boost{ref query, boost} => {
kablam!     |                                     ^^^^^
kablam! 
kablam! warning: unused variable: `scorer`, #[warn(unused_variables)] on by default
kablam!    --> src/query_set.rs:227:60
kablam!     |
kablam! 227 |         Query::MatchTerm{ref field, ref term, ref matcher, ref scorer} => {
kablam!     |                                                            ^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `queries`, #[warn(unused_variables)] on by default
kablam!    --> src/query_set.rs:320:29
kablam!     |
kablam! 320 |         Query::NDisjunction{ref queries, minimum_should_match} => {
kablam!     |                             ^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `minimum_should_match`, #[warn(unused_variables)] on by default
kablam!    --> src/query_set.rs:320:42
kablam!     |
kablam! 320 |         Query::NDisjunction{ref queries, minimum_should_match} => {
kablam!     |                                          ^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `boost`, #[warn(unused_variables)] on by default
kablam!    --> src/query_set.rs:351:33
kablam!     |
kablam! 351 |         Query::Boost{ref query, boost} => {
kablam!     |                                 ^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> src/request.rs:21:13
kablam!    |
kablam! 21 |         let mut iterator = build_iterator_from_query(index_reader, &self.query);
kablam!    |             ^^^^^^^^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 6.69 secs
boom! running `docker rm -f 4371e067bf098b622e98e7cddf242e34b6ab45b5a34ca027d60093ba151c0002`
blam! 4371e067bf098b622e98e7cddf242e34b6ab45b5a34ca027d60093ba151c0002
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! b1a3d7e71712af645d5f62960ed16b4ec98347afdb366e46301cb9a366b7cc06
boom! running `docker start -a b1a3d7e71712af645d5f62960ed16b4ec98347afdb366e46301cb9a366b7cc06`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/abra-4a0b5dc0dfca334f
blam! 
blam! running 50 tests
blam! test analysis::filters::asciifolding::tests::test_simple ... ok
blam! test analysis::filters::asciifolding::tests::test_hiragana_not_changed ... ok
blam! test analysis::filters::ngram::tests::test_edgengram_filter_max_size ... ok
blam! test analysis::filters::lowercase::tests::test_lowercase_filter ... ok
blam! test analysis::filters::lowercase::tests::test_lowercase_filter_cjk ... ok
blam! test analysis::filters::ngram::tests::test_edgengram_filter_right ... ok
blam! test analysis::filters::ngram::tests::test_edgengram_filter ... ok
blam! test analysis::lucene_asciifold::tests::test_hiragana_not_changed ... ok
blam! test analysis::filters::ngram::tests::test_ngram_filter ... ok
blam! test analysis::lucene_asciifold::tests::test_grapheme_clusters_keep ... ok
blam! test analysis::lucene_asciifold::tests::test_simple ... ok
blam! test analysis::lucene_asciifold::tests::test_normalise_superscript ... ok
blam! test analysis::lucene_asciifold::tests::test_normalise_width_variants ... ok
blam! test analysis::ngram_generator::tests::test_ngram ... ok
blam! test analysis::ngram_generator::tests::test_ngram_blank_string ... ok
blam! test analysis::ngram_generator::tests::test_ngram_high_size ... ok
blam! test analysis::ngram_generator::tests::test_ngram_cjk ... ok
blam! test analysis::ngram_generator::tests::test_ngram_invalid_size ... ok
blam! test analysis::ngram_generator::tests::test_ngram_zero_size ... ok
blam! test analysis::tokenizers::ngram::tests::test_edgengram_tokenizer ... ok
blam! test analysis::ngram_generator::tests::test_ngram_graphemes ... ok
blam! test analysis::ngram_generator::tests::test_ngram_left_edge ... ok
blam! test analysis::ngram_generator::tests::test_ngram_right_edge ... ok
blam! test analysis::tokenizers::ngram::tests::test_edgengram_tokenizer_max_size ... ok
blam! test analysis::tokenizers::standard::tests::test_standard_tokenizer_cjk ... ok
blam! test analysis::tokenizers::ngram::tests::test_ngram_tokenizer ... ok
blam! test analysis::tokenizers::ngram::tests::test_edgengram_tokenizer_right ... ok
blam! test similarity::tests::test_bm25_higher_term_freq_increases_score ... ok
blam! test similarity::tests::test_bm25_lower_field_length_increases_score ... ok
blam! test similarity::tests::test_bm25_higher_total_tokens_increases_score ... ok
blam! test similarity::tests::test_tf_idf_higher_term_freq_increases_score ... ok
blam! test similarity::tests::test_tf_idf_field_length_doesnt_affect_score ... ok
blam! test similarity::tests::test_bm25_lower_term_docs_increases_score ... ok
blam! test analysis::tokenizers::standard::tests::test_standard_tokenizer ... ok
blam! test store::memory::tests::test_all_docs_iterator ... ok
blam! test store::memory::tests::test_num_docs ... ok
blam! test similarity::tests::test_tf_idf_total_tokens_doesnt_affect_score ... ok
blam! test similarity::tests::test_tf_idf_lower_term_docs_increases_score ... ok
blam! test term::tests::test_blank_string_to_bytes ... ok
blam! test term::tests::test_boolean_false_to_bytes ... ok
blam! test term::tests::test_datetime_with_different_timezone_to_bytes ... ok
blam! test term::tests::test_datetime_with_microseconds_to_bytes ... ok
blam! test term::tests::test_hiragana_string_to_bytes ... ok
blam! test term::tests::test_i64_to_bytes ... ok
blam! test term::tests::test_negative_i64_to_bytes ... ok
blam! test term::tests::test_string_to_bytes ... ok
blam! test term::tests::test_u64_to_bytes ... ok
blam! test store::memory::tests::test_term_docs_iterator ... ok
blam! test term::tests::test_datetime_to_bytes ... ok
blam! test term::tests::test_boolean_true_to_bytes ... ok
blam! 
blam! test result: ok. 50 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests abra
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f b1a3d7e71712af645d5f62960ed16b4ec98347afdb366e46301cb9a366b7cc06`
blam! b1a3d7e71712af645d5f62960ed16b4ec98347afdb366e46301cb9a366b7cc06
