boom! testing https://github.com/NamsooCho/search#50eb2213f8b67fb501e7622527d47d3f6fcb678d against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! dbe6e7591be6cb73abdda1a44f544226af88ff9808891e6876858ad3ce2b463a
boom! running `docker start -a dbe6e7591be6cb73abdda1a44f544226af88ff9808891e6876858ad3ce2b463a`
kablam!    Compiling search v0.1.0 (file:///source)
kablam! warning: struct is never used: `DNS`
kablam!   --> src/http_socket_thread.rs:9:1
kablam!    |
kablam! 9  |   struct DNS {
kablam!    |  _^ starting here...
kablam! 10 | |
kablam! 11 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_sock_addr`
kablam!   --> src/http_socket_thread.rs:22:5
kablam!    |
kablam! 22 |     fn get_sock_addr (host: &str, port: &str) {}
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `host`
kablam!   --> src/http_socket_thread.rs:22:23
kablam!    |
kablam! 22 |     fn get_sock_addr (host: &str, port: &str) {}
kablam!    |                       ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `port`
kablam!   --> src/http_socket_thread.rs:22:35
kablam!    |
kablam! 22 |     fn get_sock_addr (host: &str, port: &str) {}
kablam!    |                                   ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/http_socket_thread.rs:27:13
kablam!    |
kablam! 27 |         let mut sock = HttpSocketThread{continue_: true, url_q: SyncQ::new(), output_: "".to_string(), redir_history: Vec::new()};
kablam!    |             ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `ret`
kablam!   --> src/http_socket_thread.rs:57:13
kablam!    |
kablam! 57 |         let ret: bool = false;
kablam!    |             ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/http_socket_thread.rs:64:17
kablam!    |
kablam! 64 |             let mut tcp_s = TcpStream::connect ((ip, url.port_));
kablam!    |                 ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `tcp_s`
kablam!   --> src/http_socket_thread.rs:64:17
kablam!    |
kablam! 64 |             let mut tcp_s = TcpStream::connect ((ip, url.port_));
kablam!    |                 ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `send_data`
kablam!   --> src/http_socket_thread.rs:65:17
kablam!    |
kablam! 65 |             let send_data = self.make_http_header ("a", "b", "c");
kablam!    |                 ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/http_socket_thread.rs:86:21
kablam!    |
kablam! 86 |                 let mut out_file = match File::create(&out_path) {
kablam!    |                     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `out_file`
kablam!   --> src/http_socket_thread.rs:86:21
kablam!    |
kablam! 86 |                 let mut out_file = match File::create(&out_path) {
kablam!    |                     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused import: `std::ops::BitAnd`
kablam!  --> src/url_parser.rs:2:5
kablam!   |
kablam! 2 | use std::ops::BitAnd;
kablam!   |     ^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: method is never used: `new`
kablam!   --> src/url_parser.rs:29:5
kablam!    |
kablam! 29 |     pub fn new () -> Url {
kablam!    |     ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `swap`
kablam!   --> src/url_parser.rs:78:5
kablam!    |
kablam! 78 |       fn swap<'a> (&'a mut self, other: &'a mut Url) {
kablam!    |  _____^ starting here...
kablam! 79 | |         mem::swap (self, other);
kablam! 80 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_element`
kablam!   --> src/url_parser.rs:82:5
kablam!    |
kablam! 82 |     fn get_element (&self, url: &mut String, element: &mut String, c: char) {
kablam!    |     ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `parse`
kablam!    --> src/url_parser.rs:94:5
kablam!     |
kablam! 94  |     fn parse (&self, url: &mut String, url_composer: &mut Url) -> bool {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `q_limit`
kablam!   --> src/main.rs:16:5
kablam!    |
kablam! 16 |     q_limit: u32,
kablam!    |     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `seed`
kablam!   --> src/main.rs:17:5
kablam!    |
kablam! 17 |     seed: String,
kablam!    |     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `out_dir`
kablam!   --> src/main.rs:18:5
kablam!    |
kablam! 18 |     out_dir: String,
kablam!    |     ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `timeout`
kablam!   --> src/main.rs:19:5
kablam!    |
kablam! 19 |     timeout: u32,
kablam!    |     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/main.rs:30:9
kablam!    |
kablam! 30 |     let mut i = 0;
kablam!    |         ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `i`
kablam!   --> src/main.rs:30:9
kablam!    |
kablam! 30 |     let mut i = 0;
kablam!    |         ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `i`
kablam!   --> src/main.rs:89:9
kablam!    |
kablam! 89 |     for i in 0..arg.sock_cnt {
kablam!    |         ^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.85 secs
boom! running `docker rm -f dbe6e7591be6cb73abdda1a44f544226af88ff9808891e6876858ad3ce2b463a`
blam! dbe6e7591be6cb73abdda1a44f544226af88ff9808891e6876858ad3ce2b463a
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! c04e1794e8e19966c9300ed8b6a02f291d2e42f2c251932bfdc298a5d42cd932
boom! running `docker start -a c04e1794e8e19966c9300ed8b6a02f291d2e42f2c251932bfdc298a5d42cd932`
kablam!    Compiling search v0.1.0 (file:///source)
kablam! warning: struct is never used: `DNS`
kablam!   --> src/http_socket_thread.rs:9:1
kablam!    |
kablam! 9  |   struct DNS {
kablam!    |  _^ starting here...
kablam! 10 | |
kablam! 11 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_sock_addr`
kablam!   --> src/http_socket_thread.rs:22:5
kablam!    |
kablam! 22 |     fn get_sock_addr (host: &str, port: &str) {}
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `host`
kablam!   --> src/http_socket_thread.rs:22:23
kablam!    |
kablam! 22 |     fn get_sock_addr (host: &str, port: &str) {}
kablam!    |                       ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `port`
kablam!   --> src/http_socket_thread.rs:22:35
kablam!    |
kablam! 22 |     fn get_sock_addr (host: &str, port: &str) {}
kablam!    |                                   ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/http_socket_thread.rs:27:13
kablam!    |
kablam! 27 |         let mut sock = HttpSocketThread{continue_: true, url_q: SyncQ::new(), output_: "".to_string(), redir_history: Vec::new()};
kablam!    |             ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `ret`
kablam!   --> src/http_socket_thread.rs:57:13
kablam!    |
kablam! 57 |         let ret: bool = false;
kablam!    |             ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/http_socket_thread.rs:64:17
kablam!    |
kablam! 64 |             let mut tcp_s = TcpStream::connect ((ip, url.port_));
kablam!    |                 ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `tcp_s`
kablam!   --> src/http_socket_thread.rs:64:17
kablam!    |
kablam! 64 |             let mut tcp_s = TcpStream::connect ((ip, url.port_));
kablam!    |                 ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `send_data`
kablam!   --> src/http_socket_thread.rs:65:17
kablam!    |
kablam! 65 |             let send_data = self.make_http_header ("a", "b", "c");
kablam!    |                 ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/http_socket_thread.rs:86:21
kablam!    |
kablam! 86 |                 let mut out_file = match File::create(&out_path) {
kablam!    |                     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `out_file`
kablam!   --> src/http_socket_thread.rs:86:21
kablam!    |
kablam! 86 |                 let mut out_file = match File::create(&out_path) {
kablam!    |                     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused import: `std::ops::BitAnd`
kablam!  --> src/url_parser.rs:2:5
kablam!   |
kablam! 2 | use std::ops::BitAnd;
kablam!   |     ^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: method is never used: `new`
kablam!   --> src/url_parser.rs:29:5
kablam!    |
kablam! 29 |     pub fn new () -> Url {
kablam!    |     ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `swap`
kablam!   --> src/url_parser.rs:78:5
kablam!    |
kablam! 78 |       fn swap<'a> (&'a mut self, other: &'a mut Url) {
kablam!    |  _____^ starting here...
kablam! 79 | |         mem::swap (self, other);
kablam! 80 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_element`
kablam!   --> src/url_parser.rs:82:5
kablam!    |
kablam! 82 |     fn get_element (&self, url: &mut String, element: &mut String, c: char) {
kablam!    |     ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `parse`
kablam!    --> src/url_parser.rs:94:5
kablam!     |
kablam! 94  |     fn parse (&self, url: &mut String, url_composer: &mut Url) -> bool {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `q_limit`
kablam!   --> src/main.rs:16:5
kablam!    |
kablam! 16 |     q_limit: u32,
kablam!    |     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `seed`
kablam!   --> src/main.rs:17:5
kablam!    |
kablam! 17 |     seed: String,
kablam!    |     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `out_dir`
kablam!   --> src/main.rs:18:5
kablam!    |
kablam! 18 |     out_dir: String,
kablam!    |     ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `timeout`
kablam!   --> src/main.rs:19:5
kablam!    |
kablam! 19 |     timeout: u32,
kablam!    |     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/main.rs:30:9
kablam!    |
kablam! 30 |     let mut i = 0;
kablam!    |         ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `i`
kablam!   --> src/main.rs:30:9
kablam!    |
kablam! 30 |     let mut i = 0;
kablam!    |         ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `i`
kablam!   --> src/main.rs:89:9
kablam!    |
kablam! 89 |     for i in 0..arg.sock_cnt {
kablam!    |         ^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.90 secs
boom! running `docker rm -f c04e1794e8e19966c9300ed8b6a02f291d2e42f2c251932bfdc298a5d42cd932`
blam! c04e1794e8e19966c9300ed8b6a02f291d2e42f2c251932bfdc298a5d42cd932
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 84fce63750a43a71d945b15d73748d0f2e48892a40def64230cf7f78eb26a276
boom! running `docker start -a 84fce63750a43a71d945b15d73748d0f2e48892a40def64230cf7f78eb26a276`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/search-c4d098d54cf1f555
boom! running `docker rm -f 84fce63750a43a71d945b15d73748d0f2e48892a40def64230cf7f78eb26a276`
blam! 84fce63750a43a71d945b15d73748d0f2e48892a40def64230cf7f78eb26a276
