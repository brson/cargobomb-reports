boom! testing https://github.com/tjefferson08/rustcraft#e14754219782ecd25b7cb5cc5303c47d887d7949 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 908f1ad471b0122d8b5af3710c84a21171f8b42375ffda728f19cd9b6785e74d
boom! running `docker start -a 908f1ad471b0122d8b5af3710c84a21171f8b42375ffda728f19cd9b6785e74d`
kablam!    Compiling cgmath v0.12.0
kablam!    Compiling rustcraft v0.1.0 (file:///source)
kablam! warning: variable does not need to be mutable
kablam!   --> src/application.rs:29:13
kablam!    |
kablam! 29 |         let mut last_mouse = (0, 0);
kablam!    |             ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `last_mouse`
kablam!   --> src/application.rs:29:13
kablam!    |
kablam! 29 |         let mut last_mouse = (0, 0);
kablam!    |             ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: value assigned to `current_mouse` is never read
kablam!   --> src/application.rs:30:13
kablam!    |
kablam! 30 |         let mut current_mouse = (0, 0);
kablam!    |             ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: method is never used: `pop_state`
kablam!    --> src/application.rs:99:5
kablam!     |
kablam! 99  |       pub fn pop_state(&mut self) -> () {
kablam!     |  _____^ starting here...
kablam! 100 | |         self.state_stack.pop();
kablam! 101 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/window.rs:23:9
kablam!    |
kablam! 23 |         w.display.get_window().unwrap().set_cursor_state(glutin::CursorState::Hide);
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/window.rs:24:9
kablam!    |
kablam! 24 |         w.display.get_window().unwrap().set_cursor_position(WIDTH as i32 / 2, HEIGHT as i32 / 2);
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/window.rs:29:9
kablam!    |
kablam! 29 |           self.display.get_window()
kablam!    |  _________^ starting here...
kablam! 30 | |             .unwrap()
kablam! 31 | |             .set_cursor_position(WIDTH as i32 / 2, HEIGHT as i32 / 2);
kablam!    | |______________________________________________________________________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused import: `glium::glutin`
kablam!  --> src/game_state.rs:6:5
kablam!   |
kablam! 6 | use glium::glutin;
kablam!   |     ^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable `cubeN` should have a snake case name such as `cube_n`
kablam!   --> src/game_state.rs:32:13
kablam!    |
kablam! 32 |         let cubeN = Cube::from_position(Vector3::new(0.0, 0.0, -5.0));
kablam!    |             ^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `cubeS` should have a snake case name such as `cube_s`
kablam!   --> src/game_state.rs:33:13
kablam!    |
kablam! 33 |         let cubeS = Cube::from_position(Vector3::new(0.0, 0.0, 5.0));
kablam!    |             ^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `cubeE` should have a snake case name such as `cube_e`
kablam!   --> src/game_state.rs:34:13
kablam!    |
kablam! 34 |         let cubeE = Cube::from_position(Vector3::new(5.0, 0.0, 0.0));
kablam!    |             ^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `cubeW` should have a snake case name such as `cube_w`
kablam!   --> src/game_state.rs:35:13
kablam!    |
kablam! 35 |         let cubeW = Cube::from_position(Vector3::new(-5.0, 0.0, 0.0));
kablam!    |             ^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `delta_t`
kablam!   --> src/game_state.rs:63:47
kablam!    |
kablam! 63 |     fn process_event(&mut self, event: Event, delta_t: f32) -> () {
kablam!    |                                               ^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `speed`
kablam!   --> src/game_state.rs:64:13
kablam!    |
kablam! 64 |         let speed = 50.0;
kablam!    |             ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/game_state.rs:65:13
kablam!    |
kablam! 65 |         let mut w_event_count = 0;
kablam!    |             ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `w_event_count`
kablam!   --> src/game_state.rs:65:13
kablam!    |
kablam! 65 |         let mut w_event_count = 0;
kablam!    |             ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `delta_t`
kablam!    --> src/game_state.rs:166:26
kablam!     |
kablam! 166 |     fn update(&mut self, delta_t: f32) {
kablam!     |                          ^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/game_state.rs:167:13
kablam!     |
kablam! 167 |         for mut model in self.models.iter_mut() {
kablam!     |             ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `model`
kablam!    --> src/game_state.rs:167:13
kablam!     |
kablam! 167 |         for mut model in self.models.iter_mut() {
kablam!     |             ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `delta_t`
kablam!    --> src/game_state.rs:173:43
kablam!     |
kablam! 173 |     fn draw(&self, renderer: &mut Master, delta_t: f32) {
kablam!     |                                           ^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused import: `glium::uniforms::Sampler`
kablam!  --> src/renderer/mod.rs:9:5
kablam!   |
kablam! 9 | use glium::uniforms::Sampler;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused variable: `tex_coords_right`
kablam!   --> src/model/cube.rs:59:13
kablam!    |
kablam! 59 |         let tex_coords_right: TextureCoordinates = atlas.texture_coords_for(0, 1);
kablam!    |             ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `tex_coords_left`
kablam!   --> src/model/cube.rs:60:13
kablam!    |
kablam! 60 |         let tex_coords_left: TextureCoordinates = atlas.texture_coords_for(0, 1);
kablam!    |             ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `tex_coords_top`
kablam!   --> src/model/cube.rs:61:13
kablam!    |
kablam! 61 |         let tex_coords_top: TextureCoordinates = atlas.texture_coords_for(0, 0);
kablam!    |             ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `tex_coords_bottom`
kablam!   --> src/model/cube.rs:62:13
kablam!    |
kablam! 62 |         let tex_coords_bottom: TextureCoordinates = atlas.texture_coords_for(0, 2);
kablam!    |             ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `x_max`
kablam!   --> src/textures/mod.rs:43:13
kablam!    |
kablam! 43 |         let x_max = x_min + unit_size;
kablam!    |             ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `y_max`
kablam!   --> src/textures/mod.rs:44:13
kablam!    |
kablam! 44 |         let y_max = y_min + unit_size;
kablam!    |             ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: method is never used: `from_position`
kablam!   --> src/entity.rs:10:5
kablam!    |
kablam! 10 |       pub fn from_position(pos: (f32, f32, f32)) -> Entity {
kablam!    |  _____^ starting here...
kablam! 11 | |         Entity {
kablam! 12 | |             position: Vector3::new(pos.0, pos.1, pos.2),
kablam! 13 | |             rotation: Vector3::new(0.0, 0.0, 0.0)
kablam! 14 | |         }
kablam! 15 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `update_position`
kablam!   --> src/entity.rs:24:5
kablam!    |
kablam! 24 |       pub fn update_position(&mut self, delta_pos: Vector3<f32>) -> () {
kablam!    |  _____^ starting here...
kablam! 25 | |         self.position += delta_pos;
kablam! 26 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 13.55 secs
boom! running `docker rm -f 908f1ad471b0122d8b5af3710c84a21171f8b42375ffda728f19cd9b6785e74d`
blam! 908f1ad471b0122d8b5af3710c84a21171f8b42375ffda728f19cd9b6785e74d
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 974e51e0abd6c813d6824ae71dd7481c1517a334e8b97a09d1595c95444c0102
boom! running `docker start -a 974e51e0abd6c813d6824ae71dd7481c1517a334e8b97a09d1595c95444c0102`
kablam!    Compiling rustcraft v0.1.0 (file:///source)
kablam! warning: variable does not need to be mutable
kablam!   --> src/application.rs:29:13
kablam!    |
kablam! 29 |         let mut last_mouse = (0, 0);
kablam!    |             ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `last_mouse`
kablam!   --> src/application.rs:29:13
kablam!    |
kablam! 29 |         let mut last_mouse = (0, 0);
kablam!    |             ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: value assigned to `current_mouse` is never read
kablam!   --> src/application.rs:30:13
kablam!    |
kablam! 30 |         let mut current_mouse = (0, 0);
kablam!    |             ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: method is never used: `pop_state`
kablam!    --> src/application.rs:99:5
kablam!     |
kablam! 99  |       pub fn pop_state(&mut self) -> () {
kablam!     |  _____^ starting here...
kablam! 100 | |         self.state_stack.pop();
kablam! 101 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/window.rs:23:9
kablam!    |
kablam! 23 |         w.display.get_window().unwrap().set_cursor_state(glutin::CursorState::Hide);
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/window.rs:24:9
kablam!    |
kablam! 24 |         w.display.get_window().unwrap().set_cursor_position(WIDTH as i32 / 2, HEIGHT as i32 / 2);
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/window.rs:29:9
kablam!    |
kablam! 29 |           self.display.get_window()
kablam!    |  _________^ starting here...
kablam! 30 | |             .unwrap()
kablam! 31 | |             .set_cursor_position(WIDTH as i32 / 2, HEIGHT as i32 / 2);
kablam!    | |______________________________________________________________________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused import: `glium::glutin`
kablam!  --> src/game_state.rs:6:5
kablam!   |
kablam! 6 | use glium::glutin;
kablam!   |     ^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable `cubeN` should have a snake case name such as `cube_n`
kablam!   --> src/game_state.rs:32:13
kablam!    |
kablam! 32 |         let cubeN = Cube::from_position(Vector3::new(0.0, 0.0, -5.0));
kablam!    |             ^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `cubeS` should have a snake case name such as `cube_s`
kablam!   --> src/game_state.rs:33:13
kablam!    |
kablam! 33 |         let cubeS = Cube::from_position(Vector3::new(0.0, 0.0, 5.0));
kablam!    |             ^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `cubeE` should have a snake case name such as `cube_e`
kablam!   --> src/game_state.rs:34:13
kablam!    |
kablam! 34 |         let cubeE = Cube::from_position(Vector3::new(5.0, 0.0, 0.0));
kablam!    |             ^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `cubeW` should have a snake case name such as `cube_w`
kablam!   --> src/game_state.rs:35:13
kablam!    |
kablam! 35 |         let cubeW = Cube::from_position(Vector3::new(-5.0, 0.0, 0.0));
kablam!    |             ^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `delta_t`
kablam!   --> src/game_state.rs:63:47
kablam!    |
kablam! 63 |     fn process_event(&mut self, event: Event, delta_t: f32) -> () {
kablam!    |                                               ^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `speed`
kablam!   --> src/game_state.rs:64:13
kablam!    |
kablam! 64 |         let speed = 50.0;
kablam!    |             ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/game_state.rs:65:13
kablam!    |
kablam! 65 |         let mut w_event_count = 0;
kablam!    |             ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `w_event_count`
kablam!   --> src/game_state.rs:65:13
kablam!    |
kablam! 65 |         let mut w_event_count = 0;
kablam!    |             ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `delta_t`
kablam!    --> src/game_state.rs:166:26
kablam!     |
kablam! 166 |     fn update(&mut self, delta_t: f32) {
kablam!     |                          ^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/game_state.rs:167:13
kablam!     |
kablam! 167 |         for mut model in self.models.iter_mut() {
kablam!     |             ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `model`
kablam!    --> src/game_state.rs:167:13
kablam!     |
kablam! 167 |         for mut model in self.models.iter_mut() {
kablam!     |             ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `delta_t`
kablam!    --> src/game_state.rs:173:43
kablam!     |
kablam! 173 |     fn draw(&self, renderer: &mut Master, delta_t: f32) {
kablam!     |                                           ^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused import: `glium::uniforms::Sampler`
kablam!  --> src/renderer/mod.rs:9:5
kablam!   |
kablam! 9 | use glium::uniforms::Sampler;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused variable: `tex_coords_right`
kablam!   --> src/model/cube.rs:59:13
kablam!    |
kablam! 59 |         let tex_coords_right: TextureCoordinates = atlas.texture_coords_for(0, 1);
kablam!    |             ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `tex_coords_left`
kablam!   --> src/model/cube.rs:60:13
kablam!    |
kablam! 60 |         let tex_coords_left: TextureCoordinates = atlas.texture_coords_for(0, 1);
kablam!    |             ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `tex_coords_top`
kablam!   --> src/model/cube.rs:61:13
kablam!    |
kablam! 61 |         let tex_coords_top: TextureCoordinates = atlas.texture_coords_for(0, 0);
kablam!    |             ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `tex_coords_bottom`
kablam!   --> src/model/cube.rs:62:13
kablam!    |
kablam! 62 |         let tex_coords_bottom: TextureCoordinates = atlas.texture_coords_for(0, 2);
kablam!    |             ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `x_max`
kablam!   --> src/textures/mod.rs:43:13
kablam!    |
kablam! 43 |         let x_max = x_min + unit_size;
kablam!    |             ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `y_max`
kablam!   --> src/textures/mod.rs:44:13
kablam!    |
kablam! 44 |         let y_max = y_min + unit_size;
kablam!    |             ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: method is never used: `from_position`
kablam!   --> src/entity.rs:10:5
kablam!    |
kablam! 10 |       pub fn from_position(pos: (f32, f32, f32)) -> Entity {
kablam!    |  _____^ starting here...
kablam! 11 | |         Entity {
kablam! 12 | |             position: Vector3::new(pos.0, pos.1, pos.2),
kablam! 13 | |             rotation: Vector3::new(0.0, 0.0, 0.0)
kablam! 14 | |         }
kablam! 15 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `update_position`
kablam!   --> src/entity.rs:24:5
kablam!    |
kablam! 24 |       pub fn update_position(&mut self, delta_pos: Vector3<f32>) -> () {
kablam!    |  _____^ starting here...
kablam! 25 | |         self.position += delta_pos;
kablam! 26 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 6.72 secs
boom! running `docker rm -f 974e51e0abd6c813d6824ae71dd7481c1517a334e8b97a09d1595c95444c0102`
blam! 974e51e0abd6c813d6824ae71dd7481c1517a334e8b97a09d1595c95444c0102
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 37e18d71e2c10411fe8a75f0be00133252f5e7102ef36569ef8b477d69dc6f21
boom! running `docker start -a 37e18d71e2c10411fe8a75f0be00133252f5e7102ef36569ef8b477d69dc6f21`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/rustcraft-ef307dc704e79a23
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 37e18d71e2c10411fe8a75f0be00133252f5e7102ef36569ef8b477d69dc6f21`
blam! 37e18d71e2c10411fe8a75f0be00133252f5e7102ef36569ef8b477d69dc6f21
