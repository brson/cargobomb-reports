boom! testing https://github.com/Tomcc/streamingpattern#95d50c6c1f8f0e7451ad4033b637402c5525b830 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! d3e341dd3157336c314df0cc9a9b11550ab254eb3752850c9becedf049a50e7a
boom! running `docker start -a d3e341dd3157336c314df0cc9a9b11550ab254eb3752850c9becedf049a50e7a`
kablam!    Compiling siphasher v0.2.0
kablam!    Compiling num_cpus v1.2.1
kablam!    Compiling shared_library v0.1.5
kablam!    Compiling deque v0.3.1
kablam!    Compiling phf_shared v0.7.21
kablam!    Compiling x11-dl v2.12.0
kablam!    Compiling osmesa-sys v0.1.2
kablam!    Compiling rayon v0.6.0
kablam!    Compiling phf v0.7.21
kablam!    Compiling phf_generator v0.7.21
kablam!    Compiling phf_codegen v0.7.21
kablam!    Compiling fs2 v0.2.5
kablam!    Compiling memmap v0.4.0
kablam!    Compiling target_build_utils v0.1.2
kablam!    Compiling serde_json v0.8.6
kablam!    Compiling jpeg-decoder v0.1.11
kablam!    Compiling num-bigint v0.1.35
kablam!    Compiling pistoncore-input v0.15.0
kablam!    Compiling gfx_core v0.5.1
kablam!    Compiling libloading v0.3.1
kablam!    Compiling wayland-scanner v0.7.6
kablam!    Compiling num-rational v0.1.35
kablam!    Compiling image v0.12.1
kablam!    Compiling pistoncore-window v0.24.0
kablam!    Compiling pistoncore-event_loop v0.27.0
kablam!    Compiling piston v0.27.0
kablam!    Compiling dlib v0.3.1
kablam!    Compiling wayland-client v0.7.6
kablam!    Compiling wayland-sys v0.7.6
kablam!    Compiling gl_generator v0.5.2
kablam!    Compiling wayland-window v0.4.3
kablam!    Compiling gfx_gl v0.3.1
kablam!    Compiling gl v0.6.1
kablam!    Compiling glutin v0.7.2
kablam!    Compiling gfx v0.13.0
kablam!    Compiling gfx_device_gl v0.12.0
kablam!    Compiling wayland-kbd v0.6.2
kablam!    Compiling piston-gfx_texture v0.20.0
kablam!    Compiling winit v0.5.8
kablam!    Compiling piston2d-gfx_graphics v0.35.0
kablam!    Compiling piston2d-opengl_graphics v0.37.0
kablam!    Compiling pistoncore-glutin_window v0.33.0
kablam!    Compiling piston_window v0.61.0
kablam!    Compiling streamingpattern v0.1.0 (file:///source)
kablam! warning: unused import: `graphics::types::Color`
kablam!   --> src/main.rs:18:5
kablam!    |
kablam! 18 | use graphics::types::Color;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable `N` should have a snake case name such as `n`
kablam!   --> src/main.rs:26:56
kablam!    |
kablam! 26 |     fn from_area(image: &DynamicImage, x: u32, y: u32, N: u8) -> Self {
kablam!    |                                                        ^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `N` should have a snake case name such as `n`
kablam!   --> src/main.rs:27:13
kablam!    |
kablam! 27 |         let N = N as u32;
kablam!    |             ^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `sortedPatterns` should have a snake case name such as `sorted_patterns`
kablam!   --> src/main.rs:46:5
kablam!    |
kablam! 46 |     sortedPatterns: Vec<(u16, Pattern)>,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: field is never used: `allowed_patterns`
kablam!   --> src/main.rs:48:5
kablam!    |
kablam! 48 |     allowed_patterns: Vec<bool>,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variable `N` should have a snake case name such as `n`
kablam!   --> src/main.rs:52:58
kablam!    |
kablam! 52 |     fn from_path<P>(path: P, out_w: usize, out_h: usize, N: u8) -> Self where P:AsRef<Path>{
kablam!    |                                                          ^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `buffer`
kablam!   --> src/main.rs:79:15
kablam!    |
kablam! 79 | fn draw_state(buffer: &mut RgbaImage) {
kablam!    |               ^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `context`
kablam!    --> src/main.rs:112:9
kablam!     |
kablam! 112 |     let context = GenerationContext::from_path(input, result_w as usize, result_h as usize, N);
kablam!     |         ^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 161.46 secs
boom! running `docker rm -f d3e341dd3157336c314df0cc9a9b11550ab254eb3752850c9becedf049a50e7a`
blam! d3e341dd3157336c314df0cc9a9b11550ab254eb3752850c9becedf049a50e7a
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 7f49aa1e7ce7841ad3c9ad33f5e71e4abe6a0e1ffde4b8759c5a13b4b7994903
boom! running `docker start -a 7f49aa1e7ce7841ad3c9ad33f5e71e4abe6a0e1ffde4b8759c5a13b4b7994903`
kablam!    Compiling streamingpattern v0.1.0 (file:///source)
kablam! warning: unused import: `graphics::types::Color`
kablam!   --> src/main.rs:18:5
kablam!    |
kablam! 18 | use graphics::types::Color;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable `N` should have a snake case name such as `n`
kablam!   --> src/main.rs:26:56
kablam!    |
kablam! 26 |     fn from_area(image: &DynamicImage, x: u32, y: u32, N: u8) -> Self {
kablam!    |                                                        ^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `N` should have a snake case name such as `n`
kablam!   --> src/main.rs:27:13
kablam!    |
kablam! 27 |         let N = N as u32;
kablam!    |             ^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `sortedPatterns` should have a snake case name such as `sorted_patterns`
kablam!   --> src/main.rs:46:5
kablam!    |
kablam! 46 |     sortedPatterns: Vec<(u16, Pattern)>,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: field is never used: `allowed_patterns`
kablam!   --> src/main.rs:48:5
kablam!    |
kablam! 48 |     allowed_patterns: Vec<bool>,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variable `N` should have a snake case name such as `n`
kablam!   --> src/main.rs:52:58
kablam!    |
kablam! 52 |     fn from_path<P>(path: P, out_w: usize, out_h: usize, N: u8) -> Self where P:AsRef<Path>{
kablam!    |                                                          ^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `buffer`
kablam!   --> src/main.rs:79:15
kablam!    |
kablam! 79 | fn draw_state(buffer: &mut RgbaImage) {
kablam!    |               ^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `context`
kablam!    --> src/main.rs:112:9
kablam!     |
kablam! 112 |     let context = GenerationContext::from_path(input, result_w as usize, result_h as usize, N);
kablam!     |         ^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 8.12 secs
boom! running `docker rm -f 7f49aa1e7ce7841ad3c9ad33f5e71e4abe6a0e1ffde4b8759c5a13b4b7994903`
blam! 7f49aa1e7ce7841ad3c9ad33f5e71e4abe6a0e1ffde4b8759c5a13b4b7994903
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! f8edc3ba2451d3700012e27f879b2a129249eb690795ce7f68908a1803e6ce3f
boom! running `docker start -a f8edc3ba2451d3700012e27f879b2a129249eb690795ce7f68908a1803e6ce3f`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.1 secs
kablam!      Running /target/debug/deps/streamingpattern-30a9a3aca8c9c9e1
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f f8edc3ba2451d3700012e27f879b2a129249eb690795ce7f68908a1803e6ce3f`
blam! f8edc3ba2451d3700012e27f879b2a129249eb690795ce7f68908a1803e6ce3f
