boom! testing gfx_device_vulkan-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 8e81d3c91df4383384fbbbaabb72d3329fc0ce7fc67c1217ecd3f30fd0753166
boom! running `docker start -a 8e81d3c91df4383384fbbbaabb72d3329fc0ce7fc67c1217ecd3f30fd0753166`
kablam!    Compiling lalrpop-util v0.11.0
kablam!    Compiling vk v0.0.1
kablam!    Compiling spirv-utils v0.2.1
kablam!    Compiling gfx_device_vulkan v0.1.0 (file:///source)
kablam! warning: method is never used: `invalidate_mappings`
kablam!    --> src/command.rs:346:5
kablam!     |
kablam! 346 |     fn invalidate_mappings(&mut self, buffers: &[handle::RawBuffer<Resources>]) {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `mapping`
kablam!    --> src/command.rs:350:17
kablam!     |
kablam! 350 |             let mapping = buffer.lock_mapping().unwrap();
kablam!     |                 ^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: method is never used: `track_mapped_gpu_access`
kablam!    --> src/command.rs:365:5
kablam!     |
kablam! 365 |       fn track_mapped_gpu_access(&mut self,
kablam!     |  _____^ starting here...
kablam! 366 | |                                buffers: &[handle::RawBuffer<Resources>],
kablam! 367 | |                                fence: &handle::Fence<Resources>) {
kablam! 368 | |         for buffer in buffers {
kablam! 369 | |             // TODO: check if the lock needs to be kept longer
kablam! 370 | |             let mut mapping = buffer.lock_mapping().unwrap();
kablam! 371 | |             mapping.status.gpu_access(fence.clone());
kablam! 372 | |         }
kablam! 373 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `fence`
kablam!    --> src/command.rs:431:30
kablam!     |
kablam! 431 |     fn wait_fence(&mut self, fence: &handle::Fence<Self::Resources>) {
kablam!     |                              ^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: structure field `aspectMask` should have a snake case name such as `aspect_mask`
kablam!   --> src/native.rs:66:5
kablam!    |
kablam! 66 |     pub aspectMask: vk::ImageAspectFlags,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `baseMipLevel` should have a snake case name such as `base_mip_level`
kablam!   --> src/native.rs:67:5
kablam!    |
kablam! 67 |     pub baseMipLevel: u32,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `levelCount` should have a snake case name such as `level_count`
kablam!   --> src/native.rs:68:5
kablam!    |
kablam! 68 |     pub levelCount: u32,
kablam!    |     ^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `baseArrayLayer` should have a snake case name such as `base_array_layer`
kablam!   --> src/native.rs:69:5
kablam!    |
kablam! 69 |     pub baseArrayLayer: u32,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `layerCount` should have a snake case name such as `layer_count`
kablam!   --> src/native.rs:70:5
kablam!    |
kablam! 70 |     pub layerCount: u32,
kablam!    |     ^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: function is never used: `map_member_name_by_id`
kablam!   --> src/mirror.rs:63:1
kablam!    |
kablam! 63 | fn map_member_name_by_id<'a>(module: &'a spirv_utils::RawModule, id: desc::Id, member_id: u32) -> Option<&'a str> {
kablam!    | ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `map_member_decorations_by_id`
kablam!   --> src/mirror.rs:86:1
kablam!    |
kablam! 86 | fn map_member_decorations_by_id(module: &spirv_utils::RawModule, id: desc::Id, member_id: u32) -> Vec<instruction::Decoration> {
kablam!    | ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `Decoration`
kablam!    --> src/mirror.rs:127:36
kablam!     |
kablam! 127 |     use spirv_utils::instruction::{Decoration, Instruction};
kablam!     |                                    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused variable: `decoration`
kablam!    --> src/mirror.rs:157:17
kablam!     |
kablam! 157 |             let decoration = map_decorations_by_id(&module, result_type.into());
kablam!     |                 ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `decoration`
kablam!    --> src/mirror.rs:220:21
kablam!     |
kablam! 220 |                 let decoration = map_decorations_by_id(&module, result_id.into());
kablam!     |                     ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/mirror.rs:329:33
kablam!     |
kablam! 329 |                             let mut elements = Vec::new();
kablam!     |                                 ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `field`
kablam!    --> src/mirror.rs:330:33
kablam!     |
kablam! 330 |                             for field in fields {
kablam!     |                                 ^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 26.39 secs
boom! running `docker rm -f 8e81d3c91df4383384fbbbaabb72d3329fc0ce7fc67c1217ecd3f30fd0753166`
blam! 8e81d3c91df4383384fbbbaabb72d3329fc0ce7fc67c1217ecd3f30fd0753166
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 5180689fc134a54e545f4ccff70b3814d7edd7893516c54365a7e6701742f91f
boom! running `docker start -a 5180689fc134a54e545f4ccff70b3814d7edd7893516c54365a7e6701742f91f`
kablam!    Compiling gfx_device_vulkan v0.1.0 (file:///source)
kablam! warning: method is never used: `invalidate_mappings`
kablam!    --> src/command.rs:346:5
kablam!     |
kablam! 346 |     fn invalidate_mappings(&mut self, buffers: &[handle::RawBuffer<Resources>]) {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `mapping`
kablam!    --> src/command.rs:350:17
kablam!     |
kablam! 350 |             let mapping = buffer.lock_mapping().unwrap();
kablam!     |                 ^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: method is never used: `track_mapped_gpu_access`
kablam!    --> src/command.rs:365:5
kablam!     |
kablam! 365 |       fn track_mapped_gpu_access(&mut self,
kablam!     |  _____^ starting here...
kablam! 366 | |                                buffers: &[handle::RawBuffer<Resources>],
kablam! 367 | |                                fence: &handle::Fence<Resources>) {
kablam! 368 | |         for buffer in buffers {
kablam! 369 | |             // TODO: check if the lock needs to be kept longer
kablam! 370 | |             let mut mapping = buffer.lock_mapping().unwrap();
kablam! 371 | |             mapping.status.gpu_access(fence.clone());
kablam! 372 | |         }
kablam! 373 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `fence`
kablam!    --> src/command.rs:431:30
kablam!     |
kablam! 431 |     fn wait_fence(&mut self, fence: &handle::Fence<Self::Resources>) {
kablam!     |                              ^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: structure field `aspectMask` should have a snake case name such as `aspect_mask`
kablam!   --> src/native.rs:66:5
kablam!    |
kablam! 66 |     pub aspectMask: vk::ImageAspectFlags,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `baseMipLevel` should have a snake case name such as `base_mip_level`
kablam!   --> src/native.rs:67:5
kablam!    |
kablam! 67 |     pub baseMipLevel: u32,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `levelCount` should have a snake case name such as `level_count`
kablam!   --> src/native.rs:68:5
kablam!    |
kablam! 68 |     pub levelCount: u32,
kablam!    |     ^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `baseArrayLayer` should have a snake case name such as `base_array_layer`
kablam!   --> src/native.rs:69:5
kablam!    |
kablam! 69 |     pub baseArrayLayer: u32,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `layerCount` should have a snake case name such as `layer_count`
kablam!   --> src/native.rs:70:5
kablam!    |
kablam! 70 |     pub layerCount: u32,
kablam!    |     ^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: function is never used: `map_member_name_by_id`
kablam!   --> src/mirror.rs:63:1
kablam!    |
kablam! 63 | fn map_member_name_by_id<'a>(module: &'a spirv_utils::RawModule, id: desc::Id, member_id: u32) -> Option<&'a str> {
kablam!    | ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `map_member_decorations_by_id`
kablam!   --> src/mirror.rs:86:1
kablam!    |
kablam! 86 | fn map_member_decorations_by_id(module: &spirv_utils::RawModule, id: desc::Id, member_id: u32) -> Vec<instruction::Decoration> {
kablam!    | ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `Decoration`
kablam!    --> src/mirror.rs:127:36
kablam!     |
kablam! 127 |     use spirv_utils::instruction::{Decoration, Instruction};
kablam!     |                                    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused variable: `decoration`
kablam!    --> src/mirror.rs:157:17
kablam!     |
kablam! 157 |             let decoration = map_decorations_by_id(&module, result_type.into());
kablam!     |                 ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `decoration`
kablam!    --> src/mirror.rs:220:21
kablam!     |
kablam! 220 |                 let decoration = map_decorations_by_id(&module, result_id.into());
kablam!     |                     ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/mirror.rs:329:33
kablam!     |
kablam! 329 |                             let mut elements = Vec::new();
kablam!     |                                 ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `field`
kablam!    --> src/mirror.rs:330:33
kablam!     |
kablam! 330 |                             for field in fields {
kablam!     |                                 ^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 7.50 secs
boom! running `docker rm -f 5180689fc134a54e545f4ccff70b3814d7edd7893516c54365a7e6701742f91f`
blam! 5180689fc134a54e545f4ccff70b3814d7edd7893516c54365a7e6701742f91f
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 642e521e61868725bf601b22bebc311fdb4d57f793ef481c9d5ff2f127492a4d
boom! running `docker start -a 642e521e61868725bf601b22bebc311fdb4d57f793ef481c9d5ff2f127492a4d`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/gfx_device_vulkan-0179b02fe8da3d0b
kablam!    Doc-tests gfx_device_vulkan
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 642e521e61868725bf601b22bebc311fdb4d57f793ef481c9d5ff2f127492a4d`
blam! 642e521e61868725bf601b22bebc311fdb4d57f793ef481c9d5ff2f127492a4d
