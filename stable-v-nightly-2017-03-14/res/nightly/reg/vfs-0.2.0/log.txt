boom! testing vfs-0.2.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 9af2b6deb37c526da3a6f702e7846a25458c9e471648a771ceafb8c34492872d
boom! running `docker start -a 9af2b6deb37c526da3a6f702e7846a25458c9e471648a771ceafb8c34492872d`
kablam!    Compiling vfs v0.2.0 (file:///source)
kablam! warning: variable `openOptions` should have a snake case name such as `open_options`
kablam!   --> src/lib.rs:65:33
kablam!    |
kablam! 65 |     fn open_with_options(&self, openOptions: &OpenOptions) -> Result<Box<VFile>>;
kablam!    |                                 ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.78 secs
boom! running `docker rm -f 9af2b6deb37c526da3a6f702e7846a25458c9e471648a771ceafb8c34492872d`
blam! 9af2b6deb37c526da3a6f702e7846a25458c9e471648a771ceafb8c34492872d
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 67685a68db62c37417b608ce9d1899508f16ebf2bff1f32ed4d376a9faa75f57
boom! running `docker start -a 67685a68db62c37417b608ce9d1899508f16ebf2bff1f32ed4d376a9faa75f57`
kablam!    Compiling vfs v0.2.0 (file:///source)
kablam! warning: variable `openOptions` should have a snake case name such as `open_options`
kablam!   --> src/lib.rs:65:33
kablam!    |
kablam! 65 |     fn open_with_options(&self, openOptions: &OpenOptions) -> Result<Box<VFile>>;
kablam!    |                                 ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 4.13 secs
boom! running `docker rm -f 67685a68db62c37417b608ce9d1899508f16ebf2bff1f32ed4d376a9faa75f57`
blam! 67685a68db62c37417b608ce9d1899508f16ebf2bff1f32ed4d376a9faa75f57
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! ec96525b905d20589496fb3b10b36274127e3421199aea5340439d524a8c7e1f
boom! running `docker start -a ec96525b905d20589496fb3b10b36274127e3421199aea5340439d524a8c7e1f`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/vfs-289e7f8e95fb8508
blam! 
blam! running 20 tests
blam! test memory::tests::file_name ... ok
blam! test memory::tests::access_directory_as_file ... ok
blam! test memory::tests::append ... ok
blam! test memory::tests::mkdir ... ok
blam! test memory::tests::mkdir_fails_for_file ... ok
blam! test memory::tests::path_buf ... ok
blam! test memory::tests::parent ... ok
blam! test memory::tests::read_dir ... ok
blam! test memory::tests::rm ... ok
blam! test memory::tests::read_empty_file ... ok
blam! test memory::tests::resolve ... ok
blam! test memory::tests::rmdir ... ok
blam! test physical::tests::parent ... ok
blam! test memory::tests::rmrf ... ok
blam! test physical::tests::read_dir ... ok
blam! test physical::tests::read_file ... ok
blam! test memory::tests::write_and_read_file ... ok
blam! test physical::tests::to_path_buf ... ok
blam! test physical::tests::file_name ... ok
blam! test util::tests::mkdir ... ok
blam! 
blam! test result: ok. 20 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests vfs
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f ec96525b905d20589496fb3b10b36274127e3421199aea5340439d524a8c7e1f`
blam! ec96525b905d20589496fb3b10b36274127e3421199aea5340439d524a8c7e1f
