boom! testing jpeg-decoder-0.1.11 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 317969a71cbb810673043449786e705611ad32ce415e34575486e9279c3eda57
boom! running `docker start -a 317969a71cbb810673043449786e705611ad32ce415e34575486e9279c3eda57`
kablam!    Compiling jpeg-decoder v0.1.11 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 4.90 secs
boom! running `docker rm -f 317969a71cbb810673043449786e705611ad32ce415e34575486e9279c3eda57`
blam! 317969a71cbb810673043449786e705611ad32ce415e34575486e9279c3eda57
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 04f2fe677eed6371c7a62f893155fa7d19493d5a01e7f530acd82ac96afd9b37
boom! running `docker start -a 04f2fe677eed6371c7a62f893155fa7d19493d5a01e7f530acd82ac96afd9b37`
kablam!    Compiling jpeg-decoder v0.1.11 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 7.19 secs
boom! running `docker rm -f 04f2fe677eed6371c7a62f893155fa7d19493d5a01e7f530acd82ac96afd9b37`
blam! 04f2fe677eed6371c7a62f893155fa7d19493d5a01e7f530acd82ac96afd9b37
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 8db6a9dc42fd213191bd6970162e3656c3b7c4470a942f6df9c93186c1fcbf4a
boom! running `docker start -a 8db6a9dc42fd213191bd6970162e3656c3b7c4470a942f6df9c93186c1fcbf4a`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.8 secs
kablam!      Running /target/debug/deps/jpeg_decoder-42c1da5df04038dd
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests jpeg-decoder
blam! 
blam! running 2 tests
blam! test src/lib.rs -  (line 5) ... FAILED
blam! test src/lib.rs -  (line 19) ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- src/lib.rs -  (line 5) stdout ----
blam! 	warning: unused variable: `pixels`
blam!  --> <anon>:9:5
blam!   |
blam! 9 | let pixels = decoder.decode().expect("failed to decode image");
blam!   |     ^^^^^^
blam!   |
blam!   = note: #[warn(unused_variables)] on by default
blam! 
blam! warning: unused variable: `metadata`
blam!   --> <anon>:10:5
blam!    |
blam! 10 | let metadata = decoder.info().unwrap();
blam!    |     ^^^^^^^^
blam!    |
blam!    = note: #[warn(unused_variables)] on by default
blam! 
blam! thread 'rustc' panicked at 'test executable failed:
blam! 
blam! thread 'main' panicked at 'failed to open file: Error { repr: Os { code: 2, message: "No such file or directory" } }', /checkout/src/libcore/result.rs:860
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! ', /checkout/src/librustdoc/test.rs:310
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! ---- src/lib.rs -  (line 19) stdout ----
blam! 	warning: unused variable: `metadata`
blam!   --> <anon>:10:5
blam!    |
blam! 10 | let metadata = decoder.info().unwrap();
blam!    |     ^^^^^^^^
blam!    |
blam!    = note: #[warn(unused_variables)] on by default
blam! 
blam! thread 'rustc' panicked at 'test executable failed:
blam! 
blam! thread 'main' panicked at 'failed to open file: Error { repr: Os { code: 2, message: "No such file or directory" } }', /checkout/src/libcore/result.rs:860
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! ', /checkout/src/librustdoc/test.rs:310
blam! 
blam! 
blam! failures:
blam!     src/lib.rs -  (line 19)
blam!     src/lib.rs -  (line 5)
blam! 
blam! test result: FAILED. 0 passed; 2 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f 8db6a9dc42fd213191bd6970162e3656c3b7c4470a942f6df9c93186c1fcbf4a`
blam! 8db6a9dc42fd213191bd6970162e3656c3b7c4470a942f6df9c93186c1fcbf4a
