boom! testing wd40-0.2.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! c43b837e15a078203414f6c63ace4081f53b695bc5070582c1d128205d1869e0
boom! running `docker start -a c43b837e15a078203414f6c63ace4081f53b695bc5070582c1d128205d1869e0`
kablam!    Compiling serde_codegen_internals v0.8.9
kablam!    Compiling quasi v0.20.1
kablam!    Compiling openssl-sys-extras v0.7.14
kablam!    Compiling openssl v0.7.14
kablam! error: failed to run custom build command for `openssl-sys-extras v0.7.14`
blam! Build failed, waiting for other jobs to finish...
kablam! process didn't exit successfully: `/target/debug/build/openssl-sys-extras-f9e8037051c16bfa/build-script-build` (exit code: 101)
kablam! --- stdout
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! OPT_LEVEL = Some("0")
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! HOST = Some("x86_64-unknown-linux-gnu")
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! HOST = Some("x86_64-unknown-linux-gnu")
kablam! CC_x86_64-unknown-linux-gnu = None
kablam! CC_x86_64_unknown_linux_gnu = None
kablam! HOST_CC = None
kablam! CC = None
kablam! HOST = Some("x86_64-unknown-linux-gnu")
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! HOST = Some("x86_64-unknown-linux-gnu")
kablam! CFLAGS_x86_64-unknown-linux-gnu = None
kablam! CFLAGS_x86_64_unknown_linux_gnu = None
kablam! HOST_CFLAGS = None
kablam! CFLAGS = None
kablam! PROFILE = Some("debug")
kablam! running: "cc" "-O0" "-ffunction-sections" "-fdata-sections" "-fPIC" "-g" "-m64" "-o" "/target/debug/build/openssl-sys-extras-8e2dc543f8892677/out/src/openssl_shim.o" "-c" "src/openssl_shim.c"
blam! Build failed, waiting for other jobs to finish...
kablam! cargo:warning=src/openssl_shim.c:1:26: fatal error: openssl/hmac.h: No such file or directory
kablam! cargo:warning=compilation terminated.
kablam! ExitStatus(ExitStatus(256))
kablam! 
kablam! 
kablam! command did not execute successfully, got: exit code: 1
kablam! 
kablam! 
kablam! 
kablam! --- stderr
kablam! thread 'main' panicked at 'explicit panic', /cargo-home/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.43/src/lib.rs:1127
kablam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
kablam! 
kablam! error: failed to run custom build command for `openssl v0.7.14`
kablam! process didn't exit successfully: `/target/debug/build/openssl-f2d87cfdc2e2aa2f/build-script-build` (exit code: 101)
kablam! --- stdout
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! OPT_LEVEL = Some("0")
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! HOST = Some("x86_64-unknown-linux-gnu")
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! HOST = Some("x86_64-unknown-linux-gnu")
kablam! CC_x86_64-unknown-linux-gnu = None
kablam! CC_x86_64_unknown_linux_gnu = None
kablam! HOST_CC = None
kablam! CC = None
kablam! HOST = Some("x86_64-unknown-linux-gnu")
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! HOST = Some("x86_64-unknown-linux-gnu")
kablam! CFLAGS_x86_64-unknown-linux-gnu = None
kablam! CFLAGS_x86_64_unknown_linux_gnu = None
kablam! HOST_CFLAGS = None
kablam! CFLAGS = None
kablam! PROFILE = Some("debug")
kablam! running: "cc" "-O0" "-ffunction-sections" "-fdata-sections" "-fPIC" "-g" "-m64" "-o" "/target/debug/build/openssl-1d3ea894fa03cc5a/out/src/c_helpers.o" "-c" "src/c_helpers.c"
kablam! cargo:warning=src/c_helpers.c:1:25: fatal error: openssl/ssl.h: No such file or directory
kablam! cargo:warning=compilation terminated.
kablam! ExitStatus(ExitStatus(256))
kablam! 
kablam! 
kablam! command did not execute successfully, got: exit code: 1
kablam! 
kablam! 
kablam! 
kablam! --- stderr
kablam! thread 'main' panicked at 'explicit panic', /cargo-home/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.43/src/lib.rs:1127
kablam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
kablam! 
kablam! error[E0432]: unresolved import `syntax::parse::token::InternedString`
kablam!  --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:9:34
kablam!   |
kablam! 9 | use syntax::parse::token::{self, InternedString};
kablam!   |                                  ^^^^^^^^^^^^^^ no `InternedString` in `parse::token`
kablam! 
kablam! error[E0532]: expected tuple struct/variant, found unit variant `ast::MetaItemKind::Word`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:143:21
kablam!     |
kablam! 143 |                     ast::MetaItemKind::Word(ref name) if name == &"deny_unknown_fields" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^ not a tuple struct/variant
kablam! 
kablam! error[E0425]: cannot find function `intern_and_get_ident` in module `token`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:300:21
kablam!     |
kablam! 300 |             None => token::intern_and_get_ident(&index.to_string()),
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam! 
kablam! error[E0532]: expected tuple struct/variant, found unit variant `ast::MetaItemKind::Word`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:324:21
kablam!     |
kablam! 324 |                     ast::MetaItemKind::Word(ref name) if name == &"default" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^ not a tuple struct/variant
kablam! 
kablam! error[E0532]: expected tuple struct/variant, found unit variant `ast::MetaItemKind::Word`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:336:21
kablam!     |
kablam! 336 |                     ast::MetaItemKind::Word(ref name) if name == &"skip_serializing" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^ not a tuple struct/variant
kablam! 
kablam! error[E0532]: expected tuple struct/variant, found unit variant `ast::MetaItemKind::Word`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:341:21
kablam!     |
kablam! 341 |                     ast::MetaItemKind::Word(ref name) if name == &"skip_deserializing" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^ not a tuple struct/variant
kablam! 
kablam! error[E0422]: cannot find struct, variant or union type `SequenceRepetition` in module `tokenstream`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:566:29
kablam!     |
kablam! 566 |                     Rc::new(tokenstream::SequenceRepetition {
kablam!     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `tokenstream`
kablam!     |
kablam!     = help: possible candidate is found in another module, you can import it into scope:
kablam!               `use syntax::ext::tt::quoted::SequenceRepetition;`
kablam! 
kablam! error[E0425]: cannot find function `intern_and_get_ident` in module `token`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:244:13
kablam!     |
kablam! 244 |             token::intern_and_get_ident(self), ast::StrStyle::Cooked);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam! 
kablam! error[E0425]: cannot find function `intern_and_get_ident` in module `token`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:253:13
kablam!     |
kablam! 253 |             token::intern_and_get_ident(self), ast::StrStyle::Cooked);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam! 
kablam! error[E0412]: cannot find type `Attribute_` in module `ast`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:568:21
kablam!     |
kablam! 568 | impl_wrap_repeat! { ast::Attribute_ }
kablam!     | --------------------^^^^^^^^^^^^^^^--
kablam!     | |                   |
kablam!     | |                   did you mean `ast::Attribute`?
kablam!     | in this macro invocation
kablam! 
kablam! error[E0412]: cannot find type `Attribute_` in module `ast`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:568:21
kablam!     |
kablam! 568 | impl_wrap_repeat! { ast::Attribute_ }
kablam!     | --------------------^^^^^^^^^^^^^^^--
kablam!     | |                   |
kablam!     | |                   did you mean `ast::Attribute`?
kablam!     | in this macro invocation
kablam! 
kablam! error[E0412]: cannot find type `Attribute_` in module `ast`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:568:21
kablam!     |
kablam! 568 | impl_wrap_repeat! { ast::Attribute_ }
kablam!     | --------------------^^^^^^^^^^^^^^^--
kablam!     | |                   |
kablam!     | |                   did you mean `ast::Attribute`?
kablam!     | in this macro invocation
kablam! 
kablam! error[E0412]: cannot find type `Attribute_` in module `ast`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:568:21
kablam!     |
kablam! 568 | impl_wrap_repeat! { ast::Attribute_ }
kablam!     | --------------------^^^^^^^^^^^^^^^--
kablam!     | |                   |
kablam!     | |                   did you mean `ast::Attribute`?
kablam!     | in this macro invocation
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:127:21
kablam!     |
kablam! 127 |                     ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"rename" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:135:21
kablam!     |
kablam! 135 |                     ast::MetaItemKind::List(ref name, ref meta_items) if name == &"rename" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:148:21
kablam!     |
kablam! 148 |                     ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"bound" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:156:21
kablam!     |
kablam! 156 |                     ast::MetaItemKind::List(ref name, ref meta_items) if name == &"bound" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:96:75
kablam!    |
kablam! 96 |         vec![TokenTree::Token(DUMMY_SP, token::Interpolated(token::NtPath(Box::new(self.clone()))))]
kablam!    |                                                                           ^^^^^^^^^^^^^^^^^^^^^^ expected struct `syntax::ast::Path`, found struct `std::boxed::Box`
kablam!    |
kablam!    = note: expected type `syntax::ast::Path`
kablam!               found type `std::boxed::Box<syntax::ast::Path>`
kablam!    = help: here are some functions which might fulfill your needs:
kablam!            - .default_to_global()
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:96:61
kablam!    |
kablam! 96 |         vec![TokenTree::Token(DUMMY_SP, token::Interpolated(token::NtPath(Box::new(self.clone()))))]
kablam!    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!    |
kablam!    = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!               found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:102:62
kablam!     |
kablam! 102 |         vec![TokenTree::Token(self.span, token::Interpolated(token::NtTy(P(self.clone()))))]
kablam!     |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!     |
kablam!     = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:108:62
kablam!     |
kablam! 108 |         vec![TokenTree::Token(self.span, token::Interpolated(token::NtTy(self.clone())))]
kablam!     |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!     |
kablam!     = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:114:62
kablam!     |
kablam! 114 |         vec![TokenTree::Token(self.span, token::Interpolated(token::NtBlock(self.clone())))]
kablam!     |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!     |
kablam!     = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:120:62
kablam!     |
kablam! 120 |         vec![TokenTree::Token(self.span, token::Interpolated(token::NtItem(self.clone())))]
kablam!     |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!     |
kablam!     = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:126:80
kablam!     |
kablam! 126 |         vec![TokenTree::Token(self.span, token::Interpolated(token::NtImplItem(self.clone())))]
kablam!     |                                                                                ^^^^^^^^^^^^ expected struct `syntax::ast::ImplItem`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `syntax::ast::ImplItem`
kablam!                found type `syntax::ptr::P<syntax::ast::ImplItem>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:126:62
kablam!     |
kablam! 126 |         vec![TokenTree::Token(self.span, token::Interpolated(token::NtImplItem(self.clone())))]
kablam!     |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!     |
kablam!     = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:132:81
kablam!     |
kablam! 132 |         vec![TokenTree::Token(self.span, token::Interpolated(token::NtTraitItem(self.clone())))]
kablam!     |                                                                                 ^^^^^^^^^^^^ expected struct `syntax::ast::TraitItem`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `syntax::ast::TraitItem`
kablam!                found type `syntax::ptr::P<syntax::ast::TraitItem>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:132:62
kablam!     |
kablam! 132 |         vec![TokenTree::Token(self.span, token::Interpolated(token::NtTraitItem(self.clone())))]
kablam!     |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!     |
kablam!     = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error[E0061]: this function takes 3 parameters but 4 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:144:45
kablam!     |
kablam! 144 |         panictry!(parse_tts_from_source_str("<quote expansion>".to_string(), s, cx.cfg(), cx.parse_sess()))
kablam!     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 3 parameters
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:144:9
kablam!     |
kablam! 144 |         panictry!(parse_tts_from_source_str("<quote expansion>".to_string(), s, cx.cfg(), cx.parse_sess()))
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::result::Result`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::tokenstream::TokenTree>`
kablam!                found type `std::result::Result<_, _>`
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:144:9
kablam!     |
kablam! 144 |         panictry!(parse_tts_from_source_str("<quote expansion>".to_string(), s, cx.cfg(), cx.parse_sess()))
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::result::Result`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::tokenstream::TokenTree>`
kablam!                found type `std::result::Result<_, _>`
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error[E0061]: this function takes 3 parameters but 4 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:159:45
kablam!     |
kablam! 159 |         panictry!(parse_tts_from_source_str("<quote expansion>".to_string(), s, cx.cfg(), cx.parse_sess()))
kablam!     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 3 parameters
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:159:9
kablam!     |
kablam! 159 |         panictry!(parse_tts_from_source_str("<quote expansion>".to_string(), s, cx.cfg(), cx.parse_sess()))
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::result::Result`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::tokenstream::TokenTree>`
kablam!                found type `std::result::Result<_, _>`
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:159:9
kablam!     |
kablam! 159 |         panictry!(parse_tts_from_source_str("<quote expansion>".to_string(), s, cx.cfg(), cx.parse_sess()))
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::result::Result`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::tokenstream::TokenTree>`
kablam!                found type `std::result::Result<_, _>`
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:166:75
kablam!     |
kablam! 166 |             TokenTree::Token(self.span, token::Interpolated(token::NtStmt(P(self.clone()))))
kablam!     |                                                                           ^^^^^^^^^^^^^^^ expected struct `syntax::ast::Stmt`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `syntax::ast::Stmt`
kablam!                found type `syntax::ptr::P<syntax::ast::Stmt>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .add_trailing_semicolon()
kablam!             - .unwrap()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:166:61
kablam!     |
kablam! 166 |             TokenTree::Token(self.span, token::Interpolated(token::NtStmt(P(self.clone()))))
kablam!     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!     |
kablam!     = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:180:62
kablam!     |
kablam! 180 |         vec![TokenTree::Token(self.span, token::Interpolated(token::NtExpr(self.clone())))]
kablam!     |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!     |
kablam!     = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:186:62
kablam!     |
kablam! 186 |         vec![TokenTree::Token(self.span, token::Interpolated(token::NtPat(self.clone())))]
kablam!     |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!     |
kablam!     = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:219:21
kablam!     |
kablam! 219 |                     ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"rename" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:227:21
kablam!     |
kablam! 227 |                     ast::MetaItemKind::List(ref name, ref meta_items) if name == &"rename" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:192:61
kablam!     |
kablam! 192 |         vec![TokenTree::Token(DUMMY_SP, token::Interpolated(token::NtArm(self.clone())))]
kablam!     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!     |
kablam!     = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:308:21
kablam!     |
kablam! 308 |                     ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"rename" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:316:21
kablam!     |
kablam! 316 |                     ast::MetaItemKind::List(ref name, ref meta_items) if name == &"rename" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:329:21
kablam!     |
kablam! 329 |                     ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"default" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:346:21
kablam!     |
kablam! 346 |                     ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"skip_serializing_if" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:353:21
kablam!     |
kablam! 353 |                     ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"serialize_with" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:360:21
kablam!     |
kablam! 360 |                     ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"deserialize_with" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:367:21
kablam!     |
kablam! 367 |                     ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"bound" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:375:21
kablam!     |
kablam! 375 |                     ast::MetaItemKind::List(ref name, ref meta_items) if name == &"bound" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:218:75
kablam!     |
kablam! 218 |         vec![TokenTree::Token(DUMMY_SP, token::Interpolated(token::NtMeta(self.clone())))]
kablam!     |                                                                           ^^^^^^^^^^^^ expected struct `syntax::ast::MetaItem`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `syntax::ast::MetaItem`
kablam!                found type `syntax::ptr::P<syntax::ast::MetaItem>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:218:61
kablam!     |
kablam! 218 |         vec![TokenTree::Token(DUMMY_SP, token::Interpolated(token::NtMeta(self.clone())))]
kablam!     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!     |
kablam!     = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error: no field `node` on type `&syntax::ast::Attribute`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:227:17
kablam!     |
kablam! 227 |         if self.node.style == ast::AttrStyle::Inner {
kablam!     |                 ^^^^
kablam! 
kablam! error[E0560]: struct `syntax::tokenstream::Delimited` has no field named `open_span`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:232:13
kablam!     |
kablam! 232 |             open_span: self.span,
kablam!     |             ^^^^^^^^^^ `syntax::tokenstream::Delimited` does not have this field
kablam! 
kablam! error: no field `node` on type `&syntax::ast::Attribute`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:233:23
kablam!     |
kablam! 233 |             tts: self.node.value.to_tokens(cx),
kablam!     |                       ^^^^
kablam! 
kablam! error[E0560]: struct `syntax::tokenstream::Delimited` has no field named `close_span`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:234:13
kablam!     |
kablam! 234 |             close_span: self.span,
kablam!     |             ^^^^^^^^^^^ `syntax::tokenstream::Delimited` does not have this field
kablam! 
kablam! error[E0560]: struct `syntax::tokenstream::Delimited` has no field named `open_span`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:262:13
kablam!     |
kablam! 262 |             open_span: DUMMY_SP,
kablam!     |             ^^^^^^^^^^ `syntax::tokenstream::Delimited` does not have this field
kablam! 
kablam! error[E0560]: struct `syntax::tokenstream::Delimited` has no field named `close_span`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:264:13
kablam!     |
kablam! 264 |             close_span: DUMMY_SP,
kablam!     |             ^^^^^^^^^^^ `syntax::tokenstream::Delimited` does not have this field
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:468:21
kablam!     |
kablam! 468 |                     ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"serialize" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:474:21
kablam!     |
kablam! 474 |                     ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"deserialize" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:315:45
kablam!     |
kablam! 315 |                 let lit = ast::LitKind::Int(val as u64, ast::LitIntType::Signed($tag));
kablam!     |                                             ^^^^^^^^^^ expected u128, found u64
kablam! ...
kablam! 331 | impl_to_tokens_int! { signed, isize, ast::IntTy::Is }
kablam!     | ----------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:315:45
kablam!     |
kablam! 315 |                 let lit = ast::LitKind::Int(val as u64, ast::LitIntType::Signed($tag));
kablam!     |                                             ^^^^^^^^^^ expected u128, found u64
kablam! ...
kablam! 332 | impl_to_tokens_int! { signed, i8,  ast::IntTy::I8 }
kablam!     | --------------------------------------------------- in this macro invocation
kablam! 
kablam! error: no field `node` on type `&syntax::ast::Attribute`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:522:16
kablam!     |
kablam! 522 |     match attr.node.value.node {
kablam!     |                ^^^^
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:523:9
kablam!     |
kablam! 523 |         ast::MetaItemKind::List(ref name, ref items) if name == &"serde" => {
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:315:45
kablam!     |
kablam! 315 |                 let lit = ast::LitKind::Int(val as u64, ast::LitIntType::Signed($tag));
kablam!     |                                             ^^^^^^^^^^ expected u128, found u64
kablam! ...
kablam! 333 | impl_to_tokens_int! { signed, i16, ast::IntTy::I16 }
kablam!     | ---------------------------------------------------- in this macro invocation
kablam! 
kablam! error: type `syntax::ast::MetaItem` cannot be dereferenced
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:528:30
kablam!     |
kablam! 528 |                         Some((*meta_item.clone()).clone())
kablam!     | error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:315:45
kablam!     |
kablam! 315 |                 let lit = ast::LitKind::Int(val as u64, ast::LitIntType::Signed($tag));
kablam!     |                                             ^^^^^^^^^^ expected u128, found u64
kablam! ...
kablam! 334 | impl_to_tokens_int! { signed, i32, ast::IntTy::I32 }
kablam!     | ---------------------------------------------------- in this macro invocation
kablam! 
kablam!                              ^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error: no associated item named `Sequence` found for type `syntax::tokenstream::TokenTree` in the current scope
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:563:13
kablam!     |
kablam! 563 |             TokenTree::Sequence(span, ref seq) => {
kablam!     |             error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:315:45
kablam!     |
kablam! 315 |                 let lit = ast::LitKind::Int(val as u64, ast::LitIntType::Signed($tag));
kablam!     |                                             ^^^^^^^^^^ expected u128, found u64
kablam! ...
kablam! 335 | impl_to_tokens_int! { signed, i64, ast::IntTy::I64 }
kablam!     | ---------------------------------------------------- in this macro invocation
kablam! 
kablam! ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:324:45
kablam!     |
kablam! 324 |                 let lit = ast::LitKind::Int(*self as u64, ast::LitIntType::Unsigned($tag));
kablam!     |                                             ^^^^^^^^^^^^ expected u128, found u64
kablam! ...
kablam! 337 | impl_to_tokens_int! { unsigned, usize, ast::UintTy::Us }
kablam!     | -------------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:324:45
kablam!     |
kablam! 324 |                 let lit = ast::LitKind::Int(*self as u64, ast::LitIntType::Unsigned($tag));
kablam!     |                                             ^^^^^^^^^^^^ expected u128, found u64
kablam! ...
kablam! 338 | impl_to_tokens_int! { unsigned, u8,   ast::UintTy::U8 }
kablam!     | ------------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0560]: struct `syntax::tokenstream::Delimited` has no field named `open_span`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:557:25
kablam!     |
kablam! 557 |                         open_span: delimed.open_span,
kablam!     |                         ^^^^^^^^^^ `syntax::tokenstream::Delimited` does not have this field
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:324:45
kablam!     |
kablam! 324 |                 let lit = ast::LitKind::Int(*self as u64, ast::LitIntType::Unsigned($tag));
kablam!     |                                             ^^^^^^^^^^^^ expected u128, found u64
kablam! ...
kablam! 339 | impl_to_tokens_int! { unsigned, u16,  ast::UintTy::U16 }
kablam!     | -------------------------------------------------------- in this macro invocation
kablam! 
kablam! error: no field `open_span` on type `&std::rc::Rc<syntax::tokenstream::Delimited>`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:557:44
kablam!     |
kablam! 557 |                         open_span: delimed.open_span,
kablam!     |                                            ^^^^^^^^^
kablam! 
kablam! error[E0308]error[E0560]: mismatched types
kablam!    --> : struct `syntax::tokenstream::Delimited` has no field named `close_span`/cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:324:45
kablam! 
kablam!        |--> 
kablam! /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:559:25324
kablam!      | |                let lit = ast::LitKind::Int(*self as u64, ast::LitIntType::Unsigned($tag));
kablam! 
kablam! 559     | |                         close_span: delimed.close_span,                                            
kablam! ^^^^^^^^^^^^     | expected u128, found u64                        
kablam! ^^^^^^^^^^^... 
kablam! `syntax::tokenstream::Delimited` does not have this field340
kablam! 
kablam!  | impl_to_tokens_int! { unsigned, u32,  ast::UintTy::U32 }
kablam!     | -------------------------------------------------------- in this macro invocation
kablam! 
kablam! error: no field `close_span` on type `&std::rc::Rc<syntax::tokenstream::Delimited>`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:559:45
kablam!     |
kablam! 559 |                         close_span: delimed.close_span,
kablam!     |                                             ^^^^^^^^^^
kablam! 
kablam! error: no associated item named `Sequence` found for type `syntax::tokenstream::TokenTree` in the current scope
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:564:17
kablam!     |
kablam! 564 |                 TokenTree::Sequence(
kablam!     |                 ^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:324:45
kablam!     |
kablam! 324 |                 let lit = ast::LitKind::Int(*self as u64, ast::LitIntType::Unsigned($tag));
kablam!     |                                             ^^^^^^^^^^^^ expected u128, found u64
kablam! ...
kablam! 341 | impl_to_tokens_int! { unsigned, u64,  ast::UintTy::U64 }
kablam!     | -------------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0061]: this function takes 3 parameters but 4 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:354:13
kablam!     |
kablam! 354 |             "<quote expansion>".to_string(),
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 3 parameters
kablam! 
kablam! error[E0061]: this function takes 3 parameters but 4 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:362:13
kablam!     |
kablam! 362 |             "<quote expansion>".to_string(),
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 3 parameters
kablam! 
kablam! error[E0061]: this function takes 3 parameters but 4 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:370:13
kablam!     |
kablam! 370 |             "<quote expansion>".to_string(),
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 3 parameters
kablam! 
kablam! error[E0061]: this function takes 3 parameters but 4 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:378:13
kablam!     |
kablam! 378 |             "<quote expansion>".to_string(),
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 3 parameters
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:377:9
kablam!     |
kablam! 377 |           panictry!(parse::parse_tts_from_source_str(
kablam!     |  _________^ starting here...
kablam! 378 | |             "<quote expansion>".to_string(),
kablam! 379 | |             s,
kablam! 380 | |             self.cfg(),
kablam! 381 | |             self.parse_sess()))
kablam!     | |_______________________________^ ...ending here: expected struct `std::vec::Vec`, found enum `std::result::Result`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::tokenstream::TokenTree>`
kablam!                found type `std::result::Result<_, _>`
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error[E0061]error[E0308]: mismatched types: this function takes 3 parameters but 4 parameters were supplied
kablam! 
kablam!    -->    /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:377:9--> 
kablam! /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:609:15    
kablam! |    
kablam! |377
kablam!  609|    |         panictry!(parse::parse_tts_from_source_str(  
kablam!     let tts = panictry!(parse::parse_tts_from_source_str(    
kablam! |      | _________^  _______________^starting here...
kablam!  378starting here...
kablam!  610|  ||  |            "<quote expansion>".to_string(), 
kablam!         format!("<serde {} expansion>", name),379
kablam!  611|  ||  |            s, 
kablam!         string,380
kablam!  612|  ||  |            self.cfg(), 
kablam!         cx.cfg(),381
kablam!  613|  ||  |            self.parse_sess())) 
kablam!         cx.parse_sess()));    
kablam! |     |_______________________________^|  |_________________________^...ending here: expected struct `std::vec::Vec`, found enum `std::result::Result` 
kablam! ...ending here: expected 3 parameters
kablam!         ||
kablam! 
kablam!     = note: this error originates in a macro outside of the current crate
kablam!     = 
kablam! note: expected type `std::vec::Vec<syntax::tokenstream::TokenTree>`
kablam!                found type `std::result::Result<_, _>`
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:609:15
kablam!     |
kablam! 609 |       let tts = panictry!(parse::parse_tts_from_source_str(
kablam!     |  _______________^ starting here...
kablam! 610 | |         format!("<serde {} expansion>", name),
kablam! 611 | |         string,
kablam! 612 | |         cx.cfg(),
kablam! 613 | |         cx.parse_sess()));
kablam!     | |_________________________^ ...ending here: expected struct `std::vec::Vec`, found enum `std::result::Result`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::tokenstream::TokenTree>`
kablam!                found type `std::result::Result<_, _>`
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:609:15
kablam!     |
kablam! 609 |       let tts = panictry!(parse::parse_tts_from_source_str(
kablam!     |  _______________^ starting here...
kablam! 610 | |         format!("<serde {} expansion>", name),
kablam! 611 | |         string,
kablam! 612 | |         cx.cfg(),
kablam! 613 | |         cx.parse_sess()));
kablam!     | |_________________________^ ...ending here: expected struct `std::vec::Vec`, found enum `std::result::Result`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::tokenstream::TokenTree>`
kablam!                found type `std::result::Result<_, _>`
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error[E0277]: the trait bound `[syntax::tokenstream::TokenTree]: std::marker::Sized` is not satisfied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:609:9
kablam!     |
kablam! 609 |     let tts = panictry!(parse::parse_tts_from_source_str(
kablam!     |         ^^^ the trait `std::marker::Sized` is not implemented for `[syntax::tokenstream::TokenTree]`
kablam!     |
kablam!     = note: `[syntax::tokenstream::TokenTree]` does not have a constant size known at compile-time
kablam!     = note: all local variables must have a statically known size
kablam! 
kablam! error[E0061]: this function takes 2 parameters but 3 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.8.9/src/attr.rs:618:49
kablam!     |
kablam! 618 |     let mut parser = parse::new_parser_from_tts(cx.parse_sess(), cx.cfg(), tts);
kablam!     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 2 parameters
kablam! 
kablam! error: aborting due to 30 previous errors
kablam! 
kablam! error: aborting due to 45 previous errors
kablam! 
kablam! error: Could not compile `serde_codegen_internals`.
blam! Build failed, waiting for other jobs to finish...
kablam! error: build failed
boom! running `docker rm -f c43b837e15a078203414f6c63ace4081f53b695bc5070582c1d128205d1869e0`
blam! c43b837e15a078203414f6c63ace4081f53b695bc5070582c1d128205d1869e0
