boom! testing speculate-0.0.17 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 9ef56f17756b3441069a9bf4cf7e8c79e67c5301d5d8e75191bcc7bde1327c16
boom! running `docker start -a 9ef56f17756b3441069a9bf4cf7e8c79e67c5301d5d8e75191bcc7bde1327c16`
kablam!    Compiling speculate v0.0.17 (file:///source)
kablam! error[E0432]: unresolved import `rustc::plugin::Registry`
kablam!  --> src/lib.rs:6:5
kablam!   |
kablam! 6 | use rustc::plugin::Registry;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^ Could not find `plugin` in `rustc`
kablam! 
kablam! error[E0432]: unresolved import `syntax::ast::TokenTree`
kablam!  --> src/lib.rs:7:5
kablam!   |
kablam! 7 | use syntax::ast::TokenTree;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^ no `TokenTree` in `ast`
kablam! 
kablam! error[E0061]: this function takes 2 parameters but 3 parameters were supplied
kablam!   --> src/lib.rs:25:36
kablam!    |
kablam! 25 |     let mut parser = tts_to_parser(cx.parse_sess(), tokens.to_vec(), cx.cfg());
kablam!    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 2 parameters
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> src/parser.rs:31:60
kablam!    |
kablam! 31 |                 let block = Block::Describe(parse_describe(&name, parser));
kablam!    |                                                            ^^^^^ expected str, found struct `syntax::ast::Symbol`
kablam!    |
kablam!    = note: expected type `&str`
kablam!               found type `&syntax::ast::Symbol`
kablam! 
kablam! error[E0277]: the trait bound `syntax::<unnamed>::DiagnosticBuilder<'_>: std::fmt::Display` is not satisfied
kablam!   --> src/parser.rs:71:30
kablam!    |
kablam! 71 |                 panic!("{}", parser.span_fatal(span, &message))
kablam!    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::fmt::Display` is not implemented for `syntax::<unnamed>::DiagnosticBuilder<'_>`
kablam!    |
kablam!    = note: `syntax::<unnamed>::DiagnosticBuilder<'_>` cannot be formatted with the default formatter; try using `:?` instead if you are using a format string
kablam!    = note: required by `std::fmt::Display::fmt`
kablam! 
kablam! error: no field `expr` on type `syntax::ptr::P<syntax::ast::Block>`
kablam!   --> src/parser.rs:87:14
kablam!    |
kablam! 87 |     if block.expr.is_some() {
kablam!    |              ^^^^ unknown field
kablam! 
kablam! error[E0277]: the trait bound `syntax::<unnamed>::DiagnosticBuilder<'_>: std::fmt::Display` is not satisfied
kablam!   --> src/parser.rs:88:22
kablam!    |
kablam! 88 |           panic!("{}", parser.span_fatal(
kablam!    |  ______________________^ starting here...
kablam! 89 | |             span,
kablam! 90 | |             "last expression in this block must be terminated by `;`"))
kablam!    | |______________________________________________________________________^ ...ending here: the trait `std::fmt::Display` is not implemented for `syntax::<unnamed>::DiagnosticBuilder<'_>`
kablam!    |
kablam!    = note: `syntax::<unnamed>::DiagnosticBuilder<'_>` cannot be formatted with the default formatter; try using `:?` instead if you are using a format string
kablam!    = note: required by `std::fmt::Display::fmt`
kablam! 
kablam! error: aborting due to 5 previous errors
kablam! 
kablam! error: Could not compile `speculate`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 9ef56f17756b3441069a9bf4cf7e8c79e67c5301d5d8e75191bcc7bde1327c16`
blam! 9ef56f17756b3441069a9bf4cf7e8c79e67c5301d5d8e75191bcc7bde1327c16
