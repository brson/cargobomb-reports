boom! testing riquid-0.0.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 5762e21ad04a7c49825828cbf5d2e310b5ead8f71668b2112dd3d8bb15f66008
boom! running `docker start -a 5762e21ad04a7c49825828cbf5d2e310b5ead8f71668b2112dd3d8bb15f66008`
kablam!    Compiling riquid v0.0.1 (file:///source)
kablam! warning: struct is never used: `Scanner`
kablam!  --> src/scanner.rs:4:1
kablam!   |
kablam! 4 |   pub struct Scanner<'t> {
kablam!   |  _^ starting here...
kablam! 5 | |     source: &'t str,
kablam! 6 | |     index: Cell<usize>,
kablam! 7 | |     length: usize
kablam! 8 | | }
kablam!   | |_^ ...ending here
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `new`
kablam!   --> src/scanner.rs:11:5
kablam!    |
kablam! 11 |       pub fn new<'a>(source: &'a str) -> Scanner<'a> {
kablam!    |  _____^ starting here...
kablam! 12 | |         Scanner {
kablam! 13 | |             source: source,
kablam! 14 | |             index: Cell::new(0),
kablam! 15 | |             length: source.len()
kablam! 16 | |         }
kablam! 17 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `position`
kablam!   --> src/scanner.rs:19:5
kablam!    |
kablam! 19 |       pub fn position(&self) -> usize {
kablam!    |  _____^ starting here...
kablam! 20 | |         cmp::min(self.index.get(), self.length)
kablam! 21 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_eos`
kablam!   --> src/scanner.rs:23:5
kablam!    |
kablam! 23 |       pub fn is_eos(&self) -> bool {
kablam!    |  _____^ starting here...
kablam! 24 | |         self.position() == self.length
kablam! 25 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `skip`
kablam!   --> src/scanner.rs:27:5
kablam!    |
kablam! 27 |       pub fn skip(&self, n: usize) {
kablam!    |  _____^ starting here...
kablam! 28 | |         let pos = cmp::min(self.position() + n, self.length);
kablam! 29 | |         self.index.set(pos);
kablam! 30 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `rest`
kablam!   --> src/scanner.rs:32:5
kablam!    |
kablam! 32 |       pub fn rest(&self) -> Option<&str> {
kablam!    |  _____^ starting here...
kablam! 33 | |         if self.is_eos() { return None; }
kablam! 34 | |         Some(self.raw())
kablam! 35 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_char`
kablam!   --> src/scanner.rs:37:5
kablam!    |
kablam! 37 |       pub fn get_char(&self) -> Option<&str> {
kablam!    |  _____^ starting here...
kablam! 38 | |         if self.is_eos() { return None; }
kablam! 39 | |
kablam! 40 | |         let rest = self.raw();
kablam! 41 | |         let chr  = &rest[0..1];
kablam! 42 | |         self.skip(chr.len());
kablam! 43 | |
kablam! 44 | |         Some(chr)
kablam! 45 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `scan`
kablam!   --> src/scanner.rs:47:5
kablam!    |
kablam! 47 |       pub fn scan(&self, pattern: &::regex::Regex) -> Option<&str> {
kablam!    |  _____^ starting here...
kablam! 48 | |         let rest = self.raw();
kablam! 49 | |
kablam! 50 | |         match pattern.captures(rest) {
kablam! 51 | |             None => None,
kablam! 52 | |             Some(captures) => { self.get_match(rest, &captures) }
kablam! 53 | |         }
kablam! 54 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_match`
kablam!   --> src/scanner.rs:56:5
kablam!    |
kablam! 56 |     fn get_match<'a>(&'a self, source: &'a str, captures: &::regex::Captures) -> Option<&str> {
kablam!    |     ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `leading_chars`
kablam!   --> src/scanner.rs:69:5
kablam!    |
kablam! 69 |       fn leading_chars(&self, string: &str) -> usize {
kablam!    |  _____^ starting here...
kablam! 70 | |         string.len() - string.trim_left().len()
kablam! 71 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `raw`
kablam!   --> src/scanner.rs:73:5
kablam!    |
kablam! 73 |       fn raw(&self) -> &str {
kablam!    |  _____^ starting here...
kablam! 74 | |         &self.source[self.position()..]
kablam! 75 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.62 secs
boom! running `docker rm -f 5762e21ad04a7c49825828cbf5d2e310b5ead8f71668b2112dd3d8bb15f66008`
blam! 5762e21ad04a7c49825828cbf5d2e310b5ead8f71668b2112dd3d8bb15f66008
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 58c136ff8161bd1fe7d4963505702751fd523568d3c85c32c6ec3c2bd9329470
boom! running `docker start -a 58c136ff8161bd1fe7d4963505702751fd523568d3c85c32c6ec3c2bd9329470`
kablam!    Compiling riquid v0.0.1 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.43 secs
boom! running `docker rm -f 58c136ff8161bd1fe7d4963505702751fd523568d3c85c32c6ec3c2bd9329470`
blam! 58c136ff8161bd1fe7d4963505702751fd523568d3c85c32c6ec3c2bd9329470
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! e9d567855957bc6601128c3378bc94145bf360eda7830026f9fc2b1e0ea10c2b
boom! running `docker start -a e9d567855957bc6601128c3378bc94145bf360eda7830026f9fc2b1e0ea10c2b`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/riquid-01f14c2097f99bc5
blam! 
blam! running 9 tests
blam! test scanner::tests::get_char_returns_the_current_character_and_pushes_the_index ... ok
blam! test scanner::tests::is_eos_when_not_at_the_end_of_a_string ... ok
blam! test scanner::tests::get_char_when_eos_returns_none ... ok
blam! test scanner::tests::is_eos_is_true_when_at_the_end_of_a_string ... ok
blam! test scanner::tests::new_returns_a_new_scanner ... ok
blam! test scanner::tests::rest_returns_all_characters_from_the_current_position ... ok
blam! test scanner::tests::skip_moves_n_characters_ahead ... ok
blam! test scanner::tests::scan_returns_none_when_not_found ... ok
blam! test scanner::tests::scan_retrieves_tokens_from_the_current_position_until_the_end ... ok
blam! 
blam! test result: ok. 9 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests riquid
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f e9d567855957bc6601128c3378bc94145bf360eda7830026f9fc2b1e0ea10c2b`
blam! e9d567855957bc6601128c3378bc94145bf360eda7830026f9fc2b1e0ea10c2b
