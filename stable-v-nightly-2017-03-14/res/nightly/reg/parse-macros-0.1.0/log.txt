boom! testing parse-macros-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 0020071ed988d52fbb32a50555c3c267c8943e795e845b54cccb09d306ab004b
boom! running `docker start -a 0020071ed988d52fbb32a50555c3c267c8943e795e845b54cccb09d306ab004b`
kablam!    Compiling parse-generics-shim v0.1.1
kablam!    Compiling parse-macros v0.1.0 (file:///source)
kablam! warning: unused `#[macro_use]` import
kablam!    --> src/lib.rs:524:1
kablam!     |
kablam! 524 | #[macro_use] extern crate parse_generics_shim;
kablam!     | ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_imports)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.24 secs
boom! running `docker rm -f 0020071ed988d52fbb32a50555c3c267c8943e795e845b54cccb09d306ab004b`
blam! 0020071ed988d52fbb32a50555c3c267c8943e795e845b54cccb09d306ab004b
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 4a85576f62c6994468e020f183c3d66264524c4178b79f58644a48bee49f903e
boom! running `docker start -a 4a85576f62c6994468e020f183c3d66264524c4178b79f58644a48bee49f903e`
kablam!    Compiling parse-macros v0.1.0 (file:///source)
kablam! warning: unused `#[macro_use]` import
kablam!    --> src/lib.rs:524:1
kablam!     |
kablam! 524 | #[macro_use] extern crate parse_generics_shim;
kablam!     | ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: code relies on type inference rules which are likely to change
kablam!    --> tests/derive_serialize.rs:626:15
kablam!     |
kablam! 626 |         match serde_json::to_string(&$e).ok() {
kablam!     |               ^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 634 |     if false { assert_ser!({let _x: EnumA = panic!(); _x}, "!"); }
kablam!     |                ------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(resolve_trait_on_defaulted_unit)] on by default
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #39216 <https://github.com/rust-lang/rust/issues/39216>
kablam! 
kablam! warning: unreachable expression
kablam!    --> tests/derive_serialize.rs:634:55
kablam!     |
kablam! 634 |     if false { assert_ser!({let _x: EnumA = panic!(); _x}, "!"); }
kablam!     |                ---------------------------------------^^-------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unreachable_code)] on by default
kablam! 
kablam! warning: unreachable statement
kablam!    --> tests/derive_partial_ord.rs:526:42
kablam!     |
kablam! 526 |     if false { let _x: EnumA = panic!(); _x.partial_cmp(&_x); }
kablam!     |                                          ^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unreachable_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.51 secs
boom! running `docker rm -f 4a85576f62c6994468e020f183c3d66264524c4178b79f58644a48bee49f903e`
blam! 4a85576f62c6994468e020f183c3d66264524c4178b79f58644a48bee49f903e
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! eaaf6d9f8232563a33b008a001f7ac2c2f2a82593ec5a06ea8afe1333cf7cc24
boom! running `docker start -a eaaf6d9f8232563a33b008a001f7ac2c2f2a82593ec5a06ea8afe1333cf7cc24`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/derive_clone-10db0ff1e85e8a15
blam! 
blam! running 1 test
blam! test test_derive_clone ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/derive_partial_ord-dba29cc79569e0ff
blam! 
blam! running 1 test
blam! test test_partial_ord ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/derive_serialize-494b7460a72ea923
blam! 
blam! running 1 test
blam! test test_serialize ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/parse_macros-708265ca3f63d5b9
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/reflect-7629830843cf901e
blam! 
blam! running 1 test
blam! test test_reflect ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests parse-macros
blam! 
blam! running 16 tests
blam! test src/lib.rs -  (line 1014) ... ignored
blam! test src/lib.rs -  (line 550) ... ignored
blam! test src/lib.rs -  (line 562) ... ignored
blam! test src/lib.rs -  (line 594) ... ignored
blam! test src/lib.rs -  (line 613) ... ignored
blam! test src/lib.rs -  (line 630) ... ignored
blam! test src/lib.rs -  (line 658) ... ignored
blam! test src/lib.rs -  (line 776) ... ignored
blam! test src/lib.rs -  (line 792) ... ignored
blam! test src/lib.rs -  (line 804) ... ignored
blam! test src/lib.rs -  (line 837) ... ignored
blam! test src/lib.rs -  (line 856) ... ignored
blam! test src/lib.rs -  (line 872) ... ignored
blam! test src/lib.rs -  (line 1027) ... ok
blam! test src/lib.rs -  (line 899) ... ok
blam! test src/lib.rs -  (line 685) ... ok
blam! 
blam! test result: ok. 3 passed; 0 failed; 13 ignored; 0 measured
blam! 
boom! running `docker rm -f eaaf6d9f8232563a33b008a001f7ac2c2f2a82593ec5a06ea8afe1333cf7cc24`
blam! eaaf6d9f8232563a33b008a001f7ac2c2f2a82593ec5a06ea8afe1333cf7cc24
