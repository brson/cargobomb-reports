boom! testing vst2-0.0.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 69638b53537df84db93496144580021d4be0b04705ff383b218d2ec142455c10
boom! running `docker start -a 69638b53537df84db93496144580021d4be0b04705ff383b218d2ec142455c10`
kablam!    Compiling vst2 v0.0.1 (file:///source)
kablam! warning: static variable `load_pointer` should have an upper case name such as `LOAD_POINTER`
kablam!    --> src/host.rs:724:1
kablam!     |
kablam! 724 | static mut load_pointer: *mut c_void = 0 as *mut c_void;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_upper_case_globals)] on by default
kablam! 
kablam! warning: unused import: `Plugin`
kablam!   --> src/interfaces.rs:65:33
kablam!    |
kablam! 65 |     use plugin::{CanDo, OpCode, Plugin};
kablam!    |                                 ^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.46 secs
boom! running `docker rm -f 69638b53537df84db93496144580021d4be0b04705ff383b218d2ec142455c10`
blam! 69638b53537df84db93496144580021d4be0b04705ff383b218d2ec142455c10
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 3e0adce017d6ec3de399186aaa8ff3234a3c9edba85fab5d26ef9223e0d98b26
boom! running `docker start -a 3e0adce017d6ec3de399186aaa8ff3234a3c9edba85fab5d26ef9223e0d98b26`
kablam!    Compiling vst2 v0.0.1 (file:///source)
kablam! error[E0591]: `fn(*mut api::AEffect, i32, i32, isize, *mut libc::c_void, f32) -> isize {interfaces::dispatch}` is zero-sized and can't be transmuted to `usize`
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 372 |         assert_fn_eq!(aeffect.dispatcher, interfaces::dispatch);
kablam!     |         -------------------------------------------------------- in this macro invocation
kablam!     |
kablam! note: cast with `as` to a pointer instead
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 372 |         assert_fn_eq!(aeffect.dispatcher, interfaces::dispatch);
kablam!     |         -------------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0591]: `fn(*mut api::AEffect, *mut *mut f32, *mut *mut f32, i32) {interfaces::process_deprecated}` is zero-sized and can't be transmuted to `usize`
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 373 |         assert_fn_eq!(aeffect._process, interfaces::process_deprecated);
kablam!     |         ---------------------------------------------------------------- in this macro invocation
kablam!     |
kablam! note: cast with `as` to a pointer instead
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 373 |         assert_fn_eq!(aeffect._process, interfaces::process_deprecated);
kablam!     |         ---------------------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0591]: `fn(*mut api::AEffect, i32, f32) {interfaces::set_parameter}` is zero-sized and can't be transmuted to `usize`
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 374 |         assert_fn_eq!(aeffect.setParameter, interfaces::set_parameter);
kablam!     |         --------------------------------------------------------------- in this macro invocation
kablam!     |
kablam! note: cast with `as` to a pointer instead
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 374 |         assert_fn_eq!(aeffect.setParameter, interfaces::set_parameter);
kablam!     |         --------------------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0591]: `fn(*mut api::AEffect, i32) -> f32 {interfaces::get_parameter}` is zero-sized and can't be transmuted to `usize`
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 375 |         assert_fn_eq!(aeffect.getParameter, interfaces::get_parameter);
kablam!     |         --------------------------------------------------------------- in this macro invocation
kablam!     |
kablam! note: cast with `as` to a pointer instead
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 375 |         assert_fn_eq!(aeffect.getParameter, interfaces::get_parameter);
kablam!     |         --------------------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0591]: `fn(*mut api::AEffect, *mut *mut f32, *mut *mut f32, i32) {interfaces::process_replacing}` is zero-sized and can't be transmuted to `usize`
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 385 |         assert_fn_eq!(aeffect.processReplacing, interfaces::process_replacing);
kablam!     |         ----------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam! note: cast with `as` to a pointer instead
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 385 |         assert_fn_eq!(aeffect.processReplacing, interfaces::process_replacing);
kablam!     |         ----------------------------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0591]: `fn(*mut api::AEffect, *mut *mut f64, *mut *mut f64, i32) {interfaces::process_replacing_f64}` is zero-sized and can't be transmuted to `usize`
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 386 |         assert_fn_eq!(aeffect.processReplacingF64, interfaces::process_replacing_f64);
kablam!     |         ------------------------------------------------------------------------------ in this macro invocation
kablam!     |
kablam! note: cast with `as` to a pointer instead
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 386 |         assert_fn_eq!(aeffect.processReplacingF64, interfaces::process_replacing_f64);
kablam!     |         ------------------------------------------------------------------------------ in this macro invocation
kablam! 
kablam! error: aborting due to 6 previous errors
kablam! 
kablam! error: Could not compile `vst2`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 3e0adce017d6ec3de399186aaa8ff3234a3c9edba85fab5d26ef9223e0d98b26`
blam! 3e0adce017d6ec3de399186aaa8ff3234a3c9edba85fab5d26ef9223e0d98b26
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! e5debd6cace5941e15dcc28a4fd0906c36eb2f80403d665b367649bf7d4ecf2e
boom! running `docker start -a e5debd6cace5941e15dcc28a4fd0906c36eb2f80403d665b367649bf7d4ecf2e`
kablam!    Compiling vst2 v0.0.1 (file:///source)
kablam! error[E0591]: `fn(*mut api::AEffect, i32, i32, isize, *mut libc::c_void, f32) -> isize {interfaces::dispatch}` is zero-sized and can't be transmuted to `usize`
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 372 |         assert_fn_eq!(aeffect.dispatcher, interfaces::dispatch);
kablam!     |         -------------------------------------------------------- in this macro invocation
kablam!     |
kablam! note: cast with `as` to a pointer instead
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 372 |         assert_fn_eq!(aeffect.dispatcher, interfaces::dispatch);
kablam!     |         -------------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0591]: `fn(*mut api::AEffect, *mut *mut f32, *mut *mut f32, i32) {interfaces::process_deprecated}` is zero-sized and can't be transmuted to `usize`
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 373 |         assert_fn_eq!(aeffect._process, interfaces::process_deprecated);
kablam!     |         ---------------------------------------------------------------- in this macro invocation
kablam!     |
kablam! note: cast with `as` to a pointer instead
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 373 |         assert_fn_eq!(aeffect._process, interfaces::process_deprecated);
kablam!     |         ---------------------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0591]: `fn(*mut api::AEffect, i32, f32) {interfaces::set_parameter}` is zero-sized and can't be transmuted to `usize`
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 374 |         assert_fn_eq!(aeffect.setParameter, interfaces::set_parameter);
kablam!     |         --------------------------------------------------------------- in this macro invocation
kablam!     |
kablam! note: cast with `as` to a pointer instead
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 374 |         assert_fn_eq!(aeffect.setParameter, interfaces::set_parameter);
kablam!     |         --------------------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0591]: `fn(*mut api::AEffect, i32) -> f32 {interfaces::get_parameter}` is zero-sized and can't be transmuted to `usize`
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 375 |         assert_fn_eq!(aeffect.getParameter, interfaces::get_parameter);
kablam!     |         --------------------------------------------------------------- in this macro invocation
kablam!     |
kablam! note: cast with `as` to a pointer instead
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 375 |         assert_fn_eq!(aeffect.getParameter, interfaces::get_parameter);
kablam!     |         --------------------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0591]: `fn(*mut api::AEffect, *mut *mut f32, *mut *mut f32, i32) {interfaces::process_replacing}` is zero-sized and can't be transmuted to `usize`
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 385 |         assert_fn_eq!(aeffect.processReplacing, interfaces::process_replacing);
kablam!     |         ----------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam! note: cast with `as` to a pointer instead
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 385 |         assert_fn_eq!(aeffect.processReplacing, interfaces::process_replacing);
kablam!     |         ----------------------------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0591]: `fn(*mut api::AEffect, *mut *mut f64, *mut *mut f64, i32) {interfaces::process_replacing_f64}` is zero-sized and can't be transmuted to `usize`
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 386 |         assert_fn_eq!(aeffect.processReplacingF64, interfaces::process_replacing_f64);
kablam!     |         ------------------------------------------------------------------------------ in this macro invocation
kablam!     |
kablam! note: cast with `as` to a pointer instead
kablam!    --> src/lib.rs:363:25
kablam!     |
kablam! 363 |                         mem::transmute::<_, usize>($b)
kablam!     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 386 |         assert_fn_eq!(aeffect.processReplacingF64, interfaces::process_replacing_f64);
kablam!     |         ------------------------------------------------------------------------------ in this macro invocation
kablam! 
kablam! error: aborting due to 6 previous errors
kablam! 
kablam! error: Could not compile `vst2`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f e5debd6cace5941e15dcc28a4fd0906c36eb2f80403d665b367649bf7d4ecf2e`
blam! e5debd6cace5941e15dcc28a4fd0906c36eb2f80403d665b367649bf7d4ecf2e
