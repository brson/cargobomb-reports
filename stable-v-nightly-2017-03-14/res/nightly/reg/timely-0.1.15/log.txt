boom! testing timely-0.1.15 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 8e776eec3fd4552fe86d7d3dbbe66b754402e5564c48c729fc4d3a5a0e92e36a
boom! running `docker start -a 8e776eec3fd4552fe86d7d3dbbe66b754402e5564c48c729fc4d3a5a0e92e36a`
kablam!    Compiling timely v0.1.15 (file:///source)
kablam! warning: unused import: `MutableAntichain`
kablam!  --> src/dataflow/operators/input.rs:7:26
kablam!   |
kablam! 7 | use progress::frontier::{MutableAntichain, Antichain};
kablam!   |                          ^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `timely_communication::Allocate`
kablam!   --> src/dataflow/operators/unordered_input.rs:12:5
kablam!    |
kablam! 12 | use timely_communication::Allocate;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: patterns aren't allowed in methods without bodies
kablam!   --> src/dataflow/operators/inspect.rs:33:68
kablam!    |
kablam! 33 |     fn inspect_batch<F: FnMut(&G::Timestamp, &[D])+'static>(&self, mut func: F) -> Self;
kablam!    |                                                                    ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(patterns_in_fns_without_body)] on by default
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #35203 <https://github.com/rust-lang/rust/issues/35203>
kablam! 
kablam! warning: unused import: `Allocate`
kablam!   --> src/dataflow/operators/broadcast.rs:14:28
kablam!    |
kablam! 14 | use timely_communication::{Allocate};
kablam!    |                            ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `timely_communication::Allocate`
kablam!   --> src/dataflow/operators/to_stream.rs:12:5
kablam!    |
kablam! 12 | use timely_communication::Allocate;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Read`
kablam!   --> src/dataflow/operators/capture.rs:72:15
kablam!    |
kablam! 72 | use std::io::{Read, Write};
kablam!    |               ^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: field is never used: `capability`
kablam!    --> src/dataflow/channels/pushers/buffer.rs:134:5
kablam!     |
kablam! 134 |     capability: Capability<T>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `dataflow::Scope`
kablam!   --> src/logging.rs:16:5
kablam!    |
kablam! 16 | use dataflow::Scope;
kablam!    |     ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: static variable `precise_time_ns_delta` should have an upper case name such as `PRECISE_TIME_NS_DELTA`
kablam!   --> src/logging.rs:21:1
kablam!    |
kablam! 21 | static mut precise_time_ns_delta: Option<i64> = None;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_upper_case_globals)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 5.44 secs
boom! running `docker rm -f 8e776eec3fd4552fe86d7d3dbbe66b754402e5564c48c729fc4d3a5a0e92e36a`
blam! 8e776eec3fd4552fe86d7d3dbbe66b754402e5564c48c729fc4d3a5a0e92e36a
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! acc3e12dd46e5e47c825fa96097a7f0906fe04f40a50134eefc646a9c9c8a027
boom! running `docker start -a acc3e12dd46e5e47c825fa96097a7f0906fe04f40a50134eefc646a9c9c8a027`
kablam!    Compiling timely v0.1.15 (file:///source)
kablam! warning: unused import: `Stream`
kablam!  --> examples/unordered_input.rs:6:24
kablam!   |
kablam! 6 | use timely::dataflow::{Stream, Scope};
kablam!   |                        ^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `MutableAntichain`
kablam!  --> src/dataflow/operators/input.rs:7:26
kablam!   |
kablam! 7 | use progress::frontier::{MutableAntichain, Antichain};
kablam!   |                          ^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `timely_communication::Allocate`
kablam!   --> src/dataflow/operators/unordered_input.rs:12:5
kablam!    |
kablam! 12 | use timely_communication::Allocate;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: patterns aren't allowed in methods without bodies
kablam!   --> src/dataflow/operators/inspect.rs:33:68
kablam!    |
kablam! 33 |     fn inspect_batch<F: FnMut(&G::Timestamp, &[D])+'static>(&self, mut func: F) -> Self;
kablam!    |                                                                    ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(patterns_in_fns_without_body)] on by default
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #35203 <https://github.com/rust-lang/rust/issues/35203>
kablam! 
kablam! warning: unused import: `Allocate`
kablam!   --> src/dataflow/operators/broadcast.rs:14:28
kablam!    |
kablam! 14 | use timely_communication::{Allocate};
kablam!    |                            ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `timely_communication::Allocate`
kablam!   --> src/dataflow/operators/to_stream.rs:12:5
kablam!    |
kablam! 12 | use timely_communication::Allocate;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Read`
kablam!   --> src/dataflow/operators/capture.rs:72:15
kablam!    |
kablam! 72 | use std::io::{Read, Write};
kablam!    |               ^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: field is never used: `capability`
kablam!    --> src/dataflow/channels/pushers/buffer.rs:134:5
kablam!     |
kablam! 134 |     capability: Capability<T>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `dataflow::Scope`
kablam!   --> src/logging.rs:16:5
kablam!    |
kablam! 16 | use dataflow::Scope;
kablam!    |     ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: static variable `precise_time_ns_delta` should have an upper case name such as `PRECISE_TIME_NS_DELTA`
kablam!   --> src/logging.rs:21:1
kablam!    |
kablam! 21 | static mut precise_time_ns_delta: Option<i64> = None;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_upper_case_globals)] on by default
kablam! 
kablam! warning: unused import: `timely_communication::allocator::Allocate`
kablam!  --> examples/broadcast.rs:6:5
kablam!   |
kablam! 6 | use timely_communication::allocator::Allocate;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 63.75 secs
boom! running `docker rm -f acc3e12dd46e5e47c825fa96097a7f0906fe04f40a50134eefc646a9c9c8a027`
blam! acc3e12dd46e5e47c825fa96097a7f0906fe04f40a50134eefc646a9c9c8a027
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! e56ec2270738de775f08cd4834aa6f28cd3a05727ae9c94c2d72e6b9cd414d42
boom! running `docker start -a e56ec2270738de775f08cd4834aa6f28cd3a05727ae9c94c2d72e6b9cd414d42`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/timely-75cae180670db1cc
blam! 
blam! running 4 tests
blam! test dataflow::operators::notificator::drain_into_if_behaves_correctly ... ok
blam! test logging::start_stop_abomonation_roundtrip ... ok
blam! test dataflow::operators::notificator::notificator_delivers_notifications_in_topo_order ... ok
blam! test dataflow::operators::probe::tests::probe ... ok
blam! 
blam! test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests timely
blam! 
blam! running 51 tests
blam! test src/dataflow/mod.rs - dataflow (line 7) ... ok
blam! test src/dataflow/operators/aggregation/aggregate.rs - dataflow::operators::aggregation::aggregate::Aggregate::aggregate (line 26) ... ok
blam! test src/dataflow/operators/aggregation/aggregate.rs - dataflow::operators::aggregation::aggregate::Aggregate::aggregate (line 48) ... ok
blam! test src/dataflow/operators/aggregation/state_machine.rs - dataflow::operators::aggregation::state_machine::StateMachine::state_machine (line 28) ... ok
blam! test src/dataflow/operators/binary.rs - dataflow::operators::binary::Binary::binary_notify (line 66) ... ok
blam! test src/dataflow/operators/binary.rs - dataflow::operators::binary::Binary::binary_stream (line 33) ... ok
blam! test src/dataflow/operators/capture.rs - dataflow::operators::capture (line 16) ... ok
blam! test src/dataflow/operators/broadcast.rs - dataflow::operators::broadcast::Broadcast::broadcast (line 23) ... ok
blam! test src/dataflow/operators/capture.rs - dataflow::operators::capture (line 44) ... ok
blam! test src/dataflow/operators/capture.rs - dataflow::operators::capture::Capture::capture_into (line 138) ... ok
blam! test src/dataflow/operators/capture.rs - dataflow::operators::capture::Capture::capture_into (line 98) ... ok
blam! test src/dataflow/operators/capture.rs - dataflow::operators::capture::Extract::extract (line 218) ... ok
blam! test src/dataflow/operators/concat.rs - dataflow::operators::concat::Concat::concat (line 23) ... ok
blam! test src/dataflow/operators/concat.rs - dataflow::operators::concat::Concatenate::concatenate (line 50) ... ok
blam! test src/dataflow/operators/count.rs - dataflow::operators::count::Accumulate::accumulate (line 18) ... ok
blam! test src/dataflow/operators/count.rs - dataflow::operators::count::Accumulate::count (line 37) ... ok
blam! test src/dataflow/operators/delay.rs - dataflow::operators::delay::Delay::delay (line 26) ... ok
blam! test src/dataflow/operators/delay.rs - dataflow::operators::delay::Delay::delay_batch (line 55) ... ok
blam! test src/dataflow/operators/enterleave.rs - dataflow::operators::enterleave (line 8) ... ok
blam! test src/dataflow/operators/enterleave.rs - dataflow::operators::enterleave::Enter::enter (line 45) ... ok
blam! test src/dataflow/operators/enterleave.rs - dataflow::operators::enterleave::EnterAt::enter_at (line 64) ... ok
blam! test src/dataflow/operators/enterleave.rs - dataflow::operators::enterleave::Leave::leave (line 107) ... ok
blam! test src/dataflow/operators/feedback.rs - dataflow::operators::feedback::ConnectLoop::connect_loop (line 99) ... ok
blam! test src/dataflow/operators/exchange.rs - dataflow::operators::exchange::Exchange::exchange (line 13) ... ok
blam! test src/dataflow/operators/feedback.rs - dataflow::operators::feedback::LoopVariable::loop_variable (line 32) ... ok
blam! test src/dataflow/operators/filter.rs - dataflow::operators::filter::Filter::filter (line 13) ... ok
blam! test src/dataflow/operators/handles.rs - dataflow::operators::handles::InputHandle<'a, T, D>::for_each (line 38) ... ok
blam! test src/dataflow/operators/handles.rs - dataflow::operators::handles::OutputHandle<'a, T, D, P>::session (line 82) ... ok
blam! test src/dataflow/operators/input.rs - dataflow::operators::input::Input::new_input (line 42) ... ok
blam! test src/dataflow/operators/inspect.rs - dataflow::operators::inspect::Inspect::inspect (line 13) ... ok
blam! test src/dataflow/operators/inspect.rs - dataflow::operators::inspect::Inspect::inspect_batch (line 25) ... ok
blam! test src/dataflow/operators/map.rs - dataflow::operators::map::Map::flat_map (line 39) ... ok
blam! test src/dataflow/operators/map.rs - dataflow::operators::map::Map::map (line 13) ... ok
blam! test src/dataflow/operators/map.rs - dataflow::operators::map::Map::map_in_place (line 26) ... ok
blam! test src/dataflow/operators/notificator.rs - dataflow::operators::notificator::Notificator<T>::notify_at (line 57) ... ok
blam! test src/dataflow/operators/partition.rs - dataflow::operators::partition::Partition::partition (line 25) ... ok
blam! test src/dataflow/operators/probe.rs - dataflow::operators::probe::Probe::probe (line 26) ... ok
blam! test src/dataflow/operators/reclock.rs - dataflow::operators::reclock::Reclock::reclock (line 20) ... ok
blam! test src/dataflow/operators/to_stream.rs - dataflow::operators::to_stream::ToStream::to_stream (line 32) ... ok
blam! test src/dataflow/operators/unary.rs - dataflow::operators::unary::Unary::unary_notify (line 58) ... ok
blam! test src/dataflow/operators/unary.rs - dataflow::operators::unary::Unary::unary_stream (line 33) ... ok
blam! test src/dataflow/operators/unordered_input.rs - dataflow::operators::unordered_input::UnorderedInput::new_unordered_input (line 40) ... ok
blam! test src/execute.rs - execute::example (line 22) ... ok
blam! test src/dataflow/scopes/mod.rs - dataflow::scopes::Scope::scoped (line 58) ... ok
blam! test src/execute.rs - execute::example (line 37) ... ok
blam! test src/execute.rs - execute::execute_from_args (line 165) ... ignored
blam! test src/execute.rs - execute::execute_from_args (line 172) ... ignored
blam! test src/execute.rs - execute::execute (line 77) ... ok
blam! test src/execute.rs - execute::execute (line 95) ... ok
blam! test src/execute.rs - execute::execute_from_args (line 152) ... ok
blam! test src/lib.rs -  (line 25) ... ok
blam! 
blam! test result: ok. 49 passed; 0 failed; 2 ignored; 0 measured
blam! 
boom! running `docker rm -f e56ec2270738de775f08cd4834aa6f28cd3a05727ae9c94c2d72e6b9cd414d42`
blam! e56ec2270738de775f08cd4834aa6f28cd3a05727ae9c94c2d72e6b9cd414d42
