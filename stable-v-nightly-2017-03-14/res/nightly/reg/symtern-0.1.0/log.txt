boom! testing symtern-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! b4af76e37bdeda44c9650666325fce4a484b7f7a48636357c74dbab61fcec824
boom! running `docker start -a b4af76e37bdeda44c9650666325fce4a484b7f7a48636357c74dbab61fcec824`
kablam!    Compiling symtern v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.85 secs
boom! running `docker rm -f b4af76e37bdeda44c9650666325fce4a484b7f7a48636357c74dbab61fcec824`
blam! b4af76e37bdeda44c9650666325fce4a484b7f7a48636357c74dbab61fcec824
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 8d08612db5f7441d27aad93f00c4fa437521b703d6931f3e0becf3a6e446385e
boom! running `docker start -a 8d08612db5f7441d27aad93f00c4fa437521b703d6931f3e0becf3a6e446385e`
kablam!    Compiling symtern v0.1.0 (file:///source)
kablam! warning: unused variable: `some_sym`
kablam!   --> examples/combining-adaptors.rs:36:13
kablam!    |
kablam! 36 |         let some_sym = basic_pool.intern("Mornin'!").expect("interning failed");
kablam!    |             ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `inline_sym`
kablam!   --> examples/combining-adaptors.rs:39:13
kablam!    |
kablam! 39 |         let inline_sym = inline_pool.intern("G'day").expect("interning failed");
kablam!    |             ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 6.16 secs
boom! running `docker rm -f 8d08612db5f7441d27aad93f00c4fa437521b703d6931f3e0becf3a6e446385e`
blam! 8d08612db5f7441d27aad93f00c4fa437521b703d6931f3e0becf3a6e446385e
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 88996d652a8d783fe359c3ece237e13addd9bec69c6d8c0b98556792f2890939
boom! running `docker start -a 88996d652a8d783fe359c3ece237e13addd9bec69c6d8c0b98556792f2890939`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/symtern-3a02ff73bbf97444
blam! 
blam! running 5 tests
blam! test adaptors::inline::test_msb_mask ... ok
blam! test adaptors::inline::tests::inlined_values_do_not_affect_size ... ok
blam! test adaptors::luma::tests::can_intern_multiple_value ... ok
blam! test basic::tests::has_expected_len_and_capacity ... ok
blam! test basic::tests::resolve_returns_expected_results ... ok
blam! 
blam! test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/tests-b26e0d92664847f0
blam! 
blam! running 1 test
blam! 
blam! running 3 tests
blam! test [compile-fail] compile-fail/luma-is-lifetime-safe.rs ... FAILED
blam! test [compile-fail] compile-fail/losing-symbols.rs ... FAILED
blam! test [compile-fail] compile-fail/naive-lifetime-safety.rs ... ok
blam! 
blam! failures:
blam! 
blam! ---- [compile-fail] compile-fail/luma-is-lifetime-safe.rs stdout ----
blam! 	
blam! error: tests/compile-fail/luma-is-lifetime-safe.rs:11: unexpected "error": '11:1: 11:22: can't find crate for `symtern` [E0463]'
blam! 
blam! error: tests/compile-fail/luma-is-lifetime-safe.rs:23: expected error not found: borrowed value does not live long enough
blam! 
blam! error: 1 unexpected errors found, 1 expected errors not found
blam! status: exit code: 101
blam! command: rustc tests/compile-fail/luma-is-lifetime-safe.rs -L /tmp --target=x86_64-unknown-linux-gnu --error-format json -L /tmp/luma-is-lifetime-safe.stage-id.compile-fail.libaux -C prefer-dynamic -o /tmp/luma-is-lifetime-safe.stage-id -L target/debug -L target/debug/deps
blam! unexpected errors (from JSON output): [
blam!     Error {
blam!         line_num: 11,
blam!         kind: Some(
blam!             Error
blam!         ),
blam!         msg: "11:1: 11:22: can\'t find crate for `symtern` [E0463]"
blam!     }
blam! ]
blam! 
blam! not found errors (from test file): [
blam!     Error {
blam!         line_num: 23,
blam!         kind: Some(
blam!             Error
blam!         ),
blam!         msg: "borrowed value does not live long enough"
blam!     }
blam! ]
blam! 
blam! thread '[compile-fail] compile-fail/luma-is-lifetime-safe.rs' panicked at 'explicit panic', /cargo-home/registry/src/github.com-1ecc6299db9ec823/compiletest_rs-0.2.5/src/runtest.rs:1097
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! ---- [compile-fail] compile-fail/losing-symbols.rs stdout ----
blam! 	
blam! error: tests/compile-fail/losing-symbols.rs:10: unexpected "error": '10:1: 10:22: can't find crate for `symtern` [E0463]'
blam! 
blam! error: tests/compile-fail/losing-symbols.rs:24: expected error not found: mismatched types [E0308]
blam! 
blam! error: 1 unexpected errors found, 1 expected errors not found
blam! status: exit code: 101
blam! command: rustc tests/compile-fail/losing-symbols.rs -L /tmp --target=x86_64-unknown-linux-gnu --error-format json -L /tmp/losing-symbols.stage-id.compile-fail.libaux -C prefer-dynamic -o /tmp/losing-symbols.stage-id -L target/debug -L target/debug/deps
blam! unexpected errors (from JSON output): [
blam!     Error {
blam!         line_num: 10,
blam!         kind: Some(
blam!             Error
blam!         ),
blam!         msg: "10:1: 10:22: can\'t find crate for `symtern` [E0463]"
blam!     }
blam! ]
blam! 
blam! not found errors (from test file): [
blam!     Error {
blam!         line_num: 24,
blam!         kind: Some(
blam!             Error
blam!         ),
blam!         msg: "mismatched types [E0308]"
blam!     }
blam! ]
blam! 
blam! thread '[compile-fail] compile-fail/losing-symbols.rs' panicked at 'explicit panic', /cargo-home/registry/src/github.com-1ecc6299db9ec823/compiletest_rs-0.2.5/src/runtest.rs:1097
blam! 
blam! 
blam! failures:
blam!     [compile-fail] compile-fail/losing-symbols.rs
blam!     [compile-fail] compile-fail/luma-is-lifetime-safe.rs
kablam! error: test failed
blam! 
blam! test result: FAILED. 1 passed; 2 failed; 0 ignored; 0 measured
blam! 
blam! test compile_test ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- compile_test stdout ----
blam! 	thread 'compile_test' panicked at 'Some tests failed', /cargo-home/registry/src/github.com-1ecc6299db9ec823/compiletest_rs-0.2.5/src/compiletest.rs:122
blam! 
blam! 
blam! failures:
blam!     compile_test
blam! 
blam! test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 88996d652a8d783fe359c3ece237e13addd9bec69c6d8c0b98556792f2890939`
blam! 88996d652a8d783fe359c3ece237e13addd9bec69c6d8c0b98556792f2890939
