boom! testing libunicorn-sys-0.4.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 95d90b4cc69e445508090eb6a48a3b60d9313e583d8326657054fbbcd1b6760f
boom! running `docker start -a 95d90b4cc69e445508090eb6a48a3b60d9313e583d8326657054fbbcd1b6760f`
kablam!    Compiling libunicorn-sys v0.4.0 (file:///source)
kablam! warning: variant `LITTLE_ENDIAN` should have a camel case name such as `LittleEndian`
kablam!   --> unicorn_const.rs:28:5
kablam!    |
kablam! 28 |     LITTLE_ENDIAN = 0, // little-endian mode (default mode)
kablam!    |     ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MODE_16` should have a camel case name such as `Mode16`
kablam!   --> unicorn_const.rs:30:5
kablam!    |
kablam! 30 |     MODE_16 = 1 << 1, // 16-bit mode (X86)
kablam!    |     ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MODE_32` should have a camel case name such as `Mode32`
kablam!   --> unicorn_const.rs:31:5
kablam!    |
kablam! 31 |     MODE_32 = 1 << 2, // 32-bit mode (X86)
kablam!    |     ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MODE_64` should have a camel case name such as `Mode64`
kablam!   --> unicorn_const.rs:32:5
kablam!    |
kablam! 32 |     MODE_64 = 1 << 3, // 64-bit mode (X86, PPC)
kablam!    |     ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `BIG_ENDIAN` should have a camel case name such as `BigEndian`
kablam!   --> unicorn_const.rs:41:5
kablam!    |
kablam! 41 |     BIG_ENDIAN = 1 << 30, /* big-endian mode
kablam!    |     ^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `READ_UNMAPPED` should have a camel case name such as `ReadUnmapped`
kablam!   --> unicorn_const.rs:57:5
kablam!    |
kablam! 57 |     READ_UNMAPPED, // Quit emulation due to READ on unmapped memory: uc_emu_start()
kablam!    |     ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `WRITE_UNMAPPED` should have a camel case name such as `WriteUnmapped`
kablam!   --> unicorn_const.rs:58:5
kablam!    |
kablam! 58 |     WRITE_UNMAPPED, // Quit emulation due to WRITE on unmapped memory: uc_emu_start()
kablam!    |     ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ETCH_UNMAPPED` should have a camel case name such as `EtchUnmapped`
kablam!   --> unicorn_const.rs:59:5
kablam!    |
kablam! 59 |     ETCH_UNMAPPED, // Quit emulation due to FETCH on unmapped memory: uc_emu_start()
kablam!    |     ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `INSN_INVALID` should have a camel case name such as `InsnInvalid`
kablam!   --> unicorn_const.rs:61:5
kablam!    |
kablam! 61 |     INSN_INVALID, // Quit emulation due to invalid instruction: uc_emu_start()
kablam!    |     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `WRITE_PROT` should have a camel case name such as `WriteProt`
kablam!   --> unicorn_const.rs:63:5
kablam!    |
kablam! 63 |     WRITE_PROT, // Quit emulation due to UC_MEM_WRITE_PROT violation: uc_emu_start()
kablam!    |     ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `READ_PROT` should have a camel case name such as `ReadProt`
kablam!   --> unicorn_const.rs:64:5
kablam!    |
kablam! 64 |     READ_PROT, // Quit emulation due to UC_MEM_READ_PROT violation: uc_emu_start()
kablam!    |     ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `FETCH_PROT` should have a camel case name such as `FetchProt`
kablam!   --> unicorn_const.rs:65:5
kablam!    |
kablam! 65 |     FETCH_PROT, // Quit emulation due to UC_MEM_FETCH_PROT violation: uc_emu_start()
kablam!    |     ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `READ_UNALIGNED` should have a camel case name such as `ReadUnaligned`
kablam!   --> unicorn_const.rs:67:5
kablam!    |
kablam! 67 |     READ_UNALIGNED, // Unaligned read
kablam!    |     ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `WRITE_UNALIGNED` should have a camel case name such as `WriteUnaligned`
kablam!   --> unicorn_const.rs:68:5
kablam!    |
kablam! 68 |     WRITE_UNALIGNED, // Unaligned write
kablam!    |     ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `FETCH_UNALIGNED` should have a camel case name such as `FetchUnaligned`
kablam!   --> unicorn_const.rs:69:5
kablam!    |
kablam! 69 |     FETCH_UNALIGNED, // Unaligned fetch
kablam!    |     ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `HOOK_EXIST` should have a camel case name such as `HookExist`
kablam!   --> unicorn_const.rs:70:5
kablam!    |
kablam! 70 |     HOOK_EXIST, // hook for this event already existed
kablam!    |     ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `READ_UNMAPPED` should have a camel case name such as `ReadUnmapped`
kablam!    --> unicorn_const.rs:102:5
kablam!     |
kablam! 102 |     READ_UNMAPPED, // Unmapped memory is read from
kablam!     |     ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `WRITE_UNMAPPED` should have a camel case name such as `WriteUnmapped`
kablam!    --> unicorn_const.rs:103:5
kablam!     |
kablam! 103 |     WRITE_UNMAPPED, // Unmapped memory is written to
kablam!     |     ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_FETCH_UNMAPPED` should have a camel case name such as `MemFetchUnmapped`
kablam!    --> unicorn_const.rs:104:5
kablam!     |
kablam! 104 |     MEM_FETCH_UNMAPPED, // Unmapped memory is fetched
kablam!     |     ^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `WRITE_PROT` should have a camel case name such as `WriteProt`
kablam!    --> unicorn_const.rs:105:5
kablam!     |
kablam! 105 |     WRITE_PROT, // Write to write protected, but mapped, memory
kablam!     |     ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `READ_PROT` should have a camel case name such as `ReadProt`
kablam!    --> unicorn_const.rs:106:5
kablam!     |
kablam! 106 |     READ_PROT, // Read from read protected, but mapped, memory
kablam!     |     ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `FETCH_PROT` should have a camel case name such as `FetchProt`
kablam!    --> unicorn_const.rs:107:5
kablam!     |
kablam! 107 |     FETCH_PROT, // Fetch from non-executable, but mapped, memory
kablam!     |     ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_READ_UNMAPPED` should have a camel case name such as `MemReadUnmapped`
kablam!    --> unicorn_const.rs:117:5
kablam!     |
kablam! 117 |     MEM_READ_UNMAPPED = 1 << 4, // Hook for memory read on unmapped memory
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_WRITE_UNMAPPED` should have a camel case name such as `MemWriteUnmapped`
kablam!    --> unicorn_const.rs:118:5
kablam!     |
kablam! 118 |     MEM_WRITE_UNMAPPED = 1 << 5, // Hook for invalid memory write events
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_FETCH_UNMAPPED` should have a camel case name such as `MemFetchUnmapped`
kablam!    --> unicorn_const.rs:119:5
kablam!     |
kablam! 119 |     MEM_FETCH_UNMAPPED = 1 << 6, // Hook for invalid memory fetch for execution events
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_READ_PROT` should have a camel case name such as `MemReadProt`
kablam!    --> unicorn_const.rs:120:5
kablam!     |
kablam! 120 |     MEM_READ_PROT = 1 << 7, // Hook for memory read on read-protected memory
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_WRITE_PROT` should have a camel case name such as `MemWriteProt`
kablam!    --> unicorn_const.rs:121:5
kablam!     |
kablam! 121 |     MEM_WRITE_PROT = 1 << 8, // Hook for memory write on write-protected memory
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_FETCH_PROT` should have a camel case name such as `MemFetchProt`
kablam!    --> unicorn_const.rs:122:5
kablam!     |
kablam! 122 |     MEM_FETCH_PROT = 1 << 9, // Hook for memory fetch on non-executable memory
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_READ` should have a camel case name such as `MemRead`
kablam!    --> unicorn_const.rs:123:5
kablam!     |
kablam! 123 |     MEM_READ = 1 << 10, // Hook memory read events.
kablam!     |     ^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_WRITE` should have a camel case name such as `MemWrite`
kablam!    --> unicorn_const.rs:124:5
kablam!     |
kablam! 124 |     MEM_WRITE = 1 << 11, // Hook memory write events.
kablam!     |     ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_FETCH` should have a camel case name such as `MemFetch`
kablam!    --> unicorn_const.rs:125:5
kablam!     |
kablam! 125 |     MEM_FETCH = 1 << 12, // Hook memory fetch for execution events
kablam!     |     ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_READ_UNMAPPED` should have a camel case name such as `MemReadUnmapped`
kablam!    --> unicorn_const.rs:138:5
kablam!     |
kablam! 138 |     MEM_READ_UNMAPPED = 1 << 4, // Hook for memory read on unmapped memory
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_WRITE_UNMAPPED` should have a camel case name such as `MemWriteUnmapped`
kablam!    --> unicorn_const.rs:139:5
kablam!     |
kablam! 139 |     MEM_WRITE_UNMAPPED = 1 << 5, // Hook for invalid memory write events
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_FETCH_UNMAPPED` should have a camel case name such as `MemFetchUnmapped`
kablam!    --> unicorn_const.rs:140:5
kablam!     |
kablam! 140 |     MEM_FETCH_UNMAPPED = 1 << 6, // Hook for invalid memory fetch for execution events
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_READ_PROT` should have a camel case name such as `MemReadProt`
kablam!    --> unicorn_const.rs:141:5
kablam!     |
kablam! 141 |     MEM_READ_PROT = 1 << 7, // Hook for memory read on read-protected memory
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_WRITE_PROT` should have a camel case name such as `MemWriteProt`
kablam!    --> unicorn_const.rs:142:5
kablam!     |
kablam! 142 |     MEM_WRITE_PROT = 1 << 8, // Hook for memory write on write-protected memory
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_FETCH_PROT` should have a camel case name such as `MemFetchProt`
kablam!    --> unicorn_const.rs:143:5
kablam!     |
kablam! 143 |     MEM_FETCH_PROT = 1 << 9, // Hook for memory fetch on non-executable memory
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_READ` should have a camel case name such as `MemRead`
kablam!    --> unicorn_const.rs:144:5
kablam!     |
kablam! 144 |     MEM_READ = 1 << 10, // Hook memory read events.
kablam!     |     ^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_WRITE` should have a camel case name such as `MemWrite`
kablam!    --> unicorn_const.rs:145:5
kablam!     |
kablam! 145 |     MEM_WRITE = 1 << 11, // Hook memory write events.
kablam!     |     ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_FETCH` should have a camel case name such as `MemFetch`
kablam!    --> unicorn_const.rs:146:5
kablam!     |
kablam! 146 |     MEM_FETCH = 1 << 12, // Hook memory fetch for execution events
kablam!     |     ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_UNMAPPED` should have a camel case name such as `MemUnmapped`
kablam!    --> unicorn_const.rs:147:5
kablam!     |
kablam! 147 |     MEM_UNMAPPED = 0b111 << 4, // hook type for all events of unmapped memory access
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_PROT` should have a camel case name such as `MemProt`
kablam!    --> unicorn_const.rs:148:5
kablam!     |
kablam! 148 |     MEM_PROT = 0b111 << 7, // hook type for all events of illegal protected memory access
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_READ_INVALID` should have a camel case name such as `MemReadInvalid`
kablam!    --> unicorn_const.rs:149:5
kablam!     |
kablam! 149 |     MEM_READ_INVALID = (1 << 4) | (1 << 7), /* Hook type for all events of illegal read memory access */
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_WRITE_INVALID` should have a camel case name such as `MemWriteInvalid`
kablam!    --> unicorn_const.rs:150:5
kablam!     |
kablam! 150 |     MEM_WRITE_INVALID = (1 << 5) | (1 << 8), /* Hook type for all events of illegal write memory access/ */
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_FETCH_INVALID` should have a camel case name such as `MemFetchInvalid`
kablam!    --> unicorn_const.rs:151:5
kablam!     |
kablam! 151 |     MEM_FETCH_INVALID = (1 << 6) | (1 << 9), /* Hook type for all events of illegal fetch memory access */
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_INVALID` should have a camel case name such as `MemInvalid`
kablam!    --> unicorn_const.rs:152:5
kablam!     |
kablam! 152 |     MEM_INVALID = (0b111111 << 4), // Hook type for all events of illegal memory access
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_VALID` should have a camel case name such as `MemValid`
kablam!    --> unicorn_const.rs:153:5
kablam!     |
kablam! 153 |     MEM_VALID = (0b111 << 10), // Hook type for all events of valid memory access
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `MEM_ALL` should have a camel case name such as `MemAll`
kablam!    --> unicorn_const.rs:154:5
kablam!     |
kablam! 154 |     MEM_ALL = 0b111111111 << 4, // Hook type for all events.
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `PAGE_SIZE` should have a camel case name such as `PageSize`
kablam!    --> unicorn_const.rs:163:5
kablam!     |
kablam! 163 |     PAGE_SIZE,
kablam!     |     ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! error: could not find native static library `unicorn`, perhaps an -L flag is missing?
kablam! 
kablam! error: Could not compile `libunicorn-sys`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 95d90b4cc69e445508090eb6a48a3b60d9313e583d8326657054fbbcd1b6760f`
blam! 95d90b4cc69e445508090eb6a48a3b60d9313e583d8326657054fbbcd1b6760f
