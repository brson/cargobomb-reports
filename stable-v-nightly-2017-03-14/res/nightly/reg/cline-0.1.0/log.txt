boom! testing cline-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 6983966a4135ea25e5b3f7244474df2da813e219c018c52458f599201bbedf62
boom! running `docker start -a 6983966a4135ea25e5b3f7244474df2da813e219c018c52458f599201bbedf62`
kablam!    Compiling termios v0.1.0
kablam!    Compiling cline v0.1.0 (file:///source)
kablam! warning: field is never used: `command`
kablam!   --> src/lib.rs:49:5
kablam!    |
kablam! 49 |     command: Vec<&'a str>,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.31 secs
boom! running `docker rm -f 6983966a4135ea25e5b3f7244474df2da813e219c018c52458f599201bbedf62`
blam! 6983966a4135ea25e5b3f7244474df2da813e219c018c52458f599201bbedf62
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 0868fc55e292835dc9d4f656e5682e2cd997cd9d0f8b193a8aa626476ff20410
boom! running `docker start -a 0868fc55e292835dc9d4f656e5682e2cd997cd9d0f8b193a8aa626476ff20410`
kablam!    Compiling cline v0.1.0 (file:///source)
kablam! warning: field is never used: `command`
kablam!   --> src/lib.rs:49:5
kablam!    |
kablam! 49 |     command: Vec<&'a str>,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.43 secs
boom! running `docker rm -f 0868fc55e292835dc9d4f656e5682e2cd997cd9d0f8b193a8aa626476ff20410`
blam! 0868fc55e292835dc9d4f656e5682e2cd997cd9d0f8b193a8aa626476ff20410
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! d2b83f0d6bc9ec21f9cfbc219f964026549afb8ddc7e010cb9586aca9f710002
boom! running `docker start -a d2b83f0d6bc9ec21f9cfbc219f964026549afb8ddc7e010cb9586aca9f710002`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/cline-82b81769d2ae80bb
blam! 
blam! running 6 tests
blam! test tests::test_complete_multi_cmd ... ok
blam! test tests::test_complete_empty_single_cmd ... ok
blam! test tests::test_complete_with_dynamic ... ok
blam! test tests::test_register_and_execute ... ok
blam! test tests::test_register_and_execute_with_arguments ... ok
blam! test tests::test_register_and_execute_multiple_times ... ok
kablam!    Doc-tests cline
blam! 
blam! test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 9 tests
blam! test src/lib.rs -  (line 39) ... ok
blam! test src/lib.rs -  (line 12) ... ok
blam! test src/lib.rs -  (line 29) ... ok
blam! test src/lib.rs -  (line 20) ... ok
blam! test src/lib.rs - Cli<'a>::exec (line 214) ... ok
blam! test src/lib.rs - cline_run (line 250) ... ignored
blam! test src/lib.rs - Cli<'a>::complete (line 164) ... ok
blam! test src/lib.rs - Cli<'a>::register_dyn_complete (line 118) ... ok
blam! test src/lib.rs - Cli<'a>::register (line 91) ... ok
blam! 
blam! test result: ok. 8 passed; 0 failed; 1 ignored; 0 measured
blam! 
boom! running `docker rm -f d2b83f0d6bc9ec21f9cfbc219f964026549afb8ddc7e010cb9586aca9f710002`
blam! d2b83f0d6bc9ec21f9cfbc219f964026549afb8ddc7e010cb9586aca9f710002
