boom! testing libimagerror-0.2.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 2e87daf0dd510940ad1251262a2c9422c59b9fced581c50c0c2479f85232a870
boom! running `docker start -a 2e87daf0dd510940ad1251262a2c9422c59b9fced581c50c0c2479f85232a870`
kablam!    Compiling libimagerror v0.2.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.50 secs
boom! running `docker rm -f 2e87daf0dd510940ad1251262a2c9422c59b9fced581c50c0c2479f85232a870`
blam! 2e87daf0dd510940ad1251262a2c9422c59b9fced581c50c0c2479f85232a870
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 957bec7a5676d40aab9822e123c47457dcc2a4cc1f90e078c1b44b3aabad0778
boom! running `docker start -a 957bec7a5676d40aab9822e123c47457dcc2a4cc1f90e078c1b44b3aabad0778`
kablam!    Compiling libimagerror v0.2.0 (file:///source)
kablam! warning: variant is never used: `CustomErrorKindA`
kablam!    --> src/error_gen.rs:247:9
kablam!     |
kablam! 245 |       generate_custom_error_types!(CustomTestError, CustomTestErrorKind,
kablam!     |  _____- starting here...
kablam! 246 | |         CustomData,
kablam! 247 | |         CustomErrorKindA => "customerrorkind a",
kablam!     | |         ^^^^^^^^^^^^^^^^
kablam! 248 | |         CustomErrorKindB => "customerrorkind B");
kablam!     | |_________________________________________________- ...ending here: in this macro invocation
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `CustomErrorKindB`
kablam!    --> src/error_gen.rs:248:9
kablam!     |
kablam! 245 |       generate_custom_error_types!(CustomTestError, CustomTestErrorKind,
kablam!     |  _____- starting here...
kablam! 246 | |         CustomData,
kablam! 247 | |         CustomErrorKindA => "customerrorkind a",
kablam! 248 | |         CustomErrorKindB => "customerrorkind B");
kablam!     | |_________^^^^^^^^^^^^^^^^________________________- ...ending here: in this macro invocation
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `test`
kablam!    --> src/error_gen.rs:251:9
kablam!     |
kablam! 251 |           pub fn test(&self) -> i32 {
kablam!     |  _________^ starting here...
kablam! 252 | |             match self.custom_data {
kablam! 253 | |                 Some(t) => t.test,
kablam! 254 | |                 None => 0,
kablam! 255 | |             }
kablam! 256 | |         }
kablam!     | |_________^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `bar`
kablam!    --> src/error_gen.rs:258:9
kablam!     |
kablam! 258 |           pub fn bar(&self) -> i64 {
kablam!     |  _________^ starting here...
kablam! 259 | |             match self.custom_data {
kablam! 260 | |                 Some(t) => t.othr,
kablam! 261 | |                 None => 0,
kablam! 262 | |             }
kablam! 263 | |         }
kablam!     | |_________^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `e`
kablam!    --> src/error_gen.rs:415:17
kablam!     |
kablam! 415 |             Err(e) => assert!(true),
kablam!     |                 ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.83 secs
boom! running `docker rm -f 957bec7a5676d40aab9822e123c47457dcc2a4cc1f90e078c1b44b3aabad0778`
blam! 957bec7a5676d40aab9822e123c47457dcc2a4cc1f90e078c1b44b3aabad0778
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! ef05eaed072cc026a0f5f4d7901bcd3f312df9ad5668f7655e0ee9e524727616
boom! running `docker start -a ef05eaed072cc026a0f5f4d7901bcd3f312df9ad5668f7655e0ee9e524727616`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/libimagerror-000547798382f033
blam! 
blam! running 14 tests
blam! test error_gen::test::test_a ... ok
blam! test error_gen::test::test_ab ... ok
blam! test error_gen::test::test_error_kind_double_mapping ... ok
blam! test error_gen::test::test_b ... ok
blam! test error_gen::test::test_error_kind_mapping ... ok
blam! test error_gen::test::test_error_option_good ... ok
blam! test error_gen::test::test_error_option_bad ... ok
blam! test error_gen::test::test_other_a ... ok
blam! test error_gen::test::test_other_ab ... ok
blam! test error_gen::test::test_other_b ... ok
blam! test iter::test::test_on_err ... ok
blam! test iter::test::test_on_err_backward ... ok
blam! test iter::test::test_unwrap_with ... ok
blam! test iter::test::test_unwrap_with_backward ... ok
blam! 
blam! test result: ok. 14 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests libimagerror
blam! 
blam! running 2 tests
blam! test src/trace.rs - trace::MapErrTrace (line 111) ... ignored
blam! test src/trace.rs - trace::trace_error (line 35) ... ignored
blam! 
blam! test result: ok. 0 passed; 0 failed; 2 ignored; 0 measured
blam! 
boom! running `docker rm -f ef05eaed072cc026a0f5f4d7901bcd3f312df9ad5668f7655e0ee9e524727616`
blam! ef05eaed072cc026a0f5f4d7901bcd3f312df9ad5668f7655e0ee9e524727616
