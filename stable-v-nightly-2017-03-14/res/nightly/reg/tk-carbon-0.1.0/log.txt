boom! testing tk-carbon-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 996d4ddb2206001b398cb342890e061c18282ba84e67894220577a6bebd7a247
boom! running `docker start -a 996d4ddb2206001b398cb342890e061c18282ba84e67894220577a6bebd7a247`
kablam!    Compiling abstract-ns v0.3.1
kablam!    Compiling tk-carbon v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.95 secs
boom! running `docker rm -f 996d4ddb2206001b398cb342890e061c18282ba84e67894220577a6bebd7a247`
blam! 996d4ddb2206001b398cb342890e061c18282ba84e67894220577a6bebd7a247
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! e12d930e16d6a11a27e27214b94bac535801b4307f1aa66d9a79b99b8f2c6c0a
boom! running `docker start -a e12d930e16d6a11a27e27214b94bac535801b4307f1aa66d9a79b99b8f2c6c0a`
kablam!    Compiling futures-cpupool v0.1.3
kablam!    Compiling tk-easyloop v0.1.1
kablam!    Compiling ns-std-threaded v0.2.0
kablam!    Compiling tk-carbon v0.1.0 (file:///source)
kablam! warning: unused result which must be used
kablam!   --> examples/pool.rs:27:9
kablam!    |
kablam! 27 |           tk_easyloop::run_forever(move || {
kablam!    |  _________^ starting here...
kablam! 28 | |             let resolver = ns_std_threaded::ThreadedResolver::new(
kablam! 29 | |                 futures_cpupool::CpuPool::new(1));
kablam! 30 | |             init.connect_to(resolver.subscribe(&name), &tk_easyloop::handle());
kablam! 31 | |             Ok::<(), ()>(())
kablam! 32 | |         });
kablam!    | |___________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 7.95 secs
boom! running `docker rm -f e12d930e16d6a11a27e27214b94bac535801b4307f1aa66d9a79b99b8f2c6c0a`
blam! e12d930e16d6a11a27e27214b94bac535801b4307f1aa66d9a79b99b8f2c6c0a
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 1b70ad2b37a25f1e3c3eeb6a441b8618d2c32b4f5700bb77e6c3880c4d548a26
boom! running `docker start -a 1b70ad2b37a25f1e3c3eeb6a441b8618d2c32b4f5700bb77e6c3880c4d548a26`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/tk_carbon-9183bec910b07495
kablam!    Doc-tests tk-carbon
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 4 tests
blam! test src/lib.rs -  (line 5) ... ignored
blam! test src/public.rs - public::Carbon::add_value (line 40) ... ignored
blam! test src/public.rs - public::Carbon::add_value_at (line 61) ... ignored
blam! test src/lib.rs -  (line 27) ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- src/lib.rs -  (line 27) stdout ----
blam! 	error[E0433]: failed to resolve. Use of undeclared type or module `Carbon`
blam!  --> <anon>:2:22
blam!   |
blam! 2 | let (carbon, init) = Carbon::new(&Config::new().done());
blam!   |                      ^^^^^^^^^^^ Use of undeclared type or module `Carbon`
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `Config`
blam!  --> <anon>:2:35
blam!   |
blam! 2 | let (carbon, init) = Carbon::new(&Config::new().done());
blam!   |                                   ^^^^^^^^^^^ Use of undeclared type or module `Config`
blam! 
blam! error[E0425]: cannot find value `handle` in this scope
blam!  --> <anon>:3:1
blam!   |
blam! 3 | handle.spawn(TcpStream::connect(&addr, &handle)
blam!   | ^^^^^^ not found in this scope
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `TcpStream`
blam!  --> <anon>:3:14
blam!   |
blam! 3 | handle.spawn(TcpStream::connect(&addr, &handle)
blam!   |              ^^^^^^^^^^^^^^^^^^ Use of undeclared type or module `TcpStream`
blam! 
blam! error[E0425]: cannot find value `addr` in this scope
blam!  --> <anon>:3:34
blam!   |
blam! 3 | handle.spawn(TcpStream::connect(&addr, &handle)
blam!   |                                  ^^^^ not found in this scope
blam! 
blam! error[E0425]: cannot find value `handle` in this scope
blam!  --> <anon>:3:41
blam!   |
blam! 3 | handle.spawn(TcpStream::connect(&addr, &handle)
blam!   |                                         ^^^^^^ not found in this scope
blam! 
blam! error[E0425]: cannot find value `handle2` in this scope
blam!  --> <anon>:4:55
blam!   |
blam! 4 |     .and_then(move |sock| init.from_connection(sock, &handle2))
blam!   |                                                       ^^^^^^^ not found in this scope
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'rustc' panicked at 'Box<Any>', /checkout/src/librustc/session/mod.rs:203
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! 
blam! failures:
blam!     src/lib.rs -  (line 27)
blam! 
blam! test result: FAILED. 0 passed; 1 failed; 3 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f 1b70ad2b37a25f1e3c3eeb6a441b8618d2c32b4f5700bb77e6c3880c4d548a26`
blam! 1b70ad2b37a25f1e3c3eeb6a441b8618d2c32b4f5700bb77e6c3880c4d548a26
