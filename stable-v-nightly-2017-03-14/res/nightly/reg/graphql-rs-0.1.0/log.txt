boom! testing graphql-rs-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! abc2b3603ee16e73d1659b957140f2663fda64f05b6a4613d8065d435e51b83b
boom! running `docker start -a abc2b3603ee16e73d1659b957140f2663fda64f05b6a4613d8065d435e51b83b`
kablam!    Compiling graphql-rs v0.1.0 (file:///source)
kablam! warning: field is never used: `values`
kablam!   --> src/graphql.rs:85:3
kablam!    |
kablam! 85 |   values: HashMap<String, GraphQLEnumValue>,
kablam!    |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `values`
kablam!   --> src/graphql.rs:89:3
kablam!    |
kablam! 89 |     fn values(&self) -> &HashMap<String, GraphQLEnumValue> {
kablam!    |  ___^ starting here...
kablam! 90 | |     &self.values
kablam! 91 | |   }
kablam!    | |___^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `name`
kablam!    --> src/graphql.rs:134:3
kablam!     |
kablam! 134 |   name: String,
kablam!     |   ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `description`
kablam!    --> src/graphql.rs:135:3
kablam!     |
kablam! 135 |   description: Option<String>,
kablam!     |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `values`
kablam!    --> src/graphql.rs:136:3
kablam!     |
kablam! 136 |   values: HashMap<String, GraphQLEnumValue>,
kablam!     |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `new`
kablam!    --> src/graphql.rs:140:3
kablam!     |
kablam! 140 |     fn new(name: &str) -> GraphQLEnumBuilder {
kablam!     |  ___^ starting here...
kablam! 141 | |     GraphQLEnumBuilder {
kablam! 142 | |       name: name.to_owned(),
kablam! 143 | |       description: None,
kablam! 144 | |       values: HashMap::new(),
kablam! 145 | |     }
kablam! 146 | |   }
kablam!     | |___^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `with_description`
kablam!    --> src/graphql.rs:148:3
kablam!     |
kablam! 148 |     fn with_description(mut self, description: &str) -> GraphQLEnumBuilder {
kablam!     |  ___^ starting here...
kablam! 149 | |     self.description = Some(description.to_owned());
kablam! 150 | |     self
kablam! 151 | |   }
kablam!     | |___^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `value_fn`
kablam!    --> src/graphql.rs:153:3
kablam!     |
kablam! 153 |     fn value_fn<F>(mut self, name: &str, f: F) -> GraphQLEnumBuilder
kablam!     |  ___^ starting here...
kablam! 154 | |     where F: FnOnce(GraphQLEnumValue) -> GraphQLEnumValue
kablam! 155 | |   {
kablam! 156 | |     let v = f(GraphQLEnumValue::new(name));
kablam! 157 | |     self.values.insert(v.value.clone(), v);
kablam! 158 | |     self
kablam! 159 | |   }
kablam!     | |___^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `value`
kablam!    --> src/graphql.rs:161:3
kablam!     |
kablam! 161 |     fn value(mut self, name: &str) -> GraphQLEnumBuilder {
kablam!     |  ___^ starting here...
kablam! 162 | |     self.values.insert(name.to_owned(), GraphQLEnumValue::new(name));
kablam! 163 | |     self
kablam! 164 | |   }
kablam!     | |___^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build`
kablam!    --> src/graphql.rs:166:3
kablam!     |
kablam! 166 |   fn build(self) -> GraphQLEnum {
kablam!     |   ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.0 secs
boom! running `docker rm -f abc2b3603ee16e73d1659b957140f2663fda64f05b6a4613d8065d435e51b83b`
blam! abc2b3603ee16e73d1659b957140f2663fda64f05b6a4613d8065d435e51b83b
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 1a21a4b21a33e1589bfd7b3164f7c6054075c8efbd9edd117bdd906e1a923c03
boom! running `docker start -a 1a21a4b21a33e1589bfd7b3164f7c6054075c8efbd9edd117bdd906e1a923c03`
kablam!    Compiling graphql-rs v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.57 secs
boom! running `docker rm -f 1a21a4b21a33e1589bfd7b3164f7c6054075c8efbd9edd117bdd906e1a923c03`
blam! 1a21a4b21a33e1589bfd7b3164f7c6054075c8efbd9edd117bdd906e1a923c03
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 164db68612fcb06041e3b2c0e7c8cb466eaa61eaef289444484ad07d50fb0f61
boom! running `docker start -a 164db68612fcb06041e3b2c0e7c8cb466eaa61eaef289444484ad07d50fb0f61`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/graphql_rs-4db3380deeaf8cb9
blam! 
blam! running 3 tests
blam! test graphql::tests::test_enum_type ... ok
blam! test tests::it_works ... ok
blam! test graphql::tests::test_scalar_type ... ok
blam! 
blam! test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests graphql-rs
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 164db68612fcb06041e3b2c0e7c8cb466eaa61eaef289444484ad07d50fb0f61`
blam! 164db68612fcb06041e3b2c0e7c8cb466eaa61eaef289444484ad07d50fb0f61
