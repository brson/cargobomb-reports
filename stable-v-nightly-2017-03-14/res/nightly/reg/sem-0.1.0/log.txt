boom! testing sem-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! c5f7464f2dc11c1fc081cfca1705ec66c2eb33e8f38f577de3b30853d5dfcb72
boom! running `docker start -a c5f7464f2dc11c1fc081cfca1705ec66c2eb33e8f38f577de3b30853d5dfcb72`
kablam!    Compiling sem v0.1.0 (file:///source)
kablam! warning: missing fragment specifier
kablam!    --> src/macros.rs:121:17
kablam!     |
kablam! 121 |     ($id: expr, $index) => ({
kablam!     |                 ^^^^^^
kablam!     |
kablam!     = note: #[warn(missing_fragment_specifier)] on by default
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #40107 <https://github.com/rust-lang/rust/issues/40107>
kablam! 
kablam! warning: missing fragment specifier
kablam!    --> src/macros.rs:136:17
kablam!     |
kablam! 136 |     ($id: expr, $index) => ({
kablam!     |                 ^^^^^^
kablam!     |
kablam!     = note: #[warn(missing_fragment_specifier)] on by default
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #40107 <https://github.com/rust-lang/rust/issues/40107>
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.36 secs
boom! running `docker rm -f c5f7464f2dc11c1fc081cfca1705ec66c2eb33e8f38f577de3b30853d5dfcb72`
blam! c5f7464f2dc11c1fc081cfca1705ec66c2eb33e8f38f577de3b30853d5dfcb72
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 115aec688caf9603ce213ab19ac30043535c5947f877a324667c1f502030b952
boom! running `docker start -a 115aec688caf9603ce213ab19ac30043535c5947f877a324667c1f502030b952`
kablam!    Compiling sem v0.1.0 (file:///source)
kablam! warning: missing fragment specifier
kablam!  --> <semop_lock macros>:1:70
kablam!   |
kablam! 1 | ( $ id : expr ) => ( { semop ! ( $ id , true ) } ) ; ( $ id : expr , $ index )
kablam!   |                                                                      ^^^^^^^
kablam!   |
kablam!   = note: #[warn(missing_fragment_specifier)] on by default
kablam!   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!   = note: for more information, see issue #40107 <https://github.com/rust-lang/rust/issues/40107>
kablam! 
kablam! warning: missing fragment specifier
kablam!  --> <semop_unlock macros>:1:71
kablam!   |
kablam! 1 | ( $ id : expr ) => ( { semop ! ( $ id , false ) } ) ; ( $ id : expr , $ index
kablam!   |                                                                       ^^^^^^^
kablam!   |
kablam!   = note: #[warn(missing_fragment_specifier)] on by default
kablam!   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!   = note: for more information, see issue #40107 <https://github.com/rust-lang/rust/issues/40107>
kablam! 
kablam! warning: missing fragment specifier
kablam!    --> src/macros.rs:121:17
kablam!     |
kablam! 121 |     ($id: expr, $index) => ({
kablam!     |                 ^^^^^^
kablam!     |
kablam!     = note: #[warn(missing_fragment_specifier)] on by default
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #40107 <https://github.com/rust-lang/rust/issues/40107>
kablam! 
kablam! warning: missing fragment specifier
kablam!    --> src/macros.rs:136:17
kablam!     |
kablam! 136 |     ($id: expr, $index) => ({
kablam!     |                 ^^^^^^
kablam!     |
kablam!     = note: #[warn(missing_fragment_specifier)] on by default
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #40107 <https://github.com/rust-lang/rust/issues/40107>
kablam! 
kablam! warning: missing fragment specifier
kablam!  --> <semop_lock macros>:1:70
kablam!   |
kablam! 1 | ( $ id : expr ) => ( { semop ! ( $ id , true ) } ) ; ( $ id : expr , $ index )
kablam!   |                                                                      ^^^^^^^
kablam!   |
kablam!   = note: #[warn(missing_fragment_specifier)] on by default
kablam!   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!   = note: for more information, see issue #40107 <https://github.com/rust-lang/rust/issues/40107>
kablam! 
kablam! warning: missing fragment specifier
kablam!  --> <semop_unlock macros>:1:71
kablam!   |
kablam! 1 | ( $ id : expr ) => ( { semop ! ( $ id , false ) } ) ; ( $ id : expr , $ index
kablam!   |                                                                       ^^^^^^^
kablam!   |
kablam!   = note: #[warn(missing_fragment_specifier)] on by default
kablam!   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!   = note: for more information, see issue #40107 <https://github.com/rust-lang/rust/issues/40107>
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.4 secs
boom! running `docker rm -f 115aec688caf9603ce213ab19ac30043535c5947f877a324667c1f502030b952`
blam! 115aec688caf9603ce213ab19ac30043535c5947f877a324667c1f502030b952
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! c855be98faf4b6378e9ac12e2bdf7c285a714e379fcc3242424cba230b768a34
boom! running `docker start -a c855be98faf4b6378e9ac12e2bdf7c285a714e379fcc3242424cba230b768a34`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/lib-15b79f4b24c0c001
blam! 
blam! running 1 test
kablam!      Running /target/debug/deps/sem-505049168c84b5cf
blam! test lock_and_unlock ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests sem
kablam! warning: missing fragment specifier
kablam!    --> /source/src/macros.rs:121:17
kablam!     |
kablam! 121 |     ($id: expr, $index) => ({
kablam!     |                 ^^^^^^
kablam!     |
kablam!     = note: #[warn(missing_fragment_specifier)] on by default
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #40107 <https://github.com/rust-lang/rust/issues/40107>
kablam! 
kablam! warning: missing fragment specifier
kablam!    --> /source/src/macros.rs:136:17
kablam!     |
kablam! 136 |     ($id: expr, $index) => ({
kablam!     |                 ^^^^^^
kablam!     |
kablam!     = note: #[warn(missing_fragment_specifier)] on by default
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #40107 <https://github.com/rust-lang/rust/issues/40107>
kablam! 
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f c855be98faf4b6378e9ac12e2bdf7c285a714e379fcc3242424cba230b768a34`
blam! c855be98faf4b6378e9ac12e2bdf7c285a714e379fcc3242424cba230b768a34
