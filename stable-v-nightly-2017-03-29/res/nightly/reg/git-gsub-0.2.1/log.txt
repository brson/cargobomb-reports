boom! testing git-gsub-0.2.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! d3b0c177f23df42c0d0a3e5eb33c244bbeff79db78cbde4ebbd8beaab298ea3a
boom! running `docker start -a d3b0c177f23df42c0d0a3e5eb33c244bbeff79db78cbde4ebbd8beaab298ea3a`
kablam!    Compiling git-gsub v0.2.1 (file:///source)
kablam! warning: use of deprecated item: use lines() instead now
kablam!   --> src/lib.rs:47:42
kablam!    |
kablam! 47 |     let target_files: Vec<&str> = stdout.lines_any().collect();
kablam!    |                                          ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(deprecated)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.58 secs
boom! running `docker rm -f d3b0c177f23df42c0d0a3e5eb33c244bbeff79db78cbde4ebbd8beaab298ea3a`
blam! d3b0c177f23df42c0d0a3e5eb33c244bbeff79db78cbde4ebbd8beaab298ea3a
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 863f45de2409ae357bff89f412264c7af8ba55e33946a1196e46e0b06ddb6337
boom! running `docker start -a 863f45de2409ae357bff89f412264c7af8ba55e33946a1196e46e0b06ddb6337`
kablam!    Compiling git-gsub v0.2.1 (file:///source)
kablam! warning: use of deprecated item: use lines() instead now
kablam!   --> src/lib.rs:47:42
kablam!    |
kablam! 47 |     let target_files: Vec<&str> = stdout.lines_any().collect();
kablam!    |                                          ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(deprecated)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.58 secs
boom! running `docker rm -f 863f45de2409ae357bff89f412264c7af8ba55e33946a1196e46e0b06ddb6337`
blam! 863f45de2409ae357bff89f412264c7af8ba55e33946a1196e46e0b06ddb6337
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 847517d1d88604061786deedb4c4056645f3e40cbf97563640d26a2102de163b
boom! running `docker start -a 847517d1d88604061786deedb4c4056645f3e40cbf97563640d26a2102de163b`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/git_gsub-11be66363a358b42
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/git_gsub-8aad00fdfdf88d72
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/lib-fb5e5ae95e051f19
blam! 
blam! running 2 tests
blam! test it_escapes_well ... FAILED
blam! test it_substitutes ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- it_escapes_well stdout ----
blam! 	thread 'it_escapes_well' panicked at 'failed to execute process: No such file or directory (os error 2)', tests/lib.rs:21
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! ---- it_substitutes stdout ----
blam! 	thread 'it_substitutes' panicked at 'failed to execute process: No such file or directory (os error 2)', tests/lib.rs:21
blam! 
blam! 
blam! failures:
blam!     it_escapes_well
blam!     it_substitutes
blam! 
blam! test result: FAILED. 0 passed; 2 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f 847517d1d88604061786deedb4c4056645f3e40cbf97563640d26a2102de163b`
blam! 847517d1d88604061786deedb4c4056645f3e40cbf97563640d26a2102de163b
