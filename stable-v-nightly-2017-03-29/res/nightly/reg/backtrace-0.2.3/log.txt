boom! testing backtrace-0.2.3 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! d4f415938ee2cc6ddccd59334560b850188607fa30842e4a815dab0c7e8d3c7e
boom! running `docker start -a d4f415938ee2cc6ddccd59334560b850188607fa30842e4a815dab0c7e8d3c7e`
kablam!    Compiling backtrace v0.2.3 (file:///source)
kablam! warning: type alias is never used: `FileLine`
kablam!   --> src/symbolize/libbacktrace.rs:25:1
kablam!    |
kablam! 25 | type FileLine = (*const c_char, c_int);
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.67 secs
boom! running `docker rm -f d4f415938ee2cc6ddccd59334560b850188607fa30842e4a815dab0c7e8d3c7e`
blam! d4f415938ee2cc6ddccd59334560b850188607fa30842e4a815dab0c7e8d3c7e
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! d8c3f4b127d7fd279ccbe46002f9b3521193fbf3ce49bc1d8ccfe5f8d5b8b361
boom! running `docker start -a d8c3f4b127d7fd279ccbe46002f9b3521193fbf3ce49bc1d8ccfe5f8d5b8b361`
kablam!    Compiling backtrace v0.2.3 (file:///source)
kablam! warning: type alias is never used: `FileLine`
kablam!   --> src/symbolize/libbacktrace.rs:25:1
kablam!    |
kablam! 25 | type FileLine = (*const c_char, c_int);
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.34 secs
boom! running `docker rm -f d8c3f4b127d7fd279ccbe46002f9b3521193fbf3ce49bc1d8ccfe5f8d5b8b361`
blam! d8c3f4b127d7fd279ccbe46002f9b3521193fbf3ce49bc1d8ccfe5f8d5b8b361
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 3bf6c5ee2cd0d675ab4c53e0d6d2cd2823c1bf23852b212e1edee8d5347dc228
boom! running `docker start -a 3bf6c5ee2cd0d675ab4c53e0d6d2cd2823c1bf23852b212e1edee8d5347dc228`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/backtrace-7b77d3b34a0bd4fe
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/smoke-f2c9031394c99038
blam! 
blam! running 2 tests
blam! test smoke_test_frames ... ok
blam! test many_threads ... ok
blam! 
blam! test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests backtrace
blam! 
blam! running 4 tests
blam! test src/backtrace/mod.rs - backtrace::trace (line 56) ... ok
blam! test src/symbolize/mod.rs - symbolize::resolve (line 68) ... ok
blam! test /target/debug/build/backtrace-17b391374d0cf6d4/out/capture.rs - capture::Backtrace::new (line 72) ... ok
blam! test src/lib.rs -  (line 46) ... ok
blam! 
blam! test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 3bf6c5ee2cd0d675ab4c53e0d6d2cd2823c1bf23852b212e1edee8d5347dc228`
blam! 3bf6c5ee2cd0d675ab4c53e0d6d2cd2823c1bf23852b212e1edee8d5347dc228
