boom! testing mbox-0.1.4 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 34e6e12c7213d231efedeabaef6fd778f9110ddace7289294006bef7b83ae636
boom! running `docker start -a 34e6e12c7213d231efedeabaef6fd778f9110ddace7289294006bef7b83ae636`
kablam!    Compiling mbox v0.1.4 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.41 secs
boom! running `docker rm -f 34e6e12c7213d231efedeabaef6fd778f9110ddace7289294006bef7b83ae636`
blam! 34e6e12c7213d231efedeabaef6fd778f9110ddace7289294006bef7b83ae636
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 03adad9c62cc30640dbd118ac9363b02e763f61eab63497d5869552e89766b3f
boom! running `docker start -a 03adad9c62cc30640dbd118ac9363b02e763f61eab63497d5869552e89766b3f`
kablam!    Compiling mbox v0.1.4 (file:///source)
kablam! warning: attribute must be of the form: `#[should_panic]` or `#[should_panic(expected = "error message")]`
kablam!    --> src/mbox.rs:697:1
kablam!     |
kablam! 697 | #[should_panic="panic on clone"]
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: Errors in this attribute were erroneously allowed and will become a hard error in a future release.
kablam! 
kablam! warning: attribute must be of the form: `#[should_panic]` or `#[should_panic(expected = "error message")]`
kablam!    --> src/mbox.rs:704:1
kablam!     |
kablam! 704 | #[should_panic="panic on clone"]
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: Errors in this attribute were erroneously allowed and will become a hard error in a future release.
kablam! 
kablam! warning: attribute must be of the form: `#[should_panic]` or `#[should_panic(expected = "error message")]`
kablam!    --> src/mbox.rs:809:1
kablam!     |
kablam! 809 | #[should_panic="panic on clone"]
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: Errors in this attribute were erroneously allowed and will become a hard error in a future release.
kablam! 
kablam! warning: attribute must be of the form: `#[should_panic]` or `#[should_panic(expected = "error message")]`
kablam!    --> src/placer.rs:104:1
kablam!     |
kablam! 104 | #[should_panic="should panic without crash"]
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: Errors in this attribute were erroneously allowed and will become a hard error in a future release.
kablam! 
kablam! warning: code relies on type inference rules which are likely to change
kablam!    --> src/placer.rs:106:32
kablam!     |
kablam! 106 |     let _: MBox<DropCounter> = MALLOC <- panic!("should panic without crash");
kablam!     |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(resolve_trait_on_defaulted_unit)] on by default
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #39216 <https://github.com/rust-lang/rust/issues/39216>
kablam! 
kablam! warning: unreachable expression
kablam!    --> src/placer.rs:106:32
kablam!     |
kablam! 106 |     let _: MBox<DropCounter> = MALLOC <- panic!("should panic without crash");
kablam!     |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unreachable_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 4.47 secs
boom! running `docker rm -f 03adad9c62cc30640dbd118ac9363b02e763f61eab63497d5869552e89766b3f`
blam! 03adad9c62cc30640dbd118ac9363b02e763f61eab63497d5869552e89766b3f
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 08af2782ff6c454122559b38f7c0b606f83a2bb3302d9b4b4f4a61b0af02cd65
boom! running `docker start -a 08af2782ff6c454122559b38f7c0b606f83a2bb3302d9b4b4f4a61b0af02cd65`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/mbox-3df06ff6e7307c08
blam! 
blam! running 39 tests
blam! test mbox::test_clone ... ok
blam! test mbox::test_clone_from ... ok
blam! test mbox::test_coerce_from_empty_slice ... ok
blam! test mbox::test_clone_slice ... ok
blam! test mbox::test_empty_slice ... ok
blam! test mbox::test_coerce_unsized ... ok
blam! test mbox::test_default_str ... ok
blam! test mbox::test_format ... ok
blam! test mbox::test_from_iterator ... ok
blam! test mbox::test_iter_drop ... ok
blam! test mbox::test_into_raw ... ok
blam! test mbox::test_iter_properties ... ok
blam! test mbox::test_no_drop_flag ... ok
blam! test mbox::test_panic_during_clone ... ok
blam! test mbox::test_panic_during_clone_from ... ok
blam! test mbox::test_into_iterator ... ok
blam! test mbox::test_panic_on_clone_slice ... ok
blam! test mbox::test_single_object ... ok
blam! test mbox::test_non_utf8 ... ok
blam! test mbox::test_slice ... ok
blam! test mbox::test_non_zero ... ok
blam! test mbox::test_zero_sized_type ... ok
blam! test mbox::test_slice_with_drops ... ok
blam! test mbox::test_string_from_bytes ... ok
blam! test mbox::test_standard_traits ... ok
blam! test mbox::test_zst_slice ... ok
blam! test placer::test_in_place ... ok
blam! test placer::test_panic_during_construction ... ok
blam! test sentinel::test_array ... ok
blam! test sentinel::test_c_str ... ok
blam! test sentinel::test_array_with_drop ... ok
blam! test sentinel::test_array_into_mbox ... ok
blam! test sentinel::test_default_array ... ok
blam! test sentinel::test_hash_string ... ok
blam! test sentinel::test_default_string ... ok
blam! test sentinel::test_non_utf8_string ... ok
blam! test sentinel::test_hash_array ... ok
blam! test sentinel::test_string ... ok
blam! test sentinel::test_string_into_mbox ... ok
blam! 
blam! test result: ok. 39 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests mbox
blam! 
blam! running 2 tests
blam! test src/placer.rs - placer (line 5) ... ok
blam! test src/lib.rs -  (line 9) ... ok
blam! 
blam! test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 08af2782ff6c454122559b38f7c0b606f83a2bb3302d9b4b4f4a61b0af02cd65`
blam! 08af2782ff6c454122559b38f7c0b606f83a2bb3302d9b4b4f4a61b0af02cd65
