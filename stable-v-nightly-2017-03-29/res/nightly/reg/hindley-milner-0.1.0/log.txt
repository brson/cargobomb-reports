boom! testing hindley-milner-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! cf9c24998446e66a559a0b35ad39137e32549da7206c6634b52afc6ccbe05210
boom! running `docker start -a cf9c24998446e66a559a0b35ad39137e32549da7206c6634b52afc6ccbe05210`
kablam!    Compiling hindley-milner v0.1.0 (file:///source)
kablam! warning: struct is never used: `Namer`
kablam!   --> src/lib.rs:77:1
kablam!    |
kablam! 77 |   struct Namer {
kablam!    |  _^ starting here...
kablam! 78 | |     value: char,
kablam! 79 | |     set: HashMap<ArenaType, String>,
kablam! 80 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `next`
kablam!   --> src/lib.rs:83:5
kablam!    |
kablam! 83 |       fn next(&mut self) -> String {
kablam!    |  _____^ starting here...
kablam! 84 | |         let v = self.value;
kablam! 85 | |         self.value = ((self.value as u8) + 1) as char;
kablam! 86 | |         format!("{}", v)
kablam! 87 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `name`
kablam!    --> src/lib.rs:89:5
kablam!     |
kablam! 89  |     fn name(&mut self, t: ArenaType) -> String {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `id`
kablam!    --> src/lib.rs:124:5
kablam!     |
kablam! 124 |     fn id(&self) -> usize {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_string`
kablam!    --> src/lib.rs:146:5
kablam!     |
kablam! 146 |     fn as_string(&self, a: &Vec<Type>, namer: &mut Namer) -> String {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: static item is never used: `INTEGER`
kablam!    --> src/lib.rs:206:1
kablam!     |
kablam! 206 |   lazy_static! {
kablam!     |  _^ starting here...
kablam! 207 | |     // Basic integer
kablam! 208 | |     static ref INTEGER: Type = Type::new_operator(0, "int", &[]);
kablam! 209 | |     // Basic bool
kablam! 210 | |     static ref BOOL: Type = Type::new_operator(1, "bool", &[]);
kablam! 211 | | }
kablam!     | |_^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: static item is never used: `BOOL`
kablam!    --> src/lib.rs:206:1
kablam!     |
kablam! 206 |   lazy_static! {
kablam!     |  _^ starting here...
kablam! 207 | |     // Basic integer
kablam! 208 | |     static ref INTEGER: Type = Type::new_operator(0, "int", &[]);
kablam! 209 | |     // Basic bool
kablam! 210 | |     static ref BOOL: Type = Type::new_operator(1, "bool", &[]);
kablam! 211 | | }
kablam!     | |_^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: function is never used: `test_env`
kablam!    --> src/lib.rs:537:1
kablam!     |
kablam! 537 | fn test_env() -> (Vec<Type>, Env) {
kablam!     | ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.2 secs
boom! running `docker rm -f cf9c24998446e66a559a0b35ad39137e32549da7206c6634b52afc6ccbe05210`
blam! cf9c24998446e66a559a0b35ad39137e32549da7206c6634b52afc6ccbe05210
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 3be6eda716babc61d4b0a1fec7a4ae591b50059e6d986c01cd8c58eba10fd53a
boom! running `docker start -a 3be6eda716babc61d4b0a1fec7a4ae591b50059e6d986c01cd8c58eba10fd53a`
kablam!    Compiling hindley-milner v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.80 secs
boom! running `docker rm -f 3be6eda716babc61d4b0a1fec7a4ae591b50059e6d986c01cd8c58eba10fd53a`
blam! 3be6eda716babc61d4b0a1fec7a4ae591b50059e6d986c01cd8c58eba10fd53a
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! b96f2f64dff5ad6f4e1aca5839429875a74fa6c8c4145621595130381edb7d06
boom! running `docker start -a b96f2f64dff5ad6f4e1aca5839429875a74fa6c8c4145621595130381edb7d06`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/hindley_milner-c6f06c00a774a01c
blam! 
blam! running 9 tests
blam! test test_composition ... ok
blam! test test_fun ... ok
blam! test test_generic_nongeneric ... ok
blam! test test_factorial ... ok
blam! test test_mismatch ... ok
blam! test test_int ... ok
blam! test test_recursive ... ok
blam! test test_pair ... ok
blam! test test_mul ... ok
blam! 
blam! test result: ok. 9 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f b96f2f64dff5ad6f4e1aca5839429875a74fa6c8c4145621595130381edb7d06`
blam! b96f2f64dff5ad6f4e1aca5839429875a74fa6c8c4145621595130381edb7d06
