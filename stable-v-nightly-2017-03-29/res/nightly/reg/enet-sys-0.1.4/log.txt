boom! testing enet-sys-0.1.4 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 1262bba1cbb70a2f046905dbd4914105d32e309b04ce7159377545dcda613804
boom! running `docker start -a 1262bba1cbb70a2f046905dbd4914105d32e309b04ce7159377545dcda613804`
kablam!    Compiling unsafe_unions v0.0.2
kablam!    Compiling enet-sys v0.1.4 (file:///source)
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:58:44
kablam!    |
kablam! 58 |     pub fn enet_host_bandwidth_limit(host: *mut ENetHost, incomingBandwidth: uint32_t,
kablam!    |                                            ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:60:47
kablam!    |
kablam! 60 |     pub fn enet_host_bandwidth_throttle(host: *mut ENetHost);
kablam!    |                                               ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:61:38
kablam!    |
kablam! 61 |     pub fn enet_host_broadcast(host: *mut ENetHost, channelID: uint8_t, packet: *mut ENetPacket);
kablam!    |                                      ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:62:42
kablam!    |
kablam! 62 |     pub fn enet_host_channel_limit(host: *mut ENetHost, channelLimit: size_t);
kablam!    |                                          ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:63:41
kablam!    |
kablam! 63 |     pub fn enet_host_check_events(host: *mut ENetHost, event: *mut ENetEvent) -> c_int;
kablam!    |                                         ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:63:63
kablam!    |
kablam! 63 |     pub fn enet_host_check_events(host: *mut ENetHost, event: *mut ENetEvent) -> c_int;
kablam!    |                                                               ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:64:37
kablam!    |
kablam! 64 |     pub fn enet_host_compress(host: *mut ENetHost, compressor: *const ENetCompressor);
kablam!    |                                     ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:65:54
kablam!    |
kablam! 65 |     pub fn enet_host_compress_with_range_coder(host: *mut ENetHost) -> c_int;
kablam!    |                                                      ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:66:36
kablam!    |
kablam! 66 |     pub fn enet_host_connect(host: *mut ENetHost, address: *const ENetAddress, channelCount: size_t,
kablam!    |                                    ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:67:32
kablam!    |
kablam! 67 |             data: uint32_t) -> *mut ENetPeer;
kablam!    |                                ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:69:74
kablam!    |
kablam! 69 |             incomingBandwidth: uint32_t, outgoingBandwidth: uint32_t) -> *mut ENetHost;
kablam!    |                                                                          ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:70:36
kablam!    |
kablam! 70 |     pub fn enet_host_destroy(host: *mut ENetHost);
kablam!    |                                    ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:71:34
kablam!    |
kablam! 71 |     pub fn enet_host_flush(host: *mut ENetHost);
kablam!    |                                  ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:72:36
kablam!    |
kablam! 72 |     pub fn enet_host_service(host: *mut ENetHost, event: *mut ENetEvent, timeout: uint32_t) -> c_int;
kablam!    |                                    ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:72:58
kablam!    |
kablam! 72 |     pub fn enet_host_service(host: *mut ENetHost, event: *mut ENetEvent, timeout: uint32_t) -> c_int;
kablam!    |                                                          ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: variant `ENET_PACKET_FLAG_RELIABLE` should have a camel case name such as `EnetPacketFlagReliable`
kablam!   --> src/packet.rs:18:5
kablam!    |
kablam! 18 |     ENET_PACKET_FLAG_RELIABLE = 1,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PACKET_FLAG_UNSEQUENCED` should have a camel case name such as `EnetPacketFlagUnsequenced`
kablam!   --> src/packet.rs:19:5
kablam!    |
kablam! 19 |     ENET_PACKET_FLAG_UNSEQUENCED = 1<<1,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PACKET_FLAG_NO_ALLOCATE` should have a camel case name such as `EnetPacketFlagNoAllocate`
kablam!   --> src/packet.rs:20:5
kablam!    |
kablam! 20 |     ENET_PACKET_FLAG_NO_ALLOCATE = 1<<2,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PACKET_FLAG_UNRELIABLE_FRAGMENT` should have a camel case name such as `EnetPacketFlagUnreliableFragment`
kablam!   --> src/packet.rs:21:5
kablam!    |
kablam! 21 |     ENET_PACKET_FLAG_UNRELIABLE_FRAGMENT = 1<<3,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PACKET_FLAG_SENT` should have a camel case name such as `EnetPacketFlagSent`
kablam!   --> src/packet.rs:22:5
kablam!    |
kablam! 22 |     ENET_PACKET_FLAG_SENT = 1<<8,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PEER_STATE_DISCONNECTED` should have a camel case name such as `EnetPeerStateDisconnected`
kablam!   --> src/peer.rs:97:5
kablam!    |
kablam! 97 |     ENET_PEER_STATE_DISCONNECTED = 0,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PEER_STATE_CONNECTING` should have a camel case name such as `EnetPeerStateConnecting`
kablam!   --> src/peer.rs:98:5
kablam!    |
kablam! 98 |     ENET_PEER_STATE_CONNECTING = 1,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PEER_STATE_ACKNOWLEDGING_CONNECT` should have a camel case name such as `EnetPeerStateAcknowledgingConnect`
kablam!   --> src/peer.rs:99:5
kablam!    |
kablam! 99 |     ENET_PEER_STATE_ACKNOWLEDGING_CONNECT = 2,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PEER_STATE_CONNECTION_PENDING` should have a camel case name such as `EnetPeerStateConnectionPending`
kablam!    --> src/peer.rs:100:5
kablam!     |
kablam! 100 |     ENET_PEER_STATE_CONNECTION_PENDING = 3,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PEER_STATE_CONNECTION_SUCCEEDED` should have a camel case name such as `EnetPeerStateConnectionSucceeded`
kablam!    --> src/peer.rs:101:5
kablam!     |
kablam! 101 |     ENET_PEER_STATE_CONNECTION_SUCCEEDED = 4,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PEER_STATE_CONNECTED` should have a camel case name such as `EnetPeerStateConnected`
kablam!    --> src/peer.rs:102:5
kablam!     |
kablam! 102 |     ENET_PEER_STATE_CONNECTED = 5,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PEER_STATE_DISCONNECT_LATER` should have a camel case name such as `EnetPeerStateDisconnectLater`
kablam!    --> src/peer.rs:103:5
kablam!     |
kablam! 103 |     ENET_PEER_STATE_DISCONNECT_LATER = 6,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PEER_STATE_DISCONNECTING` should have a camel case name such as `EnetPeerStateDisconnecting`
kablam!    --> src/peer.rs:104:5
kablam!     |
kablam! 104 |     ENET_PEER_STATE_DISCONNECTING = 7,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PEER_STATE_ACKNOWLEDGING_DISCONNECT` should have a camel case name such as `EnetPeerStateAcknowledgingDisconnect`
kablam!    --> src/peer.rs:105:5
kablam!     |
kablam! 105 |     ENET_PEER_STATE_ACKNOWLEDGING_DISCONNECT = 8,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PEER_STATE_ZOMBIE` should have a camel case name such as `EnetPeerStateZombie`
kablam!    --> src/peer.rs:106:5
kablam!     |
kablam! 106 |     ENET_PEER_STATE_ZOMBIE = 9,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:110:39
kablam!     |
kablam! 110 |     pub fn enet_peer_disconnect(peer: *mut ENetPeer, data: uint32_t);
kablam!     |                                       ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:111:45
kablam!     |
kablam! 111 |     pub fn enet_peer_disconnect_later(peer: *mut ENetPeer, data: uint32_t);
kablam!     |                                             ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:112:43
kablam!     |
kablam! 112 |     pub fn enet_peer_disconnect_now(peer: *mut ENetPeer, data: uint32_t);
kablam!     |                                           ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:113:64
kablam!     |
kablam! 113 |     pub fn enet_peer_dispatch_incoming_reliable_commands(peer: *mut ENetPeer, channel: *mut ENetChannel);
kablam!     |                                                                ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:114:66
kablam!     |
kablam! 114 |     pub fn enet_peer_dispatch_incoming_unreliable_commands(peer: *mut ENetPeer, channel: *mut ENetChannel);
kablam!     |                                                                  ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:115:39
kablam!     |
kablam! 115 |     pub fn enet_peer_on_connect(peer: *mut ENetPeer);
kablam!     |                                       ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:116:42
kablam!     |
kablam! 116 |     pub fn enet_peer_on_disconnect(peer: *mut ENetPeer);
kablam!     |                                          ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:117:33
kablam!     |
kablam! 117 |     pub fn enet_peer_ping(peer: *mut ENetPeer);
kablam!     |                                 ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:118:42
kablam!     |
kablam! 118 |     pub fn enet_peer_ping_interval(peer: *mut ENetPeer, pingInterval: uint32_t);
kablam!     |                                          ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:119:50
kablam!     |
kablam! 119 |     pub fn enet_peer_queue_acknowledgement(peer: *mut ENetPeer, command: *const ENetProtocol,
kablam!     |                                                  ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:119:74
kablam!     |
kablam! 119 |     pub fn enet_peer_queue_acknowledgement(peer: *mut ENetPeer, command: *const ENetProtocol,
kablam!     |                                                                          ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:120:36
kablam!     |
kablam! 120 |             sentTime: uint16_t) -> *mut ENetAcknowledgement;
kablam!     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:121:51
kablam!     |
kablam! 121 |     pub fn enet_peer_queue_incoming_command(peer: *mut ENetPeer, command: *const ENetProtocol,
kablam!     |                                                   ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:121:75
kablam!     |
kablam! 121 |     pub fn enet_peer_queue_incoming_command(peer: *mut ENetPeer, command: *const ENetProtocol,
kablam!     |                                                                           ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:123:16
kablam!     |
kablam! 123 |             -> *mut ENetIncomingCommand;
kablam!     |                ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:124:51
kablam!     |
kablam! 124 |     pub fn enet_peer_queue_outgoing_command(peer: *mut ENetPeer, command: *const ENetProtocol,
kablam!     |                                                   ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:124:75
kablam!     |
kablam! 124 |     pub fn enet_peer_queue_outgoing_command(peer: *mut ENetPeer, command: *const ENetProtocol,
kablam!     |                                                                           ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:125:77
kablam!     |
kablam! 125 |             packet: *mut ENetPacket, offset: uint32_t, length: uint16_t) -> *mut ENetOutgoingCommand;
kablam!     |                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:126:36
kablam!     |
kablam! 126 |     pub fn enet_peer_receive(peer: *mut ENetPeer, channelID: *mut uint8_t) -> *mut ENetPacket;
kablam!     |                                    ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:127:34
kablam!     |
kablam! 127 |     pub fn enet_peer_reset(peer: *mut ENetPeer);
kablam!     |                                  ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:128:41
kablam!     |
kablam! 128 |     pub fn enet_peer_reset_queues(peer: *mut ENetPeer);
kablam!     |                                         ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:129:33
kablam!     |
kablam! 129 |     pub fn enet_peer_send(peer: *mut ENetPeer, channelID: uint8_t, packet: *mut ENetPacket) -> c_int;
kablam!     |                                 ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:130:51
kablam!     |
kablam! 130 |     pub fn enet_peer_setup_outgoing_command(peer: *mut ENetPeer,
kablam!     |                                                   ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:131:30
kablam!     |
kablam! 131 |             outgoingCommand: *mut ENetOutgoingCommand);
kablam!     |                              ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:132:37
kablam!     |
kablam! 132 |     pub fn enet_peer_throttle(peer: *mut ENetPeer, rtt: uint32_t) -> c_int;
kablam!     |                                     ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:133:47
kablam!     |
kablam! 133 |     pub fn enet_peer_throttle_configure(peer: *mut ENetPeer, interval: uint32_t, acceleration: uint32_t,
kablam!     |                                               ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:135:36
kablam!     |
kablam! 135 |     pub fn enet_peer_timeout(peer: *mut ENetPeer, timeoutLimit: uint32_t, timeoutMinimum: uint32_t,
kablam!     |                                    ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKET_TYPE_STREAM` should have a camel case name such as `EnetSocketTypeStream`
kablam!  --> src/socket.rs:9:5
kablam!   |
kablam! 9 |     ENET_SOCKET_TYPE_STREAM = 1,
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKET_TYPE_DATAGRAM` should have a camel case name such as `EnetSocketTypeDatagram`
kablam!   --> src/socket.rs:10:5
kablam!    |
kablam! 10 |     ENET_SOCKET_TYPE_DATAGRAM = 2,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKOPT_NONBLOCK` should have a camel case name such as `EnetSockoptNonblock`
kablam!   --> src/socket.rs:15:5
kablam!    |
kablam! 15 |     ENET_SOCKOPT_NONBLOCK = 1,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKOPT_BROADCAST` should have a camel case name such as `EnetSockoptBroadcast`
kablam!   --> src/socket.rs:16:5
kablam!    |
kablam! 16 |     ENET_SOCKOPT_BROADCAST = 2,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKOPT_RCVBUF` should have a camel case name such as `EnetSockoptRcvbuf`
kablam!   --> src/socket.rs:17:5
kablam!    |
kablam! 17 |     ENET_SOCKOPT_RCVBUF = 3,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKOPT_SNDBUF` should have a camel case name such as `EnetSockoptSndbuf`
kablam!   --> src/socket.rs:18:5
kablam!    |
kablam! 18 |     ENET_SOCKOPT_SNDBUF = 4,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKOPT_REUSEADDR` should have a camel case name such as `EnetSockoptReuseaddr`
kablam!   --> src/socket.rs:19:5
kablam!    |
kablam! 19 |     ENET_SOCKOPT_REUSEADDR = 5,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKOPT_RCVTIMEO` should have a camel case name such as `EnetSockoptRcvtimeo`
kablam!   --> src/socket.rs:20:5
kablam!    |
kablam! 20 |     ENET_SOCKOPT_RCVTIMEO = 6,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKOPT_SNDTIMEO` should have a camel case name such as `EnetSockoptSndtimeo`
kablam!   --> src/socket.rs:21:5
kablam!    |
kablam! 21 |     ENET_SOCKOPT_SNDTIMEO = 7,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKOPT_ERROR` should have a camel case name such as `EnetSockoptError`
kablam!   --> src/socket.rs:22:5
kablam!    |
kablam! 22 |     ENET_SOCKOPT_ERROR = 8,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKOPT_NODELAY` should have a camel case name such as `EnetSockoptNodelay`
kablam!   --> src/socket.rs:23:5
kablam!    |
kablam! 23 |     ENET_SOCKOPT_NODELAY = 9,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKET_SHUTDOWN_READ` should have a camel case name such as `EnetSocketShutdownRead`
kablam!   --> src/socket.rs:28:5
kablam!    |
kablam! 28 |     ENET_SOCKET_SHUTDOWN_READ = 0,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKET_SHUTDOWN_WRITE` should have a camel case name such as `EnetSocketShutdownWrite`
kablam!   --> src/socket.rs:29:5
kablam!    |
kablam! 29 |     ENET_SOCKET_SHUTDOWN_WRITE = 1,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKET_SHUTDOWN_READ_WRITE` should have a camel case name such as `EnetSocketShutdownReadWrite`
kablam!   --> src/socket.rs:30:5
kablam!    |
kablam! 30 |     ENET_SOCKET_SHUTDOWN_READ_WRITE = 2,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_EVENT_TYPE_NONE` should have a camel case name such as `EnetEventTypeNone`
kablam!   --> src/lib.rs:65:5
kablam!    |
kablam! 65 |     ENET_EVENT_TYPE_NONE = 0,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_EVENT_TYPE_CONNECT` should have a camel case name such as `EnetEventTypeConnect`
kablam!   --> src/lib.rs:66:5
kablam!    |
kablam! 66 |     ENET_EVENT_TYPE_CONNECT = 1,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_EVENT_TYPE_DISCONNECT` should have a camel case name such as `EnetEventTypeDisconnect`
kablam!   --> src/lib.rs:67:5
kablam!    |
kablam! 67 |     ENET_EVENT_TYPE_DISCONNECT = 2,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_EVENT_TYPE_RECEIVE` should have a camel case name such as `EnetEventTypeReceive`
kablam!   --> src/lib.rs:68:5
kablam!    |
kablam! 68 |     ENET_EVENT_TYPE_RECEIVE = 3,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.46 secs
boom! running `docker rm -f 1262bba1cbb70a2f046905dbd4914105d32e309b04ce7159377545dcda613804`
blam! 1262bba1cbb70a2f046905dbd4914105d32e309b04ce7159377545dcda613804
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 3cc15e2d3fc0b93fa41b27ee64ce9046c93b7668c40bc15394f6ee55c22d697c
boom! running `docker start -a 3cc15e2d3fc0b93fa41b27ee64ce9046c93b7668c40bc15394f6ee55c22d697c`
kablam!    Compiling enet-sys v0.1.4 (file:///source)
kablam! warning: unused import: `std::mem::size_of`
kablam!  --> examples/host.rs:3:5
kablam!   |
kablam! 3 | use std::mem::size_of;
kablam!   |     ^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:58:44
kablam!    |
kablam! 58 |     pub fn enet_host_bandwidth_limit(host: *mut ENetHost, incomingBandwidth: uint32_t,
kablam!    |                                            ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:60:47
kablam!    |
kablam! 60 |     pub fn enet_host_bandwidth_throttle(host: *mut ENetHost);
kablam!    |                                               ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:61:38
kablam!    |
kablam! 61 |     pub fn enet_host_broadcast(host: *mut ENetHost, channelID: uint8_t, packet: *mut ENetPacket);
kablam!    |                                      ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:62:42
kablam!    |
kablam! 62 |     pub fn enet_host_channel_limit(host: *mut ENetHost, channelLimit: size_t);
kablam!    |                                          ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:63:41
kablam!    |
kablam! 63 |     pub fn enet_host_check_events(host: *mut ENetHost, event: *mut ENetEvent) -> c_int;
kablam!    |                                         ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:63:63
kablam!    |
kablam! 63 |     pub fn enet_host_check_events(host: *mut ENetHost, event: *mut ENetEvent) -> c_int;
kablam!    |                                                               ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:64:37
kablam!    |
kablam! 64 |     pub fn enet_host_compress(host: *mut ENetHost, compressor: *const ENetCompressor);
kablam!    |                                     ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:65:54
kablam!    |
kablam! 65 |     pub fn enet_host_compress_with_range_coder(host: *mut ENetHost) -> c_int;
kablam!    |                                                      ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:66:36
kablam!    |
kablam! 66 |     pub fn enet_host_connect(host: *mut ENetHost, address: *const ENetAddress, channelCount: size_t,
kablam!    |                                    ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:67:32
kablam!    |
kablam! 67 |             data: uint32_t) -> *mut ENetPeer;
kablam!    |                                ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:69:74
kablam!    |
kablam! 69 |             incomingBandwidth: uint32_t, outgoingBandwidth: uint32_t) -> *mut ENetHost;
kablam!    |                                                                          ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:70:36
kablam!    |
kablam! 70 |     pub fn enet_host_destroy(host: *mut ENetHost);
kablam!    |                                    ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:71:34
kablam!    |
kablam! 71 |     pub fn enet_host_flush(host: *mut ENetHost);
kablam!    |                                  ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:72:36
kablam!    |
kablam! 72 |     pub fn enet_host_service(host: *mut ENetHost, event: *mut ENetEvent, timeout: uint32_t) -> c_int;
kablam!    |                                    ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!   --> src/host.rs:72:58
kablam!    |
kablam! 72 |     pub fn enet_host_service(host: *mut ENetHost, event: *mut ENetEvent, timeout: uint32_t) -> c_int;
kablam!    |                                                          ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: variant `ENET_PACKET_FLAG_RELIABLE` should have a camel case name such as `EnetPacketFlagReliable`
kablam!   --> src/packet.rs:18:5
kablam!    |
kablam! 18 |     ENET_PACKET_FLAG_RELIABLE = 1,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PACKET_FLAG_UNSEQUENCED` should have a camel case name such as `EnetPacketFlagUnsequenced`
kablam!   --> src/packet.rs:19:5
kablam!    |
kablam! 19 |     ENET_PACKET_FLAG_UNSEQUENCED = 1<<1,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PACKET_FLAG_NO_ALLOCATE` should have a camel case name such as `EnetPacketFlagNoAllocate`
kablam!   --> src/packet.rs:20:5
kablam!    |
kablam! 20 |     ENET_PACKET_FLAG_NO_ALLOCATE = 1<<2,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PACKET_FLAG_UNRELIABLE_FRAGMENT` should have a camel case name such as `EnetPacketFlagUnreliableFragment`
kablam!   --> src/packet.rs:21:5
kablam!    |
kablam! 21 |     ENET_PACKET_FLAG_UNRELIABLE_FRAGMENT = 1<<3,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PACKET_FLAG_SENT` should have a camel case name such as `EnetPacketFlagSent`
kablam!   --> src/packet.rs:22:5
kablam!    |
kablam! 22 |     ENET_PACKET_FLAG_SENT = 1<<8,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PEER_STATE_DISCONNECTED` should have a camel case name such as `EnetPeerStateDisconnected`
kablam!   --> src/peer.rs:97:5
kablam!    |
kablam! 97 |     ENET_PEER_STATE_DISCONNECTED = 0,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PEER_STATE_CONNECTING` should have a camel case name such as `EnetPeerStateConnecting`
kablam!   --> src/peer.rs:98:5
kablam!    |
kablam! 98 |     ENET_PEER_STATE_CONNECTING = 1,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PEER_STATE_ACKNOWLEDGING_CONNECT` should have a camel case name such as `EnetPeerStateAcknowledgingConnect`
kablam!   --> src/peer.rs:99:5
kablam!    |
kablam! 99 |     ENET_PEER_STATE_ACKNOWLEDGING_CONNECT = 2,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PEER_STATE_CONNECTION_PENDING` should have a camel case name such as `EnetPeerStateConnectionPending`
kablam!    --> src/peer.rs:100:5
kablam!     |
kablam! 100 |     ENET_PEER_STATE_CONNECTION_PENDING = 3,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PEER_STATE_CONNECTION_SUCCEEDED` should have a camel case name such as `EnetPeerStateConnectionSucceeded`
kablam!    --> src/peer.rs:101:5
kablam!     |
kablam! 101 |     ENET_PEER_STATE_CONNECTION_SUCCEEDED = 4,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PEER_STATE_CONNECTED` should have a camel case name such as `EnetPeerStateConnected`
kablam!    --> src/peer.rs:102:5
kablam!     |
kablam! 102 |     ENET_PEER_STATE_CONNECTED = 5,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PEER_STATE_DISCONNECT_LATER` should have a camel case name such as `EnetPeerStateDisconnectLater`
kablam!    --> src/peer.rs:103:5
kablam!     |
kablam! 103 |     ENET_PEER_STATE_DISCONNECT_LATER = 6,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PEER_STATE_DISCONNECTING` should have a camel case name such as `EnetPeerStateDisconnecting`
kablam!    --> src/peer.rs:104:5
kablam!     |
kablam! 104 |     ENET_PEER_STATE_DISCONNECTING = 7,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PEER_STATE_ACKNOWLEDGING_DISCONNECT` should have a camel case name such as `EnetPeerStateAcknowledgingDisconnect`
kablam!    --> src/peer.rs:105:5
kablam!     |
kablam! 105 |     ENET_PEER_STATE_ACKNOWLEDGING_DISCONNECT = 8,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_PEER_STATE_ZOMBIE` should have a camel case name such as `EnetPeerStateZombie`
kablam!    --> src/peer.rs:106:5
kablam!     |
kablam! 106 |     ENET_PEER_STATE_ZOMBIE = 9,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:110:39
kablam!     |
kablam! 110 |     pub fn enet_peer_disconnect(peer: *mut ENetPeer, data: uint32_t);
kablam!     |                                       ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:111:45
kablam!     |
kablam! 111 |     pub fn enet_peer_disconnect_later(peer: *mut ENetPeer, data: uint32_t);
kablam!     |                                             ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:112:43
kablam!     |
kablam! 112 |     pub fn enet_peer_disconnect_now(peer: *mut ENetPeer, data: uint32_t);
kablam!     |                                           ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:113:64
kablam!     |
kablam! 113 |     pub fn enet_peer_dispatch_incoming_reliable_commands(peer: *mut ENetPeer, channel: *mut ENetChannel);
kablam!     |                                                                ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:114:66
kablam!     |
kablam! 114 |     pub fn enet_peer_dispatch_incoming_unreliable_commands(peer: *mut ENetPeer, channel: *mut ENetChannel);
kablam!     |                                                                  ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:115:39
kablam!     |
kablam! 115 |     pub fn enet_peer_on_connect(peer: *mut ENetPeer);
kablam!     |                                       ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:116:42
kablam!     |
kablam! 116 |     pub fn enet_peer_on_disconnect(peer: *mut ENetPeer);
kablam!     |                                          ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:117:33
kablam!     |
kablam! 117 |     pub fn enet_peer_ping(peer: *mut ENetPeer);
kablam!     |                                 ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:118:42
kablam!     |
kablam! 118 |     pub fn enet_peer_ping_interval(peer: *mut ENetPeer, pingInterval: uint32_t);
kablam!     |                                          ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:119:50
kablam!     |
kablam! 119 |     pub fn enet_peer_queue_acknowledgement(peer: *mut ENetPeer, command: *const ENetProtocol,
kablam!     |                                                  ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:119:74
kablam!     |
kablam! 119 |     pub fn enet_peer_queue_acknowledgement(peer: *mut ENetPeer, command: *const ENetProtocol,
kablam!     |                                                                          ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:120:36
kablam!     |
kablam! 120 |             sentTime: uint16_t) -> *mut ENetAcknowledgement;
kablam!     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:121:51
kablam!     |
kablam! 121 |     pub fn enet_peer_queue_incoming_command(peer: *mut ENetPeer, command: *const ENetProtocol,
kablam!     |                                                   ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:121:75
kablam!     |
kablam! 121 |     pub fn enet_peer_queue_incoming_command(peer: *mut ENetPeer, command: *const ENetProtocol,
kablam!     |                                                                           ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:123:16
kablam!     |
kablam! 123 |             -> *mut ENetIncomingCommand;
kablam!     |                ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:124:51
kablam!     |
kablam! 124 |     pub fn enet_peer_queue_outgoing_command(peer: *mut ENetPeer, command: *const ENetProtocol,
kablam!     |                                                   ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:124:75
kablam!     |
kablam! 124 |     pub fn enet_peer_queue_outgoing_command(peer: *mut ENetPeer, command: *const ENetProtocol,
kablam!     |                                                                           ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:125:77
kablam!     |
kablam! 125 |             packet: *mut ENetPacket, offset: uint32_t, length: uint16_t) -> *mut ENetOutgoingCommand;
kablam!     |                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:126:36
kablam!     |
kablam! 126 |     pub fn enet_peer_receive(peer: *mut ENetPeer, channelID: *mut uint8_t) -> *mut ENetPacket;
kablam!     |                                    ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:127:34
kablam!     |
kablam! 127 |     pub fn enet_peer_reset(peer: *mut ENetPeer);
kablam!     |                                  ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:128:41
kablam!     |
kablam! 128 |     pub fn enet_peer_reset_queues(peer: *mut ENetPeer);
kablam!     |                                         ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:129:33
kablam!     |
kablam! 129 |     pub fn enet_peer_send(peer: *mut ENetPeer, channelID: uint8_t, packet: *mut ENetPacket) -> c_int;
kablam!     |                                 ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:130:51
kablam!     |
kablam! 130 |     pub fn enet_peer_setup_outgoing_command(peer: *mut ENetPeer,
kablam!     |                                                   ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:131:30
kablam!     |
kablam! 131 |             outgoingCommand: *mut ENetOutgoingCommand);
kablam!     |                              ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:132:37
kablam!     |
kablam! 132 |     pub fn enet_peer_throttle(peer: *mut ENetPeer, rtt: uint32_t) -> c_int;
kablam!     |                                     ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:133:47
kablam!     |
kablam! 133 |     pub fn enet_peer_throttle_configure(peer: *mut ENetPeer, interval: uint32_t, acceleration: uint32_t,
kablam!     |                                               ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type
kablam!    --> src/peer.rs:135:36
kablam!     |
kablam! 135 |     pub fn enet_peer_timeout(peer: *mut ENetPeer, timeoutLimit: uint32_t, timeoutMinimum: uint32_t,
kablam!     |                                    ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKET_TYPE_STREAM` should have a camel case name such as `EnetSocketTypeStream`
kablam!  --> src/socket.rs:9:5
kablam!   |
kablam! 9 |     ENET_SOCKET_TYPE_STREAM = 1,
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKET_TYPE_DATAGRAM` should have a camel case name such as `EnetSocketTypeDatagram`
kablam!   --> src/socket.rs:10:5
kablam!    |
kablam! 10 |     ENET_SOCKET_TYPE_DATAGRAM = 2,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKOPT_NONBLOCK` should have a camel case name such as `EnetSockoptNonblock`
kablam!   --> src/socket.rs:15:5
kablam!    |
kablam! 15 |     ENET_SOCKOPT_NONBLOCK = 1,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKOPT_BROADCAST` should have a camel case name such as `EnetSockoptBroadcast`
kablam!   --> src/socket.rs:16:5
kablam!    |
kablam! 16 |     ENET_SOCKOPT_BROADCAST = 2,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKOPT_RCVBUF` should have a camel case name such as `EnetSockoptRcvbuf`
kablam!   --> src/socket.rs:17:5
kablam!    |
kablam! 17 |     ENET_SOCKOPT_RCVBUF = 3,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKOPT_SNDBUF` should have a camel case name such as `EnetSockoptSndbuf`
kablam!   --> src/socket.rs:18:5
kablam!    |
kablam! 18 |     ENET_SOCKOPT_SNDBUF = 4,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKOPT_REUSEADDR` should have a camel case name such as `EnetSockoptReuseaddr`
kablam!   --> src/socket.rs:19:5
kablam!    |
kablam! 19 |     ENET_SOCKOPT_REUSEADDR = 5,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKOPT_RCVTIMEO` should have a camel case name such as `EnetSockoptRcvtimeo`
kablam!   --> src/socket.rs:20:5
kablam!    |
kablam! 20 |     ENET_SOCKOPT_RCVTIMEO = 6,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKOPT_SNDTIMEO` should have a camel case name such as `EnetSockoptSndtimeo`
kablam!   --> src/socket.rs:21:5
kablam!    |
kablam! 21 |     ENET_SOCKOPT_SNDTIMEO = 7,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKOPT_ERROR` should have a camel case name such as `EnetSockoptError`
kablam!   --> src/socket.rs:22:5
kablam!    |
kablam! 22 |     ENET_SOCKOPT_ERROR = 8,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKOPT_NODELAY` should have a camel case name such as `EnetSockoptNodelay`
kablam!   --> src/socket.rs:23:5
kablam!    |
kablam! 23 |     ENET_SOCKOPT_NODELAY = 9,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKET_SHUTDOWN_READ` should have a camel case name such as `EnetSocketShutdownRead`
kablam!   --> src/socket.rs:28:5
kablam!    |
kablam! 28 |     ENET_SOCKET_SHUTDOWN_READ = 0,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKET_SHUTDOWN_WRITE` should have a camel case name such as `EnetSocketShutdownWrite`
kablam!   --> src/socket.rs:29:5
kablam!    |
kablam! 29 |     ENET_SOCKET_SHUTDOWN_WRITE = 1,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_SOCKET_SHUTDOWN_READ_WRITE` should have a camel case name such as `EnetSocketShutdownReadWrite`
kablam!   --> src/socket.rs:30:5
kablam!    |
kablam! 30 |     ENET_SOCKET_SHUTDOWN_READ_WRITE = 2,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_EVENT_TYPE_NONE` should have a camel case name such as `EnetEventTypeNone`
kablam!   --> src/lib.rs:65:5
kablam!    |
kablam! 65 |     ENET_EVENT_TYPE_NONE = 0,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_EVENT_TYPE_CONNECT` should have a camel case name such as `EnetEventTypeConnect`
kablam!   --> src/lib.rs:66:5
kablam!    |
kablam! 66 |     ENET_EVENT_TYPE_CONNECT = 1,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_EVENT_TYPE_DISCONNECT` should have a camel case name such as `EnetEventTypeDisconnect`
kablam!   --> src/lib.rs:67:5
kablam!    |
kablam! 67 |     ENET_EVENT_TYPE_DISCONNECT = 2,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `ENET_EVENT_TYPE_RECEIVE` should have a camel case name such as `EnetEventTypeReceive`
kablam!   --> src/lib.rs:68:5
kablam!    |
kablam! 68 |     ENET_EVENT_TYPE_RECEIVE = 3,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.92 secs
boom! running `docker rm -f 3cc15e2d3fc0b93fa41b27ee64ce9046c93b7668c40bc15394f6ee55c22d697c`
blam! 3cc15e2d3fc0b93fa41b27ee64ce9046c93b7668c40bc15394f6ee55c22d697c
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 144cd1082a335f2f7ad337c9064e6f12e4bd5987cf2f0946c11fe6a5911d7402
boom! running `docker start -a 144cd1082a335f2f7ad337c9064e6f12e4bd5987cf2f0946c11fe6a5911d7402`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.3 secs
kablam!      Running /target/debug/deps/enet_sys-93f9725651830b0a
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/sizes-c8869c68a40cdc3d
blam! 
blam! running 1 test
blam! test test ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests enet-sys
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 144cd1082a335f2f7ad337c9064e6f12e4bd5987cf2f0946c11fe6a5911d7402`
blam! 144cd1082a335f2f7ad337c9064e6f12e4bd5987cf2f0946c11fe6a5911d7402
