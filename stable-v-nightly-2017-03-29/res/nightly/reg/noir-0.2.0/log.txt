boom! testing noir-0.2.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 1e12b3e69f011f11c68343b4eda16a72334416e6f6fbf4242fe2ebe38a313b63
boom! running `docker start -a 1e12b3e69f011f11c68343b4eda16a72334416e6f6fbf4242fe2ebe38a313b63`
kablam!    Compiling json v0.8.8
kablam!    Compiling hyper v0.9.18
kablam!    Compiling noir v0.2.0 (file:///source)
kablam! warning: unused `#[macro_use]` import
kablam!   --> src/lib.rs:22:1
kablam!    |
kablam! 22 | #[macro_use]
kablam!    | ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 25.19 secs
boom! running `docker rm -f 1e12b3e69f011f11c68343b4eda16a72334416e6f6fbf4242fe2ebe38a313b63`
blam! 1e12b3e69f011f11c68343b4eda16a72334416e6f6fbf4242fe2ebe38a313b63
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 29f675994e391746f281c3625bf34807d7c124da5e083530e5a71ff07bac017c
boom! running `docker start -a 29f675994e391746f281c3625bf34807d7c124da5e083530e5a71ff07bac017c`
kablam!    Compiling noir v0.2.0 (file:///source)
kablam! warning: unused `#[macro_use]` import
kablam!  --> tests/response_status.rs:1:1
kablam!   |
kablam! 1 | #[macro_use] extern crate json;
kablam!   | ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused `#[macro_use]` import
kablam!  --> tests/responses.rs:1:1
kablam!   |
kablam! 1 | #[macro_use] extern crate json;
kablam!   | ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused `#[macro_use]` import
kablam!  --> tests/headers.rs:1:1
kablam!   |
kablam! 1 | #[macro_use] extern crate json;
kablam!   | ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused `#[macro_use]` import
kablam!  --> tests/response_query.rs:1:1
kablam!   |
kablam! 1 | #[macro_use] extern crate json;
kablam!   | ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused `#[macro_use]` import
kablam!  --> tests/method.rs:1:1
kablam!   |
kablam! 1 | #[macro_use] extern crate json;
kablam!   | ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused `#[macro_use]` import
kablam!  --> tests/multiple.rs:1:1
kablam!   |
kablam! 1 | #[macro_use] extern crate json;
kablam!   | ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused `#[macro_use]` import
kablam!  --> tests/api.rs:1:1
kablam!   |
kablam! 1 | #[macro_use] extern crate json;
kablam!   | ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused `#[macro_use]` import
kablam!  --> tests/query.rs:1:1
kablam!   |
kablam! 1 | #[macro_use] extern crate json;
kablam!   | ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused `#[macro_use]` import
kablam!  --> tests/response_header.rs:1:1
kablam!   |
kablam! 1 | #[macro_use] extern crate json;
kablam!   | ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused `#[macro_use]` import
kablam!  --> tests/status.rs:1:1
kablam!   |
kablam! 1 | #[macro_use] extern crate json;
kablam!   | ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused `#[macro_use]` import
kablam!  --> tests/response_order.rs:1:1
kablam!   |
kablam! 1 | #[macro_use] extern crate json;
kablam!   | ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 82.37 secs
boom! running `docker rm -f 29f675994e391746f281c3625bf34807d7c124da5e083530e5a71ff07bac017c`
blam! 29f675994e391746f281c3625bf34807d7c124da5e083530e5a71ff07bac017c
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 80ade90d323f5b1425d9ab796479750fb19dd40b47f7f6758f7ccf98ea32643e
boom! running `docker start -a 80ade90d323f5b1425d9ab796479750fb19dd40b47f7f6758f7ccf98ea32643e`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/api-803c5e5e5a0acbb7
blam! 
blam! running 3 tests
blam! test test_api_request_timeout ... ok
blam! test test_api_start_multiple ... ok
blam! test test_api_start_timeout ... ok
blam! 
blam! test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/base_test-8741c975d34ccd3e
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/body-5c7901cdf5fa26e5
blam! 
blam! running 21 tests
blam! test test_body_expected_raw ... ok
blam! test test_body_override_header_from_body ... ok
blam! test test_body_expected_text ... ok
blam! test test_body_expected_raw_mismatch ... ok
blam! test test_body_set_header_from_body_json ... ok
blam! test test_body_set_header_from_body_raw ... ok
blam! test test_body_set_header_from_body_text ... ok
blam! test test_body_text_mismatch_diff_added ... ok
blam! test test_body_text_mismatch_diff_removed ... ok
blam! test test_body_with_expected ... ok
blam! test test_body_with_expected_json ... ok
blam! test test_body_with_expected_json_compare_depth_one ... ok
blam! test test_body_with_expected_json_compare_depth_zero ... ok
blam! test test_body_with_expected_json_expected_invalid ... ok
blam! test test_body_with_expected_json_expected_invalid_utf8 ... FAILED
blam! test test_body_with_expected_json_invalid ... ok
blam! test test_body_with_expected_json_invalid_utf8 ... FAILED
blam! test test_body_with_expected_json_mismatch ... ok
blam! test test_body_with_expected_json_mismatch_exact ... ok
blam! test test_body_with_expected_text_expected_invalid_utf8 ... FAILED
blam! test test_body_with_expected_text_invalid_utf8 ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- test_body_with_expected_json_expected_invalid_utf8 stdout ----
blam! 	
blam! [1;31mResponse Failure:[0m [1;36mPOST[0m [33mrequest to[0m "[1;36mhttp://localhost:4000[0m[1;36m/echo[0m" [33mreturned[0m [1;31m1[0m [33merror(s)[0m
blam! 
blam! [1;31m 1)[0m [33mResponse[0m [33mbody, expected[0m [33mbody json provided by test contains invalid UTF-8:[0m
blam! 
blam!         [1;31mUtf8Error { valid_up_to: 0, error_len: Some(1) }[0m
blam! 
blam! 
blam! 
blam! 
blam! [33mExpected Output:[0m [1;34m>>>[0m[1;32m
blam! <br>Response Failure: <bc>POST <by>request to \"<bc>http://localhost:4000<bc>/echo\" <by>returned <br>1 <by>error(s)
blam! 
blam! <br> 1) <by>Response <by>body, expected <by>body json provided by test contains invalid UTF-8:
blam! 
blam!         <br>Utf8Error { valid_up_to: 0 }
blam! 
blam! 
blam! [0m[1;34m<<<[0m
blam! 
blam! [33mActual Output:[0m [1;34m>>>[0m[1;31m
blam! <br>Response Failure: <bc>POST <by>request to \"<bc>http://localhost:4000<bc>/echo\" <by>returned <br>1 <by>error(s)
blam! 
blam! <br> 1) <by>Response <by>body, expected <by>body json provided by test contains invalid UTF-8:
blam! 
blam!         <br>Utf8Error { valid_up_to: 0, error_len: Some(1) }
blam! 
blam! 
blam! [0m[1;34m<<<[0m
blam! thread 'test_body_with_expected_json_expected_invalid_utf8' panicked at 'Noir test output does not match.', tests/body.rs:472
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! ---- test_body_with_expected_json_invalid_utf8 stdout ----
blam! 	
blam! [1;31mResponse Failure:[0m [1;36mPOST[0m [33mrequest to[0m "[1;36mhttp://localhost:4000[0m[1;36m/echo[0m" [33mreturned[0m [1;31m1[0m [33merror(s)[0m
blam! 
blam! [1;31m 1)[0m [33mResponse[0m [33mbody json contains invalid UTF-8:[0m
blam! 
blam!         [1;31mUtf8Error { valid_up_to: 0, error_len: Some(1) }[0m
blam! 
blam! 
blam! 
blam! 
blam! [33mExpected Output:[0m [1;34m>>>[0m[1;32m
blam! <br>Response Failure: <bc>POST <by>request to \"<bc>http://localhost:4000<bc>/echo\" <by>returned <br>1 <by>error(s)
blam! 
blam! <br> 1) <by>Response <by>body json contains invalid UTF-8:
blam! 
blam!         <br>Utf8Error { valid_up_to: 0 }
blam! 
blam! 
blam! [0m[1;34m<<<[0m
blam! 
blam! [33mActual Output:[0m [1;34m>>>[0m[1;31m
blam! <br>Response Failure: <bc>POST <by>request to \"<bc>http://localhost:4000<bc>/echo\" <by>returned <br>1 <by>error(s)
blam! 
blam! <br> 1) <by>Response <by>body json contains invalid UTF-8:
blam! 
blam!         <br>Utf8Error { valid_up_to: 0, error_len: Some(1) }
blam! 
blam! 
blam! [0m[1;34m<<<[0m
blam! thread 'test_body_with_expected_json_invalid_utf8' panicked at 'Noir test output does not match.', tests/body.rs:418
blam! 
blam! ---- test_body_with_expected_text_expected_invalid_utf8 stdout ----
blam! 	
blam! [1;31mResponse Failure:[0m [1;36mPOST[0m [33mrequest to[0m "[1;36mhttp://localhost:4000[0m[1;36m/echo[0m" [33mreturned[0m [1;31m1[0m [33merror(s)[0m
blam! 
blam! [1;31m 1)[0m [33mResponse[0m [33mbody, expected text provided by test contains invalid UTF-8:[0m
blam! 
blam!         [1;31mUtf8Error { valid_up_to: 0, error_len: Some(1) }[0m
kablam! error: test failed
blam! 
blam! 
blam! 
blam! 
blam! [33mExpected Output:[0m [1;34m>>>[0m[1;32m
blam! <br>Response Failure: <bc>POST <by>request to \"<bc>http://localhost:4000<bc>/echo\" <by>returned <br>1 <by>error(s)
blam! 
blam! <br> 1) <by>Response <by>body, expected text provided by test contains invalid UTF-8:
blam! 
blam!         <br>Utf8Error { valid_up_to: 0 }
blam! 
blam! 
blam! [0m[1;34m<<<[0m
blam! 
blam! [33mActual Output:[0m [1;34m>>>[0m[1;31m
blam! <br>Response Failure: <bc>POST <by>request to \"<bc>http://localhost:4000<bc>/echo\" <by>returned <br>1 <by>error(s)
blam! 
blam! <br> 1) <by>Response <by>body, expected text provided by test contains invalid UTF-8:
blam! 
blam!         <br>Utf8Error { valid_up_to: 0, error_len: Some(1) }
blam! 
blam! 
blam! [0m[1;34m<<<[0m
blam! thread 'test_body_with_expected_text_expected_invalid_utf8' panicked at 'Noir test output does not match.', tests/body.rs:134
blam! 
blam! ---- test_body_with_expected_text_invalid_utf8 stdout ----
blam! 	
blam! [1;31mResponse Failure:[0m [1;36mPOST[0m [33mrequest to[0m "[1;36mhttp://localhost:4000[0m[1;36m/echo[0m" [33mreturned[0m [1;31m1[0m [33merror(s)[0m
blam! 
blam! [1;31m 1)[0m [33mResponse[0m [33mtext body contains invalid UTF-8:[0m
blam! 
blam!         [1;31mUtf8Error { valid_up_to: 0, error_len: Some(1) }[0m
blam! 
blam! 
blam! 
blam! 
blam! [33mExpected Output:[0m [1;34m>>>[0m[1;32m
blam! <br>Response Failure: <bc>POST <by>request to \"<bc>http://localhost:4000<bc>/echo\" <by>returned <br>1 <by>error(s)
blam! 
blam! <br> 1) <by>Response <by>text body contains invalid UTF-8:
blam! 
blam!         <br>Utf8Error { valid_up_to: 0 }
blam! 
blam! 
blam! [0m[1;34m<<<[0m
blam! 
blam! [33mActual Output:[0m [1;34m>>>[0m[1;31m
blam! <br>Response Failure: <bc>POST <by>request to \"<bc>http://localhost:4000<bc>/echo\" <by>returned <br>1 <by>error(s)
blam! 
blam! <br> 1) <by>Response <by>text body contains invalid UTF-8:
blam! 
blam!         <br>Utf8Error { valid_up_to: 0, error_len: Some(1) }
blam! 
blam! 
blam! [0m[1;34m<<<[0m
blam! thread 'test_body_with_expected_text_invalid_utf8' panicked at 'Noir test output does not match.', tests/body.rs:109
blam! 
blam! 
blam! failures:
blam!     test_body_with_expected_json_expected_invalid_utf8
blam!     test_body_with_expected_json_invalid_utf8
blam!     test_body_with_expected_text_expected_invalid_utf8
blam!     test_body_with_expected_text_invalid_utf8
blam! 
blam! test result: FAILED. 17 passed; 4 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 80ade90d323f5b1425d9ab796479750fb19dd40b47f7f6758f7ccf98ea32643e`
blam! 80ade90d323f5b1425d9ab796479750fb19dd40b47f7f6758f7ccf98ea32643e
