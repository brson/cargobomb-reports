boom! testing winit-0.6.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! a74acf89a4c81e03d2d34f190a54a7188d48d4b96d50f05ab600b5ba352d5b3d
boom! running `docker start -a a74acf89a4c81e03d2d34f190a54a7188d48d4b96d50f05ab600b5ba352d5b3d`
kablam!    Compiling winit v0.6.0 (file:///source)
kablam! warning: unused `#[macro_use]` import
kablam!   --> src/lib.rs:88:1
kablam!    |
kablam! 88 | #[macro_use]
kablam!    | ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused variable: `version`
kablam!   --> src/api/wayland/context.rs:93:36
kablam!    |
kablam! 93 |         for &(name, ref interface, version) in self.inner.globals() {
kablam!    |                                    ^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `e`
kablam!    --> src/api/wayland/context.rs:210:17
kablam!     |
kablam! 210 |             Err(e) => return None
kablam!     |                 ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/api/wayland/context.rs:238:9
kablam!     |
kablam! 238 |         self.display.flush();
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused variable: `axis_source`
kablam!    --> src/api/wayland/context.rs:513:20
kablam!     |
kablam! 513 |                    axis_source: wl_pointer::AxisSource)
kablam!     |                    ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `axis`
kablam!    --> src/api/wayland/context.rs:521:18
kablam!     |
kablam! 521 |                  axis: wl_pointer::Axis)
kablam!     |                  ^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: method is never used: `wakeup_event_loop`
kablam!   --> src/api/wayland/window.rs:22:5
kablam!    |
kablam! 22 |       pub fn wakeup_event_loop(&self) {
kablam!    |  _____^ starting here...
kablam! 23 | |         // Send a sync event, so that any waiting "dispatch" will return
kablam! 24 | |         self.ctxt.display.sync();
kablam! 25 | |         self.eviter.lock().unwrap().push_back(Event::Awakened);
kablam! 26 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `WaitEventsIterator`
kablam!   --> src/api/wayland/window.rs:51:1
kablam!    |
kablam! 51 |   pub struct WaitEventsIterator<'a> {
kablam!    |  _^ starting here...
kablam! 52 | |     window: &'a Window,
kablam! 53 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `std::cmp::max`
kablam!    --> src/api/wayland/window.rs:110:13
kablam!     |
kablam! 110 |         use std::cmp::max;
kablam!     |             ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/api/wayland/window.rs:124:17
kablam!     |
kablam! 124 |             let mut handler = state.get_mut_handler::<WindowHandler>(self.handler_id);
kablam!     |                 ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/api/wayland/window.rs:133:13
kablam!     |
kablam! 133 |         let mut evt = {
kablam!     |             ^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/api/wayland/window.rs:146:13
kablam!     |
kablam! 146 |             guard.read_events();
kablam!     |             ^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/api/wayland/window.rs:152:13
kablam!     |
kablam! 152 |             self.evq.lock().unwrap().dispatch_pending();
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/api/wayland/window.rs:167:17
kablam!     |
kablam! 167 |                 self.evq.lock().unwrap().dispatch_pending();
kablam!     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/api/wayland/window.rs:181:13
kablam!     |
kablam! 181 |         let mut decorated = state.get_mut_handler::<DecoratedSurface<DecoratedHandler>>(self.decorated_id);
kablam!     |             ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: method is never used: `create_window_proxy`
kablam!    --> src/api/wayland/window.rs:227:5
kablam!     |
kablam! 227 |       pub fn create_window_proxy(&self) -> WindowProxy {
kablam!     |  _____^ starting here...
kablam! 228 | |         WindowProxy {
kablam! 229 | |             ctxt: self.ctxt.clone(),
kablam! 230 | |             eviter: self.eviter.clone()
kablam! 231 | |         }
kablam! 232 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `wait_events`
kablam!    --> src/api/wayland/window.rs:242:5
kablam!     |
kablam! 242 |       pub fn wait_events(&self) -> WaitEventsIterator {
kablam!     |  _____^ starting here...
kablam! 243 | |         WaitEventsIterator {
kablam! 244 | |             window: self
kablam! 245 | |         }
kablam! 246 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `set_window_resize_callback`
kablam!    --> src/api/wayland/window.rs:249:5
kablam!     |
kablam! 249 |       pub fn set_window_resize_callback(&mut self, callback: Option<fn(u32, u32)>) {
kablam!     |  _____^ starting here...
kablam! 250 | |         let mut guard = self.evq.lock().unwrap();
kablam! 251 | |         let mut state = guard.state();
kablam! 252 | |         let mut handler = state.get_mut_handler::<WindowHandler>(self.handler_id);
kablam! 253 | |         handler.resize_callback = callback;
kablam! 254 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `evqh`
kablam!    --> src/api/wayland/window.rs:337:24
kablam!     |
kablam! 337 |     fn init(&mut self, evqh: &mut EventQueueHandle, index: usize) {
kablam!     |                        ^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/api/x11/window.rs:796:17
kablam!     |
kablam! 796 |             let mut xcursor = match cursor {
kablam!     |                 ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused import: `std::ffi::CString`
kablam!  --> src/api/x11/xdisplay.rs:4:5
kablam!   |
kablam! 4 | use std::ffi::CString;
kablam!   |     ^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `api::dlopen`
kablam!   --> src/api/x11/xdisplay.rs:10:5
kablam!    |
kablam! 10 | use api::dlopen;
kablam!    |     ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/api_transition.rs:30:21
kablam!    |
kablam! 30 |                 let mut windows = self.windows.lock().unwrap();
kablam!    |                     ^^^^^^^^^^^
kablam!    | 
kablam!   ::: src/platform/linux/mod.rs
kablam!    |
kablam! 20 | gen_api_transition!();
kablam!    | ---------------------- in this macro invocation
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`
kablam!   --> src/api_transition.rs:49:21
kablam!    |
kablam! 49 |                     ::std::thread::sleep_ms(5);
kablam!    |                     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!    | 
kablam!   ::: src/platform/linux/mod.rs
kablam!    |
kablam! 20 | gen_api_transition!();
kablam!    | ---------------------- in this macro invocation
kablam!    |
kablam!    = note: #[warn(deprecated)] on by default
kablam! 
kablam! warning: variant is never used: `X`
kablam!   --> src/platform/linux/mod.rs:58:5
kablam!    |
kablam! 58 |     X(x11::WindowProxy),
kablam!    |     ^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Wayland`
kablam!   --> src/platform/linux/mod.rs:60:5
kablam!    |
kablam! 60 |     Wayland(wayland::WindowProxy)
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `wakeup_event_loop`
kablam!   --> src/platform/linux/mod.rs:65:5
kablam!    |
kablam! 65 |       pub fn wakeup_event_loop(&self) {
kablam!    |  _____^ starting here...
kablam! 66 | |         match self {
kablam! 67 | |             &WindowProxy::X(ref wp) => wp.wakeup_event_loop(),
kablam! 68 | |             &WindowProxy::Wayland(ref wp) => wp.wakeup_event_loop()
kablam! 69 | |         }
kablam! 70 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: enum is never used: `WaitEventsIterator`
kablam!    --> src/platform/linux/mod.rs:156:1
kablam!     |
kablam! 156 |   pub enum WaitEventsIterator<'a> {
kablam!     |  _^ starting here...
kablam! 157 | |     #[doc(hidden)]
kablam! 158 | |     X(x11::WaitEventsIterator<'a>),
kablam! 159 | |     #[doc(hidden)]
kablam! 160 | |     Wayland(wayland::WaitEventsIterator<'a>)
kablam! 161 | | }
kablam!     | |_^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `error`
kablam!    --> src/platform/linux/mod.rs:189:32
kablam!     |
kablam! 189 |             UnixBackend::Error(ref error) => {
kablam!     |                                ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: method is never used: `create_window_proxy`
kablam!    --> src/platform/linux/mod.rs:261:5
kablam!     |
kablam! 261 |       pub fn create_window_proxy(&self) -> WindowProxy {
kablam!     |  _____^ starting here...
kablam! 262 | |         match self {
kablam! 263 | |             &Window::X(ref w) => WindowProxy::X(w.create_window_proxy()),
kablam! 264 | |             &Window::Wayland(ref w) => WindowProxy::Wayland(w.create_window_proxy())
kablam! 265 | |         }
kablam! 266 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `wait_events`
kablam!    --> src/platform/linux/mod.rs:277:5
kablam!     |
kablam! 277 |       pub fn wait_events(&self) -> WaitEventsIterator {
kablam!     |  _____^ starting here...
kablam! 278 | |         match self {
kablam! 279 | |             &Window::X(ref w) => WaitEventsIterator::X(w.wait_events()),
kablam! 280 | |             &Window::Wayland(ref w) => WaitEventsIterator::Wayland(w.wait_events())
kablam! 281 | |         }
kablam! 282 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `set_window_resize_callback`
kablam!    --> src/platform/linux/mod.rs:285:5
kablam!     |
kablam! 285 |       pub fn set_window_resize_callback(&mut self, callback: Option<fn(u32, u32)>) {
kablam!     |  _____^ starting here...
kablam! 286 | |         match self {
kablam! 287 | |             &mut Window::X(ref mut w) => w.set_window_resize_callback(callback),
kablam! 288 | |             &mut Window::Wayland(ref mut w) => w.set_window_resize_callback(callback)
kablam! 289 | |         }
kablam! 290 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 5.64 secs
boom! running `docker rm -f a74acf89a4c81e03d2d34f190a54a7188d48d4b96d50f05ab600b5ba352d5b3d`
blam! a74acf89a4c81e03d2d34f190a54a7188d48d4b96d50f05ab600b5ba352d5b3d
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 8734b340de85372eec24842933ec31452af26858d774b817fb93a29e05937566
boom! running `docker start -a 8734b340de85372eec24842933ec31452af26858d774b817fb93a29e05937566`
kablam!    Compiling winit v0.6.0 (file:///source)
kablam! warning: unused variable: `window`
kablam!  --> examples/window.rs:6:9
kablam!   |
kablam! 6 |     let window = winit::WindowBuilder::new()
kablam!   |         ^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused `#[macro_use]` import
kablam!   --> src/lib.rs:88:1
kablam!    |
kablam! 88 | #[macro_use]
kablam!    | ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused variable: `version`
kablam!   --> src/api/wayland/context.rs:93:36
kablam!    |
kablam! 93 |         for &(name, ref interface, version) in self.inner.globals() {
kablam!    |                                    ^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `e`
kablam!    --> src/api/wayland/context.rs:210:17
kablam!     |
kablam! 210 |             Err(e) => return None
kablam!     |                 ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/api/wayland/context.rs:238:9
kablam!     |
kablam! 238 |         self.display.flush();
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused variable: `axis_source`
kablam!    --> src/api/wayland/context.rs:513:20
kablam!     |
kablam! 513 |                    axis_source: wl_pointer::AxisSource)
kablam!     |                    ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `axis`
kablam!    --> src/api/wayland/context.rs:521:18
kablam!     |
kablam! 521 |                  axis: wl_pointer::Axis)
kablam!     |                  ^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: method is never used: `wakeup_event_loop`
kablam!   --> src/api/wayland/window.rs:22:5
kablam!    |
kablam! 22 |       pub fn wakeup_event_loop(&self) {
kablam!    |  _____^ starting here...
kablam! 23 | |         // Send a sync event, so that any waiting "dispatch" will return
kablam! 24 | |         self.ctxt.display.sync();
kablam! 25 | |         self.eviter.lock().unwrap().push_back(Event::Awakened);
kablam! 26 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `WaitEventsIterator`
kablam!   --> src/api/wayland/window.rs:51:1
kablam!    |
kablam! 51 |   pub struct WaitEventsIterator<'a> {
kablam!    |  _^ starting here...
kablam! 52 | |     window: &'a Window,
kablam! 53 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `std::cmp::max`
kablam!    --> src/api/wayland/window.rs:110:13
kablam!     |
kablam! 110 |         use std::cmp::max;
kablam!     |             ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/api/wayland/window.rs:124:17
kablam!     |
kablam! 124 |             let mut handler = state.get_mut_handler::<WindowHandler>(self.handler_id);
kablam!     |                 ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/api/wayland/window.rs:133:13
kablam!     |
kablam! 133 |         let mut evt = {
kablam!     |             ^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/api/wayland/window.rs:146:13
kablam!     |
kablam! 146 |             guard.read_events();
kablam!     |             ^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/api/wayland/window.rs:152:13
kablam!     |
kablam! 152 |             self.evq.lock().unwrap().dispatch_pending();
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/api/wayland/window.rs:167:17
kablam!     |
kablam! 167 |                 self.evq.lock().unwrap().dispatch_pending();
kablam!     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/api/wayland/window.rs:181:13
kablam!     |
kablam! 181 |         let mut decorated = state.get_mut_handler::<DecoratedSurface<DecoratedHandler>>(self.decorated_id);
kablam!     |             ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: method is never used: `create_window_proxy`
kablam!    --> src/api/wayland/window.rs:227:5
kablam!     |
kablam! 227 |       pub fn create_window_proxy(&self) -> WindowProxy {
kablam!     |  _____^ starting here...
kablam! 228 | |         WindowProxy {
kablam! 229 | |             ctxt: self.ctxt.clone(),
kablam! 230 | |             eviter: self.eviter.clone()
kablam! 231 | |         }
kablam! 232 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `wait_events`
kablam!    --> src/api/wayland/window.rs:242:5
kablam!     |
kablam! 242 |       pub fn wait_events(&self) -> WaitEventsIterator {
kablam!     |  _____^ starting here...
kablam! 243 | |         WaitEventsIterator {
kablam! 244 | |             window: self
kablam! 245 | |         }
kablam! 246 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `set_window_resize_callback`
kablam!    --> src/api/wayland/window.rs:249:5
kablam!     |
kablam! 249 |       pub fn set_window_resize_callback(&mut self, callback: Option<fn(u32, u32)>) {
kablam!     |  _____^ starting here...
kablam! 250 | |         let mut guard = self.evq.lock().unwrap();
kablam! 251 | |         let mut state = guard.state();
kablam! 252 | |         let mut handler = state.get_mut_handler::<WindowHandler>(self.handler_id);
kablam! 253 | |         handler.resize_callback = callback;
kablam! 254 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `evqh`
kablam!    --> src/api/wayland/window.rs:337:24
kablam!     |
kablam! 337 |     fn init(&mut self, evqh: &mut EventQueueHandle, index: usize) {
kablam!     |                        ^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/api/x11/window.rs:796:17
kablam!     |
kablam! 796 |             let mut xcursor = match cursor {
kablam!     |                 ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused import: `std::ffi::CString`
kablam!  --> src/api/x11/xdisplay.rs:4:5
kablam!   |
kablam! 4 | use std::ffi::CString;
kablam!   |     ^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `api::dlopen`
kablam!   --> src/api/x11/xdisplay.rs:10:5
kablam!    |
kablam! 10 | use api::dlopen;
kablam!    |     ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/api_transition.rs:30:21
kablam!    |
kablam! 30 |                 let mut windows = self.windows.lock().unwrap();
kablam!    |                     ^^^^^^^^^^^
kablam!    | 
kablam!   ::: src/platform/linux/mod.rs
kablam!    |
kablam! 20 | gen_api_transition!();
kablam!    | ---------------------- in this macro invocation
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: use of deprecated item: replaced by `std::thread::sleep`
kablam!   --> src/api_transition.rs:49:21
kablam!    |
kablam! 49 |                     ::std::thread::sleep_ms(5);
kablam!    |                     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!    | 
kablam!   ::: src/platform/linux/mod.rs
kablam!    |
kablam! 20 | gen_api_transition!();
kablam!    | ---------------------- in this macro invocation
kablam!    |
kablam!    = note: #[warn(deprecated)] on by default
kablam! 
kablam! warning: variant is never used: `X`
kablam!   --> src/platform/linux/mod.rs:58:5
kablam!    |
kablam! 58 |     X(x11::WindowProxy),
kablam!    |     ^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Wayland`
kablam!   --> src/platform/linux/mod.rs:60:5
kablam!    |
kablam! 60 |     Wayland(wayland::WindowProxy)
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `wakeup_event_loop`
kablam!   --> src/platform/linux/mod.rs:65:5
kablam!    |
kablam! 65 |       pub fn wakeup_event_loop(&self) {
kablam!    |  _____^ starting here...
kablam! 66 | |         match self {
kablam! 67 | |             &WindowProxy::X(ref wp) => wp.wakeup_event_loop(),
kablam! 68 | |             &WindowProxy::Wayland(ref wp) => wp.wakeup_event_loop()
kablam! 69 | |         }
kablam! 70 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: enum is never used: `WaitEventsIterator`
kablam!    --> src/platform/linux/mod.rs:156:1
kablam!     |
kablam! 156 |   pub enum WaitEventsIterator<'a> {
kablam!     |  _^ starting here...
kablam! 157 | |     #[doc(hidden)]
kablam! 158 | |     X(x11::WaitEventsIterator<'a>),
kablam! 159 | |     #[doc(hidden)]
kablam! 160 | |     Wayland(wayland::WaitEventsIterator<'a>)
kablam! 161 | | }
kablam!     | |_^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `error`
kablam!    --> src/platform/linux/mod.rs:189:32
kablam!     |
kablam! 189 |             UnixBackend::Error(ref error) => {
kablam!     |                                ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: method is never used: `create_window_proxy`
kablam!    --> src/platform/linux/mod.rs:261:5
kablam!     |
kablam! 261 |       pub fn create_window_proxy(&self) -> WindowProxy {
kablam!     |  _____^ starting here...
kablam! 262 | |         match self {
kablam! 263 | |             &Window::X(ref w) => WindowProxy::X(w.create_window_proxy()),
kablam! 264 | |             &Window::Wayland(ref w) => WindowProxy::Wayland(w.create_window_proxy())
kablam! 265 | |         }
kablam! 266 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `wait_events`
kablam!    --> src/platform/linux/mod.rs:277:5
kablam!     |
kablam! 277 |       pub fn wait_events(&self) -> WaitEventsIterator {
kablam!     |  _____^ starting here...
kablam! 278 | |         match self {
kablam! 279 | |             &Window::X(ref w) => WaitEventsIterator::X(w.wait_events()),
kablam! 280 | |             &Window::Wayland(ref w) => WaitEventsIterator::Wayland(w.wait_events())
kablam! 281 | |         }
kablam! 282 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `set_window_resize_callback`
kablam!    --> src/platform/linux/mod.rs:285:5
kablam!     |
kablam! 285 |       pub fn set_window_resize_callback(&mut self, callback: Option<fn(u32, u32)>) {
kablam!     |  _____^ starting here...
kablam! 286 | |         match self {
kablam! 287 | |             &mut Window::X(ref mut w) => w.set_window_resize_callback(callback),
kablam! 288 | |             &mut Window::Wayland(ref mut w) => w.set_window_resize_callback(callback)
kablam! 289 | |         }
kablam! 290 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 10.68 secs
boom! running `docker rm -f 8734b340de85372eec24842933ec31452af26858d774b817fb93a29e05937566`
blam! 8734b340de85372eec24842933ec31452af26858d774b817fb93a29e05937566
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 56862cc148348246b2ca9589154a694e36b85bc2d0003f5c989fe283b4ab100e
boom! running `docker start -a 56862cc148348246b2ca9589154a694e36b85bc2d0003f5c989fe283b4ab100e`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.12 secs
kablam!      Running /target/debug/deps/events_loop-17e7fde8b47cc26b
blam! 
blam! running 1 test
blam! test send_sync ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/window_proxy_send-4fddaed5f9804c28
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/winit-6a093c6b4bd806fa
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests winit
blam! 
blam! running 4 tests
blam! test src/lib.rs -  (line 8) ... ok
blam! test src/lib.rs -  (line 37) ... ok
blam! test src/lib.rs -  (line 59) ... ok
blam! test src/lib.rs - Window (line 142) ... ok
blam! 
blam! test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 56862cc148348246b2ca9589154a694e36b85bc2d0003f5c989fe283b4ab100e`
blam! 56862cc148348246b2ca9589154a694e36b85bc2d0003f5c989fe283b4ab100e
