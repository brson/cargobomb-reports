boom! testing libudt4-sys-0.2.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! b212dd60a1d24460fa85db4f1f1e5e26df4eebc868fd6422d317e01b603cba35
boom! running `docker start -a b212dd60a1d24460fa85db4f1f1e5e26df4eebc868fd6422d317e01b603cba35`
kablam!    Compiling libudt4-sys v0.2.0 (file:///source)
kablam! warning: libudt4/udt4/src/epoll.cpp:112:69: warning: unused parameter 'events' [-Wunused-parameter]
kablam! warning:  int CEPoll::add_ssock(const int eid, const SYSSOCKET& s, const int* events)
kablam! warning:                                                                      ^
kablam! warning: variant `UDT_EPOLL_IN` should have a camel case name such as `UdtEpollIn`
kablam!    --> lib.rs:100:5
kablam!     |
kablam! 100 |     UDT_EPOLL_IN = 0x1,
kablam!     |     ^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_EPOLL_OUT` should have a camel case name such as `UdtEpollOut`
kablam!    --> lib.rs:101:5
kablam!     |
kablam! 101 |     UDT_EPOLL_OUT = 0x4,
kablam!     |     ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_EPOLL_ERR` should have a camel case name such as `UdtEpollErr`
kablam!    --> lib.rs:102:5
kablam!     |
kablam! 102 |     UDT_EPOLL_ERR = 0x8
kablam!     |     ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_SNDSYN` should have a camel case name such as `UdtSndsyn`
kablam!    --> lib.rs:109:4
kablam!     |
kablam! 109 |    UDT_SNDSYN,          // if sending is blocking
kablam!     |    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_RCVSYN` should have a camel case name such as `UdtRcvsyn`
kablam!    --> lib.rs:110:4
kablam!     |
kablam! 110 |    UDT_RCVSYN,          // if receiving is blocking
kablam!     |    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_CC` should have a camel case name such as `UdtCc`
kablam!    --> lib.rs:111:4
kablam!     |
kablam! 111 |    UDT_CC,              // custom congestion control algorithm
kablam!     |    ^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_FC` should have a camel case name such as `UdtFc`
kablam!    --> lib.rs:112:4
kablam!     |
kablam! 112 |    UDT_FC,		// Flight flag size (window size)
kablam!     |    ^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_SNDBUF` should have a camel case name such as `UdtSndbuf`
kablam!    --> lib.rs:113:4
kablam!     |
kablam! 113 |    UDT_SNDBUF,          // maximum buffer in sending queue
kablam!     |    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_RCVBUF` should have a camel case name such as `UdtRcvbuf`
kablam!    --> lib.rs:114:4
kablam!     |
kablam! 114 |    UDT_RCVBUF,          // UDT receiving buffer size
kablam!     |    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_LINGER` should have a camel case name such as `UdtLinger`
kablam!    --> lib.rs:115:4
kablam!     |
kablam! 115 |    UDT_LINGER,          // waiting for unsent data when closing
kablam!     |    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDP_SNDBUF` should have a camel case name such as `UdpSndbuf`
kablam!    --> lib.rs:116:4
kablam!     |
kablam! 116 |    UDP_SNDBUF,          // UDP sending buffer size
kablam!     |    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDP_RCVBUF` should have a camel case name such as `UdpRcvbuf`
kablam!    --> lib.rs:117:4
kablam!     |
kablam! 117 |    UDP_RCVBUF,          // UDP receiving buffer size
kablam!     |    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_MAXMSG` should have a camel case name such as `UdtMaxmsg`
kablam!    --> lib.rs:118:4
kablam!     |
kablam! 118 |    UDT_MAXMSG,          // maximum datagram message size
kablam!     |    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_MSGTTL` should have a camel case name such as `UdtMsgttl`
kablam!    --> lib.rs:119:4
kablam!     |
kablam! 119 |    UDT_MSGTTL,          // time-to-live of a datagram message
kablam!     |    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_RENDEZVOUS` should have a camel case name such as `UdtRendezvous`
kablam!    --> lib.rs:120:4
kablam!     |
kablam! 120 |    UDT_RENDEZVOUS,      // rendezvous connection mode
kablam!     |    ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_SNDTIMEO` should have a camel case name such as `UdtSndtimeo`
kablam!    --> lib.rs:121:4
kablam!     |
kablam! 121 |    UDT_SNDTIMEO,        // send() timeout
kablam!     |    ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_RCVTIMEO` should have a camel case name such as `UdtRcvtimeo`
kablam!    --> lib.rs:122:4
kablam!     |
kablam! 122 |    UDT_RCVTIMEO,        // recv() timeout
kablam!     |    ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_REUSEADDR` should have a camel case name such as `UdtReuseaddr`
kablam!    --> lib.rs:123:4
kablam!     |
kablam! 123 |    UDT_REUSEADDR,	// reuse an existing port or create a new one
kablam!     |    ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_MAXBW` should have a camel case name such as `UdtMaxbw`
kablam!    --> lib.rs:124:4
kablam!     |
kablam! 124 |    UDT_MAXBW,		// maximum bandwidth (bytes per second) that the connection can use
kablam!     |    ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_STATE` should have a camel case name such as `UdtState`
kablam!    --> lib.rs:125:4
kablam!     |
kablam! 125 |    UDT_STATE,		// current socket state, see UDTSTATUS, read only
kablam!     |    ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_EVENT` should have a camel case name such as `UdtEvent`
kablam!    --> lib.rs:126:4
kablam!     |
kablam! 126 |    UDT_EVENT,		// current avalable events associated with the socket
kablam!     |    ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_SNDDATA` should have a camel case name such as `UdtSnddata`
kablam!    --> lib.rs:127:4
kablam!     |
kablam! 127 |    UDT_SNDDATA,		// size of data in the sending buffer
kablam!     |    ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_RCVDATA` should have a camel case name such as `UdtRcvdata`
kablam!    --> lib.rs:128:4
kablam!     |
kablam! 128 |    UDT_RCVDATA		// size of data available for recv
kablam!     |    ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: type `SYS_UDPSOCKET` should have a camel case name such as `SysUdpsocket`
kablam!    --> lib.rs:151:1
kablam!     |
kablam! 151 | pub type SYS_UDPSOCKET = std::os::unix::io::RawFd;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 13.10 secs
boom! running `docker rm -f b212dd60a1d24460fa85db4f1f1e5e26df4eebc868fd6422d317e01b603cba35`
blam! b212dd60a1d24460fa85db4f1f1e5e26df4eebc868fd6422d317e01b603cba35
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! edc6311a30632d4e2b7bb824df1f9e03c765044ffe8e7c7af3c559ef0c1d170f
boom! running `docker start -a edc6311a30632d4e2b7bb824df1f9e03c765044ffe8e7c7af3c559ef0c1d170f`
kablam! warning: libudt4/udt4/src/epoll.cpp:112:69: warning: unused parameter 'events' [-Wunused-parameter]
kablam! warning:  int CEPoll::add_ssock(const int eid, const SYSSOCKET& s, const int* events)
kablam! warning:                                                                      ^
kablam!    Compiling libudt4-sys v0.2.0 (file:///source)
kablam! warning: variant `UDT_EPOLL_IN` should have a camel case name such as `UdtEpollIn`
kablam!    --> lib.rs:100:5
kablam!     |
kablam! 100 |     UDT_EPOLL_IN = 0x1,
kablam!     |     ^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_EPOLL_OUT` should have a camel case name such as `UdtEpollOut`
kablam!    --> lib.rs:101:5
kablam!     |
kablam! 101 |     UDT_EPOLL_OUT = 0x4,
kablam!     |     ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_EPOLL_ERR` should have a camel case name such as `UdtEpollErr`
kablam!    --> lib.rs:102:5
kablam!     |
kablam! 102 |     UDT_EPOLL_ERR = 0x8
kablam!     |     ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_SNDSYN` should have a camel case name such as `UdtSndsyn`
kablam!    --> lib.rs:109:4
kablam!     |
kablam! 109 |    UDT_SNDSYN,          // if sending is blocking
kablam!     |    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_RCVSYN` should have a camel case name such as `UdtRcvsyn`
kablam!    --> lib.rs:110:4
kablam!     |
kablam! 110 |    UDT_RCVSYN,          // if receiving is blocking
kablam!     |    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_CC` should have a camel case name such as `UdtCc`
kablam!    --> lib.rs:111:4
kablam!     |
kablam! 111 |    UDT_CC,              // custom congestion control algorithm
kablam!     |    ^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_FC` should have a camel case name such as `UdtFc`
kablam!    --> lib.rs:112:4
kablam!     |
kablam! 112 |    UDT_FC,		// Flight flag size (window size)
kablam!     |    ^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_SNDBUF` should have a camel case name such as `UdtSndbuf`
kablam!    --> lib.rs:113:4
kablam!     |
kablam! 113 |    UDT_SNDBUF,          // maximum buffer in sending queue
kablam!     |    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_RCVBUF` should have a camel case name such as `UdtRcvbuf`
kablam!    --> lib.rs:114:4
kablam!     |
kablam! 114 |    UDT_RCVBUF,          // UDT receiving buffer size
kablam!     |    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_LINGER` should have a camel case name such as `UdtLinger`
kablam!    --> lib.rs:115:4
kablam!     |
kablam! 115 |    UDT_LINGER,          // waiting for unsent data when closing
kablam!     |    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDP_SNDBUF` should have a camel case name such as `UdpSndbuf`
kablam!    --> lib.rs:116:4
kablam!     |
kablam! 116 |    UDP_SNDBUF,          // UDP sending buffer size
kablam!     |    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDP_RCVBUF` should have a camel case name such as `UdpRcvbuf`
kablam!    --> lib.rs:117:4
kablam!     |
kablam! 117 |    UDP_RCVBUF,          // UDP receiving buffer size
kablam!     |    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_MAXMSG` should have a camel case name such as `UdtMaxmsg`
kablam!    --> lib.rs:118:4
kablam!     |
kablam! 118 |    UDT_MAXMSG,          // maximum datagram message size
kablam!     |    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_MSGTTL` should have a camel case name such as `UdtMsgttl`
kablam!    --> lib.rs:119:4
kablam!     |
kablam! 119 |    UDT_MSGTTL,          // time-to-live of a datagram message
kablam!     |    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_RENDEZVOUS` should have a camel case name such as `UdtRendezvous`
kablam!    --> lib.rs:120:4
kablam!     |
kablam! 120 |    UDT_RENDEZVOUS,      // rendezvous connection mode
kablam!     |    ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_SNDTIMEO` should have a camel case name such as `UdtSndtimeo`
kablam!    --> lib.rs:121:4
kablam!     |
kablam! 121 |    UDT_SNDTIMEO,        // send() timeout
kablam!     |    ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_RCVTIMEO` should have a camel case name such as `UdtRcvtimeo`
kablam!    --> lib.rs:122:4
kablam!     |
kablam! 122 |    UDT_RCVTIMEO,        // recv() timeout
kablam!     |    ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_REUSEADDR` should have a camel case name such as `UdtReuseaddr`
kablam!    --> lib.rs:123:4
kablam!     |
kablam! 123 |    UDT_REUSEADDR,	// reuse an existing port or create a new one
kablam!     |    ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_MAXBW` should have a camel case name such as `UdtMaxbw`
kablam!    --> lib.rs:124:4
kablam!     |
kablam! 124 |    UDT_MAXBW,		// maximum bandwidth (bytes per second) that the connection can use
kablam!     |    ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_STATE` should have a camel case name such as `UdtState`
kablam!    --> lib.rs:125:4
kablam!     |
kablam! 125 |    UDT_STATE,		// current socket state, see UDTSTATUS, read only
kablam!     |    ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_EVENT` should have a camel case name such as `UdtEvent`
kablam!    --> lib.rs:126:4
kablam!     |
kablam! 126 |    UDT_EVENT,		// current avalable events associated with the socket
kablam!     |    ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_SNDDATA` should have a camel case name such as `UdtSnddata`
kablam!    --> lib.rs:127:4
kablam!     |
kablam! 127 |    UDT_SNDDATA,		// size of data in the sending buffer
kablam!     |    ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_RCVDATA` should have a camel case name such as `UdtRcvdata`
kablam!    --> lib.rs:128:4
kablam!     |
kablam! 128 |    UDT_RCVDATA		// size of data available for recv
kablam!     |    ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: type `SYS_UDPSOCKET` should have a camel case name such as `SysUdpsocket`
kablam!    --> lib.rs:151:1
kablam!     |
kablam! 151 | pub type SYS_UDPSOCKET = std::os::unix::io::RawFd;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.72 secs
boom! running `docker rm -f edc6311a30632d4e2b7bb824df1f9e03c765044ffe8e7c7af3c559ef0c1d170f`
blam! edc6311a30632d4e2b7bb824df1f9e03c765044ffe8e7c7af3c559ef0c1d170f
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 6dcfc8480baefa63fcf6a6a5ed26a83b5f012265d35e5c437cb4aeb0b33c8844
boom! running `docker start -a 6dcfc8480baefa63fcf6a6a5ed26a83b5f012265d35e5c437cb4aeb0b33c8844`
kablam! warning: libudt4/udt4/src/epoll.cpp:112:69: warning: unused parameter 'events' [-Wunused-parameter]
kablam! warning:  int CEPoll::add_ssock(const int eid, const SYSSOCKET& s, const int* events)
kablam! warning:                                                                      ^
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/libudt4_sys-800db1057e0e0b53
blam! 
blam! running 1 test
blam! test smoke ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests libudt4_sys
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 6dcfc8480baefa63fcf6a6a5ed26a83b5f012265d35e5c437cb4aeb0b33c8844`
blam! 6dcfc8480baefa63fcf6a6a5ed26a83b5f012265d35e5c437cb4aeb0b33c8844
