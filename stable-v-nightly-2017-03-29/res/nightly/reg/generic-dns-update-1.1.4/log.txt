boom! testing generic-dns-update-1.1.4 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 84449fbedd921d29a89dbdbe32b00239a2c228b18202fc0cfe640272bfba2234
boom! running `docker start -a 84449fbedd921d29a89dbdbe32b00239a2c228b18202fc0cfe640272bfba2234`
kablam!    Compiling generic-dns-update v1.1.4 (file:///source)
kablam! warning: variant is never used: `STAGING`
kablam!   --> src/gandi.rs:10:5
kablam!    |
kablam! 10 |     STAGING,
kablam!    |     ^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `FromStr`
kablam!   --> src/xmlrpc/encoding.rs:21:16
kablam!    |
kablam! 21 | use std::str::{FromStr};
kablam!    |                ^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variant is never used: `Base64`
kablam!   --> src/xmlrpc/encoding.rs:44:6
kablam!    |
kablam! 44 |      Base64(Vec<u8>), // FIXME: added for xml-rpc, not in JSON
kablam!    |      ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `DateTime`
kablam!   --> src/xmlrpc/encoding.rs:45:6
kablam!    |
kablam! 45 |      DateTime, // FIXME: need to implement
kablam!    |      ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `AsXml`
kablam!   --> src/xmlrpc/encoding.rs:52:1
kablam!    |
kablam! 52 | pub struct AsXml<'a, T: 'a> { inner: &'a T }
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `InvalidSyntax`
kablam!   --> src/xmlrpc/encoding.rs:57:5
kablam!    |
kablam! 57 |     InvalidSyntax,
kablam!    |     ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `EOFWhileParsingObject`
kablam!   --> src/xmlrpc/encoding.rs:58:5
kablam!    |
kablam! 58 |     EOFWhileParsingObject,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `EOFWhileParsingArray`
kablam!   --> src/xmlrpc/encoding.rs:59:5
kablam!    |
kablam! 59 |     EOFWhileParsingArray,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `EOFWhileParsingValue`
kablam!   --> src/xmlrpc/encoding.rs:60:5
kablam!    |
kablam! 60 |     EOFWhileParsingValue,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `EOFWhileParsingString`
kablam!   --> src/xmlrpc/encoding.rs:61:5
kablam!    |
kablam! 61 |     EOFWhileParsingString,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `SyntaxError`
kablam!   --> src/xmlrpc/encoding.rs:80:5
kablam!    |
kablam! 80 |     SyntaxError(ErrorCode, String),
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `IoError`
kablam!   --> src/xmlrpc/encoding.rs:81:5
kablam!    |
kablam! 81 |     IoError(io::ErrorKind, String),
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: type alias is never used: `BuilderError`
kablam!    --> src/xmlrpc/encoding.rs:112:1
kablam!     |
kablam! 112 | pub type BuilderError = ParserError;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ParseError`
kablam!    --> src/xmlrpc/encoding.rs:116:5
kablam!     |
kablam! 116 |     ParseError(ParserError),
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `decode`
kablam!    --> src/xmlrpc/encoding.rs:154:1
kablam!     |
kablam! 154 | pub fn decode<T: Decodable>(s: &str) -> Result<Vec<T>, DecoderError> {
kablam!     | ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `f`
kablam!    --> src/xmlrpc/encoding.rs:258:29
kablam!     |
kablam! 258 |                             f: F)
kablam!     |                             ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `idx`
kablam!    --> src/xmlrpc/encoding.rs:331:52
kablam!     |
kablam! 331 |     fn emit_struct_field<F>(&mut self, name: &str, idx: usize, f: F) -> EncodeResult where
kablam!     |                                                    ^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `idx`
kablam!    --> src/xmlrpc/encoding.rs:384:35
kablam!     |
kablam! 384 |     fn emit_seq_elt<F>(&mut self, idx: usize, f: F) -> EncodeResult where
kablam!     |                                   ^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `f`
kablam!    --> src/xmlrpc/encoding.rs:392:44
kablam!     |
kablam! 392 |     fn emit_map<F>(&mut self, _len: usize, f: F) -> EncodeResult where
kablam!     |                                            ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `idx`
kablam!    --> src/xmlrpc/encoding.rs:404:39
kablam!     |
kablam! 404 |     fn emit_map_elt_key<F>(&mut self, idx: usize, f: F) -> EncodeResult// where
kablam!     |                                       ^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `f`
kablam!    --> src/xmlrpc/encoding.rs:404:51
kablam!     |
kablam! 404 |     fn emit_map_elt_key<F>(&mut self, idx: usize, f: F) -> EncodeResult// where
kablam!     |                                                   ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `f`
kablam!    --> src/xmlrpc/encoding.rs:424:52
kablam!     |
kablam! 424 |     fn emit_map_elt_val<F>(&mut self, _idx: usize, f: F) -> EncodeResult where
kablam!     |                                                    ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: function is never used: `as_xml`
kablam!    --> src/xmlrpc/encoding.rs:451:1
kablam!     |
kablam! 451 |   pub fn as_xml<T: Encodable>(t: &T) -> AsXml<T> {
kablam!     |  _^ starting here...
kablam! 452 | |     AsXml { inner: t }
kablam! 453 | | }
kablam!     | |_^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `from_str`
kablam!    --> src/xmlrpc/encoding.rs:458:5
kablam!     |
kablam! 458 |       pub fn from_str(s: &str) -> Result<Vec<Self>, BuilderError> {
kablam!     |  _____^ starting here...
kablam! 459 | |         //let mut builder = Builder::new(s.chars());
kablam! 460 | |         //builder.build()
kablam! 461 | |         let cur = io::Cursor::new(s.as_bytes());
kablam! 462 | |         let mut builder = Builder::new(cur);
kablam! 463 | |         builder.build()
kablam! 464 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `from_parser`
kablam!    --> src/xmlrpc/encoding.rs:468:5
kablam!     |
kablam! 468 |       pub fn from_parser<B: BufRead>(p: xml::EventReader<B>) -> Result<Vec<Self>, BuilderError> {
kablam!     |  _____^ starting here...
kablam! 469 | |         let mut builder = Builder { parser: p, token: None };
kablam! 470 | |         builder.build()
kablam! 471 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `find_path`
kablam!    --> src/xmlrpc/encoding.rs:485:5
kablam!     |
kablam! 485 |     pub fn find_path<'a>(&'a self, keys: &[&str]) -> Option<&'a Xml>{
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `search`
kablam!    --> src/xmlrpc/encoding.rs:499:5
kablam!     |
kablam! 499 |     pub fn search<'a>(&'a self, key: &str) -> Option<&'a Xml> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_object`
kablam!    --> src/xmlrpc/encoding.rs:520:5
kablam!     |
kablam! 520 |       pub fn is_object<'a>(&'a self) -> bool {
kablam!     |  _____^ starting here...
kablam! 521 | |         self.as_object().is_some()
kablam! 522 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_object`
kablam!    --> src/xmlrpc/encoding.rs:526:5
kablam!     |
kablam! 526 |       pub fn as_object<'a>(&'a self) -> Option<&'a Object> {
kablam!     |  _____^ starting here...
kablam! 527 | |         match self {
kablam! 528 | |             &Xml::Object(ref map) => Some(map),
kablam! 529 | |             _ => None
kablam! 530 | |         }
kablam! 531 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_array`
kablam!    --> src/xmlrpc/encoding.rs:534:5
kablam!     |
kablam! 534 |       pub fn is_array<'a>(&'a self) -> bool {
kablam!     |  _____^ starting here...
kablam! 535 | |         self.as_array().is_some()
kablam! 536 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_array`
kablam!    --> src/xmlrpc/encoding.rs:540:5
kablam!     |
kablam! 540 |       pub fn as_array<'a>(&'a self) -> Option<&'a Array> {
kablam!     |  _____^ starting here...
kablam! 541 | |         match self {
kablam! 542 | |             &Xml::Array(ref array) => Some(&*array),
kablam! 543 | |             _ => None
kablam! 544 | |         }
kablam! 545 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_string`
kablam!    --> src/xmlrpc/encoding.rs:548:5
kablam!     |
kablam! 548 |       pub fn is_string<'a>(&'a self) -> bool {
kablam!     |  _____^ starting here...
kablam! 549 | |         self.as_string().is_some()
kablam! 550 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_string`
kablam!    --> src/xmlrpc/encoding.rs:554:5
kablam!     |
kablam! 554 |       pub fn as_string<'a>(&'a self) -> Option<&'a str> {
kablam!     |  _____^ starting here...
kablam! 555 | |         match *self {
kablam! 556 | |             Xml::String(ref s) => Some(&s),
kablam! 557 | |             _ => None
kablam! 558 | |         }
kablam! 559 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_number`
kablam!    --> src/xmlrpc/encoding.rs:562:5
kablam!     |
kablam! 562 |       pub fn is_number(&self) -> bool {
kablam!     |  _____^ starting here...
kablam! 563 | |         match *self {
kablam! 564 | |             Xml::I32(_) | Xml::F64(_) => true,
kablam! 565 | |             _ => false,
kablam! 566 | |         }
kablam! 567 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_i32`
kablam!    --> src/xmlrpc/encoding.rs:570:5
kablam!     |
kablam! 570 |       pub fn is_i32(&self) -> bool {
kablam!     |  _____^ starting here...
kablam! 571 | |         match *self {
kablam! 572 | |             Xml::I32(_) => true,
kablam! 573 | |             _ => false,
kablam! 574 | |         }
kablam! 575 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_f64`
kablam!    --> src/xmlrpc/encoding.rs:578:5
kablam!     |
kablam! 578 |       pub fn is_f64(&self) -> bool {
kablam!     |  _____^ starting here...
kablam! 579 | |         match *self {
kablam! 580 | |             Xml::F64(_) => true,
kablam! 581 | |             _ => false,
kablam! 582 | |         }
kablam! 583 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_i32`
kablam!    --> src/xmlrpc/encoding.rs:587:5
kablam!     |
kablam! 587 |       pub fn as_i32(&self) -> Option<i32> {
kablam!     |  _____^ starting here...
kablam! 588 | |         match *self {
kablam! 589 | |             Xml::I32(n) => Some(n),
kablam! 590 | |             _ => None
kablam! 591 | |         }
kablam! 592 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_f64`
kablam!    --> src/xmlrpc/encoding.rs:596:5
kablam!     |
kablam! 596 |       pub fn as_f64(&self) -> Option<f64> {
kablam!     |  _____^ starting here...
kablam! 597 | |         match *self {
kablam! 598 | |             Xml::I32(n) => num::cast(n),
kablam! 599 | |             Xml::F64(n) => Some(n),
kablam! 600 | |             _ => None
kablam! 601 | |         }
kablam! 602 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_boolean`
kablam!    --> src/xmlrpc/encoding.rs:605:5
kablam!     |
kablam! 605 |       pub fn is_boolean(&self) -> bool {
kablam!     |  _____^ starting here...
kablam! 606 | |         self.as_boolean().is_some()
kablam! 607 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_boolean`
kablam!    --> src/xmlrpc/encoding.rs:611:5
kablam!     |
kablam! 611 |       pub fn as_boolean(&self) -> Option<bool> {
kablam!     |  _____^ starting here...
kablam! 612 | |         match self {
kablam! 613 | |             &Xml::Boolean(b) => Some(b),
kablam! 614 | |             _ => None
kablam! 615 | |         }
kablam! 616 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_null`
kablam!    --> src/xmlrpc/encoding.rs:619:5
kablam!     |
kablam! 619 |       pub fn is_null(&self) -> bool {
kablam!     |  _____^ starting here...
kablam! 620 | |         self.as_null().is_some()
kablam! 621 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_null`
kablam!    --> src/xmlrpc/encoding.rs:625:5
kablam!     |
kablam! 625 |       pub fn as_null(&self) -> Option<()> {
kablam!     |  _____^ starting here...
kablam! 626 | |         match self {
kablam! 627 | |             &Xml::Null => Some(()),
kablam! 628 | |             _ => None
kablam! 629 | |         }
kablam! 630 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `StartDocument`
kablam!    --> src/xmlrpc/encoding.rs:655:5
kablam!     |
kablam! 655 |     StartDocument, // <xml>
kablam!     |     ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `EndDocument`
kablam!    --> src/xmlrpc/encoding.rs:656:5
kablam!     |
kablam! 656 |     EndDocument, // </xml>
kablam!     |     ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `MethodResponseStart`
kablam!    --> src/xmlrpc/encoding.rs:657:5
kablam!     |
kablam! 657 |     MethodResponseStart, // <methodResponse>
kablam!     |     ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `MethodResponseEnd`
kablam!    --> src/xmlrpc/encoding.rs:658:5
kablam!     |
kablam! 658 |     MethodResponseEnd, // </methodResponse>
kablam!     |     ^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ParametersListStart`
kablam!    --> src/xmlrpc/encoding.rs:659:5
kablam!     |
kablam! 659 |     ParametersListStart, // <params>
kablam!     |     ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ParametersListEnd`
kablam!    --> src/xmlrpc/encoding.rs:660:5
kablam!     |
kablam! 660 |     ParametersListEnd, // </params>
kablam!     |     ^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ParameterStart`
kablam!    --> src/xmlrpc/encoding.rs:661:5
kablam!     |
kablam! 661 |     ParameterStart, // <param>
kablam!     |     ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ParameterEnd`
kablam!    --> src/xmlrpc/encoding.rs:662:5
kablam!     |
kablam! 662 |     ParameterEnd, // </param>
kablam!     |     ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ObjectStart`
kablam!    --> src/xmlrpc/encoding.rs:663:5
kablam!     |
kablam! 663 |     ObjectStart, // <struct>
kablam!     |     ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ObjectEnd`
kablam!    --> src/xmlrpc/encoding.rs:664:5
kablam!     |
kablam! 664 |     ObjectEnd, // </struct>
kablam!     |     ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `MemberStart`
kablam!    --> src/xmlrpc/encoding.rs:665:5
kablam!     |
kablam! 665 |     MemberStart, // <member>
kablam!     |     ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `MemberEnd`
kablam!    --> src/xmlrpc/encoding.rs:666:5
kablam!     |
kablam! 666 |     MemberEnd, // </member>
kablam!     |     ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `NameStart`
kablam!    --> src/xmlrpc/encoding.rs:667:5
kablam!     |
kablam! 667 |     NameStart, // <name>
kablam!     |     ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `NameValue`
kablam!    --> src/xmlrpc/encoding.rs:668:5
kablam!     |
kablam! 668 |     NameValue(String),
kablam!     |     ^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `NameEnd`
kablam!    --> src/xmlrpc/encoding.rs:669:5
kablam!     |
kablam! 669 |     NameEnd, // </name>
kablam!     |     ^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ValueStart`
kablam!    --> src/xmlrpc/encoding.rs:670:5
kablam!     |
kablam! 670 |     ValueStart, // <value>
kablam!     |     ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ValueEnd`
kablam!    --> src/xmlrpc/encoding.rs:671:5
kablam!     |
kablam! 671 |     ValueEnd, // </value>
kablam!     |     ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ArrayStart`
kablam!    --> src/xmlrpc/encoding.rs:672:5
kablam!     |
kablam! 672 |     ArrayStart, // <array>
kablam!     |     ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ArrayEnd`
kablam!    --> src/xmlrpc/encoding.rs:673:5
kablam!     |
kablam! 673 |     ArrayEnd, // </array>
kablam!     |     ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `DataStart`
kablam!    --> src/xmlrpc/encoding.rs:674:5
kablam!     |
kablam! 674 |     DataStart, // <data>
kablam!     |     ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `DataEnd`
kablam!    --> src/xmlrpc/encoding.rs:675:5
kablam!     |
kablam! 675 |     DataEnd, // </data>
kablam!     |     ^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `BooleanStart`
kablam!    --> src/xmlrpc/encoding.rs:676:5
kablam!     |
kablam! 676 |     BooleanStart, // <boolean>
kablam!     |     ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `BooleanValue`
kablam!    --> src/xmlrpc/encoding.rs:677:5
kablam!     |
kablam! 677 |     BooleanValue(bool),
kablam!     |     ^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `BooleanEnd`
kablam!    --> src/xmlrpc/encoding.rs:678:5
kablam!     |
kablam! 678 |     BooleanEnd, // </boolean>
kablam!     |     ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `I32Start`
kablam!    --> src/xmlrpc/encoding.rs:679:5
kablam!     |
kablam! 679 |     I32Start, // <int> or <i4>
kablam!     |     ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `I32Value`
kablam!    --> src/xmlrpc/encoding.rs:680:5
kablam!     |
kablam! 680 |     I32Value(i32),
kablam!     |     ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `I32End`
kablam!    --> src/xmlrpc/encoding.rs:681:5
kablam!     |
kablam! 681 |     I32End, // </int> or </i4>
kablam!     |     ^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `F64Start`
kablam!    --> src/xmlrpc/encoding.rs:682:5
kablam!     |
kablam! 682 |     F64Start, // <double>
kablam!     |     ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `F64Value`
kablam!    --> src/xmlrpc/encoding.rs:683:5
kablam!     |
kablam! 683 |     F64Value(f64),
kablam!     |     ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `F64End`
kablam!    --> src/xmlrpc/encoding.rs:684:5
kablam!     |
kablam! 684 |     F64End, // </double>
kablam!     |     ^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `StringStart`
kablam!    --> src/xmlrpc/encoding.rs:685:5
kablam!     |
kablam! 685 |     StringStart, // <string>
kablam!     |     ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `StringValue`
kablam!    --> src/xmlrpc/encoding.rs:686:5
kablam!     |
kablam! 686 |     StringValue(String),
kablam!     |     ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `StringEnd`
kablam!    --> src/xmlrpc/encoding.rs:687:5
kablam!     |
kablam! 687 |     StringEnd, // </string>
kablam!     |     ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `NullStart`
kablam!    --> src/xmlrpc/encoding.rs:688:5
kablam!     |
kablam! 688 |     NullStart, // <nil/>
kablam!     |     ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `NullEnd`
kablam!    --> src/xmlrpc/encoding.rs:689:5
kablam!     |
kablam! 689 |     NullEnd, // <nil/>
kablam!     |     ^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Error`
kablam!    --> src/xmlrpc/encoding.rs:692:5
kablam!     |
kablam! 692 |     Error(ParserError) // FIXME: add error types
kablam!     |     ^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `Builder`
kablam!    --> src/xmlrpc/encoding.rs:695:1
kablam!     |
kablam! 695 |   struct Builder<B: BufRead> {
kablam!     |  _^ starting here...
kablam! 696 | |     parser: EventReader<B>,
kablam! 697 | |     token: Option<XmlEvent>,
kablam! 698 | | }
kablam!     | |_^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `syntax_error_for_token`
kablam!    --> src/xmlrpc/encoding.rs:700:1
kablam!     |
kablam! 700 |   fn syntax_error_for_token(token: &Option<XmlEvent>) -> BuilderError {
kablam!     |  _^ starting here...
kablam! 701 | |   match token.as_ref() {
kablam! 702 | |     Some(token) => SyntaxError(InvalidSyntax, format!("Unexpected {:?}", token)),
kablam! 703 | |     None => SyntaxError(InvalidSyntax, "Got None".into()),
kablam! 704 | |   }
kablam! 705 | |
kablam! 706 | | }
kablam!     | |_^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `new`
kablam!    --> src/xmlrpc/encoding.rs:710:5
kablam!     |
kablam! 710 |       pub fn new(src: B) -> Builder<B> {
kablam!     |  _____^ starting here...
kablam! 711 | |         let config = ParserConfig::new().trim_whitespace(true);
kablam! 712 | |         Builder { parser: EventReader::with_config(src, config), token: None, }
kablam! 713 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build`
kablam!    --> src/xmlrpc/encoding.rs:716:5
kablam!     |
kablam! 716 |     pub fn build(&mut self) -> Result<Vec<Xml>, BuilderError> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_response`
kablam!    --> src/xmlrpc/encoding.rs:742:5
kablam!     |
kablam! 742 |     fn build_response(&mut self) -> Result<Vec<Xml>, BuilderError> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_method_response`
kablam!    --> src/xmlrpc/encoding.rs:754:5
kablam!     |
kablam! 754 |     fn build_method_response(&mut self) -> Result<Vec<Xml>, BuilderError> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_params_list`
kablam!    --> src/xmlrpc/encoding.rs:766:5
kablam!     |
kablam! 766 |     fn build_params_list(&mut self) -> Result<Vec<Xml>, BuilderError> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_param`
kablam!    --> src/xmlrpc/encoding.rs:800:5
kablam!     |
kablam! 800 |       fn build_param(&mut self) -> Result<Xml, BuilderError> {
kablam!     |  _____^ starting here...
kablam! 801 | |       self.build_value()
kablam! 802 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `set_self_next_token_state`
kablam!    --> src/xmlrpc/encoding.rs:804:5
kablam!     |
kablam! 804 |     fn set_self_next_token_state(&mut self) {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_value`
kablam!    --> src/xmlrpc/encoding.rs:827:5
kablam!     |
kablam! 827 |     pub fn build_value(&mut self) -> Result<Xml, BuilderError> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_object`
kablam!    --> src/xmlrpc/encoding.rs:865:5
kablam!     |
kablam! 865 |     fn build_object(&mut self) -> Result<Xml, BuilderError> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_array`
kablam!    --> src/xmlrpc/encoding.rs:916:5
kablam!     |
kablam! 916 |     fn build_array(&mut self) -> Result<Xml, BuilderError> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_nil`
kablam!    --> src/xmlrpc/encoding.rs:939:5
kablam!     |
kablam! 939 |       fn build_nil(&mut self) -> Result<Xml, BuilderError> {
kablam!     |  _____^ starting here...
kablam! 940 | |         self.set_self_next_token_state();
kablam! 941 | |         match self.token {
kablam! 942 | |             Some(XmlEvent::NullEnd) => Ok(Xml::Null),
kablam! 943 | |             _ => Err(syntax_error_for_token(&self.token)),
kablam! 944 | |         }
kablam! 945 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_boolean`
kablam!    --> src/xmlrpc/encoding.rs:947:5
kablam!     |
kablam! 947 |     fn build_boolean(&mut self) -> Result<Xml, BuilderError> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_i32`
kablam!    --> src/xmlrpc/encoding.rs:960:5
kablam!     |
kablam! 960 |     fn build_i32(&mut self) -> Result<Xml, BuilderError> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_f64`
kablam!    --> src/xmlrpc/encoding.rs:973:5
kablam!     |
kablam! 973 |     fn build_f64(&mut self) -> Result<Xml, BuilderError> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_string`
kablam!    --> src/xmlrpc/encoding.rs:986:5
kablam!     |
kablam! 986 |     fn build_string(&mut self) -> Result<Xml, BuilderError> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `parse_bool_value`
kablam!     --> src/xmlrpc/encoding.rs:1000:5
kablam!      |
kablam! 1000 |       fn parse_bool_value(&self, s: &str) -> Option<XmlEvent> {
kablam!      |  _____^ starting here...
kablam! 1001 | |         match s {
kablam! 1002 | |             "0" => Some(XmlEvent::BooleanValue(false)),
kablam! 1003 | |             "1" => Some(XmlEvent::BooleanValue(true)),
kablam! 1004 | |             _ => None
kablam! 1005 | |         }
kablam! 1006 | |     }
kablam!      | |_____^ ...ending here
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `parse_i32_value`
kablam!     --> src/xmlrpc/encoding.rs:1008:5
kablam!      |
kablam! 1008 |       fn parse_i32_value(&self, s: &str) -> Option<XmlEvent> {
kablam!      |  _____^ starting here...
kablam! 1009 | |         match s.parse::<i32>() {
kablam! 1010 | |             Ok(n) => Some(XmlEvent::I32Value(n)),
kablam! 1011 | |             Err(_) => None//Err(ParserError(e))
kablam! 1012 | |         }
kablam! 1013 | |     }
kablam!      | |_____^ ...ending here
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `parse_f64_value`
kablam!     --> src/xmlrpc/encoding.rs:1014:5
kablam!      |
kablam! 1014 |       fn parse_f64_value(&self, s: &str) -> Option<XmlEvent> {
kablam!      |  _____^ starting here...
kablam! 1015 | |         match s.parse::<f64>() {
kablam! 1016 | |             Ok(n) => Some(XmlEvent::F64Value(n)),
kablam! 1017 | |             Err(_) => None//Err(ParserError(e))
kablam! 1018 | |         }
kablam! 1019 | |     }
kablam!      | |_____^ ...ending here
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `parse_string_value`
kablam!     --> src/xmlrpc/encoding.rs:1020:5
kablam!      |
kablam! 1020 |       fn parse_string_value(&self, s: &str) -> Option<XmlEvent> {
kablam!      |  _____^ starting here...
kablam! 1021 | |         Some(XmlEvent::StringValue(s.to_string()))
kablam! 1022 | |     }
kablam!      | |_____^ ...ending here
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `parse_name_value`
kablam!     --> src/xmlrpc/encoding.rs:1023:5
kablam!      |
kablam! 1023 |       fn parse_name_value(&self, s: &str) -> Option<XmlEvent> {
kablam!      |  _____^ starting here...
kablam! 1024 | |         Some(XmlEvent::NameValue(s.to_string()))
kablam! 1025 | |     }
kablam!      | |_____^ ...ending here
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `parse_tag_start`
kablam!     --> src/xmlrpc/encoding.rs:1026:5
kablam!      |
kablam! 1026 |     fn parse_tag_start(&self, name: &str) -> Option<XmlEvent> {
kablam!      |     ^
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `parse_tag_end`
kablam!     --> src/xmlrpc/encoding.rs:1047:5
kablam!      |
kablam! 1047 |     fn parse_tag_end(&self, name: &str) -> Option<XmlEvent> {
kablam!      |     ^
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `parse_tag_characters`
kablam!     --> src/xmlrpc/encoding.rs:1068:5
kablam!      |
kablam! 1068 |     fn parse_tag_characters(&self, s: &str, token: &Option<XmlEvent>) -> Option<XmlEvent> {
kablam!      |     ^
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `new`
kablam!     --> src/xmlrpc/encoding.rs:1087:5
kablam!      |
kablam! 1087 |       pub fn new(xml: Xml) -> Decoder {
kablam!      |  _____^ starting here...
kablam! 1088 | |         Decoder { stack: vec![xml] }
kablam! 1089 | |     }
kablam!      | |_____^ ...ending here
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `result`
kablam!   --> src/xmlrpc/protocol.rs:56:5
kablam!    |
kablam! 56 |       pub fn result<T: Decodable>(&self) -> Result<Vec<T>, encoding::DecoderError> {
kablam!    |  _____^ starting here...
kablam! 57 | |         encoding::decode(&self.body)
kablam! 58 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `dns::DNSProvider`
kablam!   --> src/main.rs:33:5
kablam!    |
kablam! 33 | use dns::DNSProvider;
kablam!    |     ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `dns::DNSProviderFactory`
kablam!   --> src/main.rs:34:5
kablam!    |
kablam! 34 | use dns::DNSProviderFactory;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 8.52 secs
boom! running `docker rm -f 84449fbedd921d29a89dbdbe32b00239a2c228b18202fc0cfe640272bfba2234`
blam! 84449fbedd921d29a89dbdbe32b00239a2c228b18202fc0cfe640272bfba2234
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! d453ca6dfd091776347f5ea768385f3edc0006c3182c6a2bfe2059cc4804c85b
boom! running `docker start -a d453ca6dfd091776347f5ea768385f3edc0006c3182c6a2bfe2059cc4804c85b`
kablam!    Compiling generic-dns-update v1.1.4 (file:///source)
kablam! warning: unused import: `error::Error`
kablam!    --> src/myip.rs:151:9
kablam!     |
kablam! 151 |     use error::Error;
kablam!     |         ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable `maybeResult` should have a snake case name such as `maybe_result`
kablam!    --> src/myip.rs:170:13
kablam!     |
kablam! 170 |         let maybeResult = provider.get_my_ip_addr();
kablam!     |             ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `maybeResult` should have a snake case name such as `maybe_result`
kablam!    --> src/myip.rs:185:13
kablam!     |
kablam! 185 |         let maybeResult = provider.get_my_ip_addr();
kablam!     |             ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `maybeResult` should have a snake case name such as `maybe_result`
kablam!    --> src/myip.rs:200:13
kablam!     |
kablam! 200 |         let maybeResult = provider.get_my_ip_addr();
kablam!     |             ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variant is never used: `STAGING`
kablam!   --> src/gandi.rs:10:5
kablam!    |
kablam! 10 |     STAGING,
kablam!    |     ^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `FromStr`
kablam!   --> src/xmlrpc/encoding.rs:21:16
kablam!    |
kablam! 21 | use std::str::{FromStr};
kablam!    |                ^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variant is never used: `Base64`
kablam!   --> src/xmlrpc/encoding.rs:44:6
kablam!    |
kablam! 44 |      Base64(Vec<u8>), // FIXME: added for xml-rpc, not in JSON
kablam!    |      ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `DateTime`
kablam!   --> src/xmlrpc/encoding.rs:45:6
kablam!    |
kablam! 45 |      DateTime, // FIXME: need to implement
kablam!    |      ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `AsXml`
kablam!   --> src/xmlrpc/encoding.rs:52:1
kablam!    |
kablam! 52 | pub struct AsXml<'a, T: 'a> { inner: &'a T }
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `EOFWhileParsingObject`
kablam!   --> src/xmlrpc/encoding.rs:58:5
kablam!    |
kablam! 58 |     EOFWhileParsingObject,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `EOFWhileParsingArray`
kablam!   --> src/xmlrpc/encoding.rs:59:5
kablam!    |
kablam! 59 |     EOFWhileParsingArray,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `EOFWhileParsingString`
kablam!   --> src/xmlrpc/encoding.rs:61:5
kablam!    |
kablam! 61 |     EOFWhileParsingString,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `IoError`
kablam!   --> src/xmlrpc/encoding.rs:81:5
kablam!    |
kablam! 81 |     IoError(io::ErrorKind, String),
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `f`
kablam!    --> src/xmlrpc/encoding.rs:258:29
kablam!     |
kablam! 258 |                             f: F)
kablam!     |                             ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `idx`
kablam!    --> src/xmlrpc/encoding.rs:331:52
kablam!     |
kablam! 331 |     fn emit_struct_field<F>(&mut self, name: &str, idx: usize, f: F) -> EncodeResult where
kablam!     |                                                    ^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `idx`
kablam!    --> src/xmlrpc/encoding.rs:384:35
kablam!     |
kablam! 384 |     fn emit_seq_elt<F>(&mut self, idx: usize, f: F) -> EncodeResult where
kablam!     |                                   ^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `f`
kablam!    --> src/xmlrpc/encoding.rs:392:44
kablam!     |
kablam! 392 |     fn emit_map<F>(&mut self, _len: usize, f: F) -> EncodeResult where
kablam!     |                                            ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `idx`
kablam!    --> src/xmlrpc/encoding.rs:404:39
kablam!     |
kablam! 404 |     fn emit_map_elt_key<F>(&mut self, idx: usize, f: F) -> EncodeResult// where
kablam!     |                                       ^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `f`
kablam!    --> src/xmlrpc/encoding.rs:404:51
kablam!     |
kablam! 404 |     fn emit_map_elt_key<F>(&mut self, idx: usize, f: F) -> EncodeResult// where
kablam!     |                                                   ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `f`
kablam!    --> src/xmlrpc/encoding.rs:424:52
kablam!     |
kablam! 424 |     fn emit_map_elt_val<F>(&mut self, _idx: usize, f: F) -> EncodeResult where
kablam!     |                                                    ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: function is never used: `as_xml`
kablam!    --> src/xmlrpc/encoding.rs:451:1
kablam!     |
kablam! 451 |   pub fn as_xml<T: Encodable>(t: &T) -> AsXml<T> {
kablam!     |  _^ starting here...
kablam! 452 | |     AsXml { inner: t }
kablam! 453 | | }
kablam!     | |_^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `from_parser`
kablam!    --> src/xmlrpc/encoding.rs:468:5
kablam!     |
kablam! 468 |       pub fn from_parser<B: BufRead>(p: xml::EventReader<B>) -> Result<Vec<Self>, BuilderError> {
kablam!     |  _____^ starting here...
kablam! 469 | |         let mut builder = Builder { parser: p, token: None };
kablam! 470 | |         builder.build()
kablam! 471 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `find_path`
kablam!    --> src/xmlrpc/encoding.rs:485:5
kablam!     |
kablam! 485 |     pub fn find_path<'a>(&'a self, keys: &[&str]) -> Option<&'a Xml>{
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `search`
kablam!    --> src/xmlrpc/encoding.rs:499:5
kablam!     |
kablam! 499 |     pub fn search<'a>(&'a self, key: &str) -> Option<&'a Xml> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_object`
kablam!    --> src/xmlrpc/encoding.rs:520:5
kablam!     |
kablam! 520 |       pub fn is_object<'a>(&'a self) -> bool {
kablam!     |  _____^ starting here...
kablam! 521 | |         self.as_object().is_some()
kablam! 522 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_object`
kablam!    --> src/xmlrpc/encoding.rs:526:5
kablam!     |
kablam! 526 |       pub fn as_object<'a>(&'a self) -> Option<&'a Object> {
kablam!     |  _____^ starting here...
kablam! 527 | |         match self {
kablam! 528 | |             &Xml::Object(ref map) => Some(map),
kablam! 529 | |             _ => None
kablam! 530 | |         }
kablam! 531 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_array`
kablam!    --> src/xmlrpc/encoding.rs:534:5
kablam!     |
kablam! 534 |       pub fn is_array<'a>(&'a self) -> bool {
kablam!     |  _____^ starting here...
kablam! 535 | |         self.as_array().is_some()
kablam! 536 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_array`
kablam!    --> src/xmlrpc/encoding.rs:540:5
kablam!     |
kablam! 540 |       pub fn as_array<'a>(&'a self) -> Option<&'a Array> {
kablam!     |  _____^ starting here...
kablam! 541 | |         match self {
kablam! 542 | |             &Xml::Array(ref array) => Some(&*array),
kablam! 543 | |             _ => None
kablam! 544 | |         }
kablam! 545 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_string`
kablam!    --> src/xmlrpc/encoding.rs:548:5
kablam!     |
kablam! 548 |       pub fn is_string<'a>(&'a self) -> bool {
kablam!     |  _____^ starting here...
kablam! 549 | |         self.as_string().is_some()
kablam! 550 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_string`
kablam!    --> src/xmlrpc/encoding.rs:554:5
kablam!     |
kablam! 554 |       pub fn as_string<'a>(&'a self) -> Option<&'a str> {
kablam!     |  _____^ starting here...
kablam! 555 | |         match *self {
kablam! 556 | |             Xml::String(ref s) => Some(&s),
kablam! 557 | |             _ => None
kablam! 558 | |         }
kablam! 559 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_number`
kablam!    --> src/xmlrpc/encoding.rs:562:5
kablam!     |
kablam! 562 |       pub fn is_number(&self) -> bool {
kablam!     |  _____^ starting here...
kablam! 563 | |         match *self {
kablam! 564 | |             Xml::I32(_) | Xml::F64(_) => true,
kablam! 565 | |             _ => false,
kablam! 566 | |         }
kablam! 567 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_i32`
kablam!    --> src/xmlrpc/encoding.rs:570:5
kablam!     |
kablam! 570 |       pub fn is_i32(&self) -> bool {
kablam!     |  _____^ starting here...
kablam! 571 | |         match *self {
kablam! 572 | |             Xml::I32(_) => true,
kablam! 573 | |             _ => false,
kablam! 574 | |         }
kablam! 575 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_f64`
kablam!    --> src/xmlrpc/encoding.rs:578:5
kablam!     |
kablam! 578 |       pub fn is_f64(&self) -> bool {
kablam!     |  _____^ starting here...
kablam! 579 | |         match *self {
kablam! 580 | |             Xml::F64(_) => true,
kablam! 581 | |             _ => false,
kablam! 582 | |         }
kablam! 583 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_i32`
kablam!    --> src/xmlrpc/encoding.rs:587:5
kablam!     |
kablam! 587 |       pub fn as_i32(&self) -> Option<i32> {
kablam!     |  _____^ starting here...
kablam! 588 | |         match *self {
kablam! 589 | |             Xml::I32(n) => Some(n),
kablam! 590 | |             _ => None
kablam! 591 | |         }
kablam! 592 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_f64`
kablam!    --> src/xmlrpc/encoding.rs:596:5
kablam!     |
kablam! 596 |       pub fn as_f64(&self) -> Option<f64> {
kablam!     |  _____^ starting here...
kablam! 597 | |         match *self {
kablam! 598 | |             Xml::I32(n) => num::cast(n),
kablam! 599 | |             Xml::F64(n) => Some(n),
kablam! 600 | |             _ => None
kablam! 601 | |         }
kablam! 602 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_boolean`
kablam!    --> src/xmlrpc/encoding.rs:605:5
kablam!     |
kablam! 605 |       pub fn is_boolean(&self) -> bool {
kablam!     |  _____^ starting here...
kablam! 606 | |         self.as_boolean().is_some()
kablam! 607 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_boolean`
kablam!    --> src/xmlrpc/encoding.rs:611:5
kablam!     |
kablam! 611 |       pub fn as_boolean(&self) -> Option<bool> {
kablam!     |  _____^ starting here...
kablam! 612 | |         match self {
kablam! 613 | |             &Xml::Boolean(b) => Some(b),
kablam! 614 | |             _ => None
kablam! 615 | |         }
kablam! 616 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_null`
kablam!    --> src/xmlrpc/encoding.rs:619:5
kablam!     |
kablam! 619 |       pub fn is_null(&self) -> bool {
kablam!     |  _____^ starting here...
kablam! 620 | |         self.as_null().is_some()
kablam! 621 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_null`
kablam!    --> src/xmlrpc/encoding.rs:625:5
kablam!     |
kablam! 625 |       pub fn as_null(&self) -> Option<()> {
kablam!     |  _____^ starting here...
kablam! 626 | |         match self {
kablam! 627 | |             &Xml::Null => Some(()),
kablam! 628 | |             _ => None
kablam! 629 | |         }
kablam! 630 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Error`
kablam!    --> src/xmlrpc/encoding.rs:692:5
kablam!     |
kablam! 692 |     Error(ParserError) // FIXME: add error types
kablam!     |     ^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `dns::DNSProvider`
kablam!   --> src/main.rs:33:5
kablam!    |
kablam! 33 | use dns::DNSProvider;
kablam!    |     ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `dns::DNSProviderFactory`
kablam!   --> src/main.rs:34:5
kablam!    |
kablam! 34 | use dns::DNSProviderFactory;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 7.69 secs
boom! running `docker rm -f d453ca6dfd091776347f5ea768385f3edc0006c3182c6a2bfe2059cc4804c85b`
blam! d453ca6dfd091776347f5ea768385f3edc0006c3182c6a2bfe2059cc4804c85b
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! d6e74ad60e68097bdaa20101d988240b56ca348303d63a4aa726a82b7e30cb54
boom! running `docker start -a d6e74ad60e68097bdaa20101d988240b56ca348303d63a4aa726a82b7e30cb54`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/gdu-ca443baf19504f83
blam! 
blam! running 5 tests
blam! test xmlrpc::protocol::tests::test_decode ... ok
blam! test xmlrpc::protocol::tests::test_encode ... ok
blam! test myip::tests::not_an_ip_addr ... ok
blam! test myip::tests::ipv4_addr ... ok
blam! test myip::tests::ipv6_addr ... ok
blam! 
blam! test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f d6e74ad60e68097bdaa20101d988240b56ca348303d63a4aa726a82b7e30cb54`
blam! d6e74ad60e68097bdaa20101d988240b56ca348303d63a4aa726a82b7e30cb54
