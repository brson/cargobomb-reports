boom! testing libudt4-sys-0.1.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! a8e79b252e9c1f1531a82ec58f81191d9c408ddafc2aef60f708e1f02500146d
boom! running `docker start -a a8e79b252e9c1f1531a82ec58f81191d9c408ddafc2aef60f708e1f02500146d`
kablam!    Compiling libudt4-sys v0.1.1 (file:///source)
kablam! warning: libudt4/udt4/src/epoll.cpp:112:69: warning: unused parameter 'events' [-Wunused-parameter]
kablam! warning:  int CEPoll::add_ssock(const int eid, const SYSSOCKET& s, const int* events)
kablam! warning:                                                                      ^
kablam! warning: variant `UDT_EPOLL_IN` should have a camel case name such as `UdtEpollIn`
kablam!   --> lib.rs:52:5
kablam!    |
kablam! 52 |     UDT_EPOLL_IN = 0x1,
kablam!    |     ^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_EPOLL_OUT` should have a camel case name such as `UdtEpollOut`
kablam!   --> lib.rs:53:5
kablam!    |
kablam! 53 |     UDT_EPOLL_OUT = 0x4,
kablam!    |     ^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_EPOLL_ERR` should have a camel case name such as `UdtEpollErr`
kablam!   --> lib.rs:54:5
kablam!    |
kablam! 54 |     UDT_EPOLL_ERR = 0x8
kablam!    |     ^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_SNDSYN` should have a camel case name such as `UdtSndsyn`
kablam!   --> lib.rs:61:4
kablam!    |
kablam! 61 |    UDT_SNDSYN,          // if sending is blocking
kablam!    |    ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_RCVSYN` should have a camel case name such as `UdtRcvsyn`
kablam!   --> lib.rs:62:4
kablam!    |
kablam! 62 |    UDT_RCVSYN,          // if receiving is blocking
kablam!    |    ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_CC` should have a camel case name such as `UdtCc`
kablam!   --> lib.rs:63:4
kablam!    |
kablam! 63 |    UDT_CC,              // custom congestion control algorithm
kablam!    |    ^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_FC` should have a camel case name such as `UdtFc`
kablam!   --> lib.rs:64:4
kablam!    |
kablam! 64 |    UDT_FC,		// Flight flag size (window size)
kablam!    |    ^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_SNDBUF` should have a camel case name such as `UdtSndbuf`
kablam!   --> lib.rs:65:4
kablam!    |
kablam! 65 |    UDT_SNDBUF,          // maximum buffer in sending queue
kablam!    |    ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_RCVBUF` should have a camel case name such as `UdtRcvbuf`
kablam!   --> lib.rs:66:4
kablam!    |
kablam! 66 |    UDT_RCVBUF,          // UDT receiving buffer size
kablam!    |    ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_LINGER` should have a camel case name such as `UdtLinger`
kablam!   --> lib.rs:67:4
kablam!    |
kablam! 67 |    UDT_LINGER,          // waiting for unsent data when closing
kablam!    |    ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDP_SNDBUF` should have a camel case name such as `UdpSndbuf`
kablam!   --> lib.rs:68:4
kablam!    |
kablam! 68 |    UDP_SNDBUF,          // UDP sending buffer size
kablam!    |    ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDP_RCVBUF` should have a camel case name such as `UdpRcvbuf`
kablam!   --> lib.rs:69:4
kablam!    |
kablam! 69 |    UDP_RCVBUF,          // UDP receiving buffer size
kablam!    |    ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_MAXMSG` should have a camel case name such as `UdtMaxmsg`
kablam!   --> lib.rs:70:4
kablam!    |
kablam! 70 |    UDT_MAXMSG,          // maximum datagram message size
kablam!    |    ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_MSGTTL` should have a camel case name such as `UdtMsgttl`
kablam!   --> lib.rs:71:4
kablam!    |
kablam! 71 |    UDT_MSGTTL,          // time-to-live of a datagram message
kablam!    |    ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_RENDEZVOUS` should have a camel case name such as `UdtRendezvous`
kablam!   --> lib.rs:72:4
kablam!    |
kablam! 72 |    UDT_RENDEZVOUS,      // rendezvous connection mode
kablam!    |    ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_SNDTIMEO` should have a camel case name such as `UdtSndtimeo`
kablam!   --> lib.rs:73:4
kablam!    |
kablam! 73 |    UDT_SNDTIMEO,        // send() timeout
kablam!    |    ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_RCVTIMEO` should have a camel case name such as `UdtRcvtimeo`
kablam!   --> lib.rs:74:4
kablam!    |
kablam! 74 |    UDT_RCVTIMEO,        // recv() timeout
kablam!    |    ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_REUSEADDR` should have a camel case name such as `UdtReuseaddr`
kablam!   --> lib.rs:75:4
kablam!    |
kablam! 75 |    UDT_REUSEADDR,	// reuse an existing port or create a new one
kablam!    |    ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_MAXBW` should have a camel case name such as `UdtMaxbw`
kablam!   --> lib.rs:76:4
kablam!    |
kablam! 76 |    UDT_MAXBW,		// maximum bandwidth (bytes per second) that the connection can use
kablam!    |    ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_STATE` should have a camel case name such as `UdtState`
kablam!   --> lib.rs:77:4
kablam!    |
kablam! 77 |    UDT_STATE,		// current socket state, see UDTSTATUS, read only
kablam!    |    ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_EVENT` should have a camel case name such as `UdtEvent`
kablam!   --> lib.rs:78:4
kablam!    |
kablam! 78 |    UDT_EVENT,		// current avalable events associated with the socket
kablam!    |    ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_SNDDATA` should have a camel case name such as `UdtSnddata`
kablam!   --> lib.rs:79:4
kablam!    |
kablam! 79 |    UDT_SNDDATA,		// size of data in the sending buffer
kablam!    |    ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_RCVDATA` should have a camel case name such as `UdtRcvdata`
kablam!   --> lib.rs:80:4
kablam!    |
kablam! 80 |    UDT_RCVDATA		// size of data available for recv
kablam!    |    ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 14.5 secs
boom! running `docker rm -f a8e79b252e9c1f1531a82ec58f81191d9c408ddafc2aef60f708e1f02500146d`
blam! a8e79b252e9c1f1531a82ec58f81191d9c408ddafc2aef60f708e1f02500146d
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 88a1c0a5c96f4e05327f739daf2b084b004a97a7ac4154308100dd271901f937
boom! running `docker start -a 88a1c0a5c96f4e05327f739daf2b084b004a97a7ac4154308100dd271901f937`
kablam! warning: libudt4/udt4/src/epoll.cpp:112:69: warning: unused parameter 'events' [-Wunused-parameter]
kablam! warning:  int CEPoll::add_ssock(const int eid, const SYSSOCKET& s, const int* events)
kablam! warning:                                                                      ^
kablam!    Compiling libudt4-sys v0.1.1 (file:///source)
kablam! warning: variant `UDT_EPOLL_IN` should have a camel case name such as `UdtEpollIn`
kablam!   --> lib.rs:52:5
kablam!    |
kablam! 52 |     UDT_EPOLL_IN = 0x1,
kablam!    |     ^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_EPOLL_OUT` should have a camel case name such as `UdtEpollOut`
kablam!   --> lib.rs:53:5
kablam!    |
kablam! 53 |     UDT_EPOLL_OUT = 0x4,
kablam!    |     ^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_EPOLL_ERR` should have a camel case name such as `UdtEpollErr`
kablam!   --> lib.rs:54:5
kablam!    |
kablam! 54 |     UDT_EPOLL_ERR = 0x8
kablam!    |     ^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_SNDSYN` should have a camel case name such as `UdtSndsyn`
kablam!   --> lib.rs:61:4
kablam!    |
kablam! 61 |    UDT_SNDSYN,          // if sending is blocking
kablam!    |    ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_RCVSYN` should have a camel case name such as `UdtRcvsyn`
kablam!   --> lib.rs:62:4
kablam!    |
kablam! 62 |    UDT_RCVSYN,          // if receiving is blocking
kablam!    |    ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_CC` should have a camel case name such as `UdtCc`
kablam!   --> lib.rs:63:4
kablam!    |
kablam! 63 |    UDT_CC,              // custom congestion control algorithm
kablam!    |    ^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_FC` should have a camel case name such as `UdtFc`
kablam!   --> lib.rs:64:4
kablam!    |
kablam! 64 |    UDT_FC,		// Flight flag size (window size)
kablam!    |    ^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_SNDBUF` should have a camel case name such as `UdtSndbuf`
kablam!   --> lib.rs:65:4
kablam!    |
kablam! 65 |    UDT_SNDBUF,          // maximum buffer in sending queue
kablam!    |    ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_RCVBUF` should have a camel case name such as `UdtRcvbuf`
kablam!   --> lib.rs:66:4
kablam!    |
kablam! 66 |    UDT_RCVBUF,          // UDT receiving buffer size
kablam!    |    ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_LINGER` should have a camel case name such as `UdtLinger`
kablam!   --> lib.rs:67:4
kablam!    |
kablam! 67 |    UDT_LINGER,          // waiting for unsent data when closing
kablam!    |    ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDP_SNDBUF` should have a camel case name such as `UdpSndbuf`
kablam!   --> lib.rs:68:4
kablam!    |
kablam! 68 |    UDP_SNDBUF,          // UDP sending buffer size
kablam!    |    ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDP_RCVBUF` should have a camel case name such as `UdpRcvbuf`
kablam!   --> lib.rs:69:4
kablam!    |
kablam! 69 |    UDP_RCVBUF,          // UDP receiving buffer size
kablam!    |    ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_MAXMSG` should have a camel case name such as `UdtMaxmsg`
kablam!   --> lib.rs:70:4
kablam!    |
kablam! 70 |    UDT_MAXMSG,          // maximum datagram message size
kablam!    |    ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_MSGTTL` should have a camel case name such as `UdtMsgttl`
kablam!   --> lib.rs:71:4
kablam!    |
kablam! 71 |    UDT_MSGTTL,          // time-to-live of a datagram message
kablam!    |    ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_RENDEZVOUS` should have a camel case name such as `UdtRendezvous`
kablam!   --> lib.rs:72:4
kablam!    |
kablam! 72 |    UDT_RENDEZVOUS,      // rendezvous connection mode
kablam!    |    ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_SNDTIMEO` should have a camel case name such as `UdtSndtimeo`
kablam!   --> lib.rs:73:4
kablam!    |
kablam! 73 |    UDT_SNDTIMEO,        // send() timeout
kablam!    |    ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_RCVTIMEO` should have a camel case name such as `UdtRcvtimeo`
kablam!   --> lib.rs:74:4
kablam!    |
kablam! 74 |    UDT_RCVTIMEO,        // recv() timeout
kablam!    |    ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_REUSEADDR` should have a camel case name such as `UdtReuseaddr`
kablam!   --> lib.rs:75:4
kablam!    |
kablam! 75 |    UDT_REUSEADDR,	// reuse an existing port or create a new one
kablam!    |    ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_MAXBW` should have a camel case name such as `UdtMaxbw`
kablam!   --> lib.rs:76:4
kablam!    |
kablam! 76 |    UDT_MAXBW,		// maximum bandwidth (bytes per second) that the connection can use
kablam!    |    ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_STATE` should have a camel case name such as `UdtState`
kablam!   --> lib.rs:77:4
kablam!    |
kablam! 77 |    UDT_STATE,		// current socket state, see UDTSTATUS, read only
kablam!    |    ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_EVENT` should have a camel case name such as `UdtEvent`
kablam!   --> lib.rs:78:4
kablam!    |
kablam! 78 |    UDT_EVENT,		// current avalable events associated with the socket
kablam!    |    ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_SNDDATA` should have a camel case name such as `UdtSnddata`
kablam!   --> lib.rs:79:4
kablam!    |
kablam! 79 |    UDT_SNDDATA,		// size of data in the sending buffer
kablam!    |    ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `UDT_RCVDATA` should have a camel case name such as `UdtRcvdata`
kablam!   --> lib.rs:80:4
kablam!    |
kablam! 80 |    UDT_RCVDATA		// size of data available for recv
kablam!    |    ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.76 secs
boom! running `docker rm -f 88a1c0a5c96f4e05327f739daf2b084b004a97a7ac4154308100dd271901f937`
blam! 88a1c0a5c96f4e05327f739daf2b084b004a97a7ac4154308100dd271901f937
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! de2ea6d7a4584604c23e7d18bda64c51567bcbafe7b6ff375b0ef81610f4c90f
boom! running `docker start -a de2ea6d7a4584604c23e7d18bda64c51567bcbafe7b6ff375b0ef81610f4c90f`
kablam! warning: libudt4/udt4/src/epoll.cpp:112:69: warning: unused parameter 'events' [-Wunused-parameter]
kablam! warning:  int CEPoll::add_ssock(const int eid, const SYSSOCKET& s, const int* events)
kablam! warning:                                                                      ^
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/libudt4_sys-71258a9d65f6c8aa
blam! 
blam! running 1 test
blam! test smoke ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests libudt4_sys
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f de2ea6d7a4584604c23e7d18bda64c51567bcbafe7b6ff375b0ef81610f4c90f`
blam! de2ea6d7a4584604c23e7d18bda64c51567bcbafe7b6ff375b0ef81610f4c90f
