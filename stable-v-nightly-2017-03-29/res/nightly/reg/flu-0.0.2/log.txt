boom! testing flu-0.0.2 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 0b101632db5d1e6602552bc7769aac5e1a74bea40331b16ea45b03639ed30b40
boom! running `docker start -a 0b101632db5d1e6602552bc7769aac5e1a74bea40331b16ea45b03639ed30b40`
kablam!    Compiling flu v0.0.2 (file:///source)
kablam! warning: unused import: `LuaRef`
kablam!  --> src/stack/push.rs:3:5
kablam!   |
kablam! 3 | use LuaRef;
kablam!   |     ^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `LuaValue`
kablam!  --> src/stack/read.rs:2:5
kablam!   |
kablam! 2 | use LuaValue;
kablam!   |     ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `LuaRef`
kablam!  --> src/stack/read.rs:3:5
kablam!   |
kablam! 3 | use LuaRef;
kablam!   |     ^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `nil`
kablam!  --> src/stack/read.rs:5:5
kablam!   |
kablam! 5 | use nil;
kablam!   |     ^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `LuaValue`
kablam!  --> src/stack/size.rs:2:5
kablam!   |
kablam! 2 | use LuaValue;
kablam!   |     ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `LuaRef`
kablam!  --> src/stack/size.rs:3:5
kablam!   |
kablam! 3 | use LuaRef;
kablam!   |     ^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `nil`
kablam!  --> src/collections/table.rs:5:5
kablam!   |
kablam! 5 | use nil;
kablam!   |     ^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::mem`
kablam!   --> src/collections/table.rs:14:5
kablam!    |
kablam! 14 | use std::mem;
kablam!    |     ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Table`
kablam!  --> src/context.rs:3:5
kablam!   |
kablam! 3 | use Table;
kablam!   |     ^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `nil`
kablam!  --> src/value.rs:6:5
kablam!   |
kablam! 6 | use nil;
kablam!   |     ^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused variable: `cxt`
kablam!   --> src/value.rs:43:14
kablam!    |
kablam! 43 |     fn check(cxt: &'a Context, idx: i32) -> bool {
kablam!    |              ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `idx`
kablam!   --> src/value.rs:43:32
kablam!    |
kablam! 43 |     fn check(cxt: &'a Context, idx: i32) -> bool {
kablam!    |                                ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `cxt`
kablam!   --> src/borrow.rs:52:14
kablam!    |
kablam! 52 |     fn check(cxt: &'a Context, idx: i32) -> bool {
kablam!    |              ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `idx`
kablam!   --> src/borrow.rs:52:32
kablam!    |
kablam! 52 |     fn check(cxt: &'a Context, idx: i32) -> bool {
kablam!    |                                ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused import: `Table`
kablam!  --> src/function.rs:3:5
kablam!   |
kablam! 3 | use Table;
kablam!   |     ^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `nil`
kablam!  --> src/function.rs:5:5
kablam!   |
kablam! 5 | use nil;
kablam!   |     ^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/function.rs:48:9
kablam!    |
kablam! 48 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 49 | |             let func: LuaRef<'a> = cxt.remove(idx);
kablam! 50 | |
kablam! 51 | |             Function {
kablam! 52 | |                 cxt: cxt,
kablam! 53 | |                 ptr: func
kablam! 54 | |             }
kablam! 55 | |         }
kablam!    | |_________^ ...ending here: unnecessary `unsafe` block
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: variable `L` should have a snake case name such as `l`
kablam!   --> src/function.rs:98:35
kablam!    |
kablam! 98 | unsafe extern fn wrapper<P, R, F>(L: *mut ffi::lua_State) -> libc::c_int
kablam!    |                                   ^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!    --> src/function.rs:101:24
kablam!     |
kablam! 101 |     let func: &mut F = unsafe { mem::transmute(ffi::lua_touserdata(L, ffi::lua_upvalueindex(1))) };
kablam!     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unnecessary `unsafe` block
kablam!     |
kablam!     = note: #[warn(unused_unsafe)] on by default
kablam! note: because it's nested under this `unsafe` fn
kablam!    --> src/function.rs:98:1
kablam!     |
kablam! 98  | unsafe extern fn wrapper<P, R, F>(L: *mut ffi::lua_State) -> libc::c_int
kablam!     | ^
kablam! 
kablam! warning: type `nil` should have a camel case name such as `Nil`
kablam!   --> src/lib.rs:40:1
kablam!    |
kablam! 40 | pub struct nil;
kablam!    | ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 4.93 secs
boom! running `docker rm -f 0b101632db5d1e6602552bc7769aac5e1a74bea40331b16ea45b03639ed30b40`
blam! 0b101632db5d1e6602552bc7769aac5e1a74bea40331b16ea45b03639ed30b40
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 155a8bec77843121de9dbe63af45555a68de96ef3c13326ba598057f423d9567
boom! running `docker start -a 155a8bec77843121de9dbe63af45555a68de96ef3c13326ba598057f423d9567`
kablam!    Compiling flu v0.0.2 (file:///source)
kablam! warning: unused import: `LuaRef`
kablam!  --> src/stack/push.rs:3:5
kablam!   |
kablam! 3 | use LuaRef;
kablam!   |     ^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `LuaValue`
kablam!  --> src/stack/read.rs:2:5
kablam!   |
kablam! 2 | use LuaValue;
kablam!   |     ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `LuaRef`
kablam!  --> src/stack/read.rs:3:5
kablam!   |
kablam! 3 | use LuaRef;
kablam!   |     ^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `LuaValue`
kablam!  --> src/stack/size.rs:2:5
kablam!   |
kablam! 2 | use LuaValue;
kablam!   |     ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `LuaRef`
kablam!  --> src/stack/size.rs:3:5
kablam!   |
kablam! 3 | use LuaRef;
kablam!   |     ^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::mem`
kablam!   --> src/collections/table.rs:14:5
kablam!    |
kablam! 14 | use std::mem;
kablam!    |     ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused variable: `cxt`
kablam!   --> src/value.rs:43:14
kablam!    |
kablam! 43 |     fn check(cxt: &'a Context, idx: i32) -> bool {
kablam!    |              ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `idx`
kablam!   --> src/value.rs:43:32
kablam!    |
kablam! 43 |     fn check(cxt: &'a Context, idx: i32) -> bool {
kablam!    |                                ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `cxt`
kablam!   --> src/borrow.rs:52:14
kablam!    |
kablam! 52 |     fn check(cxt: &'a Context, idx: i32) -> bool {
kablam!    |              ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `idx`
kablam!   --> src/borrow.rs:52:32
kablam!    |
kablam! 52 |     fn check(cxt: &'a Context, idx: i32) -> bool {
kablam!    |                                ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused import: `nil`
kablam!  --> src/function.rs:5:5
kablam!   |
kablam! 5 | use nil;
kablam!   |     ^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/function.rs:48:9
kablam!    |
kablam! 48 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 49 | |             let func: LuaRef<'a> = cxt.remove(idx);
kablam! 50 | |
kablam! 51 | |             Function {
kablam! 52 | |                 cxt: cxt,
kablam! 53 | |                 ptr: func
kablam! 54 | |             }
kablam! 55 | |         }
kablam!    | |_________^ ...ending here: unnecessary `unsafe` block
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: variable `L` should have a snake case name such as `l`
kablam!   --> src/function.rs:98:35
kablam!    |
kablam! 98 | unsafe extern fn wrapper<P, R, F>(L: *mut ffi::lua_State) -> libc::c_int
kablam!    |                                   ^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!    --> src/function.rs:101:24
kablam!     |
kablam! 101 |     let func: &mut F = unsafe { mem::transmute(ffi::lua_touserdata(L, ffi::lua_upvalueindex(1))) };
kablam!     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unnecessary `unsafe` block
kablam!     |
kablam!     = note: #[warn(unused_unsafe)] on by default
kablam! note: because it's nested under this `unsafe` fn
kablam!    --> src/function.rs:98:1
kablam!     |
kablam! 98  | unsafe extern fn wrapper<P, R, F>(L: *mut ffi::lua_State) -> libc::c_int
kablam!     | ^
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/function.rs:150:9
kablam!     |
kablam! 150 |     let mut cxt = Context::new();
kablam!     |         ^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: type `nil` should have a camel case name such as `Nil`
kablam!   --> src/lib.rs:40:1
kablam!    |
kablam! 40 | pub struct nil;
kablam!    | ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.21 secs
boom! running `docker rm -f 155a8bec77843121de9dbe63af45555a68de96ef3c13326ba598057f423d9567`
blam! 155a8bec77843121de9dbe63af45555a68de96ef3c13326ba598057f423d9567
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! cfc9d4e6a7e9274f0f02256f0480a4234e31f377c7a48026443f11744d56ba77
boom! running `docker start -a cfc9d4e6a7e9274f0f02256f0480a4234e31f377c7a48026443f11744d56ba77`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/flu-70510716cb5c4657
blam! 
blam! running 17 tests
blam! test borrow::read_ref ... ok
blam! test collections::table::access ... ok
blam! test collections::table::from_vec ... ok
blam! test collections::table::from_map ... ok
blam! test collections::table::len ... ok
blam! test context::get_globals ... ok
blam! test context::stack_size ... ok
blam! test collections::table::iter ... FAILED
blam! test function::multiple_args ... ok
blam! test function::rust_fn ... ok
blam! test stack::read::read_int ... ok
blam! test function::custom_types ... ok
blam! test stack::read::read_optional ... ok
blam! test value::read_value ... ok
blam! test stack::read::read_num ... ok
blam! test function::simple ... ok
blam! test stack::read::read_string ... ok
blam! 
blam! failures:
blam! 
blam! ---- collections::table::iter stdout ----
blam! 	thread 'collections::table::iter' panicked at 'assertion failed: `(left == right)` (left: `[(Number(1), Number(5)), (Number(2), Number(15)), (String("woopfoobarsrc/context.rs"), Bool(false))]`, right: `[(Number(1), Number(5)), (Number(2), Number(15)), (String("woop"), Bool(false))]`)', src/collections/table.rs:207
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! 
blam! failures:
blam!     collections::table::iter
blam! 
blam! test result: FAILED. 16 passed; 1 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f cfc9d4e6a7e9274f0f02256f0480a4234e31f377c7a48026443f11744d56ba77`
blam! cfc9d4e6a7e9274f0f02256f0480a4234e31f377c7a48026443f11744d56ba77
