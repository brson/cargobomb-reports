boom! testing libvirt-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! c66728a0f5d9de65ab0410afd5fd9f2951d607862e04822613a99d06a6054c3d
boom! running `docker start -a c66728a0f5d9de65ab0410afd5fd9f2951d607862e04822613a99d06a6054c3d`
kablam!    Compiling libvirt-sys v1.2.18
kablam!    Compiling libvirt v0.1.0 (file:///source)
kablam! warning: unused import: `string`
kablam!  --> src/connection.rs:4:11
kablam!   |
kablam! 4 | use std::{string, ptr, mem, slice};
kablam!   |           ^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable `cUri` should have a snake case name such as `c_uri`
kablam!   --> src/connection.rs:25:17
kablam!    |
kablam! 25 |             let cUri = CString::new(uri).unwrap();
kablam!    |                 ^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/connection.rs:175:17
kablam!     |
kablam! 175 |             let mut ids = ptr::null_mut();
kablam!     |                 ^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: variable `pDomain` should have a snake case name such as `p_domain`
kablam!    --> src/connection.rs:313:17
kablam!     |
kablam! 313 |             let pDomain = virt::virDomainCreateXML(self.conn, cxml.as_ptr(), flags);
kablam!     |                 ^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `pDomain` should have a snake case name such as `p_domain`
kablam!    --> src/connection.rs:324:17
kablam!     |
kablam! 324 |             let pDomain = virt::virDomainDefineXML(self.conn, cxml.as_ptr());
kablam!     |                 ^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused import: `std::string`
kablam!  --> src/node.rs:2:5
kablam!   |
kablam! 2 | use std::string;
kablam!   |     ^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `string`
kablam!  --> src/domain.rs:4:11
kablam!   |
kablam! 4 | use std::{string, ptr, mem};
kablam!   |           ^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `node`
kablam!  --> src/domain.rs:5:5
kablam!   |
kablam! 5 | use node;
kablam!   |     ^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::string`
kablam!  --> src/network.rs:2:5
kablam!   |
kablam! 2 | use std::string;
kablam!   |     ^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused variable: `out`
kablam!   --> src/network.rs:76:17
kablam!    |
kablam! 76 |             let out: *mut i32 = match val {
kablam!    |                 ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused imports: `ptr`, `string`
kablam!  --> src/interface.rs:2:11
kablam!   |
kablam! 2 | use std::{string, ptr};
kablam!   |           ^^^^^^  ^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: method is never used: `create`
kablam!   --> src/interface.rs:12:5
kablam!    |
kablam! 12 |       pub fn create(self, flags: u32) -> Result<(), VirError> {
kablam!    |  _____^ starting here...
kablam! 13 | |         unsafe {
kablam! 14 | |             match virt::virInterfaceCreate(self.ptr, flags) == -1{
kablam! 15 | |                 true => Err(VirError::new()),
kablam! 16 | |                 false => Ok(())
kablam! 17 | |             }
kablam! 18 | |         }
kablam! 19 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `destroy`
kablam!   --> src/interface.rs:21:5
kablam!    |
kablam! 21 |       pub fn destroy(self, flags: u32) -> Result<(), VirError> {
kablam!    |  _____^ starting here...
kablam! 22 | |         unsafe {
kablam! 23 | |             match virt::virInterfaceDestroy(self.ptr, flags) == -1{
kablam! 24 | |                 true => Err(VirError::new()),
kablam! 25 | |                 false => Ok(())
kablam! 26 | |             }
kablam! 27 | |         }
kablam! 28 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_active`
kablam!   --> src/interface.rs:30:5
kablam!    |
kablam! 30 |       pub fn is_active(self) -> Result<(), VirError> {
kablam!    |  _____^ starting here...
kablam! 31 | |         unsafe {
kablam! 32 | |             match virt::virInterfaceIsActive(self.ptr) == 1 {
kablam! 33 | |                 true => Ok(()),
kablam! 34 | |                 false => Err(VirError::new())
kablam! 35 | |             }
kablam! 36 | |         }
kablam! 37 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `mac`
kablam!   --> src/interface.rs:39:5
kablam!    |
kablam! 39 |       pub fn mac(self) -> Result<String, VirError> {
kablam!    |  _____^ starting here...
kablam! 40 | |         unsafe {
kablam! 41 | |             let result = virt::virInterfaceGetMACString(self.ptr);
kablam! 42 | |             match result.is_null() {
kablam! 43 | |                 true => Err(VirError::new()),
kablam! 44 | |                 false => Ok(String::from_utf8_lossy(CStr::from_ptr(result).to_bytes()).into_owned())
kablam! 45 | |             }
kablam! 46 | |         }
kablam! 47 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `name`
kablam!   --> src/interface.rs:49:5
kablam!    |
kablam! 49 |       pub fn name(self) -> Result<String, VirError> {
kablam!    |  _____^ starting here...
kablam! 50 | |         unsafe {
kablam! 51 | |             let result = virt::virInterfaceGetName(self.ptr);
kablam! 52 | |             match result.is_null() {
kablam! 53 | |                 true => Err(VirError::new()),
kablam! 54 | |                 false => Ok(String::from_utf8_lossy(CStr::from_ptr(result).to_bytes()).into_owned())
kablam! 55 | |             }
kablam! 56 | |         }
kablam! 57 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `xml_desc`
kablam!   --> src/interface.rs:59:5
kablam!    |
kablam! 59 |       pub fn xml_desc(self, flags: u32) -> Result<String, VirError>{
kablam!    |  _____^ starting here...
kablam! 60 | |         unsafe {
kablam! 61 | |             let results = virt::virInterfaceGetXMLDesc(self.ptr, flags);
kablam! 62 | |             match results.is_null() {
kablam! 63 | |                 true => Err(VirError::new()),
kablam! 64 | |                 false => Ok(String::from_utf8_lossy(CStr::from_ptr(results).to_bytes()).into_owned())
kablam! 65 | |             }
kablam! 66 | |         }
kablam! 67 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `undefine`
kablam!   --> src/interface.rs:69:5
kablam!    |
kablam! 69 |       pub fn undefine(self) -> Result<(), VirError>{
kablam!    |  _____^ starting here...
kablam! 70 | |         unsafe {
kablam! 71 | |             match virt::virInterfaceUndefine(self.ptr) != -1 {
kablam! 72 | |                 false => Err(VirError::new()),
kablam! 73 | |                 true => Ok(())
kablam! 74 | |             }
kablam! 75 | |         }
kablam! 76 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `free`
kablam!   --> src/interface.rs:78:5
kablam!    |
kablam! 78 |       pub fn free(self) -> Result<(), VirError> {
kablam!    |  _____^ starting here...
kablam! 79 | |         unsafe {
kablam! 80 | |             match virt::virInterfaceFree(self.ptr) != -1 {
kablam! 81 | |                 false => Err(VirError::new()),
kablam! 82 | |                 true => Ok(())
kablam! 83 | |             }
kablam! 84 | |         }
kablam! 85 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.6 secs
boom! running `docker rm -f c66728a0f5d9de65ab0410afd5fd9f2951d607862e04822613a99d06a6054c3d`
blam! c66728a0f5d9de65ab0410afd5fd9f2951d607862e04822613a99d06a6054c3d
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 4ca941076d93f44b283c42846e865279eac240ad885d323eabb20dd75e54f674
boom! running `docker start -a 4ca941076d93f44b283c42846e865279eac240ad885d323eabb20dd75e54f674`
kablam!    Compiling libvirt v0.1.0 (file:///source)
kablam! warning: unused import: `string`
kablam!  --> src/connection.rs:4:11
kablam!   |
kablam! 4 | use std::{string, ptr, mem, slice};
kablam!   |           ^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable `cUri` should have a snake case name such as `c_uri`
kablam!   --> src/connection.rs:25:17
kablam!    |
kablam! 25 |             let cUri = CString::new(uri).unwrap();
kablam!    |                 ^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/connection.rs:175:17
kablam!     |
kablam! 175 |             let mut ids = ptr::null_mut();
kablam!     |                 ^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: variable `pDomain` should have a snake case name such as `p_domain`
kablam!    --> src/connection.rs:313:17
kablam!     |
kablam! 313 |             let pDomain = virt::virDomainCreateXML(self.conn, cxml.as_ptr(), flags);
kablam!     |                 ^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `pDomain` should have a snake case name such as `p_domain`
kablam!    --> src/connection.rs:324:17
kablam!     |
kablam! 324 |             let pDomain = virt::virDomainDefineXML(self.conn, cxml.as_ptr());
kablam!     |                 ^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused import: `std::string`
kablam!  --> src/node.rs:2:5
kablam!   |
kablam! 2 | use std::string;
kablam!   |     ^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `string`
kablam!  --> src/domain.rs:4:11
kablam!   |
kablam! 4 | use std::{string, ptr, mem};
kablam!   |           ^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `node`
kablam!  --> src/domain.rs:5:5
kablam!   |
kablam! 5 | use node;
kablam!   |     ^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::string`
kablam!  --> src/network.rs:2:5
kablam!   |
kablam! 2 | use std::string;
kablam!   |     ^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused variable: `out`
kablam!   --> src/network.rs:76:17
kablam!    |
kablam! 76 |             let out: *mut i32 = match val {
kablam!    |                 ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused imports: `ptr`, `string`
kablam!  --> src/interface.rs:2:11
kablam!   |
kablam! 2 | use std::{string, ptr};
kablam!   |           ^^^^^^  ^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: method is never used: `create`
kablam!   --> src/interface.rs:12:5
kablam!    |
kablam! 12 |       pub fn create(self, flags: u32) -> Result<(), VirError> {
kablam!    |  _____^ starting here...
kablam! 13 | |         unsafe {
kablam! 14 | |             match virt::virInterfaceCreate(self.ptr, flags) == -1{
kablam! 15 | |                 true => Err(VirError::new()),
kablam! 16 | |                 false => Ok(())
kablam! 17 | |             }
kablam! 18 | |         }
kablam! 19 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `destroy`
kablam!   --> src/interface.rs:21:5
kablam!    |
kablam! 21 |       pub fn destroy(self, flags: u32) -> Result<(), VirError> {
kablam!    |  _____^ starting here...
kablam! 22 | |         unsafe {
kablam! 23 | |             match virt::virInterfaceDestroy(self.ptr, flags) == -1{
kablam! 24 | |                 true => Err(VirError::new()),
kablam! 25 | |                 false => Ok(())
kablam! 26 | |             }
kablam! 27 | |         }
kablam! 28 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_active`
kablam!   --> src/interface.rs:30:5
kablam!    |
kablam! 30 |       pub fn is_active(self) -> Result<(), VirError> {
kablam!    |  _____^ starting here...
kablam! 31 | |         unsafe {
kablam! 32 | |             match virt::virInterfaceIsActive(self.ptr) == 1 {
kablam! 33 | |                 true => Ok(()),
kablam! 34 | |                 false => Err(VirError::new())
kablam! 35 | |             }
kablam! 36 | |         }
kablam! 37 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `mac`
kablam!   --> src/interface.rs:39:5
kablam!    |
kablam! 39 |       pub fn mac(self) -> Result<String, VirError> {
kablam!    |  _____^ starting here...
kablam! 40 | |         unsafe {
kablam! 41 | |             let result = virt::virInterfaceGetMACString(self.ptr);
kablam! 42 | |             match result.is_null() {
kablam! 43 | |                 true => Err(VirError::new()),
kablam! 44 | |                 false => Ok(String::from_utf8_lossy(CStr::from_ptr(result).to_bytes()).into_owned())
kablam! 45 | |             }
kablam! 46 | |         }
kablam! 47 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `name`
kablam!   --> src/interface.rs:49:5
kablam!    |
kablam! 49 |       pub fn name(self) -> Result<String, VirError> {
kablam!    |  _____^ starting here...
kablam! 50 | |         unsafe {
kablam! 51 | |             let result = virt::virInterfaceGetName(self.ptr);
kablam! 52 | |             match result.is_null() {
kablam! 53 | |                 true => Err(VirError::new()),
kablam! 54 | |                 false => Ok(String::from_utf8_lossy(CStr::from_ptr(result).to_bytes()).into_owned())
kablam! 55 | |             }
kablam! 56 | |         }
kablam! 57 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `xml_desc`
kablam!   --> src/interface.rs:59:5
kablam!    |
kablam! 59 |       pub fn xml_desc(self, flags: u32) -> Result<String, VirError>{
kablam!    |  _____^ starting here...
kablam! 60 | |         unsafe {
kablam! 61 | |             let results = virt::virInterfaceGetXMLDesc(self.ptr, flags);
kablam! 62 | |             match results.is_null() {
kablam! 63 | |                 true => Err(VirError::new()),
kablam! 64 | |                 false => Ok(String::from_utf8_lossy(CStr::from_ptr(results).to_bytes()).into_owned())
kablam! 65 | |             }
kablam! 66 | |         }
kablam! 67 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `undefine`
kablam!   --> src/interface.rs:69:5
kablam!    |
kablam! 69 |       pub fn undefine(self) -> Result<(), VirError>{
kablam!    |  _____^ starting here...
kablam! 70 | |         unsafe {
kablam! 71 | |             match virt::virInterfaceUndefine(self.ptr) != -1 {
kablam! 72 | |                 false => Err(VirError::new()),
kablam! 73 | |                 true => Ok(())
kablam! 74 | |             }
kablam! 75 | |         }
kablam! 76 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `free`
kablam!   --> src/interface.rs:78:5
kablam!    |
kablam! 78 |       pub fn free(self) -> Result<(), VirError> {
kablam!    |  _____^ starting here...
kablam! 79 | |         unsafe {
kablam! 80 | |             match virt::virInterfaceFree(self.ptr) != -1 {
kablam! 81 | |                 false => Err(VirError::new()),
kablam! 82 | |                 true => Ok(())
kablam! 83 | |             }
kablam! 84 | |         }
kablam! 85 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! error: linking with `cc` failed: exit code: 1
kablam!   |
kablam!   = note: "cc" "-Wl,--as-needed" "-Wl,-z,noexecstack" "-m64" "-L" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib" "/target/debug/examples/hellolibvirt-8a1ba036cbecdec2.0.o" "-o" "/target/debug/examples/hellolibvirt-8a1ba036cbecdec2" "-Wl,--gc-sections" "-pie" "-nodefaultlibs" "-L" "/target/debug/deps" "-L" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib" "-Wl,-Bstatic" "-Wl,-Bdynamic" "/target/debug/deps/liblibvirt-b1693a701bacdab9.rlib" "/target/debug/deps/liblibvirt_sys-0b432a09a1274893.rlib" "/target/debug/deps/liblibc-75e9a9d6ae05fbe7.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-f4594d3e53dcb114.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libpanic_unwind-a0157c0ca919c364.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libunwind-488b4ab4bd53a138.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/librand-1efbcfd8938372b6.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcollections-532a3dbf317eff86.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-ca07b617414dd0fa.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc_jemalloc-492d8ea7fa3384ff.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liblibc-88c194c15fdb6521.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd_unicode-cfbd6648f7db2ee5.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-687e6a964d22cbb4.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-987729be881d4d32.rlib" "-l" "virt" "-l" "virt" "-l" "c" "-l" "m" "-l" "dl" "-l" "rt" "-l" "pthread" "-l" "gcc_s" "-l" "pthread" "-l" "c" "-l" "m" "-l" "rt" "-l" "util"
kablam!   = note: /usr/bin/ld: cannot find -lvirt
kablam!           /usr/bin/ld: cannot find -lvirt
kablam!           collect2: error: ld returned 1 exit status
kablam!           
kablam! 
kablam! error: aborting due to previous error
kablam! 
kablam! error: Could not compile `libvirt`.
blam! Build failed, waiting for other jobs to finish...
kablam! error: linking with `cc` failed: exit code: 1
kablam!   |
kablam!   = note: "cc" "-Wl,--as-needed" "-Wl,-z,noexecstack" "-m64" "-L" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib" "/target/debug/deps/libvirt-09e6bf1dd5abbb6c.0.o" "-o" "/target/debug/deps/libvirt-09e6bf1dd5abbb6c" "-Wl,--gc-sections" "-pie" "-nodefaultlibs" "-L" "/target/debug/deps" "-L" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib" "-Wl,-Bstatic" "-Wl,-Bdynamic" "/target/debug/deps/liblibvirt_sys-0b432a09a1274893.rlib" "/target/debug/deps/liblibc-75e9a9d6ae05fbe7.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libtest-6c35a477e7bec8d3.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libterm-fa872424129019f5.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libgetopts-a80f7c589731de53.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-f4594d3e53dcb114.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libpanic_unwind-a0157c0ca919c364.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libunwind-488b4ab4bd53a138.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/librand-1efbcfd8938372b6.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcollections-532a3dbf317eff86.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-ca07b617414dd0fa.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc_jemalloc-492d8ea7fa3384ff.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liblibc-88c194c15fdb6521.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd_unicode-cfbd6648f7db2ee5.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-687e6a964d22cbb4.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-987729be881d4d32.rlib" "-l" "virt" "-l" "virt" "-l" "c" "-l" "m" "-l" "dl" "-l" "rt" "-l" "pthread" "-l" "gcc_s" "-l" "pthread" "-l" "c" "-l" "m" "-l" "rt" "-l" "util"
kablam!   = note: /usr/bin/ld: cannot find -lvirt
kablam!           /usr/bin/ld: cannot find -lvirt
kablam!           collect2: error: ld returned 1 exit status
kablam!           
kablam! 
kablam! error: aborting due to previous error
kablam! 
kablam! error: build failed
boom! running `docker rm -f 4ca941076d93f44b283c42846e865279eac240ad885d323eabb20dd75e54f674`
blam! 4ca941076d93f44b283c42846e865279eac240ad885d323eabb20dd75e54f674
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 314852c7b1b4aa2e235dcb5a81eeb67ede6a0e933f7c6004f4766e5fdf1cef7e
boom! running `docker start -a 314852c7b1b4aa2e235dcb5a81eeb67ede6a0e933f7c6004f4766e5fdf1cef7e`
kablam!    Compiling libvirt v0.1.0 (file:///source)
kablam! warning: unused import: `string`
kablam!  --> src/connection.rs:4:11
kablam!   |
kablam! 4 | use std::{string, ptr, mem, slice};
kablam!   |           ^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable `cUri` should have a snake case name such as `c_uri`
kablam!   --> src/connection.rs:25:17
kablam!    |
kablam! 25 |             let cUri = CString::new(uri).unwrap();
kablam!    |                 ^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/connection.rs:175:17
kablam!     |
kablam! 175 |             let mut ids = ptr::null_mut();
kablam!     |                 ^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: variable `pDomain` should have a snake case name such as `p_domain`
kablam!    --> src/connection.rs:313:17
kablam!     |
kablam! 313 |             let pDomain = virt::virDomainCreateXML(self.conn, cxml.as_ptr(), flags);
kablam!     |                 ^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `pDomain` should have a snake case name such as `p_domain`
kablam!    --> src/connection.rs:324:17
kablam!     |
kablam! 324 |             let pDomain = virt::virDomainDefineXML(self.conn, cxml.as_ptr());
kablam!     |                 ^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused import: `std::string`
kablam!  --> src/node.rs:2:5
kablam!   |
kablam! 2 | use std::string;
kablam!   |     ^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `string`
kablam!  --> src/domain.rs:4:11
kablam!   |
kablam! 4 | use std::{string, ptr, mem};
kablam!   |           ^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `node`
kablam!  --> src/domain.rs:5:5
kablam!   |
kablam! 5 | use node;
kablam!   |     ^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::string`
kablam!  --> src/network.rs:2:5
kablam!   |
kablam! 2 | use std::string;
kablam!   |     ^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused variable: `out`
kablam!   --> src/network.rs:76:17
kablam!    |
kablam! 76 |             let out: *mut i32 = match val {
kablam!    |                 ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused imports: `ptr`, `string`
kablam!  --> src/interface.rs:2:11
kablam!   |
kablam! 2 | use std::{string, ptr};
kablam!   |           ^^^^^^  ^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: method is never used: `create`
kablam!   --> src/interface.rs:12:5
kablam!    |
kablam! 12 |       pub fn create(self, flags: u32) -> Result<(), VirError> {
kablam!    |  _____^ starting here...
kablam! 13 | |         unsafe {
kablam! 14 | |             match virt::virInterfaceCreate(self.ptr, flags) == -1{
kablam! 15 | |                 true => Err(VirError::new()),
kablam! 16 | |                 false => Ok(())
kablam! 17 | |             }
kablam! 18 | |         }
kablam! 19 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `destroy`
kablam!   --> src/interface.rs:21:5
kablam!    |
kablam! 21 |       pub fn destroy(self, flags: u32) -> Result<(), VirError> {
kablam!    |  _____^ starting here...
kablam! 22 | |         unsafe {
kablam! 23 | |             match virt::virInterfaceDestroy(self.ptr, flags) == -1{
kablam! 24 | |                 true => Err(VirError::new()),
kablam! 25 | |                 false => Ok(())
kablam! 26 | |             }
kablam! 27 | |         }
kablam! 28 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_active`
kablam!   --> src/interface.rs:30:5
kablam!    |
kablam! 30 |       pub fn is_active(self) -> Result<(), VirError> {
kablam!    |  _____^ starting here...
kablam! 31 | |         unsafe {
kablam! 32 | |             match virt::virInterfaceIsActive(self.ptr) == 1 {
kablam! 33 | |                 true => Ok(()),
kablam! 34 | |                 false => Err(VirError::new())
kablam! 35 | |             }
kablam! 36 | |         }
kablam! 37 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `mac`
kablam!   --> src/interface.rs:39:5
kablam!    |
kablam! 39 |       pub fn mac(self) -> Result<String, VirError> {
kablam!    |  _____^ starting here...
kablam! 40 | |         unsafe {
kablam! 41 | |             let result = virt::virInterfaceGetMACString(self.ptr);
kablam! 42 | |             match result.is_null() {
kablam! 43 | |                 true => Err(VirError::new()),
kablam! 44 | |                 false => Ok(String::from_utf8_lossy(CStr::from_ptr(result).to_bytes()).into_owned())
kablam! 45 | |             }
kablam! 46 | |         }
kablam! 47 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `name`
kablam!   --> src/interface.rs:49:5
kablam!    |
kablam! 49 |       pub fn name(self) -> Result<String, VirError> {
kablam!    |  _____^ starting here...
kablam! 50 | |         unsafe {
kablam! 51 | |             let result = virt::virInterfaceGetName(self.ptr);
kablam! 52 | |             match result.is_null() {
kablam! 53 | |                 true => Err(VirError::new()),
kablam! 54 | |                 false => Ok(String::from_utf8_lossy(CStr::from_ptr(result).to_bytes()).into_owned())
kablam! 55 | |             }
kablam! 56 | |         }
kablam! 57 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `xml_desc`
kablam!   --> src/interface.rs:59:5
kablam!    |
kablam! 59 |       pub fn xml_desc(self, flags: u32) -> Result<String, VirError>{
kablam!    |  _____^ starting here...
kablam! 60 | |         unsafe {
kablam! 61 | |             let results = virt::virInterfaceGetXMLDesc(self.ptr, flags);
kablam! 62 | |             match results.is_null() {
kablam! 63 | |                 true => Err(VirError::new()),
kablam! 64 | |                 false => Ok(String::from_utf8_lossy(CStr::from_ptr(results).to_bytes()).into_owned())
kablam! 65 | |             }
kablam! 66 | |         }
kablam! 67 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `undefine`
kablam!   --> src/interface.rs:69:5
kablam!    |
kablam! 69 |       pub fn undefine(self) -> Result<(), VirError>{
kablam!    |  _____^ starting here...
kablam! 70 | |         unsafe {
kablam! 71 | |             match virt::virInterfaceUndefine(self.ptr) != -1 {
kablam! 72 | |                 false => Err(VirError::new()),
kablam! 73 | |                 true => Ok(())
kablam! 74 | |             }
kablam! 75 | |         }
kablam! 76 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `free`
kablam!   --> src/interface.rs:78:5
kablam!    |
kablam! 78 |       pub fn free(self) -> Result<(), VirError> {
kablam!    |  _____^ starting here...
kablam! 79 | |         unsafe {
kablam! 80 | |             match virt::virInterfaceFree(self.ptr) != -1 {
kablam! 81 | |                 false => Err(VirError::new()),
kablam! 82 | |                 true => Ok(())
kablam! 83 | |             }
kablam! 84 | |         }
kablam! 85 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! error: linking with `cc` failed: exit code: 1
kablam!   |
blam! Build failed, waiting for other jobs to finish...
kablam!   = note: "cc" "-Wl,--as-needed" "-Wl,-z,noexecstack" "-m64" "-L" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib" "/target/debug/examples/hellolibvirt-8a1ba036cbecdec2.0.o" "-o" "/target/debug/examples/hellolibvirt-8a1ba036cbecdec2" "-Wl,--gc-sections" "-pie" "-nodefaultlibs" "-L" "/target/debug/deps" "-L" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib" "-Wl,-Bstatic" "-Wl,-Bdynamic" "/target/debug/deps/liblibvirt-b1693a701bacdab9.rlib" "/target/debug/deps/liblibvirt_sys-0b432a09a1274893.rlib" "/target/debug/deps/liblibc-75e9a9d6ae05fbe7.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-f4594d3e53dcb114.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libpanic_unwind-a0157c0ca919c364.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libunwind-488b4ab4bd53a138.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/librand-1efbcfd8938372b6.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcollections-532a3dbf317eff86.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-ca07b617414dd0fa.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc_jemalloc-492d8ea7fa3384ff.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liblibc-88c194c15fdb6521.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd_unicode-cfbd6648f7db2ee5.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-687e6a964d22cbb4.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-987729be881d4d32.rlib" "-l" "virt" "-l" "virt" "-l" "c" "-l" "m" "-l" "dl" "-l" "rt" "-l" "pthread" "-l" "gcc_s" "-l" "pthread" "-l" "c" "-l" "m" "-l" "rt" "-l" "util"
kablam!   = note: /usr/bin/ld: cannot find -lvirt
kablam!           /usr/bin/ld: cannot find -lvirt
kablam!           collect2: error: ld returned 1 exit status
kablam!           
kablam! 
kablam! error: aborting due to previous error
kablam! 
kablam! error: Could not compile `libvirt`.
kablam! error: linking with `cc` failed: exit code: 1
kablam!   |
kablam!   = note: "cc" "-Wl,--as-needed" "-Wl,-z,noexecstack" "-m64" "-L" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib" "/target/debug/deps/libvirt-09e6bf1dd5abbb6c.0.o" "-o" "/target/debug/deps/libvirt-09e6bf1dd5abbb6c" "-Wl,--gc-sections" "-pie" "-nodefaultlibs" "-L" "/target/debug/deps" "-L" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib" "-Wl,-Bstatic" "-Wl,-Bdynamic" "/target/debug/deps/liblibvirt_sys-0b432a09a1274893.rlib" "/target/debug/deps/liblibc-75e9a9d6ae05fbe7.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libtest-6c35a477e7bec8d3.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libterm-fa872424129019f5.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libgetopts-a80f7c589731de53.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-f4594d3e53dcb114.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libpanic_unwind-a0157c0ca919c364.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libunwind-488b4ab4bd53a138.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/librand-1efbcfd8938372b6.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcollections-532a3dbf317eff86.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-ca07b617414dd0fa.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc_jemalloc-492d8ea7fa3384ff.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liblibc-88c194c15fdb6521.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd_unicode-cfbd6648f7db2ee5.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-687e6a964d22cbb4.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-987729be881d4d32.rlib" "-l" "virt" "-l" "virt" "-l" "c" "-l" "m" "-l" "dl" "-l" "rt" "-l" "pthread" "-l" "gcc_s" "-l" "pthread" "-l" "c" "-l" "m" "-l" "rt" "-l" "util"
kablam!   = note: /usr/bin/ld: cannot find -lvirt
kablam!           /usr/bin/ld: cannot find -lvirt
kablam!           collect2: error: ld returned 1 exit status
kablam!           
kablam! 
kablam! error: aborting due to previous error
kablam! 
kablam! error: build failed
boom! running `docker rm -f 314852c7b1b4aa2e235dcb5a81eeb67ede6a0e933f7c6004f4766e5fdf1cef7e`
blam! 314852c7b1b4aa2e235dcb5a81eeb67ede6a0e933f7c6004f4766e5fdf1cef7e
