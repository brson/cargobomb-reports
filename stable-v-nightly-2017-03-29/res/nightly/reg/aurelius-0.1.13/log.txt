boom! testing aurelius-0.1.13 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 0bb514246089665b0e1520b7fbcc944172c2c0e4a7f00f6e8b174d51701a1147
boom! running `docker start -a 0bb514246089665b0e1520b7fbcc944172c2c0e4a7f00f6e8b174d51701a1147`
kablam!    Compiling groupable v0.2.0
kablam!    Compiling chan v0.1.19
kablam!    Compiling hoedown v5.0.0
kablam!    Compiling porthole v0.1.0
kablam!    Compiling mustache v0.6.3
kablam!    Compiling websocket v0.17.1
kablam!    Compiling nickel v0.9.0
kablam!    Compiling aurelius v0.1.13 (file:///source)
kablam! warning: code relies on type inference rules which are likely to change
kablam!   --> src/http.rs:90:20
kablam!    |
kablam! 90 |                      middleware! { |_request, response|
kablam!    |  ____________________^ starting here...
kablam! 91 | |             return response.render(markdown_view.to_str().unwrap(), &data);
kablam! 92 | |         });
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(resolve_trait_on_defaulted_unit)] on by default
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #39216 <https://github.com/rust-lang/rust/issues/39216>
kablam!    = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unreachable expression
kablam!   --> src/http.rs:90:45
kablam!    |
kablam! 90 |                    middleware! { |_request, response|
kablam!    |                                             ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unreachable_code)] on by default
kablam! 
kablam! warning: code relies on type inference rules which are likely to change
kablam!    --> src/http.rs:95:24
kablam!     |
kablam! 95  |         server.utilize(middleware! { |request, response|
kablam!     |                        ^
kablam!     |
kablam!     = note: #[warn(resolve_trait_on_defaulted_unit)] on by default
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #39216 <https://github.com/rust-lang/rust/issues/39216>
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unreachable expression
kablam!   --> src/http.rs:95:48
kablam!    |
kablam! 95 |         server.utilize(middleware! { |request, response|
kablam!    |                                                ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unreachable_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 21.43 secs
boom! running `docker rm -f 0bb514246089665b0e1520b7fbcc944172c2c0e4a7f00f6e8b174d51701a1147`
blam! 0bb514246089665b0e1520b7fbcc944172c2c0e4a7f00f6e8b174d51701a1147
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! c2b042f409bcdb293f16442fbe6da16e3b4811dc9e31b34113bd419a56e3a052
boom! running `docker start -a c2b042f409bcdb293f16442fbe6da16e3b4811dc9e31b34113bd419a56e3a052`
kablam!    Compiling aurelius v0.1.13 (file:///source)
kablam! warning: code relies on type inference rules which are likely to change
kablam!   --> src/http.rs:90:20
kablam!    |
kablam! 90 |                      middleware! { |_request, response|
kablam!    |  ____________________^ starting here...
kablam! 91 | |             return response.render(markdown_view.to_str().unwrap(), &data);
kablam! 92 | |         });
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(resolve_trait_on_defaulted_unit)] on by default
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #39216 <https://github.com/rust-lang/rust/issues/39216>
kablam!    = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unreachable expression
kablam!   --> src/http.rs:90:45
kablam!    |
kablam! 90 |                    middleware! { |_request, response|
kablam!    |                                             ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unreachable_code)] on by default
kablam! 
kablam! warning: code relies on type inference rules which are likely to change
kablam!    --> src/http.rs:95:24
kablam!     |
kablam! 95  |         server.utilize(middleware! { |request, response|
kablam!     |                        ^
kablam!     |
kablam!     = note: #[warn(resolve_trait_on_defaulted_unit)] on by default
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #39216 <https://github.com/rust-lang/rust/issues/39216>
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unreachable expression
kablam!   --> src/http.rs:95:48
kablam!    |
kablam! 95 |         server.utilize(middleware! { |request, response|
kablam!    |                                                ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unreachable_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 15.62 secs
boom! running `docker rm -f c2b042f409bcdb293f16442fbe6da16e3b4811dc9e31b34113bd419a56e3a052`
blam! c2b042f409bcdb293f16442fbe6da16e3b4811dc9e31b34113bd419a56e3a052
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 4d60cc244e0f75260f7634b82184bd7310b417be3c310626a9bbb009b7dce453
boom! running `docker start -a 4d60cc244e0f75260f7634b82184bd7310b417be3c310626a9bbb009b7dce453`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/aurelius-ddc21d19423740e5
blam! 
blam! running 3 tests
blam! test tests::sanity ... ok
blam! test websocket::tests::multiple_send ... ok
blam! test websocket::tests::initial_send ... ok
blam! 
blam! test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/cwd-30301e158bb6acf3
blam! 
blam! running 1 test
blam! test change_working_directory ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/options-36c8f797d673beac
blam! 
blam! running 2 tests
blam! test highlight_theme ... ok
blam! test custom_css ... ok
blam! 
blam! test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/send-3f87ae12de867449
blam! 
blam! running 1 test
blam! test simple ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests aurelius
blam! 
blam! running 1 test
blam! test src/lib.rs - Server::new_with_config (line 116) ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 4d60cc244e0f75260f7634b82184bd7310b417be3c310626a9bbb009b7dce453`
blam! 4d60cc244e0f75260f7634b82184bd7310b417be3c310626a9bbb009b7dce453
