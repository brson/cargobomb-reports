boom! testing api_kit-0.2.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! f95e85c6fdbbee092d70b286b8bd9a291220deb0e63eff59ff1e6937bbdbc336
boom! running `docker start -a f95e85c6fdbbee092d70b286b8bd9a291220deb0e63eff59ff1e6937bbdbc336`
kablam!    Compiling api_kit v0.2.0 (file:///source)
kablam! warning: unused import: `hyper::client::Client`
kablam!  --> src/api_client/mod.rs:1:5
kablam!   |
kablam! 1 | use hyper::client::Client;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::client::response::Response`
kablam!  --> src/api_client/mod.rs:2:5
kablam!   |
kablam! 2 | use hyper::client::response::Response;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::client::RequestBuilder`
kablam!  --> src/api_client/mod.rs:3:5
kablam!   |
kablam! 3 | use hyper::client::RequestBuilder;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::client::request::Request`
kablam!  --> src/api_client/mod.rs:4:5
kablam!   |
kablam! 4 | use hyper::client::request::Request;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::Url`
kablam!  --> src/api_client/mod.rs:5:5
kablam!   |
kablam! 5 | use hyper::Url;
kablam!   |     ^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `api_request::HttpMethod`
kablam!  --> src/api_client/mod.rs:6:5
kablam!   |
kablam! 6 | use api_request::HttpMethod;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused imports: `BodyBuilder`, `RequestBody`
kablam!  --> src/api_client/mod.rs:9:20
kablam!   |
kablam! 9 | use body_builder::{BodyBuilder, RequestBody};
kablam!   |                    ^^^^^^^^^^^  ^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::error::Error as StdErr`
kablam!   --> src/api_client/mod.rs:10:5
kablam!    |
kablam! 10 | use std::error::Error as StdErr;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::error::Error as HyErr`
kablam!   --> src/api_client/mod.rs:11:5
kablam!    |
kablam! 11 | use hyper::error::Error as HyErr;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::status::StatusCode`
kablam!   --> src/api_client/mod.rs:13:5
kablam!    |
kablam! 13 | use hyper::status::StatusCode;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused imports: `ErrorTiming`, `ResponseError`
kablam!   --> src/api_client/mod.rs:14:23
kablam!    |
kablam! 14 | use error::{ApiError, ErrorTiming, ResponseError};
kablam!    |                       ^^^^^^^^^^^  ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::client::Body`
kablam!   --> src/api_client/mod.rs:17:5
kablam!    |
kablam! 17 | use hyper::client::Body;
kablam!    |     ^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::io::Read`
kablam!   --> src/api_client/mod.rs:18:5
kablam!    |
kablam! 18 | use std::io::Read;
kablam!    |     ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::header::ContentLength`
kablam!   --> src/api_client/mod.rs:19:5
kablam!    |
kablam! 19 | use hyper::header::ContentLength;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::header::ContentType`
kablam!   --> src/api_client/mod.rs:20:5
kablam!    |
kablam! 20 | use hyper::header::ContentType;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::header::Headers`
kablam!   --> src/api_client/mod.rs:21:5
kablam!    |
kablam! 21 | use hyper::header::Headers;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused imports: `Error as StdioErr`, `Write`
kablam!   --> src/api_client/mod.rs:22:15
kablam!    |
kablam! 22 | use std::io::{Write, Error as StdioErr};
kablam!    |               ^^^^^  ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: method `addInterceptor` should have a snake case name such as `add_interceptor`
kablam!   --> src/api_client/mod.rs:32:5
kablam!    |
kablam! 32 |       pub fn addInterceptor(mut self, interceptor: Box<Interceptor>) -> RealCall<ResponseType> {
kablam!    |  _____^ starting here...
kablam! 33 | |         self.interceptors.push(interceptor);
kablam! 34 | |         return self;
kablam! 35 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/api_client/mod.rs:44:16
kablam!    |
kablam! 44 |             Ok(mut response) => self.api_request_builder.responseFromObject(response),
kablam!    |                ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: variable `apiErr` should have a snake case name such as `api_err`
kablam!   --> src/api_client/mod.rs:45:17
kablam!    |
kablam! 45 |             Err(apiErr) => Err(apiErr),
kablam!    |                 ^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused import: `hyper::status::StatusCode`
kablam!  --> src/api_request/mod.rs:4:5
kablam!   |
kablam! 4 | use hyper::status::StatusCode;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::error::Error as StdErr`
kablam!  --> src/api_request/mod.rs:5:5
kablam!   |
kablam! 5 | use std::error::Error as StdErr;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `err::Error`
kablam!  --> src/api_request/mod.rs:6:5
kablam!   |
kablam! 6 | use err::Error;
kablam!   |     ^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::fmt`
kablam!  --> src/api_request/mod.rs:8:5
kablam!   |
kablam! 8 | use std::fmt;
kablam!   |     ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `BodyBuilder`
kablam!   --> src/api_request/mod.rs:12:20
kablam!    |
kablam! 12 | use body_builder::{BodyBuilder, RequestBody};
kablam!    |                    ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: structure field `queryParameters` should have a snake case name such as `query_parameters`
kablam!   --> src/api_request/mod.rs:21:5
kablam!    |
kablam! 21 |     pub queryParameters: Vec<(String, String)>,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: trait method `queryParameters` should have a snake case name such as `query_parameters`
kablam!   --> src/api_request/mod.rs:32:5
kablam!    |
kablam! 32 |       fn queryParameters(&self) -> Vec<(String, String)> {
kablam!    |  _____^ starting here...
kablam! 33 | |         let vc: Vec<(String, String)> = vec![];
kablam! 34 | |         return vc;
kablam! 35 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: trait method `requestBody` should have a snake case name such as `request_body`
kablam!   --> src/api_request/mod.rs:36:5
kablam!    |
kablam! 36 |       fn requestBody(&self) -> Option<RequestBody> {
kablam!    |  _____^ starting here...
kablam! 37 | |         return None;
kablam! 38 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: trait method `interceptRequest` should have a snake case name such as `intercept_request`
kablam!   --> src/api_request/mod.rs:39:5
kablam!    |
kablam! 39 |       fn interceptRequest(&self, request: Request<Fresh>) -> Result<Request<Fresh>, ApiError> {
kablam!    |  _____^ starting here...
kablam! 40 | |         return Ok(request);
kablam! 41 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: trait method `interceptResponse` should have a snake case name such as `intercept_response`
kablam!   --> src/api_request/mod.rs:42:5
kablam!    |
kablam! 42 |       fn interceptResponse(&self,
kablam!    |  _____^ starting here...
kablam! 43 | |                          response: Rc<RefCell<Response>>)
kablam! 44 | |                          -> Result<Rc<RefCell<Response>>, ApiError> {
kablam! 45 | |         return Ok(response);
kablam! 46 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: trait method `responseFromObject` should have a snake case name such as `response_from_object`
kablam!   --> src/api_request/mod.rs:47:5
kablam!    |
kablam! 47 |       fn responseFromObject(&self,
kablam!    |  _____^ starting here...
kablam! 48 | |                           response: Rc<RefCell<Response>>)
kablam! 49 | |                           -> Result<ResponseType, ApiError>;
kablam!    | |____________________________________________________________^ ...ending here
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused import: `std::marker::Copy`
kablam!  --> src/body_builder/mod.rs:1:5
kablam!   |
kablam! 1 | use std::marker::Copy;
kablam!   |     ^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `serde::ser::Serialize`
kablam!  --> src/body_builder/json.rs:1:5
kablam!   |
kablam! 1 | use serde::ser::Serialize;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused imports: `BufReader`, `Read`
kablam!  --> src/body_builder/json.rs:5:15
kablam!   |
kablam! 5 | use std::io::{Read, BufReader};
kablam!   |               ^^^^  ^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused imports: `Body`, `RequestBuilder`
kablam!  --> src/body_builder/json.rs:6:21
kablam!   |
kablam! 6 | use hyper::client::{Body, RequestBuilder};
kablam!   |                     ^^^^  ^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::convert::Into`
kablam!  --> src/body_builder/json.rs:7:5
kablam!   |
kablam! 7 | use std::convert::Into;
kablam!   |     ^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: structure field `jsonObject` should have a snake case name such as `json_object`
kablam!   --> src/body_builder/json.rs:10:5
kablam!    |
kablam! 10 |     pub jsonObject: Value,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused import: `serde::ser::Serialize`
kablam!  --> src/body_builder/form.rs:1:5
kablam!   |
kablam! 1 | use serde::ser::Serialize;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `serde_json::ser`
kablam!  --> src/body_builder/form.rs:2:5
kablam!   |
kablam! 2 | use serde_json::ser;
kablam!   |     ^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `serde_json::value::Value`
kablam!  --> src/body_builder/form.rs:3:5
kablam!   |
kablam! 3 | use serde_json::value::Value;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused imports: `BufReader`, `Read`
kablam!  --> src/body_builder/form.rs:5:15
kablam!   |
kablam! 5 | use std::io::{Read, BufReader};
kablam!   |               ^^^^  ^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused imports: `Body`, `RequestBuilder`
kablam!  --> src/body_builder/form.rs:6:21
kablam!   |
kablam! 6 | use hyper::client::{Body, RequestBuilder};
kablam!   |                     ^^^^  ^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::convert::Into`
kablam!  --> src/body_builder/form.rs:7:5
kablam!   |
kablam! 7 | use std::convert::Into;
kablam!   |     ^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::marker::PhantomData`
kablam!  --> src/error/mod.rs:3:5
kablam!   |
kablam! 3 | use std::marker::PhantomData;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused variable: `code`
kablam!   --> src/error/mod.rs:66:51
kablam!    |
kablam! 66 |             ResponseError::UnacceptableStatusCode(code) => "Unacceptable Status code",
kablam!    |                                                   ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused import: `Body`
kablam!  --> src/interceptor/mod.rs:4:29
kablam!   |
kablam! 4 | use hyper::client::{Client, Body};
kablam!   |                             ^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::client::RequestBuilder`
kablam!  --> src/interceptor/mod.rs:5:5
kablam!   |
kablam! 5 | use hyper::client::RequestBuilder;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Fresh`
kablam!  --> src/interceptor/mod.rs:8:18
kablam!   |
kablam! 8 | use hyper::net::{Fresh, Streaming};
kablam!   |                  ^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `api_client::ApiClient`
kablam!  --> src/interceptor/mod.rs:9:5
kablam!   |
kablam! 9 | use api_client::ApiClient;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `api_request::HttpMethod`
kablam!   --> src/interceptor/mod.rs:10:5
kablam!    |
kablam! 10 | use api_request::HttpMethod;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused imports: `BodyBuilder`, `RequestBody`
kablam!   --> src/interceptor/mod.rs:11:20
kablam!    |
kablam! 11 | use body_builder::{BodyBuilder, RequestBody};
kablam!    |                    ^^^^^^^^^^^  ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::error::Error as StdErr`
kablam!   --> src/interceptor/mod.rs:12:5
kablam!    |
kablam! 12 | use std::error::Error as StdErr;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::status::StatusCode`
kablam!   --> src/interceptor/mod.rs:15:5
kablam!    |
kablam! 15 | use hyper::status::StatusCode;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `ResponseError`
kablam!   --> src/interceptor/mod.rs:16:36
kablam!    |
kablam! 16 | use error::{ApiError, ErrorTiming, ResponseError};
kablam!    |                                    ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::io::Read`
kablam!   --> src/interceptor/mod.rs:19:5
kablam!    |
kablam! 19 | use std::io::Read;
kablam!    |     ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Headers`
kablam!   --> src/interceptor/mod.rs:20:49
kablam!    |
kablam! 20 | use hyper::header::{ContentLength, ContentType, Headers};
kablam!    |                                                 ^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused variable: `hyclient`
kablam!   --> src/interceptor/mod.rs:70:13
kablam!    |
kablam! 70 |         let hyclient = Client::new();
kablam!    |             ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable `requestUri` should have a snake case name such as `request_uri`
kablam!   --> src/interceptor/mod.rs:73:13
kablam!    |
kablam! 73 |         let mut requestUri: Url = Url::parse(&format!("{}{}", base_url, api_request.path)).unwrap();
kablam!    |             ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `querySerializer` should have a snake case name such as `query_serializer`
kablam!   --> src/interceptor/mod.rs:75:17
kablam!    |
kablam! 75 |             let mut querySerializer = requestUri.query_pairs_mut();
kablam!    |                 ^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `queryPair` should have a snake case name such as `query_pair`
kablam!   --> src/interceptor/mod.rs:76:17
kablam!    |
kablam! 76 |             for queryPair in &api_request.queryParameters {
kablam!    |                 ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `apiError` should have a snake case name such as `api_error`
kablam!   --> src/interceptor/mod.rs:83:21
kablam!    |
kablam! 83 |                 let apiError = ApiError::new::<HyErr>(err, ErrorTiming::AtRequest);
kablam!    |                     ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `interceptedRequest` should have a snake case name such as `intercepted_request`
kablam!    --> src/interceptor/mod.rs:101:16
kablam!     |
kablam! 101 |             Ok(interceptedRequest) => {
kablam!     |                ^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `apiError` should have a snake case name such as `api_error`
kablam!    --> src/interceptor/mod.rs:105:29
kablam!     |
kablam! 105 |                         let apiError = ApiError::new::<HyErr>(err, ErrorTiming::AtRequest);
kablam!     |                             ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `apiError` should have a snake case name such as `api_error`
kablam!    --> src/interceptor/mod.rs:118:29
kablam!     |
kablam! 118 |                         let apiError = ApiError::new::<StdioErr>(err, ErrorTiming::AtRequest);
kablam!     |                             ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/interceptor/mod.rs:126:13
kablam!     |
kablam! 126 |         let mut result = match req_started.send() {
kablam!     |             ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: variable `apiError` should have a snake case name such as `api_error`
kablam!    --> src/interceptor/mod.rs:129:21
kablam!     |
kablam! 129 |                 let apiError = ApiError::new::<HyErr>(err, ErrorTiming::AtNetwork);
kablam!     |                     ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `interceptedResponse` should have a snake case name such as `intercepted_response`
kablam!    --> src/interceptor/mod.rs:135:16
kablam!     |
kablam! 135 |             Ok(interceptedResponse) => Ok(interceptedResponse),
kablam!     |                ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.17 secs
boom! running `docker rm -f f95e85c6fdbbee092d70b286b8bd9a291220deb0e63eff59ff1e6937bbdbc336`
blam! f95e85c6fdbbee092d70b286b8bd9a291220deb0e63eff59ff1e6937bbdbc336
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 1a65227f42805e08108be3e88f34396e04d586a81c86b446094bb1ac50d2972a
boom! running `docker start -a 1a65227f42805e08108be3e88f34396e04d586a81c86b446094bb1ac50d2972a`
kablam!    Compiling api_kit v0.2.0 (file:///source)
kablam! warning: unused import: `hyper::client::Client`
kablam!  --> src/api_client/mod.rs:1:5
kablam!   |
kablam! 1 | use hyper::client::Client;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::client::response::Response`
kablam!  --> src/api_client/mod.rs:2:5
kablam!   |
kablam! 2 | use hyper::client::response::Response;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::client::RequestBuilder`
kablam!  --> src/api_client/mod.rs:3:5
kablam!   |
kablam! 3 | use hyper::client::RequestBuilder;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::client::request::Request`
kablam!  --> src/api_client/mod.rs:4:5
kablam!   |
kablam! 4 | use hyper::client::request::Request;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::Url`
kablam!  --> src/api_client/mod.rs:5:5
kablam!   |
kablam! 5 | use hyper::Url;
kablam!   |     ^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `api_request::HttpMethod`
kablam!  --> src/api_client/mod.rs:6:5
kablam!   |
kablam! 6 | use api_request::HttpMethod;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused imports: `BodyBuilder`, `RequestBody`
kablam!  --> src/api_client/mod.rs:9:20
kablam!   |
kablam! 9 | use body_builder::{BodyBuilder, RequestBody};
kablam!   |                    ^^^^^^^^^^^  ^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::error::Error as StdErr`
kablam!   --> src/api_client/mod.rs:10:5
kablam!    |
kablam! 10 | use std::error::Error as StdErr;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::error::Error as HyErr`
kablam!   --> src/api_client/mod.rs:11:5
kablam!    |
kablam! 11 | use hyper::error::Error as HyErr;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::status::StatusCode`
kablam!   --> src/api_client/mod.rs:13:5
kablam!    |
kablam! 13 | use hyper::status::StatusCode;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused imports: `ErrorTiming`, `ResponseError`
kablam!   --> src/api_client/mod.rs:14:23
kablam!    |
kablam! 14 | use error::{ApiError, ErrorTiming, ResponseError};
kablam!    |                       ^^^^^^^^^^^  ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::client::Body`
kablam!   --> src/api_client/mod.rs:17:5
kablam!    |
kablam! 17 | use hyper::client::Body;
kablam!    |     ^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::io::Read`
kablam!   --> src/api_client/mod.rs:18:5
kablam!    |
kablam! 18 | use std::io::Read;
kablam!    |     ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::header::ContentLength`
kablam!   --> src/api_client/mod.rs:19:5
kablam!    |
kablam! 19 | use hyper::header::ContentLength;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::header::ContentType`
kablam!   --> src/api_client/mod.rs:20:5
kablam!    |
kablam! 20 | use hyper::header::ContentType;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::header::Headers`
kablam!   --> src/api_client/mod.rs:21:5
kablam!    |
kablam! 21 | use hyper::header::Headers;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused imports: `Error as StdioErr`, `Write`
kablam!   --> src/api_client/mod.rs:22:15
kablam!    |
kablam! 22 | use std::io::{Write, Error as StdioErr};
kablam!    |               ^^^^^  ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: method `addInterceptor` should have a snake case name such as `add_interceptor`
kablam!   --> src/api_client/mod.rs:32:5
kablam!    |
kablam! 32 |       pub fn addInterceptor(mut self, interceptor: Box<Interceptor>) -> RealCall<ResponseType> {
kablam!    |  _____^ starting here...
kablam! 33 | |         self.interceptors.push(interceptor);
kablam! 34 | |         return self;
kablam! 35 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/api_client/mod.rs:44:16
kablam!    |
kablam! 44 |             Ok(mut response) => self.api_request_builder.responseFromObject(response),
kablam!    |                ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: variable `apiErr` should have a snake case name such as `api_err`
kablam!   --> src/api_client/mod.rs:45:17
kablam!    |
kablam! 45 |             Err(apiErr) => Err(apiErr),
kablam!    |                 ^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused import: `hyper::status::StatusCode`
kablam!  --> src/api_request/mod.rs:4:5
kablam!   |
kablam! 4 | use hyper::status::StatusCode;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::error::Error as StdErr`
kablam!  --> src/api_request/mod.rs:5:5
kablam!   |
kablam! 5 | use std::error::Error as StdErr;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `err::Error`
kablam!  --> src/api_request/mod.rs:6:5
kablam!   |
kablam! 6 | use err::Error;
kablam!   |     ^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::fmt`
kablam!  --> src/api_request/mod.rs:8:5
kablam!   |
kablam! 8 | use std::fmt;
kablam!   |     ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `BodyBuilder`
kablam!   --> src/api_request/mod.rs:12:20
kablam!    |
kablam! 12 | use body_builder::{BodyBuilder, RequestBody};
kablam!    |                    ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: structure field `queryParameters` should have a snake case name such as `query_parameters`
kablam!   --> src/api_request/mod.rs:21:5
kablam!    |
kablam! 21 |     pub queryParameters: Vec<(String, String)>,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: trait method `queryParameters` should have a snake case name such as `query_parameters`
kablam!   --> src/api_request/mod.rs:32:5
kablam!    |
kablam! 32 |       fn queryParameters(&self) -> Vec<(String, String)> {
kablam!    |  _____^ starting here...
kablam! 33 | |         let vc: Vec<(String, String)> = vec![];
kablam! 34 | |         return vc;
kablam! 35 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: trait method `requestBody` should have a snake case name such as `request_body`
kablam!   --> src/api_request/mod.rs:36:5
kablam!    |
kablam! 36 |       fn requestBody(&self) -> Option<RequestBody> {
kablam!    |  _____^ starting here...
kablam! 37 | |         return None;
kablam! 38 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: trait method `interceptRequest` should have a snake case name such as `intercept_request`
kablam!   --> src/api_request/mod.rs:39:5
kablam!    |
kablam! 39 |       fn interceptRequest(&self, request: Request<Fresh>) -> Result<Request<Fresh>, ApiError> {
kablam!    |  _____^ starting here...
kablam! 40 | |         return Ok(request);
kablam! 41 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: trait method `interceptResponse` should have a snake case name such as `intercept_response`
kablam!   --> src/api_request/mod.rs:42:5
kablam!    |
kablam! 42 |       fn interceptResponse(&self,
kablam!    |  _____^ starting here...
kablam! 43 | |                          response: Rc<RefCell<Response>>)
kablam! 44 | |                          -> Result<Rc<RefCell<Response>>, ApiError> {
kablam! 45 | |         return Ok(response);
kablam! 46 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: trait method `responseFromObject` should have a snake case name such as `response_from_object`
kablam!   --> src/api_request/mod.rs:47:5
kablam!    |
kablam! 47 |       fn responseFromObject(&self,
kablam!    |  _____^ starting here...
kablam! 48 | |                           response: Rc<RefCell<Response>>)
kablam! 49 | |                           -> Result<ResponseType, ApiError>;
kablam!    | |____________________________________________________________^ ...ending here
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused import: `std::marker::Copy`
kablam!  --> src/body_builder/mod.rs:1:5
kablam!   |
kablam! 1 | use std::marker::Copy;
kablam!   |     ^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `serde::ser::Serialize`
kablam!  --> src/body_builder/json.rs:1:5
kablam!   |
kablam! 1 | use serde::ser::Serialize;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused imports: `BufReader`, `Read`
kablam!  --> src/body_builder/json.rs:5:15
kablam!   |
kablam! 5 | use std::io::{Read, BufReader};
kablam!   |               ^^^^  ^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused imports: `Body`, `RequestBuilder`
kablam!  --> src/body_builder/json.rs:6:21
kablam!   |
kablam! 6 | use hyper::client::{Body, RequestBuilder};
kablam!   |                     ^^^^  ^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::convert::Into`
kablam!  --> src/body_builder/json.rs:7:5
kablam!   |
kablam! 7 | use std::convert::Into;
kablam!   |     ^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: structure field `jsonObject` should have a snake case name such as `json_object`
kablam!   --> src/body_builder/json.rs:10:5
kablam!    |
kablam! 10 |     pub jsonObject: Value,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused import: `serde::ser::Serialize`
kablam!  --> src/body_builder/form.rs:1:5
kablam!   |
kablam! 1 | use serde::ser::Serialize;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `serde_json::ser`
kablam!  --> src/body_builder/form.rs:2:5
kablam!   |
kablam! 2 | use serde_json::ser;
kablam!   |     ^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `serde_json::value::Value`
kablam!  --> src/body_builder/form.rs:3:5
kablam!   |
kablam! 3 | use serde_json::value::Value;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused imports: `BufReader`, `Read`
kablam!  --> src/body_builder/form.rs:5:15
kablam!   |
kablam! 5 | use std::io::{Read, BufReader};
kablam!   |               ^^^^  ^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused imports: `Body`, `RequestBuilder`
kablam!  --> src/body_builder/form.rs:6:21
kablam!   |
kablam! 6 | use hyper::client::{Body, RequestBuilder};
kablam!   |                     ^^^^  ^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::convert::Into`
kablam!  --> src/body_builder/form.rs:7:5
kablam!   |
kablam! 7 | use std::convert::Into;
kablam!   |     ^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::marker::PhantomData`
kablam!  --> src/error/mod.rs:3:5
kablam!   |
kablam! 3 | use std::marker::PhantomData;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused variable: `code`
kablam!   --> src/error/mod.rs:66:51
kablam!    |
kablam! 66 |             ResponseError::UnacceptableStatusCode(code) => "Unacceptable Status code",
kablam!    |                                                   ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused import: `Body`
kablam!  --> src/interceptor/mod.rs:4:29
kablam!   |
kablam! 4 | use hyper::client::{Client, Body};
kablam!   |                             ^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::client::RequestBuilder`
kablam!  --> src/interceptor/mod.rs:5:5
kablam!   |
kablam! 5 | use hyper::client::RequestBuilder;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Fresh`
kablam!  --> src/interceptor/mod.rs:8:18
kablam!   |
kablam! 8 | use hyper::net::{Fresh, Streaming};
kablam!   |                  ^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `api_client::ApiClient`
kablam!  --> src/interceptor/mod.rs:9:5
kablam!   |
kablam! 9 | use api_client::ApiClient;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `api_request::HttpMethod`
kablam!   --> src/interceptor/mod.rs:10:5
kablam!    |
kablam! 10 | use api_request::HttpMethod;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused imports: `BodyBuilder`, `RequestBody`
kablam!   --> src/interceptor/mod.rs:11:20
kablam!    |
kablam! 11 | use body_builder::{BodyBuilder, RequestBody};
kablam!    |                    ^^^^^^^^^^^  ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::error::Error as StdErr`
kablam!   --> src/interceptor/mod.rs:12:5
kablam!    |
kablam! 12 | use std::error::Error as StdErr;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `hyper::status::StatusCode`
kablam!   --> src/interceptor/mod.rs:15:5
kablam!    |
kablam! 15 | use hyper::status::StatusCode;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `ResponseError`
kablam!   --> src/interceptor/mod.rs:16:36
kablam!    |
kablam! 16 | use error::{ApiError, ErrorTiming, ResponseError};
kablam!    |                                    ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::io::Read`
kablam!   --> src/interceptor/mod.rs:19:5
kablam!    |
kablam! 19 | use std::io::Read;
kablam!    |     ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Headers`
kablam!   --> src/interceptor/mod.rs:20:49
kablam!    |
kablam! 20 | use hyper::header::{ContentLength, ContentType, Headers};
kablam!    |                                                 ^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused variable: `hyclient`
kablam!   --> src/interceptor/mod.rs:70:13
kablam!    |
kablam! 70 |         let hyclient = Client::new();
kablam!    |             ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable `requestUri` should have a snake case name such as `request_uri`
kablam!   --> src/interceptor/mod.rs:73:13
kablam!    |
kablam! 73 |         let mut requestUri: Url = Url::parse(&format!("{}{}", base_url, api_request.path)).unwrap();
kablam!    |             ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `querySerializer` should have a snake case name such as `query_serializer`
kablam!   --> src/interceptor/mod.rs:75:17
kablam!    |
kablam! 75 |             let mut querySerializer = requestUri.query_pairs_mut();
kablam!    |                 ^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `queryPair` should have a snake case name such as `query_pair`
kablam!   --> src/interceptor/mod.rs:76:17
kablam!    |
kablam! 76 |             for queryPair in &api_request.queryParameters {
kablam!    |                 ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `apiError` should have a snake case name such as `api_error`
kablam!   --> src/interceptor/mod.rs:83:21
kablam!    |
kablam! 83 |                 let apiError = ApiError::new::<HyErr>(err, ErrorTiming::AtRequest);
kablam!    |                     ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `interceptedRequest` should have a snake case name such as `intercepted_request`
kablam!    --> src/interceptor/mod.rs:101:16
kablam!     |
kablam! 101 |             Ok(interceptedRequest) => {
kablam!     |                ^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `apiError` should have a snake case name such as `api_error`
kablam!    --> src/interceptor/mod.rs:105:29
kablam!     |
kablam! 105 |                         let apiError = ApiError::new::<HyErr>(err, ErrorTiming::AtRequest);
kablam!     |                             ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `apiError` should have a snake case name such as `api_error`
kablam!    --> src/interceptor/mod.rs:118:29
kablam!     |
kablam! 118 |                         let apiError = ApiError::new::<StdioErr>(err, ErrorTiming::AtRequest);
kablam!     |                             ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/interceptor/mod.rs:126:13
kablam!     |
kablam! 126 |         let mut result = match req_started.send() {
kablam!     |             ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: variable `apiError` should have a snake case name such as `api_error`
kablam!    --> src/interceptor/mod.rs:129:21
kablam!     |
kablam! 129 |                 let apiError = ApiError::new::<HyErr>(err, ErrorTiming::AtNetwork);
kablam!     |                     ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `interceptedResponse` should have a snake case name such as `intercepted_response`
kablam!    --> src/interceptor/mod.rs:135:16
kablam!     |
kablam! 135 |             Ok(interceptedResponse) => Ok(interceptedResponse),
kablam!     |                ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.82 secs
boom! running `docker rm -f 1a65227f42805e08108be3e88f34396e04d586a81c86b446094bb1ac50d2972a`
blam! 1a65227f42805e08108be3e88f34396e04d586a81c86b446094bb1ac50d2972a
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 64bce593cf487f4ea7258ffb75a473285d9bcc8c5f16a6249a680c588567163e
boom! running `docker start -a 64bce593cf487f4ea7258ffb75a473285d9bcc8c5f16a6249a680c588567163e`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/api_kit-4262341c684334da
blam! 
blam! running 1 test
blam! test tests::it_works ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests api_kit
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 64bce593cf487f4ea7258ffb75a473285d9bcc8c5f16a6249a680c588567163e`
blam! 64bce593cf487f4ea7258ffb75a473285d9bcc8c5f16a6249a680c588567163e
