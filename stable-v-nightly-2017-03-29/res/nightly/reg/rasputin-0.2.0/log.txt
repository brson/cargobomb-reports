boom! testing rasputin-0.2.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! cd2e7870a6fc6d11b61f5613029bb041e72bc42d5f21265bcf506e338e572455
boom! running `docker start -a cd2e7870a6fc6d11b61f5613029bb041e72bc42d5f21265bcf506e338e572455`
kablam!    Compiling rocksdb v0.1.1
kablam!    Compiling rasputin v0.2.0 (file:///source)
kablam! error[E0277]: the trait bound `std::cell::Cell<u32>: std::marker::Sync` is not satisfied in `serialization::SetReq`
kablam!    --> src/serialization.rs:118:6
kablam!     |
kablam! 118 | impl ::protobuf::Message for SetReq {
kablam!     |      ^^^^^^^^^^^^^^^^^^^ within `serialization::SetReq`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<u32>`
kablam!     |
kablam!     = note: `std::cell::Cell<u32>` cannot be shared between threads safely
kablam!     = note: required because it appears within the type `serialization::SetReq`
kablam!     = note: required by `protobuf::Message`
kablam! 
kablam! error[E0277]: the trait bound `std::cell::Cell<u32>: std::marker::Sync` is not satisfied in `serialization::SetRes`
kablam!    --> src/serialization.rs:371:6
kablam!     |
kablam! 371 | impl ::protobuf::Message for SetRes {
kablam!     |      ^^^^^^^^^^^^^^^^^^^ within `serialization::SetRes`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<u32>`
kablam!     |
kablam!     = note: `std::cell::Cell<u32>` cannot be shared between threads safely
kablam!     = note: required because it appears within the type `serialization::SetRes`
kablam!     = note: required by `protobuf::Message`
kablam! 
kablam! error[E0277]: the trait bound `std::cell::Cell<u32>: std::marker::Sync` is not satisfied in `serialization::GetReq`
kablam!    --> src/serialization.rs:602:6
kablam!     |
kablam! 602 | impl ::protobuf::Message for GetReq {
kablam!     |      ^^^^^^^^^^^^^^^^^^^ within `serialization::GetReq`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<u32>`
kablam!     |
kablam!     = note: `std::cell::Cell<u32>` cannot be shared between threads safely
kablam!     = note: required because it appears within the type `serialization::GetReq`
kablam!     = note: required by `protobuf::Message`
kablam! 
kablam! error[E0277]: the trait bound `std::cell::Cell<u32>: std::marker::Sync` is not satisfied in `serialization::GetRes`
kablam!    --> src/serialization.rs:870:6
kablam!     |
kablam! 870 | impl ::protobuf::Message for GetRes {
kablam!     |      ^^^^^^^^^^^^^^^^^^^ within `serialization::GetRes`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<u32>`
kablam!     |
kablam!     = note: `std::cell::Cell<u32>` cannot be shared between threads safely
kablam!     = note: required because it appears within the type `serialization::GetRes`
kablam!     = note: required by `protobuf::Message`
kablam! 
kablam! error[E0277]: the trait bound `std::cell::Cell<u32>: std::marker::Sync` is not satisfied in `serialization::CASReq`
kablam!     --> src/serialization.rs:1197:6
kablam!      |
kablam! 1197 | impl ::protobuf::Message for CASReq {
kablam!      |      ^^^^^^^^^^^^^^^^^^^ within `serialization::CASReq`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<u32>`
kablam!      |
kablam!      = note: `std::cell::Cell<u32>` cannot be shared between threads safely
kablam!      = note: required because it appears within the type `serialization::CASReq`
kablam!      = note: required by `protobuf::Message`
kablam! 
kablam! error[E0277]: the trait bound `std::cell::Cell<u32>: std::marker::Sync` is not satisfied in `serialization::CASRes`
kablam!     --> src/serialization.rs:1505:6
kablam!      |
kablam! 1505 | impl ::protobuf::Message for CASRes {
kablam!      |      ^^^^^^^^^^^^^^^^^^^ within `serialization::CASRes`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<u32>`
kablam!      |
kablam!      = note: `std::cell::Cell<u32>` cannot be shared between threads safely
kablam!      = note: required because it appears within the type `serialization::CASRes`
kablam!      = note: required by `protobuf::Message`
kablam! 
kablam! error[E0277]: the trait bound `std::cell::Cell<u32>: std::marker::Sync` is not satisfied in `serialization::DelReq`
kablam!     --> src/serialization.rs:1756:6
kablam!      |
kablam! 1756 | impl ::protobuf::Message for DelReq {
kablam!      |      ^^^^^^^^^^^^^^^^^^^ within `serialization::DelReq`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<u32>`
kablam!      |
kablam!      = note: `std::cell::Cell<u32>` cannot be shared between threads safely
kablam!      = note: required because it appears within the type `serialization::DelReq`
kablam!      = note: required by `protobuf::Message`
kablam! 
kablam! error[E0277]: the trait bound `std::cell::Cell<u32>: std::marker::Sync` is not satisfied in `serialization::DelRes`
kablam!     --> src/serialization.rs:2024:6
kablam!      |
kablam! 2024 | impl ::protobuf::Message for DelRes {
kablam!      |      ^^^^^^^^^^^^^^^^^^^ within `serialization::DelRes`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<u32>`
kablam!      |
kablam!      = note: `std::cell::Cell<u32>` cannot be shared between threads safely
kablam!      = note: required because it appears within the type `serialization::DelRes`
kablam!      = note: required by `protobuf::Message`
kablam! 
kablam! error[E0277]: the trait bound `std::cell::Cell<u32>: std::marker::Sync` is not satisfied in `serialization::WatchReq`
kablam!     --> src/serialization.rs:2341:6
kablam!      |
kablam! 2341 | impl ::protobuf::Message for WatchReq {
kablam!      |      ^^^^^^^^^^^^^^^^^^^ within `serialization::WatchReq`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<u32>`
kablam!      |
kablam!      = note: `std::cell::Cell<u32>` cannot be shared between threads safely
kablam!      = note: required because it appears within the type `serialization::WatchReq`
kablam!      = note: required by `protobuf::Message`
kablam! 
kablam! error[E0277]: the trait bound `std::cell::Cell<u32>: std::marker::Sync` is not satisfied in `serialization::WatchRes`
kablam!     --> src/serialization.rs:2646:6
kablam!      |
kablam! 2646 | impl ::protobuf::Message for WatchRes {
kablam!      |      ^^^^^^^^^^^^^^^^^^^ within `serialization::WatchRes`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<u32>`
kablam!      |
kablam!      = note: `std::cell::Cell<u32>` cannot be shared between threads safely
kablam!      = note: required because it appears within the type `serialization::WatchRes`
kablam!      = note: required by `protobuf::Message`
kablam! 
kablam! error[E0277]: the trait bound `std::cell::Cell<u32>: std::marker::Sync` is not satisfied in `serialization::RedirectRes`
kablam!     --> src/serialization.rs:2931:6
kablam!      |
kablam! 2931 | impl ::protobuf::Message for RedirectRes {
kablam!      |      ^^^^^^^^^^^^^^^^^^^ within `serialization::RedirectRes`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<u32>`
kablam!      |
kablam!      = note: `std::cell::Cell<u32>` cannot be shared between threads safely
kablam!      = note: required because it appears within the type `serialization::RedirectRes`
kablam!      = note: required by `protobuf::Message`
kablam! 
kablam! error[E0277]: the trait bound `std::cell::Cell<u32>: std::marker::Sync` is not satisfied in `serialization::Mutation`
kablam!     --> src/serialization.rs:3291:6
kablam!      |
kablam! 3291 | impl ::protobuf::Message for Mutation {
kablam!      |      ^^^^^^^^^^^^^^^^^^^ within `serialization::Mutation`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<u32>`
kablam!      |
kablam!      = note: `std::cell::Cell<u32>` cannot be shared between threads safely
kablam!      = note: required because it appears within the type `serialization::Mutation`
kablam!      = note: required by `protobuf::Message`
kablam! 
kablam! error[E0277]: the trait bound `std::cell::Cell<u32>: std::marker::Sync` is not satisfied in `serialization::Version`
kablam!     --> src/serialization.rs:3572:6
kablam!      |
kablam! 3572 | impl ::protobuf::Message for Version {
kablam!      |      ^^^^^^^^^^^^^^^^^^^ within `serialization::Version`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<u32>`
kablam!      |
kablam!      = note: `std::cell::Cell<u32>` cannot be shared between threads safely
kablam!      = note: required because it appears within the type `serialization::Version`
kablam!      = note: required by `protobuf::Message`
kablam! 
kablam! error[E0277]: the trait bound `std::cell::Cell<u32>: std::marker::Sync` is not satisfied in `serialization::CliReq`
kablam!     --> src/serialization.rs:3941:6
kablam!      |
kablam! 3941 | impl ::protobuf::Message for CliReq {
kablam!      |      ^^^^^^^^^^^^^^^^^^^ within `serialization::CliReq`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<u32>`
kablam!      |
kablam!      = note: `std::cell::Cell<u32>` cannot be shared between threads safely
kablam!      = note: required because it appears within the type `serialization::CliReq`
kablam!      = note: required by `protobuf::Message`
kablam! 
kablam! error[E0277]: the trait bound `std::cell::Cell<u32>: std::marker::Sync` is not satisfied in `serialization::CliRes`
kablam!     --> src/serialization.rs:4437:6
kablam!      |
kablam! 4437 | impl ::protobuf::Message for CliRes {
kablam!      |      ^^^^^^^^^^^^^^^^^^^ within `serialization::CliRes`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<u32>`
kablam!      |
kablam!      = note: `std::cell::Cell<u32>` cannot be shared between threads safely
kablam!      = note: required because it appears within the type `serialization::CliRes`
kablam!      = note: required by `protobuf::Message`
kablam! 
kablam! error[E0277]: the trait bound `std::cell::Cell<u32>: std::marker::Sync` is not satisfied in `serialization::VoteReq`
kablam!     --> src/serialization.rs:4830:6
kablam!      |
kablam! 4830 | impl ::protobuf::Message for VoteReq {
kablam!      |      ^^^^^^^^^^^^^^^^^^^ within `serialization::VoteReq`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<u32>`
kablam!      |
kablam!      = note: `std::cell::Cell<u32>` cannot be shared between threads safely
kablam!      = note: required because it appears within the type `serialization::VoteReq`
kablam!      = note: required by `protobuf::Message`
kablam! 
kablam! error[E0277]: the trait bound `std::cell::Cell<u32>: std::marker::Sync` is not satisfied in `serialization::VoteRes`
kablam!     --> src/serialization.rs:5114:6
kablam!      |
kablam! 5114 | impl ::protobuf::Message for VoteRes {
kablam!      |      ^^^^^^^^^^^^^^^^^^^ within `serialization::VoteRes`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<u32>`
kablam!      |
kablam!      = note: `std::cell::Cell<u32>` cannot be shared between threads safely
kablam!      = note: required because it appears within the type `serialization::VoteRes`
kablam!      = note: required by `protobuf::Message`
kablam! 
kablam! error[E0277]: the trait bound `std::cell::Cell<u32>: std::marker::Sync` is not satisfied in `serialization::Append`
kablam!     --> src/serialization.rs:5377:6
kablam!      |
kablam! 5377 | impl ::protobuf::Message for Append {
kablam!      |      ^^^^^^^^^^^^^^^^^^^ within `serialization::Append`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<u32>`
kablam!      |
kablam!      = note: `std::cell::Cell<u32>` cannot be shared between threads safely
kablam!      = note: required because it appears within the type `serialization::Append`
kablam!      = note: required by `protobuf::Message`
kablam! 
kablam! error[E0277]: the trait bound `std::cell::Cell<u32>: std::marker::Sync` is not satisfied in `serialization::AppendRes`
kablam!     --> src/serialization.rs:5654:6
kablam!      |
kablam! 5654 | impl ::protobuf::Message for AppendRes {
kablam!      |      ^^^^^^^^^^^^^^^^^^^ within `serialization::AppendRes`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<u32>`
kablam!      |
kablam!      = note: `std::cell::Cell<u32>` cannot be shared between threads safely
kablam!      = note: required because it appears within the type `serialization::AppendRes`
kablam!      = note: required by `protobuf::Message`
kablam! 
kablam! error[E0277]: the trait bound `std::cell::Cell<u32>: std::marker::Sync` is not satisfied in `serialization::PeerMsg`
kablam!     --> src/serialization.rs:6022:6
kablam!      |
kablam! 6022 | impl ::protobuf::Message for PeerMsg {
kablam!      |      ^^^^^^^^^^^^^^^^^^^ within `serialization::PeerMsg`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<u32>`
kablam!      |
kablam!      = note: `std::cell::Cell<u32>` cannot be shared between threads safely
kablam!      = note: required because it appears within the type `serialization::PeerMsg`
kablam!      = note: required by `protobuf::Message`
kablam! 
kablam! error[E0277]: the trait bound `Out: std::marker::Sized` is not satisfied
kablam!  --> src/codec.rs:8:5
kablam!   |
kablam! 8 |     fn decode(&mut self, buf: &mut In) -> Vec<Out>;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::marker::Sized` is not implemented for `Out`
kablam!   |
kablam!   = help: consider adding a `where Out: std::marker::Sized` bound
kablam!   = note: required by `std::vec::Vec`
kablam! 
kablam! error: aborting due to 21 previous errors
kablam! 
kablam! error: Could not compile `rasputin`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f cd2e7870a6fc6d11b61f5613029bb041e72bc42d5f21265bcf506e338e572455`
blam! cd2e7870a6fc6d11b61f5613029bb041e72bc42d5f21265bcf506e338e572455
