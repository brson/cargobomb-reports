boom! testing cargo-edit-0.1.6 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! e71bf1cfe313f8081d8070302e5af737b97f6c99cef9ba53efe8ce06397f2b01
boom! running `docker start -a e71bf1cfe313f8081d8070302e5af737b97f6c99cef9ba53efe8ce06397f2b01`
kablam!    Compiling cargo-edit v0.1.6 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 7.22 secs
boom! running `docker rm -f e71bf1cfe313f8081d8070302e5af737b97f6c99cef9ba53efe8ce06397f2b01`
blam! e71bf1cfe313f8081d8070302e5af737b97f6c99cef9ba53efe8ce06397f2b01
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! cbad99fcb02caf58f8f15f8d5efe320658abc1f33a3415794e2053e45025a15c
boom! running `docker start -a cbad99fcb02caf58f8f15f8d5efe320658abc1f33a3415794e2053e45025a15c`
kablam!    Compiling assert_cli v0.2.2
kablam!    Compiling cargo-edit v0.1.6 (file:///source)
kablam! warning: function is never used: `no_manifest_failures`
kablam!   --> tests/utils.rs:49:1
kablam!    |
kablam! 49 |   pub fn no_manifest_failures(manifest: &toml::Value) -> bool {
kablam!    |  _^ starting here...
kablam! 50 | |     manifest.lookup("dependencies.failure").is_none() &&
kablam! 51 | |     manifest.lookup("dev-dependencies.failure").is_none() &&
kablam! 52 | |     manifest.lookup("build-dependencies.failure").is_none()
kablam! 53 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 10.85 secs
boom! running `docker rm -f cbad99fcb02caf58f8f15f8d5efe320658abc1f33a3415794e2053e45025a15c`
blam! cbad99fcb02caf58f8f15f8d5efe320658abc1f33a3415794e2053e45025a15c
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 9534fa08572ee124a76ea37247accd73dbad980b55dca47cf4fbffea9b18c203
boom! running `docker start -a 9534fa08572ee124a76ea37247accd73dbad980b55dca47cf4fbffea9b18c203`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/cargo_add-dad6abc85dcf3b1b
blam! 
blam! running 6 tests
blam! test args::tests::test_path_as_arg_parsing ... FAILED
blam! test args::tests::test_dependency_parsing ... ok
blam! test fetch::get_latest_stable_version_from_json ... ok
blam! test fetch::get_latest_version_from_json_test ... ok
blam! test fetch::get_latest_unstable_or_stable_version_from_json ... ok
blam! test fetch::get_no_latest_version_from_json_when_all_are_yanked ... ok
blam! 
blam! failures:
blam! 
blam! ---- args::tests::test_path_as_arg_parsing stdout ----
blam! 	thread 'args::tests::test_path_as_arg_parsing' panicked at 'called `Result::unwrap()` on an `Err` value: StringError("Unable to obtain crate informations from `.`.\n")', /checkout/src/libcore/result.rs:859
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! 
blam! failures:
blam!     args::tests::test_path_as_arg_parsing
blam! 
blam! test result: FAILED. 5 passed; 1 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f 9534fa08572ee124a76ea37247accd73dbad980b55dca47cf4fbffea9b18c203`
blam! 9534fa08572ee124a76ea37247accd73dbad980b55dca47cf4fbffea9b18c203
