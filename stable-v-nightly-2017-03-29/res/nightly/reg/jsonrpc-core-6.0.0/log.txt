boom! testing jsonrpc-core-6.0.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 0ece4af9eed35a134cfbf3ece933f645744b87713045e3140bf7d187c62fc16b
boom! running `docker start -a 0ece4af9eed35a134cfbf3ece933f645744b87713045e3140bf7d187c62fc16b`
kablam!    Compiling jsonrpc-core v6.0.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 4.42 secs
boom! running `docker rm -f 0ece4af9eed35a134cfbf3ece933f645744b87713045e3140bf7d187c62fc16b`
blam! 0ece4af9eed35a134cfbf3ece933f645744b87713045e3140bf7d187c62fc16b
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! c230ca6304841a7f6466c2453a83c7268a84d16e52d04152d0922fc6bb4e900e
boom! running `docker start -a c230ca6304841a7f6466c2453a83c7268a84d16e52d04152d0922fc6bb4e900e`
kablam!    Compiling jsonrpc-core v6.0.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 14.3 secs
boom! running `docker rm -f c230ca6304841a7f6466c2453a83c7268a84d16e52d04152d0922fc6bb4e900e`
blam! c230ca6304841a7f6466c2453a83c7268a84d16e52d04152d0922fc6bb4e900e
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 35d61f0239ab7d76191d81a0e9097ab509fae956ba5707e232305da2796d7039
boom! running `docker start -a 35d61f0239ab7d76191d81a0e9097ab509fae956ba5707e232305da2796d7039`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/jsonrpc_core-9860150a062212e5
blam! 
blam! running 24 tests
blam! test io::tests::test_io_handler ... ok
blam! test io::tests::test_async_io_handler ... ok
blam! test io::tests::test_io_handler_1dot0 ... ok
blam! test io::tests::test_notification ... ok
blam! test io::tests::test_send_sync ... ok
blam! test io::tests::test_method_not_found ... ok
blam! test types::id::tests::id_deserialization ... ok
blam! test types::id::tests::id_serialization ... ok
blam! test types::params::tests::params_deserialization ... ok
blam! test types::params::tests::should_return_meaningful_error_when_deserialization_fails ... ok
blam! test types::request::call_deserialize ... ok
blam! test types::request::method_call_serialize ... ok
blam! test types::request::notification_deserialize ... ok
blam! test types::request::notification_serialize ... ok
blam! test types::request::call_serialize ... ok
blam! test types::request::request_deserialize_batch ... ok
blam! test types::request::request_invalid_returns_id ... ok
blam! test types::request::request_serialize_batch ... ok
blam! test types::response::batch_response_deserialize ... ok
blam! test types::response::failure_output_deserialize ... ok
blam! test types::response::failure_output_serialize ... ok
blam! test types::response::single_response_deserialize ... ok
blam! test types::response::success_output_deserialize ... ok
blam! test types::response::success_output_serialize ... ok
blam! 
blam! test result: ok. 24 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests jsonrpc-core
blam! 
blam! running 1 test
blam! test src/lib.rs -  (line 5) ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 35d61f0239ab7d76191d81a0e9097ab509fae956ba5707e232305da2796d7039`
blam! 35d61f0239ab7d76191d81a0e9097ab509fae956ba5707e232305da2796d7039
