boom! testing KLPhash-0.1.4 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 73bd1f0e94ad9045e372f258be438f7857c23fe2e2834b5a3911adc34619fa64
boom! running `docker start -a 73bd1f0e94ad9045e372f258be438f7857c23fe2e2834b5a3911adc34619fa64`
kablam!    Compiling KLPhash v0.1.4 (file:///source)
kablam! warning: crate `KLPhash` should have a snake case name such as `klphash`
kablam!   |
kablam!   = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused or unknown feature
kablam!  --> src/lib.rs:2:12
kablam!   |
kablam! 2 | #![feature(std_misc)]
kablam!   |            ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_features)] on by default
kablam! 
kablam! warning: unused or unknown feature
kablam!  --> src/lib.rs:3:12
kablam!   |
kablam! 3 | #![feature(float_extras)]
kablam!   |            ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_features)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.53 secs
boom! running `docker rm -f 73bd1f0e94ad9045e372f258be438f7857c23fe2e2834b5a3911adc34619fa64`
blam! 73bd1f0e94ad9045e372f258be438f7857c23fe2e2834b5a3911adc34619fa64
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 3310e45f38d86679f8f786244c2444359e60721a3a174e149e03fdaf533a5e21
boom! running `docker start -a 3310e45f38d86679f8f786244c2444359e60721a3a174e149e03fdaf533a5e21`
kablam!    Compiling KLPhash v0.1.4 (file:///source)
kablam! warning: crate `KLPhash` should have a snake case name such as `klphash`
kablam!   |
kablam!   = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused or unknown feature
kablam!  --> src/lib.rs:2:12
kablam!   |
kablam! 2 | #![feature(std_misc)]
kablam!   |            ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_features)] on by default
kablam! 
kablam! warning: unused or unknown feature
kablam!  --> src/lib.rs:3:12
kablam!   |
kablam! 3 | #![feature(float_extras)]
kablam!   |            ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_features)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.55 secs
boom! running `docker rm -f 3310e45f38d86679f8f786244c2444359e60721a3a174e149e03fdaf533a5e21`
blam! 3310e45f38d86679f8f786244c2444359e60721a3a174e149e03fdaf533a5e21
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 7cc933096825ec2357ea7edc21ac1e20f22dd3a4c55782498ebb9e8668ab835c
boom! running `docker start -a 7cc933096825ec2357ea7edc21ac1e20f22dd3a4c55782498ebb9e8668ab835c`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/KLPhash-ad98f8e30684bb36
blam! 
blam! running 5 tests
blam! test hash_tests::hash_one_bench ... ok
blam! test hash_tests::hash_two_bench ... ok
blam! test hash_tests::it_works ... ok
blam! test hash_tests::hash_three_bench ... ok
blam! test hash_tests::it_actually_works ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- hash_tests::it_actually_works stdout ----
blam! 	thread 'hash_tests::it_actually_works' panicked at 'assertion failed: northern_three_len - northern_hash_three.len() <= 2', src/lib.rs:101
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! 
blam! failures:
blam!     hash_tests::it_actually_works
blam! 
blam! test result: FAILED. 4 passed; 1 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f 7cc933096825ec2357ea7edc21ac1e20f22dd3a4c55782498ebb9e8668ab835c`
blam! 7cc933096825ec2357ea7edc21ac1e20f22dd3a4c55782498ebb9e8668ab835c
