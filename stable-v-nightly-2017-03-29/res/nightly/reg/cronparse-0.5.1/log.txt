boom! testing cronparse-0.5.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 562de4e7b1f5336da663d3d5e3063e18d10bacc2e8c9ac2ee5c4ad30f547f33b
boom! running `docker start -a 562de4e7b1f5336da663d3d5e3063e18d10bacc2e8c9ac2ee5c4ad30f547f33b`
kablam!    Compiling cronparse v0.5.1 (file:///source)
kablam! warning: unused import: `FromIterator`
kablam!  --> src/schedule.rs:8:17
kablam!   |
kablam! 8 | use std::iter::{FromIterator, IntoIterator, Iterator};
kablam!   |                 ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::iter::FromIterator`
kablam!  --> src/crontab.rs:2:5
kablam!   |
kablam! 2 | use std::iter::FromIterator;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.70 secs
boom! running `docker rm -f 562de4e7b1f5336da663d3d5e3063e18d10bacc2e8c9ac2ee5c4ad30f547f33b`
blam! 562de4e7b1f5336da663d3d5e3063e18d10bacc2e8c9ac2ee5c4ad30f547f33b
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 6c02044aff686476d57706bcfb204c5eb5324059d065a82f551d78897ff6c869
boom! running `docker start -a 6c02044aff686476d57706bcfb204c5eb5324059d065a82f551d78897ff6c869`
kablam!    Compiling cronparse v0.5.1 (file:///source)
kablam! warning: unused import: `FromIterator`
kablam!  --> src/schedule.rs:8:17
kablam!   |
kablam! 8 | use std::iter::{FromIterator, IntoIterator, Iterator};
kablam!   |                 ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::iter::FromIterator`
kablam!  --> src/crontab.rs:2:5
kablam!   |
kablam! 2 | use std::iter::FromIterator;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.23 secs
boom! running `docker rm -f 6c02044aff686476d57706bcfb204c5eb5324059d065a82f551d78897ff6c869`
blam! 6c02044aff686476d57706bcfb204c5eb5324059d065a82f551d78897ff6c869
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 3842909a05c77a329c59d485da077e1da7589721860984079eb59c92e8f6a977
boom! running `docker start -a 3842909a05c77a329c59d485da077e1da7589721860984079eb59c92e8f6a977`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/cronparse-287d00258741cc31
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/skeptic-5ea1106a1ac90b47
blam! 
blam! running 1 test
kablam! thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Error { repr: Os { code: 2, message: "No such file or directory" } }', /checkout/src/libcore/result.rs:859
kablam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! test readme_0 ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- readme_0 stdout ----
blam! 	thread 'readme_0' panicked at 'command failed', /cargo-home/registry/src/github.com-1ecc6299db9ec823/skeptic-0.5.0/lib.rs:351
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! 
kablam! error: test failed
blam! failures:
blam!     readme_0
blam! 
blam! test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 3842909a05c77a329c59d485da077e1da7589721860984079eb59c92e8f6a977`
blam! 3842909a05c77a329c59d485da077e1da7589721860984079eb59c92e8f6a977
