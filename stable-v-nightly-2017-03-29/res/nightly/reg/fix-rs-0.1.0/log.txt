boom! testing fix-rs-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! ea7f54f60f1d8d74eb9d6b8533867d57d389a5c6bda11957c624bdab9881ed77
boom! running `docker start -a ea7f54f60f1d8d74eb9d6b8533867d57d389a5c6bda11957c624bdab9881ed77`
kablam!    Compiling fix-rs v0.1.0 (file:///source)
kablam! warning: function is never used: `estimate_body_length`
kablam!   --> src/main.rs:22:1
kablam!    |
kablam! 22 | fn estimate_body_length(message_bytes: &[u8]) -> usize {
kablam!    | ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 10.43 secs
boom! running `docker rm -f ea7f54f60f1d8d74eb9d6b8533867d57d389a5c6bda11957c624bdab9881ed77`
blam! ea7f54f60f1d8d74eb9d6b8533867d57d389a5c6bda11957c624bdab9881ed77
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 2b80a5648a173d5195824910502fa74193ebbb587c55652326269bf7294fc537
boom! running `docker start -a 2b80a5648a173d5195824910502fa74193ebbb587c55652326269bf7294fc537`
kablam!    Compiling fix-rs v0.1.0 (file:///source)
kablam! warning: function is never used: `estimate_body_length`
kablam!   --> src/main.rs:22:1
kablam!    |
kablam! 22 | fn estimate_body_length(message_bytes: &[u8]) -> usize {
kablam!    | ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 10.43 secs
boom! running `docker rm -f 2b80a5648a173d5195824910502fa74193ebbb587c55652326269bf7294fc537`
blam! 2b80a5648a173d5195824910502fa74193ebbb587c55652326269bf7294fc537
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! ce42b55a9d67b64f0e5d096201251c108a1f17e3a6e461d3df893eb3a050423e
boom! running `docker start -a ce42b55a9d67b64f0e5d096201251c108a1f17e3a6e461d3df893eb3a050423e`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/fix_rs-16c2cc8374621eb0
kablam!      Running /target/debug/deps/fix_rs-ea1514f6d0c013bd
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/lib-b09192c0eb0f6cd1
blam! 
blam! running 8 tests
blam! test msg_type_third_tag_test ... ok
blam! test length_tag_test ... ok
blam! test checksum_tag_test ... ok
blam! test body_length_second_tag_test ... ok
blam! test nested_repeating_groups_test ... ok
blam! test simple_test ... ok
blam! test stream_test ... ok
blam! test repeating_groups_test ... ok
blam! 
blam! test result: ok. 8 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests fix-rs
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f ce42b55a9d67b64f0e5d096201251c108a1f17e3a6e461d3df893eb3a050423e`
blam! ce42b55a9d67b64f0e5d096201251c108a1f17e3a6e461d3df893eb3a050423e
