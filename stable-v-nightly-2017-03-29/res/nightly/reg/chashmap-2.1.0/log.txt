boom! testing chashmap-2.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! fcbbf6647f352650741a0e8819073837a3ea886057ddd41034536bc86946947c
boom! running `docker start -a fcbbf6647f352650741a0e8819073837a3ea886057ddd41034536bc86946947c`
kablam!    Compiling stable_deref_trait v1.0.0
kablam!    Compiling parking_lot_core v0.2.1
kablam!    Compiling owning_ref v0.3.3
kablam!    Compiling parking_lot v0.4.0
kablam!    Compiling chashmap v2.1.0 (file:///source)
kablam! error[E0061]: this function takes 1 parameter but 2 parameters were supplied
kablam!    --> src/lib.rs:679:61
kablam!     |
kablam! 679 |         if let Ok(inner) = OwningRef::new(OwningHandle::new(self.table.read(), |x| unsafe { &*x }.lookup(key)))
kablam!     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 parameter
kablam! 
kablam! error[E0061]: this function takes 1 parameter but 2 parameters were supplied
kablam!    --> src/lib.rs:698:68
kablam!     |
kablam! 698 |         if let Ok(inner) = OwningHandle::try_new(OwningHandle::new(self.table.read(), |x| unsafe { &*x }.lookup_mut(key)), |x| if let &mut Bucket::Contains(_, ref mut val) = unsafe { &mut *(x as *mut Bucket<K, V>) } {
kablam!     |                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 parameter
kablam! 
kablam! error[E0277]: the trait bound `Table<_, V>: owning_ref::ToHandle` is not satisfied
kablam!    --> src/lib.rs:698:50
kablam!     |
kablam! 698 |         if let Ok(inner) = OwningHandle::try_new(OwningHandle::new(self.table.read(), |x| unsafe { &*x }.lookup_mut(key)), |x| if let &mut Bucket::Contains(_, ref mut val) = unsafe { &mut *(x as *mut Bucket<K, V>) } {
kablam!     |                                                  ^^^^^^^^^^^^^^^^^ the trait `owning_ref::ToHandle` is not implemented for `Table<_, V>`
kablam!     |
kablam!     = note: required by `<owning_ref::OwningHandle<O, H>>::new`
kablam! 
kablam! error: aborting due to 3 previous errors
kablam! 
kablam! error: Could not compile `chashmap`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f fcbbf6647f352650741a0e8819073837a3ea886057ddd41034536bc86946947c`
blam! fcbbf6647f352650741a0e8819073837a3ea886057ddd41034536bc86946947c
