boom! testing spaceapi-0.1.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 11cefccbe9f3bf1196effa605bba856e6c4b92cfc9b06413e6b6c3f5a46a2a17
boom! running `docker start -a 11cefccbe9f3bf1196effa605bba856e6c4b92cfc9b06413e6b6c3f5a46a2a17`
kablam!    Compiling spaceapi v0.1.1 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.37 secs
boom! running `docker rm -f 11cefccbe9f3bf1196effa605bba856e6c4b92cfc9b06413e6b6c3f5a46a2a17`
blam! 11cefccbe9f3bf1196effa605bba856e6c4b92cfc9b06413e6b6c3f5a46a2a17
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 8f44e3a39efc144ba2c3e18ddb51017b78d9ccdf7cc5f6308a3efa07c9fadaf2
boom! running `docker start -a 8f44e3a39efc144ba2c3e18ddb51017b78d9ccdf7cc5f6308a3efa07c9fadaf2`
kablam!    Compiling spaceapi v0.1.1 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.97 secs
boom! running `docker rm -f 8f44e3a39efc144ba2c3e18ddb51017b78d9ccdf7cc5f6308a3efa07c9fadaf2`
blam! 8f44e3a39efc144ba2c3e18ddb51017b78d9ccdf7cc5f6308a3efa07c9fadaf2
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 49053555cf5d5f2fd12d23032ddd2f11edbf5800e537da7adb5b4707d0600a1c
boom! running `docker start -a 49053555cf5d5f2fd12d23032ddd2f11edbf5800e537da7adb5b4707d0600a1c`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/spaceapi-64d66bf30f4584b1
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests spaceapi
blam! 
blam! running 8 tests
blam! test src/optional.rs - optional::Optional<T>::into (line 162) ... FAILED
blam! test src/optional.rs - optional::Optional<T>::is_absent (line 140) ... ok
blam! test src/optional.rs - optional::Optional<T>::and_then (line 118) ... ok
blam! test src/lib.rs -  (line 17) ... ok
blam! test src/optional.rs - optional::Optional<T>::map (line 72) ... ok
blam! test src/optional.rs - optional::Optional<T>::unwrap_or_else (line 52) ... ok
blam! test src/optional.rs - optional::Optional<T>::unwrap (line 36) ... ok
blam! test src/optional.rs - optional::Optional<T>::unwrap (line 28) ... ok
blam! 
blam! failures:
blam! 
blam! ---- src/optional.rs - optional::Optional<T>::into (line 162) stdout ----
blam! 	error[E0282]: type annotations needed
blam!  --> <anon>:9:12
blam!   |
blam! 9 | assert_eq!(None, x.into());
blam!   |            ^^^^ cannot infer type for `T`
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'rustc' panicked at 'Box<Any>', /checkout/src/librustc/session/mod.rs:203
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! 
blam! failures:
blam!     src/optional.rs - optional::Optional<T>::into (line 162)
blam! 
blam! test result: FAILED. 7 passed; 1 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f 49053555cf5d5f2fd12d23032ddd2f11edbf5800e537da7adb5b4707d0600a1c`
blam! 49053555cf5d5f2fd12d23032ddd2f11edbf5800e537da7adb5b4707d0600a1c
