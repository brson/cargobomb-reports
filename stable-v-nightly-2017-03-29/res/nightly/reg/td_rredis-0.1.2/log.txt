boom! testing td_rredis-0.1.2 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 63a2594177633c3dbabad5a66de7772ecb56d265afb544579270f3ffc698d93a
boom! running `docker start -a 63a2594177633c3dbabad5a66de7772ecb56d265afb544579270f3ffc698d93a`
kablam!    Compiling td_rredis v0.1.2 (file:///source)
kablam! warning: unreachable expression
kablam!    --> src/parser.rs:105:26
kablam!     |
kablam! 105 |                 Ok(_) => return fail!((ErrorKind::PatternError, "Could not read enough bytes")),
kablam!     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unreachable_code)] on by default
kablam! 
kablam! warning: unreachable expression
kablam!    --> src/lib.rs:7:23
kablam!     |
kablam! 7   |           if !($expr) { return $err_result; }
kablam!     |                         ^
kablam!     | 
kablam!    ::: src/script.rs
kablam!     |
kablam! 173 |                           ensure!(self.script.hash == hash,
kablam!     |  _________________________- starting here...
kablam! 174 | |                                 fail!((ErrorKind::BusyLoadingError, "load hash error")));
kablam!     | |_________________________________________________________________________________________- ...ending here: in this macro invocation
kablam!     |
kablam!     = note: #[warn(unreachable_code)] on by default
kablam! 
kablam! warning: unreachable expression
kablam!    --> src/lib.rs:7:23
kablam!     |
kablam! 7   |           if !($expr) { return $err_result; }
kablam!     |                         ^
kablam!     | 
kablam!    ::: src/script.rs
kablam!     |
kablam! 184 |                           ensure!(self.script.hash == hash,
kablam!     |  _________________________- starting here...
kablam! 185 | |                                 fail!((ErrorKind::BusyLoadingError, "load hash error")));
kablam!     | |_________________________________________________________________________________________- ...ending here: in this macro invocation
kablam!     |
kablam!     = note: #[warn(unreachable_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 6.68 secs
boom! running `docker rm -f 63a2594177633c3dbabad5a66de7772ecb56d265afb544579270f3ffc698d93a`
blam! 63a2594177633c3dbabad5a66de7772ecb56d265afb544579270f3ffc698d93a
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 09fc1a42ffee17532129848187b3ed4863b67dea527bb035db5bfb8e5378bf16
boom! running `docker start -a 09fc1a42ffee17532129848187b3ed4863b67dea527bb035db5bfb8e5378bf16`
kablam!    Compiling td_rredis v0.1.2 (file:///source)
kablam! warning: unused import: `std::error`
kablam!  --> examples/redis.rs:2:5
kablam!   |
kablam! 2 | use std::error;
kablam!   |     ^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::fmt`
kablam!  --> examples/redis.rs:3:5
kablam!   |
kablam! 3 | use std::fmt;
kablam!   |     ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::io`
kablam!  --> examples/redis.rs:4:5
kablam!   |
kablam! 4 | use std::io;
kablam!   |     ^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::hash::Hash`
kablam!  --> examples/redis.rs:5:5
kablam!   |
kablam! 5 | use std::hash::Hash;
kablam!   |     ^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused imports: `Utf8Error`, `from_utf8`
kablam!  --> examples/redis.rs:6:16
kablam!   |
kablam! 6 | use std::str::{from_utf8, Utf8Error};
kablam!   |                ^^^^^^^^^  ^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused imports: `HashMap`, `HashSet`
kablam!  --> examples/redis.rs:7:24
kablam!   |
kablam! 7 | use std::collections::{HashMap, HashSet};
kablam!   |                        ^^^^^^^  ^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::convert::From`
kablam!  --> examples/redis.rs:8:5
kablam!   |
kablam! 8 | use std::convert::From;
kablam!   |     ^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `redis::RedisResult`
kablam!   --> examples/redis.rs:10:5
kablam!    |
kablam! 10 | use redis::RedisResult;
kablam!    |     ^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused imports: `FromRedisValue`, `RedisResult`
kablam!  --> examples/cluster.rs:4:13
kablam!   |
kablam! 4 | use redis::{RedisResult, FromRedisValue};
kablam!   |             ^^^^^^^^^^^  ^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: code relies on type inference rules which are likely to change
kablam!   --> examples/cluster.rs:13:18
kablam!    |
kablam! 13 |     try!(cluster.query_cmd(&cmd));
kablam!    |                  ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(resolve_trait_on_defaulted_unit)] on by default
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #39216 <https://github.com/rust-lang/rust/issues/39216>
kablam! 
kablam! warning: code relies on type inference rules which are likely to change
kablam!   --> examples/cluster.rs:18:53
kablam!    |
kablam! 18 |     try!(redis::cmd("set").arg("xxoo1").arg("ooxx").query_cluster(&mut cluster));
kablam!    |                                                     ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(resolve_trait_on_defaulted_unit)] on by default
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #39216 <https://github.com/rust-lang/rust/issues/39216>
kablam! 
kablam! warning: code relies on type inference rules which are likely to change
kablam!   --> examples/cluster.rs:23:52
kablam!    |
kablam! 23 |     try!(redis::cmd("SET").arg("key1").arg(b"foo").query_cluster(&mut cluster));
kablam!    |                                                    ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(resolve_trait_on_defaulted_unit)] on by default
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #39216 <https://github.com/rust-lang/rust/issues/39216>
kablam! 
kablam! warning: code relies on type inference rules which are likely to change
kablam!   --> examples/cluster.rs:25:50
kablam!    |
kablam! 25 |     try!(redis::cmd("SET").arg(&["key5", "bar"]).query_cluster(&mut cluster));
kablam!    |                                                  ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(resolve_trait_on_defaulted_unit)] on by default
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #39216 <https://github.com/rust-lang/rust/issues/39216>
kablam! 
kablam! warning: unused variable: `xx1`
kablam!   --> examples/cluster.rs:30:14
kablam!    |
kablam! 30 |     let (xx, xx1) : (String, String) = try!(redis::cmd("MGET").arg(&["key1", "key5"]).query_cluster(&mut cluster));
kablam!    |              ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unreachable expression
kablam!    --> src/parser.rs:105:26
kablam!     |
kablam! 105 |                 Ok(_) => return fail!((ErrorKind::PatternError, "Could not read enough bytes")),
kablam!     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unreachable_code)] on by default
kablam! 
kablam! warning: unreachable expression
kablam!    --> src/lib.rs:7:23
kablam!     |
kablam! 7   |           if !($expr) { return $err_result; }
kablam!     |                         ^
kablam!     | 
kablam!    ::: src/script.rs
kablam!     |
kablam! 173 |                           ensure!(self.script.hash == hash,
kablam!     |  _________________________- starting here...
kablam! 174 | |                                 fail!((ErrorKind::BusyLoadingError, "load hash error")));
kablam!     | |_________________________________________________________________________________________- ...ending here: in this macro invocation
kablam!     |
kablam!     = note: #[warn(unreachable_code)] on by default
kablam! 
kablam! warning: unreachable expression
kablam!    --> src/lib.rs:7:23
kablam!     |
kablam! 7   |           if !($expr) { return $err_result; }
kablam!     |                         ^
kablam!     | 
kablam!    ::: src/script.rs
kablam!     |
kablam! 184 |                           ensure!(self.script.hash == hash,
kablam!     |  _________________________- starting here...
kablam! 185 | |                                 fail!((ErrorKind::BusyLoadingError, "load hash error")));
kablam!     | |_________________________________________________________________________________________- ...ending here: in this macro invocation
kablam!     |
kablam!     = note: #[warn(unreachable_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 11.72 secs
boom! running `docker rm -f 09fc1a42ffee17532129848187b3ed4863b67dea527bb035db5bfb8e5378bf16`
blam! 09fc1a42ffee17532129848187b3ed4863b67dea527bb035db5bfb8e5378bf16
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 3af4df45d0d41d28aab0c4909f3c377e4e8189e6b39d3d618930761fca7fdc5f
boom! running `docker start -a 3af4df45d0d41d28aab0c4909f3c377e4e8189e6b39d3d618930761fca7fdc5f`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.1 secs
kablam!      Running /target/debug/deps/td_rredis-8e07dd712d759065
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/test_basic-5c062c2634cc412d
blam! 
blam! running 25 tests
blam! test test_auto_m_versions ... FAILED
blam! test test_args ... FAILED
blam! test test_empty_pipeline ... FAILED
blam! test test_cluster ... FAILED
blam! test test_getset ... FAILED
blam! test test_filtered_scanning ... FAILED
blam! test test_hash_ops ... FAILED
blam! test test_incr ... FAILED
blam! test test_nice_api ... FAILED
blam! test test_info ... FAILED
blam! test test_nice_list_api ... FAILED
blam! test test_nice_hash_api ... FAILED
blam! test test_optionals ... FAILED
blam! test test_pipeline_transaction ... FAILED
blam! test test_pipeline ... FAILED
blam! test test_pubsub ... FAILED
blam! test test_real_transaction ... FAILED
blam! test test_scan ... FAILED
blam! test test_scanning ... FAILED
blam! test test_real_transaction_highlevel ... FAILED
blam! test test_script ... FAILED
blam! test test_set_ops ... FAILED
blam! test test_tuple_decoding_regression ... FAILED
blam! test test_tuple_args ... FAILED
blam! test test_invalid_protocol ... ok
blam! 
blam! failures:
blam! 
blam! ---- test_auto_m_versions stdout ----
blam! 	thread 'test_auto_m_versions' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! ---- test_args stdout ----
kablam! error: test failed
blam! 	thread 'test_args' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_empty_pipeline stdout ----
blam! 	thread 'test_empty_pipeline' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_cluster stdout ----
blam! 	thread 'test_cluster' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_getset stdout ----
blam! 	thread 'test_getset' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_filtered_scanning stdout ----
blam! 	thread 'test_filtered_scanning' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_hash_ops stdout ----
blam! 	thread 'test_hash_ops' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_incr stdout ----
blam! 	thread 'test_incr' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_nice_api stdout ----
blam! 	thread 'test_nice_api' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_info stdout ----
blam! 	thread 'test_info' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_nice_list_api stdout ----
blam! 	thread 'test_nice_list_api' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_nice_hash_api stdout ----
blam! 	thread 'test_nice_hash_api' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_optionals stdout ----
blam! 	thread 'test_optionals' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_pipeline_transaction stdout ----
blam! 	thread 'test_pipeline_transaction' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_pipeline stdout ----
blam! 	thread 'test_pipeline' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_pubsub stdout ----
blam! 	thread 'test_pubsub' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_real_transaction stdout ----
blam! 	thread 'test_real_transaction' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_scan stdout ----
blam! 	thread 'test_scan' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_scanning stdout ----
blam! 	thread 'test_scanning' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_real_transaction_highlevel stdout ----
blam! 	thread 'test_real_transaction_highlevel' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_script stdout ----
blam! 	thread 'test_script' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_set_ops stdout ----
blam! 	thread 'test_set_ops' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_tuple_decoding_regression stdout ----
blam! 	thread 'test_tuple_decoding_regression' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! ---- test_tuple_args stdout ----
blam! 	thread 'test_tuple_args' panicked at 'called `Result::unwrap()` on an `Err` value: Connection refused (os error 111)', /checkout/src/libcore/result.rs:859
blam! 
blam! 
blam! failures:
blam!     test_args
blam!     test_auto_m_versions
blam!     test_cluster
blam!     test_empty_pipeline
blam!     test_filtered_scanning
blam!     test_getset
blam!     test_hash_ops
blam!     test_incr
blam!     test_info
blam!     test_nice_api
blam!     test_nice_hash_api
blam!     test_nice_list_api
blam!     test_optionals
blam!     test_pipeline
blam!     test_pipeline_transaction
blam!     test_pubsub
blam!     test_real_transaction
blam!     test_real_transaction_highlevel
blam!     test_scan
blam!     test_scanning
blam!     test_script
blam!     test_set_ops
blam!     test_tuple_args
blam!     test_tuple_decoding_regression
blam! 
blam! test result: FAILED. 1 passed; 24 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 3af4df45d0d41d28aab0c4909f3c377e4e8189e6b39d3d618930761fca7fdc5f`
blam! 3af4df45d0d41d28aab0c4909f3c377e4e8189e6b39d3d618930761fca7fdc5f
