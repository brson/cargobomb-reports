boom! testing mioqu-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 394e75fbd270ab3f541bc72dfb1a064cfc1cb7b7cb3c964a192921d10709295b
boom! running `docker start -a 394e75fbd270ab3f541bc72dfb1a064cfc1cb7b7cb3c964a192921d10709295b`
kablam!    Compiling mioqu v0.1.0 (file:///source)
kablam! error[E0432]: unresolved import `mio::NotifyError`
kablam!  --> src/result.rs:4:5
kablam!   |
kablam! 4 | use mio::NotifyError;
kablam!   |     ^^^^^^^^^^^^^^^^ no `NotifyError` in the root
kablam! 
kablam! error[E0432]: unresolved import `mio::EventSet`
kablam!  --> src/handler.rs:2:18
kablam!   |
kablam! 2 | use mio::{Token, EventSet};
kablam!   |                  ^^^^^^^^ no `EventSet` in the root. Did you mean to use `Evented`?
kablam! 
kablam! error[E0432]: unresolved import `mio::EventSet`
kablam!  --> src/queue.rs:5:24
kablam!   |
kablam! 5 | use mio::{self, Token, EventSet};
kablam!   |                        ^^^^^^^^ no `EventSet` in the root. Did you mean to use `Evented`?
kablam! 
kablam! error[E0412]: cannot find type `EventLoop` in module `mio`
kablam!  --> src/queue.rs:9:39
kablam!   |
kablam! 9 | pub type EventLoop<H: Handler> = mio::EventLoop<Queue<H>>;
kablam!   |                                       ^^^^^^^^^ not found in `mio`
kablam!   |
kablam!   = help: possible candidates are found in other modules, you can import them into scope:
kablam!             `use mio::deprecated::EventLoop;`
kablam!             `use queue::EventLoop;`
kablam! 
kablam! error[E0405]: cannot find trait `Handler` in module `mio`
kablam!   --> src/queue.rs:16:23
kablam!    |
kablam! 16 | impl<H: Handler> mio::Handler for Queue<H> {
kablam!    |                       ^^^^^^^ not found in `mio`
kablam!    |
kablam!    = help: possible candidates are found in other modules, you can import them into scope:
kablam!              `use handler::Handler;`
kablam!              `use mio::deprecated::Handler;`
kablam! 
kablam! error[E0412]: cannot find type `Sender` in module `mio`
kablam!    --> src/queue.rs:109:18
kablam!     |
kablam! 109 |     sender: mio::Sender<Message<H::Processor, H::Message, H::Response>>
kablam!     |                  ^^^^^^ not found in `mio`
kablam!     |
kablam!     = help: possible candidates are found in other modules, you can import them into scope:
kablam!               `use mio::channel::Sender;`
kablam!               `use mio::deprecated::Sender;`
kablam!               `use std::sync::mpsc::Sender;`
kablam! 
kablam! error[E0412]: cannot find type `Sender` in module `mio`
kablam!    --> src/queue.rs:150:17
kablam!     |
kablam! 150 |     Notify(mio::Sender<T>),
kablam!     |                 ^^^^^^ not found in `mio`
kablam!     |
kablam!     = help: possible candidates are found in other modules, you can import them into scope:
kablam!               `use mio::channel::Sender;`
kablam!               `use mio::deprecated::Sender;`
kablam!               `use std::sync::mpsc::Sender;`
kablam! 
kablam! warning[E0122]: trait bounds are not (yet) enforced in type definitions
kablam!   --> src/result.rs:17:1
kablam!    |
kablam! 17 | pub type Result<T, H: Handler> = result::Result<T, Error<H>>;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning[E0122]: trait bounds are not (yet) enforced in type definitions
kablam!  --> src/queue.rs:9:1
kablam!   |
kablam! 9 | pub type EventLoop<H: Handler> = mio::EventLoop<Queue<H>>;
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error: cannot continue compilation due to previous error
kablam! 
kablam! error: Could not compile `mioqu`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 394e75fbd270ab3f541bc72dfb1a064cfc1cb7b7cb3c964a192921d10709295b`
blam! 394e75fbd270ab3f541bc72dfb1a064cfc1cb7b7cb3c964a192921d10709295b
