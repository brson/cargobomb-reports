boom! testing seax-0.0.2 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 0e084259a0e0cd0d2f885b66f98c3f2afe62eb5223040e1e5f000d6a31bf7564
boom! running `docker start -a 0e084259a0e0cd0d2f885b66f98c3f2afe62eb5223040e1e5f000d6a31bf7564`
kablam!    Compiling seax_svm v0.2.8
kablam!    Compiling parser-combinators v0.2.6
kablam! error[E0277]: the trait bound `Self: std::marker::Sized` is not satisfied in `(T, Self)`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/seax_svm-0.2.8/src/slist.rs:41:5
kablam!    |
kablam! 41 |     fn pop(self)            -> Option<(T, Self)>;
blam! Build failed, waiting for other jobs to finish...
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ within `(T, Self)`, the trait `std::marker::Sized` is not implemented for `Self`
kablam!    |
kablam!    = help: consider adding a `where Self: std::marker::Sized` bound
kablam!    = note: required because it appears within the type `(T, Self)`
kablam!    = note: required by `std::option::Option`
kablam! 
kablam! error: aborting due to previous error
kablam! 
kablam! error: Could not compile `seax_svm`.
kablam! error: build failed
boom! running `docker rm -f 0e084259a0e0cd0d2f885b66f98c3f2afe62eb5223040e1e5f000d6a31bf7564`
blam! 0e084259a0e0cd0d2f885b66f98c3f2afe62eb5223040e1e5f000d6a31bf7564
