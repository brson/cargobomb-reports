boom! testing hdf5-sys-0.4.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 69f363c7b999825b3bd10399d3ce90765ccf3402ee37f52e738a91a26a65d404
boom! running `docker start -a 69f363c7b999825b3bd10399d3ce90765ccf3402ee37f52e738a91a26a65d404`
kablam!    Compiling hdf5-sys v0.4.1 (file:///source)
kablam! error: failed to run custom build command for `hdf5-sys v0.4.1 (file:///source)`
kablam! process didn't exit successfully: `/target/debug/build/hdf5-sys-6d163d2a17a755cd/build-script-build` (exit code: 101)
kablam! --- stdout
kablam! checking for a BSD-compatible install... /usr/bin/install -c
kablam! checking whether build environment is sane... yes
kablam! checking for a thread-safe mkdir -p... /bin/mkdir -p
kablam! checking for gawk... no
kablam! checking for mawk... mawk
kablam! checking whether make sets $(MAKE)... yes
kablam! checking whether make supports nested variables... yes
kablam! checking whether make supports nested variables... (cached) yes
kablam! checking whether to enable maintainer-specific portions of Makefiles... no
kablam! checking build system type... x86_64-unknown-linux-gnu
kablam! checking host system type... x86_64-unknown-linux-gnu
kablam! checking shell variables initial values... done
kablam! checking if basename works... yes
kablam! checking if xargs works... yes
kablam! checking for cached host... none
kablam! checking for config x86_64-unknown-linux-gnu... no
kablam! checking for config x86_64-unknown-linux-gnu... no
kablam! checking for config unknown-linux-gnu... no
kablam! checking for config unknown-linux-gnu... no
kablam! checking for config x86_64-linux-gnu... no
kablam! checking for config x86_64-linux-gnu... no
kablam! checking for config x86_64-unknown... no
kablam! checking for config linux-gnu... found
kablam! compiler 'gcc' is GNU gcc-5.2.1
kablam! checking for config /source/source/config/site-specific/host-69f363c7b999... no
kablam! checking for gcc... gcc
kablam! checking whether the C compiler works... yes
kablam! checking for C compiler default output file name... a.out
kablam! checking for suffix of executables... 
kablam! checking whether we are cross compiling... no
kablam! checking for suffix of object files... o
kablam! checking whether we are using the GNU C compiler... yes
kablam! checking whether gcc accepts -g... yes
kablam! checking for gcc option to accept ISO C89... none needed
kablam! checking whether gcc understands -c and -o together... yes
kablam! checking for style of include used by make... GNU
kablam! checking dependency style of gcc... gcc3
kablam! checking if unsupported combinations of configure options are allowed... no
kablam! checking if Fortran interface enabled... no
kablam! checking if Fortran 2003 interface enabled... no
kablam! checking whether we are using the GNU C++ compiler... yes
kablam! checking whether g++ accepts -g... yes
kablam! checking dependency style of g++... gcc3
kablam! checking how to run the C++ preprocessor... g++ -E
kablam! checking if c++ interface enabled... no
kablam! checking if high level library is enabled... no
kablam! checking for perl... perl
kablam! checking for ar... ar
kablam! checking whether make sets $(MAKE)... (cached) yes
kablam! checking for tr... /usr/bin/tr
kablam! checking if srcdir= and time commands work together... no
kablam! checking how to print strings... printf
kablam! checking for a sed that does not truncate output... /bin/sed
kablam! checking for grep that handles long lines and -e... /bin/grep
kablam! checking for egrep... /bin/grep -E
kablam! checking for fgrep... /bin/grep -F
kablam! checking for ld used by gcc... /usr/bin/ld
kablam! checking if the linker (/usr/bin/ld) is GNU ld... yes
kablam! checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
kablam! checking the name lister (/usr/bin/nm -B) interface... BSD nm
kablam! checking whether ln -s works... yes
kablam! checking the maximum length of command line arguments... 1572864
kablam! checking whether the shell understands some XSI constructs... yes
kablam! checking whether the shell understands "+="... yes
kablam! checking how to convert x86_64-unknown-linux-gnu file names to x86_64-unknown-linux-gnu format... func_convert_file_noop
kablam! checking how to convert x86_64-unknown-linux-gnu file names to toolchain format... func_convert_file_noop
kablam! checking for /usr/bin/ld option to reload object files... -r
kablam! checking for objdump... objdump
kablam! checking how to recognize dependent libraries... pass_all
kablam! checking for dlltool... no
kablam! checking how to associate runtime and link libraries... printf %s\n
kablam! checking for archiver @FILE support... @
kablam! checking for strip... strip
kablam! checking for ranlib... ranlib
kablam! checking command to parse /usr/bin/nm -B output from gcc object... ok
kablam! checking for sysroot... no
kablam! checking for mt... no
kablam! checking if : is a manifest tool... no
kablam! checking how to run the C preprocessor... gcc -E
kablam! checking for ANSI C header files... yes
kablam! checking for sys/types.h... yes
kablam! checking for sys/stat.h... yes
kablam! checking for stdlib.h... yes
kablam! checking for string.h... yes
kablam! checking for memory.h... yes
kablam! checking for strings.h... yes
kablam! checking for inttypes.h... yes
kablam! checking for stdint.h... yes
kablam! checking for unistd.h... yes
kablam! checking for dlfcn.h... yes
kablam! checking for objdir... .libs
kablam! checking if gcc supports -fno-rtti -fno-exceptions... no
kablam! checking for gcc option to produce PIC... -fPIC -DPIC
kablam! checking if gcc PIC flag -fPIC -DPIC works... yes
kablam! checking if gcc static flag -static works... yes
kablam! checking if gcc supports -c -o file.o... yes
kablam! checking if gcc supports -c -o file.o... (cached) yes
kablam! checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
kablam! checking whether -lc should be explicitly linked in... no
kablam! checking dynamic linker characteristics... GNU/Linux ld.so
kablam! checking how to hardcode library paths into programs... immediate
kablam! checking for shl_load... no
kablam! checking for shl_load in -ldld... no
kablam! checking for dlopen... no
kablam! checking for dlopen in -ldl... yes
kablam! checking whether a program can dlopen itself... yes
kablam! checking whether a statically linked program can dlopen itself... no
kablam! checking whether stripping libraries is possible... yes
kablam! checking if libtool supports shared libraries... yes
kablam! checking whether to build shared libraries... yes
kablam! checking whether to build static libraries... yes
kablam! checking if we should install only statically linked executables... no
kablam! checking if -Wl,-rpath should be used to link shared libs in nondefault directories... yes
kablam! checking whether make will build with undefined variables... yes
kablam! checking for production mode... production
kablam! checking for ceil in -lm... yes
kablam! checking for dlopen in -ldl... (cached) yes
kablam! checking for ANSI C header files... (cached) yes
kablam! checking whether time.h and sys/time.h may both be included... yes
kablam! checking sys/resource.h usability... yes
kablam! checking sys/resource.h presence... yes
kablam! checking for sys/resource.h... yes
kablam! checking sys/time.h usability... yes
kablam! checking sys/time.h presence... yes
kablam! checking for sys/time.h... yes
kablam! checking for unistd.h... (cached) yes
kablam! checking sys/ioctl.h usability... yes
kablam! checking sys/ioctl.h presence... yes
kablam! checking for sys/ioctl.h... yes
kablam! checking for sys/stat.h... (cached) yes
kablam! checking sys/socket.h usability... yes
kablam! checking sys/socket.h presence... yes
kablam! checking for sys/socket.h... yes
kablam! checking for sys/types.h... (cached) yes
kablam! checking stddef.h usability... yes
kablam! checking stddef.h presence... yes
kablam! checking for stddef.h... yes
kablam! checking setjmp.h usability... yes
kablam! checking setjmp.h presence... yes
kablam! checking for setjmp.h... yes
kablam! checking features.h usability... yes
kablam! checking features.h presence... yes
kablam! checking for features.h... yes
kablam! checking dirent.h usability... yes
kablam! checking dirent.h presence... yes
kablam! checking for dirent.h... yes
kablam! checking for stdint.h... (cached) yes
kablam! checking mach/mach_time.h usability... no
kablam! checking mach/mach_time.h presence... no
kablam! checking for mach/mach_time.h... no
kablam! checking io.h usability... no
kablam! checking io.h presence... no
kablam! checking for io.h... no
kablam! checking winsock2.h usability... no
kablam! checking winsock2.h presence... no
kablam! checking for winsock2.h... no
kablam! checking sys/timeb.h usability... yes
kablam! checking sys/timeb.h presence... yes
kablam! checking for sys/timeb.h... yes
kablam! checking if libtool needs -no-undefined flag to build shared libraries... no
kablam! checking for _FILE_OFFSET_BITS value needed for large files... no
kablam! checking for off_t... yes
kablam! checking for size_t... yes
kablam! checking for ssize_t... yes
kablam! checking for ptrdiff_t... yes
kablam! checking whether byte ordering is bigendian... no
kablam! checking size of char... 1
kablam! checking size of short... 2
kablam! checking size of int... 4
kablam! checking size of unsigned... 4
kablam! checking size of long... 8
kablam! checking size of long long... 8
kablam! checking size of __int64... 0
kablam! checking size of float... 4
kablam! checking size of double... 8
kablam! checking size of long double... 16
kablam! checking size of int8_t... 1
kablam! checking size of uint8_t... 1
kablam! checking size of int_least8_t... 1
kablam! checking size of uint_least8_t... 1
kablam! checking size of int_fast8_t... 1
kablam! checking size of uint_fast8_t... 1
kablam! checking size of int16_t... 2
kablam! checking size of uint16_t... 2
kablam! checking size of int_least16_t... 2
kablam! checking size of uint_least16_t... 2
kablam! checking size of int_fast16_t... 8
kablam! checking size of uint_fast16_t... 8
kablam! checking size of int32_t... 4
kablam! checking size of uint32_t... 4
kablam! checking size of int_least32_t... 4
kablam! checking size of uint_least32_t... 4
kablam! checking size of int_fast32_t... 8
kablam! checking size of uint_fast32_t... 8
kablam! checking size of int64_t... 8
kablam! checking size of uint64_t... 8
kablam! checking size of int_least64_t... 8
kablam! checking size of uint_least64_t... 8
kablam! checking size of int_fast64_t... 8
kablam! checking size of uint_fast64_t... 8
kablam! checking size of size_t... 8
kablam! checking size of ssize_t... 8
kablam! checking size of ptrdiff_t... 8
kablam! checking size of off_t... 8
kablam! checking if dev_t is scalar... yes
kablam! checking for dmalloc library... suppressed
kablam! checking zlib.h usability... yes
kablam! checking zlib.h presence... yes
kablam! checking for zlib.h... yes
kablam! checking for compress2 in -lz... yes
kablam! checking for compress2... yes
kablam! checking for szlib... suppressed
kablam! checking for thread safe support... yes
kablam! checking pthread.h usability... yes
kablam! checking pthread.h presence... yes
kablam! checking for pthread.h... yes
kablam! checking for pthread_self in -lpthread... yes
kablam! checking whether CLOCK_MONOTONIC is declared... yes
kablam! checking for tm_gmtoff in struct tm... yes
kablam! checking for global timezone variable... yes
kablam! checking for st_blocks in struct stat... yes
kablam! checking for _getvideoconfig... no
kablam! checking for gettextinfo... no
kablam! checking for GetConsoleScreenBufferInfo... no
kablam! checking for _scrsize... no
kablam! checking for ioctl... yes
kablam! checking for struct videoconfig... no
kablam! checking for struct text_info... no
kablam! checking for TIOCGWINSZ... yes
kablam! checking for TIOCGETD... yes
kablam! checking for library containing clock_gettime... none required
kablam! checking for alarm... yes
kablam! checking for clock_gettime... yes
kablam! checking for difftime... yes
kablam! checking for fork... yes
kablam! checking for frexpf... yes
kablam! checking for frexpl... yes
kablam! checking for gethostname... yes
kablam! checking for getpwuid... yes
kablam! checking for getrusage... yes
kablam! checking for gettimeofday... yes
kablam! checking for lstat... yes
kablam! checking for rand_r... yes
kablam! checking for random... yes
kablam! checking for setsysinfo... no
kablam! checking for signal... yes
kablam! checking for longjmp... yes
kablam! checking for setjmp... yes
kablam! checking for siglongjmp... yes
kablam! checking for sigsetjmp... no
kablam! checking for sigprocmask... yes
kablam! checking for snprintf... yes
kablam! checking for srandom... yes
kablam! checking for strdup... yes
kablam! checking for symlink... yes
kablam! checking for system... yes
kablam! checking for tmpfile... yes
kablam! checking for asprintf... yes
kablam! checking for vasprintf... yes
kablam! checking for vsnprintf... yes
kablam! checking for waitpid... yes
kablam! checking for an ANSI C-conforming const... yes
kablam! checking if the compiler understands  __inline__... yes
kablam! checking if the compiler understands __inline... yes
kablam! checking if the compiler understands inline... yes
kablam! checking for __attribute__ extension... yes
kablam! checking for __func__ extension... yes
kablam! checking for __FUNCTION__ extension... yes
kablam! checking for C99 designated initialization support... yes
kablam! checking how to print long long... %ld and %lu
kablam! checking Threads support system scope... yes
kablam! checking for debug flags... none
kablam! checking whether function stack tracking is enabled... no
kablam! checking whether metadata trace file code is enabled... no
kablam! checking for API tracing... no
kablam! checking for instrumented library... no
kablam! checking whether to clear file buffers... yes
kablam! checking whether a memory checking tool will be used... no
kablam! checking for parallel support files... skipped
kablam! checking whether O_DIRECT is declared... yes
kablam! checking for posix_memalign... yes
kablam! checking if the direct I/O virtual file driver (VFD) is enabled... no
kablam! checking for custom plugin default path definition... /usr/local/hdf5/lib/plugin
kablam! checking whether exception handling functions is checked during data conversions... yes
kablam! checking whether data accuracy is guaranteed during data conversions... yes
kablam! checking if the machine has window style path name... no
kablam! checking if using special algorithm to convert long double to (unsigned) long values... no
kablam! checking if using special algorithm to convert (unsigned) long to long double values... no
kablam! checking if correctly converting long double to (unsigned) long long values... yes
kablam! checking if correctly converting (unsigned) long long to long double values... yes
kablam! checking additional programs should be built... no
kablam! checking if deprecated public symbols are available... yes
kablam! checking which version of public symbols to use by default... v18
kablam! checking whether to perform strict file format checks... no
kablam! checking whether to have library information embedded in the executables... yes
kablam! checking if alignment restrictions are strictly enforced... no
kablam! configure: creating ./config.lt
kablam! config.lt: creating libtool
kablam! checking that generated files are newer than configure... done
kablam! configure: creating ./config.status
kablam! config.status: creating src/libhdf5.settings
kablam! config.status: creating Makefile
kablam! config.status: creating src/Makefile
kablam! config.status: creating test/Makefile
kablam! config.status: creating test/testcheck_version.sh
kablam! config.status: creating test/testerror.sh
kablam! config.status: creating test/H5srcdir_str.h
kablam! config.status: creating test/testlibinfo.sh
kablam! config.status: creating test/testlinks_env.sh
kablam! config.status: creating test/test_plugin.sh
kablam! config.status: creating testpar/Makefile
kablam! config.status: creating tools/Makefile
kablam! config.status: creating tools/h5dump/Makefile
kablam! config.status: creating tools/h5dump/testh5dump.sh
kablam! config.status: creating tools/h5dump/testh5dumppbits.sh
kablam! config.status: creating tools/h5dump/testh5dumpxml.sh
kablam! config.status: creating tools/h5ls/testh5ls.sh
kablam! config.status: creating tools/h5import/Makefile
kablam! config.status: creating tools/h5import/h5importtestutil.sh
kablam! config.status: creating tools/h5diff/Makefile
kablam! config.status: creating tools/h5diff/testh5diff.sh
kablam! config.status: creating tools/h5diff/testph5diff.sh
kablam! config.status: creating tools/h5jam/Makefile
kablam! config.status: creating tools/h5jam/testh5jam.sh
kablam! config.status: creating tools/h5repack/Makefile
kablam! config.status: creating tools/h5repack/h5repack.sh
kablam! config.status: creating tools/h5repack/h5repack_plugin.sh
kablam! config.status: creating tools/h5ls/Makefile
kablam! config.status: creating tools/h5copy/Makefile
kablam! config.status: creating tools/h5copy/testh5copy.sh
kablam! config.status: creating tools/lib/Makefile
kablam! config.status: creating tools/misc/Makefile
kablam! config.status: creating tools/misc/h5cc
kablam! config.status: creating tools/misc/testh5mkgrp.sh
kablam! config.status: creating tools/misc/testh5repart.sh
kablam! config.status: creating tools/h5stat/testh5stat.sh
kablam! config.status: creating tools/h5stat/Makefile
kablam! config.status: creating tools/perform/Makefile
kablam! config.status: creating examples/Makefile
kablam! config.status: creating examples/run-c-ex.sh
kablam! config.status: creating examples/testh5cc.sh
kablam! config.status: creating c++/Makefile
kablam! config.status: creating c++/src/Makefile
kablam! config.status: creating c++/src/h5c++
kablam! config.status: creating c++/test/Makefile
kablam! config.status: creating c++/test/H5srcdir_str.h
kablam! config.status: creating c++/examples/Makefile
kablam! config.status: creating c++/examples/run-c++-ex.sh
kablam! config.status: creating c++/examples/testh5c++.sh
kablam! config.status: creating fortran/Makefile
kablam! config.status: creating fortran/src/h5fc
kablam! config.status: creating fortran/src/Makefile
kablam! config.status: creating fortran/test/Makefile
kablam! config.status: creating fortran/testpar/Makefile
kablam! config.status: creating fortran/examples/Makefile
kablam! config.status: creating fortran/examples/run-fortran-ex.sh
kablam! config.status: creating fortran/examples/testh5fc.sh
kablam! config.status: creating hl/Makefile
kablam! config.status: creating hl/src/Makefile
kablam! config.status: creating hl/test/Makefile
kablam! config.status: creating hl/test/H5srcdir_str.h
kablam! config.status: creating hl/tools/Makefile
kablam! config.status: creating hl/tools/gif2h5/Makefile
kablam! config.status: creating hl/tools/gif2h5/h52giftest.sh
kablam! config.status: creating hl/examples/Makefile
kablam! config.status: creating hl/examples/run-hlc-ex.sh
kablam! config.status: creating hl/c++/Makefile
kablam! config.status: creating hl/c++/src/Makefile
kablam! config.status: creating hl/c++/test/Makefile
kablam! config.status: creating hl/c++/examples/Makefile
kablam! config.status: creating hl/c++/examples/run-hlc++-ex.sh
kablam! config.status: creating hl/fortran/Makefile
kablam! config.status: creating hl/fortran/src/Makefile
kablam! config.status: creating hl/fortran/test/Makefile
kablam! config.status: creating hl/fortran/examples/Makefile
kablam! config.status: creating hl/fortran/examples/run-hlfortran-ex.sh
kablam! config.status: creating src/H5config.h
kablam! config.status: executing pubconf commands
kablam! creating src/H5pubconf.h
kablam! Post process src/libhdf5.settings
kablam! config.status: executing depfiles commands
kablam! config.status: executing libtool commands
kablam! 	    SUMMARY OF THE HDF5 CONFIGURATION
kablam! 	    =================================
kablam! 
kablam! General Information:
kablam! -------------------
kablam! 		   HDF5 Version: 1.8.17
kablam! 		  Configured on: Sun Mar 26 06:39:09 UTC 2017
kablam! 		  Configured by: cargobomb@69f363c7b999
kablam! 		 Configure mode: production
kablam! 		    Host system: x86_64-unknown-linux-gnu
kablam! 	      Uname information: Linux 69f363c7b999 4.4.23-31.54.amzn1.x86_64 #1 SMP Tue Oct 18 22:02:09 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux
kablam! 		       Byte sex: little-endian
kablam! 		      Libraries: static, shared
kablam! 	     Installation point: /target/debug/build/hdf5-sys-f406d34881e12453/out/install
kablam! 
kablam! Compiling Options:
kablam! ------------------
kablam!                Compilation Mode: production
kablam!                      C Compiler: /usr/bin/gcc
kablam!                          CFLAGS: 
kablam!                       H5_CFLAGS: -std=c99 -pedantic -Wall -Wextra -Wundef -Wshadow -Wpointer-arith -Wbad-function-cast -Wcast-qual -Wcast-align -Wwrite-strings -Wconversion -Waggregate-return -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wredundant-decls -Wnested-externs -Winline -Wfloat-equal -Wmissing-format-attribute -Wmissing-noreturn -Wpacked -Wdisabled-optimization -Wformat=2 -Wunreachable-code -Wendif-labels -Wdeclaration-after-statement -Wold-style-definition -Winvalid-pch -Wvariadic-macros -Winit-self -Wmissing-include-dirs -Wswitch-default -Wswitch-enum -Wunused-macros -Wunsafe-loop-optimizations -Wc++-compat -Wstrict-overflow -Wlogical-op -Wlarger-than=2048 -Wvla -Wsync-nand -Wframe-larger-than=16384 -Wpacked-bitfield-compat -Wstrict-overflow=5 -Wjump-misses-init -Wunsuffixed-float-constants -Wdouble-promotion -Wsuggest-attribute=const -Wtrampolines -Wstack-usage=8192 -Wvector-operation-performance -Wsuggest-attribute=pure -Wsuggest-attribute=noreturn -Wsuggest-attribute=format -Wdate-time -Wopenmp-simd -Warray-bounds=2 -Wc99-c11-compat -O3 -fstdarg-opt
kablam!                       AM_CFLAGS: 
kablam!                        CPPFLAGS: 
kablam!                     H5_CPPFLAGS: -D_GNU_SOURCE -D_POSIX_C_SOURCE=200112L   -DNDEBUG -UH5_DEBUG_API
kablam!                     AM_CPPFLAGS: 
kablam!                Shared C Library: yes
kablam!                Static C Library: yes
kablam!   Statically Linked Executables: no
kablam!                         LDFLAGS: 
kablam!                      H5_LDFLAGS: 
kablam!                      AM_LDFLAGS: 
kablam!  	 	Extra libraries: -lpthread -lz -ldl -lm 
kablam!  		       Archiver: ar
kablam!  		 	 Ranlib: ranlib
kablam!  	      Debugged Packages: 
kablam! 		    API Tracing: no
kablam! 
kablam! Languages:
kablam! ----------
kablam!                         Fortran: no
kablam! 
kablam!                             C++: no
kablam! 
kablam! Features:
kablam! ---------
kablam!                   Parallel HDF5: no
kablam!              High Level library: no
kablam!                    Threadsafety: yes
kablam!             Default API Mapping: v18
kablam!  With Deprecated Public Symbols: yes
kablam!          I/O filters (external): deflate(zlib)
kablam!                             MPE: no
kablam!                      Direct VFD: no
kablam!                         dmalloc: no
kablam! Clear file buffers before write: yes
kablam!            Using memory checker: no
kablam!          Function Stack Tracing: no
kablam!       Strict File Format Checks: no
kablam!    Optimization Instrumentation: no
kablam! for d in examples  ; do               \
kablam!     (cd $d && make  install-examples) || exit 1;           \
kablam! done
kablam! Making install in src
kablam! make[1]: Entering directory '/target/debug/build/hdf5-sys-f406d34881e12453/out/build/examples'
kablam! /source/source/bin/mkdirs /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c
kablam! make[1]: Entering directory '/target/debug/build/hdf5-sys-f406d34881e12453/out/build/src'
kablam!   CC       H5checksum.lo
kablam!   CC       H5dbg.lo
kablam!   CC       H5.lo
kablam!   CC       H5system.lo
kablam! make[1]: Leaving directory '/target/debug/build/hdf5-sys-f406d34881e12453/out/build/examples'
kablam!   CC       H5timer.lo
kablam!   CC       H5trace.lo
kablam!   CC       H5A.lo
kablam!   CC       H5Abtree2.lo
kablam!   CC       H5Adense.lo
kablam!   CC       H5Adeprec.lo
kablam!   CC       H5Aint.lo
kablam!   CC       H5Atest.lo
kablam!   CC       H5AC.lo
kablam!   CC       H5B.lo
kablam!   CC       H5Bcache.lo
kablam!   CC       H5Bdbg.lo
kablam!   CC       H5B2.lo
kablam!   CC       H5B2cache.lo
kablam!   CC       H5B2dbg.lo
kablam!   CC       H5B2hdr.lo
kablam!   CC       H5B2int.lo
kablam!   CC       H5B2stat.lo
kablam!   CC       H5B2test.lo
kablam!   CC       H5C.lo
kablam!   CC       H5CS.lo
kablam!   CC       H5D.lo
kablam!   CC       H5Dbtree.lo
kablam!   CC       H5Dchunk.lo
kablam!   CC       H5Dcompact.lo
kablam!   CC       H5Dcontig.lo
kablam!   CC       H5Ddbg.lo
kablam!   CC       H5Ddeprec.lo
kablam!   CC       H5Defl.lo
kablam!   CC       H5Dfill.lo
kablam!   CC       H5Dint.lo
kablam!   CC       H5Dio.lo
kablam!   CC       H5Dlayout.lo
kablam!   CC       H5Dmpio.lo
kablam!   CC       H5Doh.lo
kablam!   CC       H5Dscatgath.lo
kablam!   CC       H5Dselect.lo
kablam!   CC       H5Dtest.lo
kablam!   CC       H5E.lo
kablam!   CC       H5Edeprec.lo
kablam!   CC       H5Eint.lo
kablam!   CC       H5F.lo
kablam!   CC       H5Fint.lo
kablam!   CC       H5Faccum.lo
kablam!   CC       H5Fcwfs.lo
kablam!   CC       H5Fdbg.lo
kablam!   CC       H5Fefc.lo
kablam!   CC       H5Ffake.lo
kablam!   CC       H5Fio.lo
kablam!   CC       H5Fmount.lo
kablam!   CC       H5Fmpi.lo
kablam!   CC       H5Fquery.lo
kablam!   CC       H5Fsfile.lo
kablam!   CC       H5Fsuper.lo
kablam!   CC       H5Fsuper_cache.lo
kablam!   CC       H5Ftest.lo
kablam!   CC       H5FD.lo
kablam!   CC       H5FDcore.lo
kablam!   CC       H5FDdirect.lo
kablam!   CC       H5FDfamily.lo
kablam!   CC       H5FDint.lo
kablam!   CC       H5FDlog.lo
kablam!   CC       H5FDmpi.lo
kablam!   CC       H5FDmpio.lo
kablam!   CC       H5FDmulti.lo
kablam!   CC       H5FDsec2.lo
kablam!   CC       H5FDspace.lo
kablam!   CC       H5FDstdio.lo
kablam!   CC       H5FL.lo
kablam!   CC       H5FO.lo
kablam!   CC       H5FS.lo
kablam!   CC       H5FScache.lo
kablam!   CC       H5FSdbg.lo
kablam!   CC       H5FSsection.lo
kablam!   CC       H5FSstat.lo
kablam!   CC       H5FStest.lo
kablam!   CC       H5G.lo
kablam!   CC       H5Gbtree2.lo
kablam!   CC       H5Gcache.lo
kablam!   CC       H5Gcompact.lo
kablam!   CC       H5Gdense.lo
kablam!   CC       H5Gdeprec.lo
kablam!   CC       H5Gent.lo
kablam!   CC       H5Gint.lo
kablam!   CC       H5Glink.lo
kablam!   CC       H5Gloc.lo
kablam!   CC       H5Gname.lo
kablam!   CC       H5Gnode.lo
kablam!   CC       H5Gobj.lo
kablam!   CC       H5Goh.lo
kablam!   CC       H5Groot.lo
kablam!   CC       H5Gstab.lo
kablam!   CC       H5Gtest.lo
kablam!   CC       H5Gtraverse.lo
kablam!   CC       H5HF.lo
kablam!   CC       H5HFbtree2.lo
kablam!   CC       H5HFcache.lo
kablam!   CC       H5HFdbg.lo
kablam!   CC       H5HFdblock.lo
kablam!   CC       H5HFdtable.lo
kablam!   CC       H5HFhdr.lo
kablam!   CC       H5HFhuge.lo
kablam!   CC       H5HFiblock.lo
kablam!   CC       H5HFiter.lo
kablam!   CC       H5HFman.lo
kablam!   CC       H5HFsection.lo
kablam!   CC       H5HFspace.lo
kablam!   CC       H5HFstat.lo
kablam!   CC       H5HFtest.lo
kablam!   CC       H5HFtiny.lo
kablam!   CC       H5HG.lo
kablam!   CC       H5HGcache.lo
kablam!   CC       H5HGdbg.lo
kablam!   CC       H5HGquery.lo
kablam!   CC       H5HL.lo
kablam!   CC       H5HLcache.lo
kablam!   CC       H5HLdbg.lo
kablam!   CC       H5HLint.lo
kablam!   CC       H5HP.lo
kablam!   CC       H5I.lo
kablam!   CC       H5Itest.lo
kablam!   CC       H5L.lo
kablam!   CC       H5Lexternal.lo
kablam!   CC       H5make_libsettings.o
kablam!   CC       H5MF.lo
kablam!   CC       H5MFaggr.lo
kablam!   CC       H5MFdbg.lo
kablam!   CC       H5MFsection.lo
kablam!   CC       H5MM.lo
kablam!   CC       H5MP.lo
kablam!   CC       H5MPtest.lo
kablam!   CC       H5O.lo
kablam!   CC       H5Oainfo.lo
kablam!   CC       H5Oalloc.lo
kablam!   CC       H5Oattr.lo
kablam!   CC       H5Oattribute.lo
kablam!   CC       H5Obogus.lo
kablam!   CC       H5Obtreek.lo
kablam!   CC       H5Ocache.lo
kablam!   CC       H5Ochunk.lo
kablam!   CC       H5Ocont.lo
kablam!   CC       H5Ocopy.lo
kablam!   CC       H5Odbg.lo
kablam!   CC       H5Odrvinfo.lo
kablam!   CC       H5Odtype.lo
kablam!   CC       H5Oefl.lo
kablam!   CC       H5Ofill.lo
kablam!   CC       H5Oginfo.lo
kablam!   CC       H5Olayout.lo
kablam!   CC       H5Olinfo.lo
kablam!   CC       H5Olink.lo
kablam!   CC       H5Omessage.lo
kablam!   CC       H5Omtime.lo
kablam!   CC       H5Oname.lo
kablam!   CC       H5Onull.lo
kablam!   CC       H5Opline.lo
kablam!   CC       H5Orefcount.lo
kablam!   CC       H5Osdspace.lo
kablam!   CC       H5Oshared.lo
kablam!   CC       H5Ostab.lo
kablam!   CC       H5Oshmesg.lo
kablam!   CC       H5Otest.lo
kablam!   CC       H5Ounknown.lo
kablam!   CC       H5P.lo
kablam!   CC       H5Pacpl.lo
kablam!   CC       H5Pdapl.lo
kablam!   CC       H5Pdcpl.lo
kablam!   CC       H5Pdeprec.lo
kablam!   CC       H5Pdxpl.lo
kablam!   CC       H5Pfapl.lo
kablam!   CC       H5Pfcpl.lo
kablam!   CC       H5Pfmpl.lo
kablam!   CC       H5Pgcpl.lo
kablam!   CC       H5Pint.lo
kablam!   CC       H5Plapl.lo
kablam!   CC       H5Plcpl.lo
kablam!   CC       H5Pocpl.lo
kablam!   CC       H5Pocpypl.lo
kablam!   CC       H5Pstrcpl.lo
kablam!   CC       H5Ptest.lo
kablam!   CC       H5PL.lo
kablam!   CC       H5R.lo
kablam!   CC       H5Rdeprec.lo
kablam!   CC       H5RC.lo
kablam!   CC       H5RS.lo
kablam!   CC       H5S.lo
kablam!   CC       H5Sall.lo
kablam!   CC       H5Sdbg.lo
kablam!   CC       H5Shyper.lo
kablam!   CC       H5Smpio.lo
kablam!   CC       H5Snone.lo
kablam!   CC       H5Spoint.lo
kablam!   CC       H5Sselect.lo
kablam!   CC       H5Stest.lo
kablam!   CC       H5SL.lo
kablam!   CC       H5SM.lo
kablam!   CC       H5SMbtree2.lo
kablam!   CC       H5SMcache.lo
kablam!   CC       H5SMmessage.lo
kablam!   CC       H5SMtest.lo
kablam!   CC       H5ST.lo
kablam!   CC       H5T.lo
kablam!   CC       H5Tarray.lo
kablam!   CC       H5Tbit.lo
kablam!   CC       H5Tcommit.lo
kablam!   CC       H5Tcompound.lo
kablam!   CC       H5Tconv.lo
kablam!   CC       H5Tcset.lo
kablam!   CC       H5Tdbg.lo
kablam!   CC       H5Tdeprec.lo
kablam!   CC       H5Tenum.lo
kablam!   CC       H5Tfields.lo
kablam!   CC       H5Tfixed.lo
kablam!   CC       H5Tfloat.lo
kablam!   CC       H5detect.o
kablam!   CC       H5Tnative.lo
kablam!   CC       H5Toffset.lo
kablam!   CC       H5Toh.lo
kablam!   CC       H5Topaque.lo
kablam!   CC       H5Torder.lo
kablam!   CC       H5Tpad.lo
kablam!   CC       H5Tprecis.lo
kablam!   CC       H5Tstrpad.lo
kablam!   CC       H5Tvisit.lo
kablam!   CC       H5Tvlen.lo
kablam!   CC       H5TS.lo
kablam!   CC       H5VM.lo
kablam!   CC       H5WB.lo
kablam!   CC       H5Z.lo
kablam!   CC       H5Zdeflate.lo
kablam!   CC       H5Zfletcher32.lo
kablam!   CC       H5Znbit.lo
kablam!   CC       H5Zshuffle.lo
kablam!   CC       H5Zszip.lo
kablam!   CC       H5Zscaleoffset.lo
kablam!   CC       H5Ztrans.lo
kablam!   CCLD     H5make_libsettings
kablam!   CCLD     H5detect
kablam! LD_LIBRARY_PATH="$LD_LIBRARY_PATH`echo  |                  \
kablam! 	sed -e 's/-L/:/g' -e 's/ //g'`"                               \
kablam!  ./H5make_libsettings > H5lib_settings.c  ||                               \
kablam!     (test $HDF5_Make_Ignore && echo "*** Error ignored") ||          \
kablam!     (rm -f H5lib_settings.c ; exit 1)
kablam! LD_LIBRARY_PATH="$LD_LIBRARY_PATH`echo  |                  \
kablam! 	sed -e 's/-L/:/g' -e 's/ //g'`"                               \
kablam!  ./H5detect > H5Tinit.c  ||                               \
kablam!     (test $HDF5_Make_Ignore && echo "*** Error ignored") ||          \
kablam!     (rm -f H5Tinit.c ; exit 1)
kablam!   CC       H5lib_settings.lo
kablam!   CC       H5Tinit.lo
kablam!   CCLD     libhdf5.la
kablam! make[2]: Entering directory '/target/debug/build/hdf5-sys-f406d34881e12453/out/build/src'
kablam! perl /source/source/bin/make_err /source/source/src/H5err.txt
kablam! Generating 'H5Epubgen.h'
kablam! Makefile:1702: recipe for target '/source/source/src/H5Edefin.h' failed
kablam! make[2]: Leaving directory '/target/debug/build/hdf5-sys-f406d34881e12453/out/build/src'
kablam! Makefile:1526: recipe for target 'install-am' failed
kablam! make[1]: Leaving directory '/target/debug/build/hdf5-sys-f406d34881e12453/out/build/src'
kablam! Makefile:576: recipe for target 'install-recursive' failed
kablam! 
kablam! --- stderr
kablam! + /usr/bin/install -c /source/source/examples/h5_write.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_read.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_extend_write.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_chunk_read.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_crtgrpd.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_subset.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_cmprss.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_rdwt.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_crtgrpar.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_extend.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! /source/source/src/H5checksum.c: In function 'H5_checksum_fletcher32':
kablam! /source/source/src/H5checksum.c:112:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5_checksum_fletcher32(const void *_data, size_t _len)
kablam!  ^
kablam! /source/source/src/H5checksum.c: In function 'H5_checksum_lookup3':
kablam! /source/source/src/H5checksum.c:374:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5_checksum_lookup3(const void *key, size_t length, uint32_t initval)
kablam!  ^
kablam! /source/source/src/H5checksum.c: In function 'H5_hash_string':
kablam! /source/source/src/H5checksum.c:481:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5_hash_string(const char *str)
kablam!  ^
kablam! /source/source/src/H5dbg.c: In function 'H5_buffer_dump':
kablam! /source/source/src/H5dbg.c:102:5: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!      for(u = 0; u < buf_size; u += 16) {
kablam!      ^
kablam! + /usr/bin/install -c /source/source/examples/h5_crtatt.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_crtgrp.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_crtdat.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_compound.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_group.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_select.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_attribute.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_mount.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_reference.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_drivers.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_extlink.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_elink_unix2win.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_ref2reg.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/h5_shared_mesg.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/ph5example.c /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c run-c-ex.sh /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/c/.
kablam! + /usr/bin/install -c /source/source/examples/README /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/.
kablam! + /usr/bin/install -c /source/source/examples/run-all-ex.sh /target/debug/build/hdf5-sys-f406d34881e12453/out/install/share/hdf5_examples/.
kablam! /source/source/src/H5system.c: In function 'HDfprintf':
kablam! /source/source/src/H5system.c:277:46: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam!                          n = fprintf (stream, format_templ, x);
kablam!                                               ^
kablam! /source/source/src/H5system.c:280:46: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam!                          n = fprintf (stream, format_templ, x);
kablam!                                               ^
kablam! /source/source/src/H5system.c:283:46: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam!                          n = fprintf (stream, format_templ, x);
kablam!                                               ^
kablam! /source/source/src/H5system.c:286:46: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam!                          n = fprintf (stream, format_templ, x);
kablam!                                               ^
kablam! /source/source/src/H5system.c:296:45: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam!                          n = fprintf(stream, format_templ, x);
kablam!                                              ^
kablam! /source/source/src/H5system.c:299:45: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam!                          n = fprintf(stream, format_templ, x);
kablam!                                              ^
kablam! /source/source/src/H5system.c:302:45: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam!                          n = fprintf(stream, format_templ, x);
kablam!                                              ^
kablam! /source/source/src/H5system.c:305:45: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam!                          n = fprintf(stream, format_templ, x);
kablam!                                              ^
kablam! /source/source/src/H5system.c:316:59: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]
kablam!                          n = fprintf(stream, format_templ, x);
kablam!                                                            ^
kablam! /source/source/src/H5system.c:316:45: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam!                          n = fprintf(stream, format_templ, x);
kablam!                                              ^
kablam! /source/source/src/H5system.c:319:45: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam!                          n = fprintf(stream, format_templ, x);
kablam!                                              ^
kablam! /source/source/src/H5system.c:327:45: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam!                          n = fprintf(stream, format_templ, x);
kablam!                                              ^
kablam! /source/source/src/H5system.c:364:49: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam!                              n = fprintf(stream, format_templ, x);
kablam!                                                  ^
kablam! /source/source/src/H5system.c:376:45: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam!                              fprintf(stream, format_templ, "UNDEF");
kablam!                                              ^
kablam! /source/source/src/H5system.c:384:45: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam!                          n = fprintf(stream, format_templ, x);
kablam!                                              ^
kablam! /source/source/src/H5system.c:392:45: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam!                          n = fprintf(stream, format_templ, x);
kablam!                                              ^
kablam! /source/source/src/H5system.c:398:41: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam!                      n = fprintf(stream, format_templ, nout);
kablam!                                          ^
kablam! /source/source/src/H5system.c: In function 'HDstrtoll':
kablam! /source/source/src/H5system.c:515:7: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]
kablam!        (*s>='A' && *s<'A'+base-10)))) {
kablam!        ^
kablam! /source/source/src/H5system.c:515:7: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]
kablam! /source/source/src/H5system.c:515:7: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]
kablam! /source/source/src/H5trace.c: In function 'H5_trace':
kablam! /source/source/src/H5trace.c:159:33: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!      if(HDfabs(first_time.etime) < 0.0000000001F)
kablam!                                  ^
kablam! /source/source/src/H5trace.c:235:6: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!       unsigned n = (unsigned)MAX (0, (int)HDstrlen(argname) - 3); /*lint !e666 Allow expression with side effects */
kablam!       ^
kablam! /source/source/src/H5trace.c:2312:44: warning: conversion to 'hssize_t {aka long long int}' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!                              asize[argno] = iul;
kablam!                                             ^
kablam! /source/source/src/H5trace.c:2336:44: warning: conversion to 'hssize_t {aka long long int}' from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!                              asize[argno] = iull;
kablam!                                             ^
kablam! /source/source/src/H5timer.c: In function 'H5_timer_begin':
kablam! /source/source/src/H5timer.c:130:53: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!                     ((double)rusage.ru_utime.tv_usec / 1e6F);
kablam!                                                      ^
kablam! /source/source/src/H5timer.c:132:53: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!                     ((double)rusage.ru_stime.tv_usec / 1e6F);
kablam!                                                      ^
kablam! /source/source/src/H5timer.c:139:66: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!      timer->etime = (double)etime.tv_sec + ((double)etime.tv_usec / 1e6F);
kablam!                                                                   ^
kablam! In file included from /source/source/src/H5timer.c:35:0:
kablam! /source/source/src/H5timer.c: In function 'H5_timer_end':
kablam! /source/source/src/H5private.h:328:26: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!  #define MAX(a,b)    (((a)>(b)) ? (a) : (b))
kablam!                           ^
kablam! /source/source/src/H5timer.c:169:20: note: in expansion of macro 'MAX'
kablam!      timer->utime = MAX(0.0F, now.utime - timer->utime);
kablam!                     ^
kablam! /source/source/src/H5private.h:328:38: warning: implicit conversion from 'float' to 'double' to match other result of conditional [-Wdouble-promotion]
kablam!  #define MAX(a,b)    (((a)>(b)) ? (a) : (b))
kablam!                                       ^
kablam! /source/source/src/H5timer.c:169:20: note: in expansion of macro 'MAX'
kablam!      timer->utime = MAX(0.0F, now.utime - timer->utime);
kablam!                     ^
kablam! /source/source/src/H5private.h:328:26: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!  #define MAX(a,b)    (((a)>(b)) ? (a) : (b))
kablam!                           ^
kablam! /source/source/src/H5timer.c:170:20: note: in expansion of macro 'MAX'
kablam!      timer->stime = MAX(0.0F, now.stime - timer->stime);
kablam!                     ^
kablam! /source/source/src/H5private.h:328:38: warning: implicit conversion from 'float' to 'double' to match other result of conditional [-Wdouble-promotion]
kablam!  #define MAX(a,b)    (((a)>(b)) ? (a) : (b))
kablam!                                       ^
kablam! /source/source/src/H5timer.c:170:20: note: in expansion of macro 'MAX'
kablam!      timer->stime = MAX(0.0F, now.stime - timer->stime);
kablam!                     ^
kablam! /source/source/src/H5private.h:328:26: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!  #define MAX(a,b)    (((a)>(b)) ? (a) : (b))
kablam!                           ^
kablam! /source/source/src/H5timer.c:171:20: note: in expansion of macro 'MAX'
kablam!      timer->etime = MAX(0.0F, now.etime - timer->etime);
kablam!                     ^
kablam! /source/source/src/H5private.h:328:38: warning: implicit conversion from 'float' to 'double' to match other result of conditional [-Wdouble-promotion]
kablam!  #define MAX(a,b)    (((a)>(b)) ? (a) : (b))
kablam!                                       ^
kablam! /source/source/src/H5timer.c:171:20: note: in expansion of macro 'MAX'
kablam!      timer->etime = MAX(0.0F, now.etime - timer->etime);
kablam!                     ^
kablam! /source/source/src/H5timer.c: In function 'H5_bandwidth':
kablam! /source/source/src/H5timer.c:211:17: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!      if(nseconds <= 0.0F)
kablam!                  ^
kablam! In file included from /source/source/src/H5timer.c:35:0:
kablam! /source/source/src/H5private.h:512:47: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!  #define H5_DBL_ABS_EQUAL(X,Y)       (HDfabs (X-Y) < DBL_EPSILON)
kablam!                                                ^
kablam! /source/source/src/H5private.h:715:31: note: in definition of macro 'HDfabs'
kablam!      #define HDfabs(X)    fabs(X)
kablam!                                ^
kablam! /source/source/src/H5timer.c:215:12: note: in expansion of macro 'H5_DBL_ABS_EQUAL'
kablam!          if(H5_DBL_ABS_EQUAL(bw, 0.0F))
kablam!             ^
kablam! /source/source/src/H5timer.c:217:20: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!          else if(bw < 1.0F)
kablam!                     ^
kablam! /source/source/src/H5timer.c:219:20: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!          else if(bw < H5_KB) {
kablam!                     ^
kablam! /source/source/src/H5timer.c:222:22: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!          } else if(bw < H5_MB) {
kablam!                       ^
kablam! /source/source/src/H5timer.c:223:39: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!              sprintf(buf, "%05.4f", bw / H5_KB);
kablam!                                        ^
kablam! /source/source/src/H5timer.c:225:22: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!          } else if(bw < H5_GB) {
kablam!                       ^
kablam! /source/source/src/H5timer.c:226:39: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!              sprintf(buf, "%05.4f", bw / H5_MB);
kablam!                                        ^
kablam! /source/source/src/H5timer.c:228:22: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!          } else if(bw < H5_TB) {
kablam!                       ^
kablam! /source/source/src/H5timer.c:229:39: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!              sprintf(buf, "%05.4f", bw / H5_GB);
kablam!                                        ^
kablam! /source/source/src/H5timer.c:231:22: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!          } else if(bw < H5_EB) {
kablam!                       ^
kablam! /source/source/src/H5timer.c:232:39: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!              sprintf(buf, "%05.4f", bw / H5_TB);
kablam!                                        ^
kablam! /source/source/src/H5trace.c:2537:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]
kablam!  } /* end H5_trace() */
kablam!  ^
kablam! /source/source/src/H5trace.c:121:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]
kablam!  H5_trace(const double *returning, const char *func, const char *type, ...)
kablam!  ^
kablam! /source/source/src/H5trace.c:121:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]
kablam! /source/source/src/H5Aint.c: In function 'H5A_create':
kablam! /source/source/src/H5Aint.c:202:45: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!      if(NULL == (attr->shared->dt = H5T_copy(type, H5T_COPY_ALL)))
kablam!                                              ^
kablam! In file included from /source/source/src/H5Oprivate.h:41:0,
kablam!                  from /source/source/src/H5Aprivate.h:27,
kablam!                  from /source/source/src/H5Apkg.h:39,
kablam!                  from /source/source/src/H5Aint.c:39:
kablam! /source/source/src/H5Tprivate.h:109:15: note: expected 'H5T_t * {aka struct H5T_t *}' but argument is of type 'const H5T_t * {aka const struct H5T_t *}'
kablam!  H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
kablam!                ^
kablam! /source/source/src/H5Aint.c: In function 'H5A_write':
kablam! /source/source/src/H5Aint.c:529:62: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!              if((src_id = H5I_register(H5I_DATATYPE, H5T_copy(mem_type, H5T_COPY_ALL), FALSE)) < 0 ||
kablam!                                                               ^
kablam! In file included from /source/source/src/H5Oprivate.h:41:0,
kablam!                  from /source/source/src/H5Aprivate.h:27,
kablam!                  from /source/source/src/H5Apkg.h:39,
kablam!                  from /source/source/src/H5Aint.c:39:
kablam! /source/source/src/H5Tprivate.h:109:15: note: expected 'H5T_t * {aka struct H5T_t *}' but argument is of type 'const H5T_t * {aka const struct H5T_t *}'
kablam!  H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
kablam!                ^
kablam! /source/source/src/H5Aint.c: In function 'H5A_read':
kablam! /source/source/src/H5Aint.c:646:71: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!                          (dst_id = H5I_register(H5I_DATATYPE, H5T_copy(mem_type, H5T_COPY_ALL), FALSE)) < 0)
kablam!                                                                        ^
kablam! In file included from /source/source/src/H5Oprivate.h:41:0,
kablam!                  from /source/source/src/H5Aprivate.h:27,
kablam!                  from /source/source/src/H5Apkg.h:39,
kablam!                  from /source/source/src/H5Aint.c:39:
kablam! /source/source/src/H5Tprivate.h:109:15: note: expected 'H5T_t * {aka struct H5T_t *}' but argument is of type 'const H5T_t * {aka const struct H5T_t *}'
kablam!  H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
kablam!                ^
kablam! In file included from /source/source/src/H5Aint.c:38:0:
kablam! /source/source/src/H5Aint.c: In function 'H5A_attr_copy_file':
kablam! /source/source/src/H5Aint.c:2016:105: warning: conversion to 'long long unsigned int' from 'hssize_t {aka long long int}' may change the sign of the result [-Wsign-conversion]
kablam!      H5_CHECKED_ASSIGN(attr_dst->shared->data_size, size_t, H5S_GET_EXTENT_NPOINTS(attr_dst->shared->ds) * H5T_get_size(attr_dst->shared->dt), hssize_t);
kablam!                                                                                                          ^
kablam! /source/source/src/H5private.h:1499:23: note: in definition of macro 'H5_CHECKED_ASSIGN'
kablam!      (dst) = (dsttype)(src);
kablam!                        ^
kablam! /source/source/src/H5Aint.c:1914:17: warning: unused parameter 'cpy_info' [-Wunused-parameter]
kablam!      H5O_copy_t *cpy_info, hid_t dxpl_id)
kablam!                  ^
kablam! /source/source/src/H5Aint.c: In function 'H5A_oloc':
kablam! /source/source/src/H5Aint.c:1093:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]
kablam!  H5A_oloc(H5A_t *attr)
kablam!  ^
kablam! /source/source/src/H5Aint.c: In function 'H5A_nameof':
kablam! /source/source/src/H5Aint.c:1124:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]
kablam!  H5A_nameof(H5A_t *attr)
kablam!  ^
kablam! /source/source/src/H5Aint.c: In function 'H5A_type':
kablam! /source/source/src/H5Aint.c:1153:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5A_type(const H5A_t *attr)
kablam!  ^
kablam! /source/source/src/H5B.c: In function 'H5B_shared_new':
kablam! /source/source/src/H5B.c:1751:30: warning: request for implicit conversion from 'void *' to 'size_t * {aka long unsigned int *}' not permitted in C++ [-Wc++-compat]
kablam!                  shared->nkey = H5FL_SEQ_FREE(size_t, shared->nkey);
kablam!                               ^
kablam! /source/source/src/H5B.c: In function 'H5B_shared_free':
kablam! /source/source/src/H5B.c:1782:18: warning: request for implicit conversion from 'void *' to 'size_t * {aka long unsigned int *}' not permitted in C++ [-Wc++-compat]
kablam!      shared->nkey = H5FL_SEQ_FREE(size_t, shared->nkey);
kablam!                   ^
kablam! /source/source/src/H5B.c: In function 'H5B_copy':
kablam! /source/source/src/H5B.c:1850:22: warning: request for implicit conversion from 'void *' to 'haddr_t * {aka long unsigned int *}' not permitted in C++ [-Wc++-compat]
kablam!       new_node->child = H5FL_SEQ_FREE(haddr_t, new_node->child);
kablam!                       ^
kablam! /source/source/src/H5B.c: In function 'H5B_valid':
kablam! /source/source/src/H5B.c:2035:26: warning: variable 'shared' set but not used [-Wunused-but-set-variable]
kablam!      H5B_shared_t        *shared;                /* Pointer to shared B-tree info */
kablam!                           ^
kablam! /source/source/src/H5B.c: In function 'H5B_node_dest':
kablam! /source/source/src/H5B.c:2097:15: warning: request for implicit conversion from 'void *' to 'haddr_t * {aka long unsigned int *}' not permitted in C++ [-Wc++-compat]
kablam!      bt->child = H5FL_SEQ_FREE(haddr_t, bt->child);
kablam!                ^
kablam! /source/source/src/H5Bdbg.c: In function 'H5B_debug':
kablam! /source/source/src/H5Bdbg.c:130:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!      "Address:", bt->child[u]);
kablam!      ^
kablam! /source/source/src/H5Bdbg.c:136:23: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                        "Left Key:");
kablam!                        ^
kablam! /source/source/src/H5Bdbg.c:139:10: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!           H5B_NKEY(bt, shared, u), udata);
kablam!           ^
kablam! /source/source/src/H5Bdbg.c:143:23: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                        "Right Key:");
kablam!                        ^
kablam! /source/source/src/H5Bdbg.c:146:10: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!           H5B_NKEY(bt, shared, u + 1), udata);
kablam!           ^
kablam! /source/source/src/H5B2cache.c: In function 'H5B2__cache_internal_load':
kablam! /source/source/src/H5B2cache.c:553:22: warning: conversion to 'uint16_t {aka short unsigned int}' from 'unsigned int' may alter its value [-Wconversion]
kablam!      internal->nrec = udata->nrec;
kablam!                       ^
kablam! /source/source/src/H5B2cache.c:554:23: warning: conversion to 'uint16_t {aka short unsigned int}' from 'unsigned int' may alter its value [-Wconversion]
kablam!      internal->depth = udata->depth;
kablam!                        ^
kablam! In file included from /source/source/src/H5B2private.h:34:0,
kablam!                  from /source/source/src/H5B2pkg.h:32,
kablam!                  from /source/source/src/H5B2cache.c:38:
kablam! /source/source/src/H5Fprivate.h:151:11: warning: conversion to 'uint16_t {aka short unsigned int}' from 'int' may alter its value [-Wconversion]
kablam!        n = (n << 8) | *(--p);            \
kablam!            ^
kablam! /source/source/src/H5Fprivate.h:183:41: note: in expansion of macro 'DECODE_VAR'
kablam!  #  define UINT64DECODE_VAR(p, n, l)     DECODE_VAR(p, n, l)
kablam!                                          ^
kablam! /source/source/src/H5B2cache.c:573:9: note: in expansion of macro 'UINT64DECODE_VAR'
kablam!          UINT64DECODE_VAR(p, int_node_ptr->node_nrec, udata->hdr->max_nrec_size);
kablam!          ^
kablam! /source/source/src/H5B2cache.c: In function 'H5B2__cache_leaf_load':
kablam! /source/source/src/H5B2cache.c:891:18: warning: conversion to 'uint16_t {aka short unsigned int}' from 'unsigned int' may alter its value [-Wconversion]
kablam!      leaf->nrec = udata->nrec;
kablam!                   ^
kablam! /source/source/src/H5B2dbg.c: In function 'H5B2_hdr_debug':
kablam! /source/source/src/H5B2dbg.c:175:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!              hdr->node_info[u].max_nrec, hdr->node_info[u].split_nrec, hdr->node_info[u].merge_nrec);
kablam!              ^
kablam! /source/source/src/H5B2dbg.c: In function 'H5B2_int_debug':
kablam! /source/source/src/H5B2dbg.c:289:19: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                    internal->node_ptrs[u].addr);
kablam!                    ^
kablam! /source/source/src/H5B2dbg.c:294:19: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                    temp_str);
kablam!                    ^
kablam! /source/source/src/H5B2dbg.c:297:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!              H5B2_INT_NREC(internal, hdr, u), dbg_ctx);
kablam!              ^
kablam! /source/source/src/H5B2dbg.c:306:15: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                internal->node_ptrs[u].addr);
kablam!                ^
kablam! /source/source/src/H5B2dbg.c: In function 'H5B2_leaf_debug':
kablam! /source/source/src/H5B2dbg.c:415:19: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                    temp_str);
kablam!                    ^
kablam! /source/source/src/H5B2dbg.c:418:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!              H5B2_LEAF_NREC(leaf, hdr, u), dbg_ctx);
kablam!              ^
kablam! /source/source/src/H5B2hdr.c: In function 'H5B2_hdr_free':
kablam! /source/source/src/H5B2hdr.c:525:22: warning: request for implicit conversion from 'void *' to 'size_t * {aka long unsigned int *}' not permitted in C++ [-Wc++-compat]
kablam!          hdr->nat_off = H5FL_SEQ_FREE(size_t, hdr->nat_off);
kablam!                       ^
kablam! /source/source/src/H5B2hdr.c:542:24: warning: request for implicit conversion from 'void *' to 'H5B2_node_info_t * {aka struct <anonymous> *}' not permitted in C++ [-Wc++-compat]
kablam!          hdr->node_info = H5FL_SEQ_FREE(H5B2_node_info_t, hdr->node_info);
kablam!                         ^
kablam! /source/source/src/H5B2test.c: In function 'H5B2_get_node_depth_test':
kablam! /source/source/src/H5B2test.c:536:17: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!      ret_value = ninfo.depth;
kablam!                  ^
kablam! /source/source/src/H5C.c: In function 'H5C_pin_protected_entry':
kablam! /source/source/src/H5C.c:3418:25: warning: variable 'cache_ptr' set but not used [-Wunused-but-set-variable]
kablam!      H5C_t             * cache_ptr;
kablam!                          ^
kablam! /source/source/src/H5C.c: At top level:
kablam! /source/source/src/H5C.c:285:1: warning: 'H5C_epoch_marker_notify' defined but not used [-Wunused-function]
kablam!  H5C_epoch_marker_notify(H5C_notify_action_t H5_ATTR_UNUSED action,
kablam!  ^
kablam! /source/source/src/H5C.c: In function 'H5C__autoadjust__ageout__remove_all_markers':
kablam! /source/source/src/H5C.c:8372:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  } /* H5C_make_space_in_cache() */
kablam!  ^
kablam! /source/source/src/H5C.c: In function 'H5C__autoadjust__ageout__insert_new_marker':
kablam! /source/source/src/H5C.c:8372:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5C.c: In function 'H5C__autoadjust__ageout__remove_excess_markers':
kablam! /source/source/src/H5C.c:8372:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5C.c: In function 'H5C__autoadjust__ageout__cycle_epoch_marker':
kablam! /source/source/src/H5C.c:8372:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5C.c: In function 'H5C_stats__reset':
kablam! /source/source/src/H5C.c:4812:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]
kablam!  H5C_stats__reset(H5C_t H5_ATTR_UNUSED * cache_ptr)
kablam!  ^
kablam! /source/source/src/H5C.c: In function 'H5C__autoadjust__ageout__remove_excess_markers':
kablam! /source/source/src/H5C.c:6714:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5C__autoadjust__ageout__remove_excess_markers(H5C_t * cache_ptr)
kablam!  ^
kablam! /source/source/src/H5C.c:6714:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5C.c:6714:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5C.c: In function 'H5C_flush_invalidate_cache':
kablam! /source/source/src/H5C.c:6988:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5C_flush_invalidate_cache(H5F_t * f,
kablam!  ^
kablam! /source/source/src/H5C.c:7453:8: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]
kablam!      if ( protected_entries > 0 ) {
kablam!         ^
kablam! /source/source/src/H5C.c:6988:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5C_flush_invalidate_cache(H5F_t * f,
kablam!  ^
kablam! /source/source/src/H5C.c:6988:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5C.c:6988:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5C.c: In function 'H5C_make_space_in_cache':
kablam! /source/source/src/H5C.c:8336:36: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]
kablam!                  ( entries_examined <= initial_list_len )
kablam!                                     ^
kablam! /source/source/src/H5C.c: In function 'H5C_protect':
kablam! /source/source/src/H5C.c:3503:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5C_protect(H5F_t *  f,
kablam!  ^
kablam! /source/source/src/H5C.c:3503:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5C.c:3503:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5C.c:3503:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5C.c: In function 'H5C_set_cache_auto_resize_config':
kablam! /source/source/src/H5C.c:3928:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5C_set_cache_auto_resize_config(H5C_t *cache_ptr,
kablam!  ^
kablam! /source/source/src/H5C.c:3928:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5C.c:3928:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5C.c:3928:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Dchunk.c: In function 'H5D__chunk_io_init':
kablam! /source/source/src/H5Dchunk.c:738:60: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!      if((file_space_normalized = H5S_hyper_normalize_offset((H5S_t *)file_space, old_offset)) < 0)
kablam!                                                             ^
kablam! /source/source/src/H5Dchunk.c:976:41: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!          if(H5S_hyper_denormalize_offset((H5S_t *)file_space, old_offset) < 0)
kablam!                                          ^
kablam! /source/source/src/H5Dchunk.c: In function 'H5D__create_chunk_map_single':
kablam! /source/source/src/H5Dchunk.c:1196:26: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!      chunk_info->mspace = (H5S_t *)fm->mem_space;
kablam!                           ^
kablam! /source/source/src/H5Dchunk.c: In function 'H5D__create_chunk_file_map_hyper':
kablam! /source/source/src/H5Dchunk.c:1263:46: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!          if(TRUE == H5S_hyper_intersect_block((H5S_t *)fm->file_space, coords, end)) {
kablam!                                               ^
kablam! /source/source/src/H5Dchunk.c: In function 'H5D__create_chunk_mem_map_hyper':
kablam! /source/source/src/H5Dchunk.c:1430:30: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!          chunk_info->mspace = (H5S_t *)fm->mem_space;
kablam!                               ^
kablam! /source/source/src/H5Dchunk.c: In function 'H5D__chunk_allocate':
kablam! /source/source/src/H5Dchunk.c:3345:17: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!                  (void *)pline, (H5MM_free_t)H5D__chunk_xfree, (void *)pline,
kablam!                  ^
kablam! /source/source/src/H5Dchunk.c:3345:63: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!                  (void *)pline, (H5MM_free_t)H5D__chunk_xfree, (void *)pline,
kablam!                                                                ^
kablam! /source/source/src/H5Dchunk.c: In function 'H5D__chunk_prune_fill':
kablam! /source/source/src/H5Dchunk.c:3789:20: warning: size of 'chunk_iter' is 2232 bytes [-Wlarger-than=]
kablam!      H5S_sel_iter_t chunk_iter;          /* Memory selection iteration info */
kablam!                     ^
kablam! /source/source/src/H5Dchunk.c: In function 'H5D__chunk_copy':
kablam! /source/source/src/H5Dchunk.c:4831:39: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!          if(NULL == (dt_mem = H5T_copy(dt_src, H5T_COPY_TRANSIENT)))
kablam!                                        ^
kablam! In file included from /source/source/src/H5Oprivate.h:41:0,
kablam!                  from /source/source/src/H5Dprivate.h:27,
kablam!                  from /source/source/src/H5Dpkg.h:32,
kablam!                  from /source/source/src/H5Dchunk.c:57:
kablam! /source/source/src/H5Tprivate.h:109:15: note: expected 'H5T_t * {aka struct H5T_t *}' but argument is of type 'const H5T_t * {aka const struct H5T_t *}'
kablam!  H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
kablam!                ^
kablam! /source/source/src/H5Dchunk.c:4839:39: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!          if(NULL == (dt_dst = H5T_copy(dt_src, H5T_COPY_TRANSIENT)))
kablam!                                        ^
kablam! In file included from /source/source/src/H5Oprivate.h:41:0,
kablam!                  from /source/source/src/H5Dprivate.h:27,
kablam!                  from /source/source/src/H5Dpkg.h:32,
kablam!                  from /source/source/src/H5Dchunk.c:57:
kablam! /source/source/src/H5Tprivate.h:109:15: note: expected 'H5T_t * {aka struct H5T_t *}' but argument is of type 'const H5T_t * {aka const struct H5T_t *}'
kablam!  H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
kablam!                ^
kablam! /source/source/src/H5Dchunk.c: In function 'H5D__chunk_dest':
kablam! /source/source/src/H5Dchunk.c:5168:20: warning: request for implicit conversion from 'void *' to 'struct H5D_rdcc_ent_t **' not permitted in C++ [-Wc++-compat]
kablam!          rdcc->slot = H5FL_SEQ_FREE(H5D_rdcc_ent_ptr_t, rdcc->slot);
kablam!                     ^
kablam! /source/source/src/H5Dcontig.c: In function 'H5D__contig_is_space_alloc':
kablam! /source/source/src/H5Dcontig.c:471:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5D__contig_is_space_alloc(const H5O_storage_t *storage)
kablam!  ^
kablam! /source/source/src/H5Dchunk.c: In function 'H5D__chunk_copy':
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! In file included from /source/source/src/H5Cprivate.h:37:0,
kablam!                  from /source/source/src/H5ACprivate.h:35,
kablam!                  from /source/source/src/H5Oprivate.h:38,
kablam!                  from /source/source/src/H5Dprivate.h:27,
kablam!                  from /source/source/src/H5Dpkg.h:32,
kablam!                  from /source/source/src/H5Defl.c:32:
kablam! /source/source/src/H5Defl.c: In function 'H5D__efl_read':
kablam! /source/source/src/H5Defl.c:293:57: warning: conversion to 'long long unsigned int' from 'off_t {aka long int}' may change the sign of the result [-Wsign-conversion]
kablam!          if(H5F_OVERFLOW_HSIZET2OFFT(efl->slot[u].offset + skip))
kablam!                                                          ^
kablam! /source/source/src/H5Fprivate.h:346:16: note: in definition of macro 'H5F_OVERFLOW_HSIZET2OFFT'
kablam!      ((hsize_t)(X)>=(hsize_t)((hsize_t)1<<(8*sizeof(off_t)-1)))
kablam!                 ^
kablam! In file included from /source/source/src/H5Defl.c:31:0:
kablam! /source/source/src/H5Defl.c:299:54: warning: conversion to 'long long unsigned int' from 'off_t {aka long int}' may change the sign of the result [-Wsign-conversion]
kablam!          if(HDlseek(fd, (HDoff_t)(efl->slot[u].offset + skip), SEEK_SET) < 0)
kablam!                                                       ^
kablam! /source/source/src/H5private.h:977:37: note: in definition of macro 'HDlseek'
kablam!      #define HDlseek(F,O,W)  lseek(F,O,W)
kablam!                                      ^
kablam! In file included from /source/source/src/H5Cprivate.h:37:0,
kablam!                  from /source/source/src/H5ACprivate.h:35,
kablam!                  from /source/source/src/H5Oprivate.h:38,
kablam!                  from /source/source/src/H5Dprivate.h:27,
kablam!                  from /source/source/src/H5Dpkg.h:32,
kablam!                  from /source/source/src/H5Defl.c:32:
kablam! /source/source/src/H5Defl.c: In function 'H5D__efl_write':
kablam! /source/source/src/H5Defl.c:385:57: warning: conversion to 'long long unsigned int' from 'off_t {aka long int}' may change the sign of the result [-Wsign-conversion]
kablam!          if(H5F_OVERFLOW_HSIZET2OFFT(efl->slot[u].offset + skip))
kablam!                                                          ^
kablam! /source/source/src/H5Fprivate.h:346:16: note: in definition of macro 'H5F_OVERFLOW_HSIZET2OFFT'
kablam!      ((hsize_t)(X)>=(hsize_t)((hsize_t)1<<(8*sizeof(off_t)-1)))
kablam!                 ^
kablam! In file included from /source/source/src/H5Defl.c:31:0:
kablam! /source/source/src/H5Defl.c:395:54: warning: conversion to 'long long unsigned int' from 'off_t {aka long int}' may change the sign of the result [-Wsign-conversion]
kablam!          if(HDlseek(fd, (HDoff_t)(efl->slot[u].offset + skip), SEEK_SET) < 0)
kablam!                                                       ^
kablam! /source/source/src/H5private.h:977:37: note: in definition of macro 'HDlseek'
kablam!      #define HDlseek(F,O,W)  lseek(F,O,W)
kablam!                                      ^
kablam! /source/source/src/H5Defl.c: In function 'H5D__efl_is_space_alloc':
kablam! /source/source/src/H5Defl.c:204:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]
kablam!  H5D__efl_is_space_alloc(const H5O_storage_t H5_ATTR_UNUSED *storage)
kablam!  ^
kablam! /source/source/src/H5Dchunk.c: In function 'H5D__chunk_dest':
kablam! /source/source/src/H5Dchunk.c:5163:7: warning: assuming signed overflow does not occur when simplifying conditional to constant [-Wstrict-overflow]
kablam!      if(nerrors)
kablam!        ^
kablam! /source/source/src/H5Dfill.c: In function 'H5D__fill':
kablam! /source/source/src/H5Dfill.c:234:62: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!              if((src_id = H5I_register(H5I_DATATYPE, H5T_copy(fill_type, H5T_COPY_ALL), FALSE)) < 0)
kablam!                                                               ^
kablam! In file included from /source/source/src/H5Oprivate.h:41:0,
kablam!                  from /source/source/src/H5Dprivate.h:27,
kablam!                  from /source/source/src/H5Dpkg.h:32,
kablam!                  from /source/source/src/H5Dfill.c:37:
kablam! /source/source/src/H5Tprivate.h:109:15: note: expected 'H5T_t * {aka struct H5T_t *}' but argument is of type 'const H5T_t * {aka const struct H5T_t *}'
kablam!  H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
kablam!                ^
kablam! /source/source/src/H5Dfill.c:237:62: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!              if((dst_id = H5I_register(H5I_DATATYPE, H5T_copy(buf_type, H5T_COPY_ALL), FALSE)) < 0)
kablam!                                                               ^
kablam! In file included from /source/source/src/H5Oprivate.h:41:0,
kablam!                  from /source/source/src/H5Dprivate.h:27,
kablam!                  from /source/source/src/H5Dpkg.h:32,
kablam!                  from /source/source/src/H5Dfill.c:37:
kablam! /source/source/src/H5Tprivate.h:109:15: note: expected 'H5T_t * {aka struct H5T_t *}' but argument is of type 'const H5T_t * {aka const struct H5T_t *}'
kablam!  H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
kablam!                ^
kablam! /source/source/src/H5Dfill.c:248:28: warning: size of 'mem_iter' is 2232 bytes [-Wlarger-than=]
kablam!              H5S_sel_iter_t mem_iter;            /* Memory selection iteration info */
kablam!                             ^
kablam! /source/source/src/H5Dfill.c: In function 'H5D__fill_init':
kablam! /source/source/src/H5Dfill.c:407:54: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!              if(NULL == (fb_info->mem_type = H5T_copy(dset_type, H5T_COPY_REOPEN)))
kablam!                                                       ^
kablam! In file included from /source/source/src/H5Oprivate.h:41:0,
kablam!                  from /source/source/src/H5Dprivate.h:27,
kablam!                  from /source/source/src/H5Dpkg.h:32,
kablam!                  from /source/source/src/H5Dfill.c:37:
kablam! /source/source/src/H5Tprivate.h:109:15: note: expected 'H5T_t * {aka struct H5T_t *}' but argument is of type 'const H5T_t * {aka const struct H5T_t *}'
kablam!  H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
kablam!                ^
kablam! /source/source/src/H5Dint.c: In function 'H5D__init_type':
kablam! /source/source/src/H5Dint.c:638:43: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!          if((dset->shared->type = H5T_copy(type, H5T_COPY_ALL)) == NULL)
kablam!                                            ^
kablam! In file included from /source/source/src/H5Oprivate.h:41:0,
kablam!                  from /source/source/src/H5Dprivate.h:27,
kablam!                  from /source/source/src/H5Dpkg.h:32,
kablam!                  from /source/source/src/H5Dint.c:30:
kablam! /source/source/src/H5Tprivate.h:109:15: note: expected 'H5T_t * {aka struct H5T_t *}' but argument is of type 'const H5T_t * {aka const struct H5T_t *}'
kablam!  H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
kablam!                ^
kablam! /source/source/src/H5Dint.c:661:30: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!          dset->shared->type = (H5T_t *)type; /* (Cast away const OK - QAK) */
kablam!                               ^
kablam! /source/source/src/H5Dio.c: In function 'H5D__pre_write':
kablam! /source/source/src/H5Dio.c:330:15: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
kablam!   for(u = 0; u < ndims; u++) {
kablam!                ^
kablam! /source/source/src/H5Dio.c: In function 'H5D__read':
kablam! /source/source/src/H5Dio.c:377:21: warning: size of 'fm' is 2864 bytes [-Wlarger-than=]
kablam!      H5D_chunk_map_t fm;                 /* Chunk file<->memory mapping */
kablam!                      ^
kablam! /source/source/src/H5Dio.c:424:5: warning: implicit declaration of function 'H5T_patch_vlen_file' [-Wimplicit-function-declaration]
kablam!      H5T_patch_vlen_file(dataset->shared->type, dataset->oloc.file);
kablam!      ^
kablam! /source/source/src/H5Dio.c:424:5: warning: nested extern declaration of 'H5T_patch_vlen_file' [-Wnested-externs]
kablam! /source/source/src/H5Dio.c:481:66: warning: to be safe all intermediate pointers in cast from 'void **' to 'const void **' must be 'const' qualified [-Wcast-qual]
kablam!                  (unsigned)H5S_GET_EXTENT_NDIMS(file_space), buf, (const void **)&adj_buf, type_info.dst_type_size) < 0)
kablam!                                                                   ^
kablam! /source/source/src/H5Dio.c: In function 'H5D__write':
kablam! /source/source/src/H5Dio.c:596:21: warning: size of 'fm' is 2864 bytes [-Wlarger-than=]
kablam!      H5D_chunk_map_t fm;                 /* Chunk file<->memory mapping */
kablam!                      ^
kablam! /source/source/src/H5Dio.c:738:66: warning: to be safe all intermediate pointers in cast from 'void **' to 'const void **' must be 'const' qualified [-Wcast-qual]
kablam!                  (unsigned)H5S_GET_EXTENT_NDIMS(file_space), buf, (const void **)&adj_buf, type_info.src_type_size) < 0)
kablam!                                                                   ^
kablam! /source/source/src/H5Dint.c: In function 'H5D_oloc':
kablam! /source/source/src/H5Dint.c:1638:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]
kablam!  H5D_oloc(H5D_t *dataset)
kablam!  ^
kablam! /source/source/src/H5Dint.c: In function 'H5D_nameof':
kablam! /source/source/src/H5Dint.c:1661:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]
kablam!  H5D_nameof(H5D_t *dataset)
kablam!  ^
kablam! /source/source/src/H5Dint.c: In function 'H5D_typeof':
kablam! /source/source/src/H5Dint.c:1685:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5D_typeof(const H5D_t *dset)
kablam!  ^
kablam! /source/source/src/H5Dscatgath.c: In function 'H5D__scatter_file':
kablam! /source/source/src/H5Dscatgath.c:100:13: warning: size of '_off' is 8192 bytes [-Wlarger-than=]
kablam!      hsize_t _off[H5D_IO_VECTOR_SIZE];             /* Array to store sequence offsets */
kablam!              ^
kablam! /source/source/src/H5Dscatgath.c:105:12: warning: size of '_len' is 8192 bytes [-Wlarger-than=]
kablam!      size_t _len[H5D_IO_VECTOR_SIZE];              /* Array to store sequence lengths */
kablam!             ^
kablam! /source/source/src/H5Dscatgath.c:164:13: warning: request for implicit conversion from 'void *' to 'size_t * {aka long unsigned int *}' not permitted in C++ [-Wc++-compat]
kablam!          len = H5FL_SEQ_FREE(size_t, len);
kablam!              ^
kablam! /source/source/src/H5Dscatgath.c:166:13: warning: request for implicit conversion from 'void *' to 'hsize_t * {aka long long unsigned int *}' not permitted in C++ [-Wc++-compat]
kablam!          off = H5FL_SEQ_FREE(hsize_t, off);
kablam!              ^
kablam! /source/source/src/H5Dscatgath.c: In function 'H5D__gather_file':
kablam! /source/source/src/H5Dscatgath.c:199:13: warning: size of '_off' is 8192 bytes [-Wlarger-than=]
kablam!      hsize_t _off[H5D_IO_VECTOR_SIZE];   /* Array to store sequence offsets */
kablam!              ^
kablam! /source/source/src/H5Dscatgath.c:204:12: warning: size of '_len' is 8192 bytes [-Wlarger-than=]
kablam!      size_t _len[H5D_IO_VECTOR_SIZE];    /* Array to store sequence lengths */
kablam!             ^
kablam! /source/source/src/H5Dscatgath.c:265:13: warning: request for implicit conversion from 'void *' to 'size_t * {aka long unsigned int *}' not permitted in C++ [-Wc++-compat]
kablam!          len = H5FL_SEQ_FREE(size_t, len);
kablam!              ^
kablam! /source/source/src/H5Dscatgath.c:267:13: warning: request for implicit conversion from 'void *' to 'hsize_t * {aka long long unsigned int *}' not permitted in C++ [-Wc++-compat]
kablam!          off = H5FL_SEQ_FREE(hsize_t, off);
kablam!              ^
kablam! /source/source/src/H5Dscatgath.c: In function 'H5D__scatter_mem':
kablam! /source/source/src/H5Dscatgath.c:295:13: warning: size of '_off' is 8192 bytes [-Wlarger-than=]
kablam!      hsize_t _off[H5D_IO_VECTOR_SIZE];          /* Array to store sequence offsets */
kablam!              ^
kablam! /source/source/src/H5Dscatgath.c:297:12: warning: size of '_len' is 8192 bytes [-Wlarger-than=]
kablam!      size_t _len[H5D_IO_VECTOR_SIZE];           /* Array to store sequence lengths */
kablam!             ^
kablam! /source/source/src/H5Dscatgath.c:350:13: warning: request for implicit conversion from 'void *' to 'size_t * {aka long unsigned int *}' not permitted in C++ [-Wc++-compat]
kablam!          len = H5FL_SEQ_FREE(size_t, len);
kablam!              ^
kablam! /source/source/src/H5Dscatgath.c:352:13: warning: request for implicit conversion from 'void *' to 'hsize_t * {aka long long unsigned int *}' not permitted in C++ [-Wc++-compat]
kablam!          off = H5FL_SEQ_FREE(hsize_t, off);
kablam!              ^
kablam! /source/source/src/H5Dscatgath.c: In function 'H5D__gather_mem':
kablam! /source/source/src/H5Dscatgath.c:382:13: warning: size of '_off' is 8192 bytes [-Wlarger-than=]
kablam!      hsize_t _off[H5D_IO_VECTOR_SIZE];          /* Array to store sequence offsets */
kablam!              ^
kablam! /source/source/src/H5Dscatgath.c:384:12: warning: size of '_len' is 8192 bytes [-Wlarger-than=]
kablam!      size_t _len[H5D_IO_VECTOR_SIZE];           /* Array to store sequence lengths */
kablam!             ^
kablam! /source/source/src/H5Dscatgath.c:437:13: warning: request for implicit conversion from 'void *' to 'size_t * {aka long unsigned int *}' not permitted in C++ [-Wc++-compat]
kablam!          len = H5FL_SEQ_FREE(size_t, len);
kablam!              ^
kablam! /source/source/src/H5Dscatgath.c:439:13: warning: request for implicit conversion from 'void *' to 'hsize_t * {aka long long unsigned int *}' not permitted in C++ [-Wc++-compat]
kablam!          off = H5FL_SEQ_FREE(hsize_t, off);
kablam!              ^
kablam! /source/source/src/H5Dscatgath.c: In function 'H5D__scatgath_read':
kablam! /source/source/src/H5Dscatgath.c:463:20: warning: size of 'mem_iter' is 2232 bytes [-Wlarger-than=]
kablam!      H5S_sel_iter_t mem_iter;            /*memory selection iteration info*/
kablam!                     ^
kablam! /source/source/src/H5Dscatgath.c:465:20: warning: size of 'bkg_iter' is 2232 bytes [-Wlarger-than=]
kablam!      H5S_sel_iter_t bkg_iter;            /*background iteration info*/
kablam!                     ^
kablam! /source/source/src/H5Dscatgath.c:467:20: warning: size of 'file_iter' is 2232 bytes [-Wlarger-than=]
kablam!      H5S_sel_iter_t file_iter;           /*file selection iteration info*/
kablam!                     ^
kablam! /source/source/src/H5Dscatgath.c: In function 'H5D__scatgath_write':
kablam! /source/source/src/H5Dscatgath.c:595:20: warning: size of 'mem_iter' is 2232 bytes [-Wlarger-than=]
kablam!      H5S_sel_iter_t mem_iter;            /*memory selection iteration info*/
kablam!                     ^
kablam! /source/source/src/H5Dscatgath.c:597:20: warning: size of 'bkg_iter' is 2232 bytes [-Wlarger-than=]
kablam!      H5S_sel_iter_t bkg_iter;            /*background iteration info*/
kablam!                     ^
kablam! /source/source/src/H5Dscatgath.c:599:20: warning: size of 'file_iter' is 2232 bytes [-Wlarger-than=]
kablam!      H5S_sel_iter_t file_iter;           /*file selection iteration info*/
kablam!                     ^
kablam! /source/source/src/H5Dscatgath.c: In function 'H5D__compound_opt_read':
kablam! /source/source/src/H5Dscatgath.c:747:16: warning: size of '_off' is 8192 bytes [-Wlarger-than=]
kablam!      hsize_t    _off[H5D_IO_VECTOR_SIZE];        /* Array to store sequence offsets */
kablam!                 ^
kablam! /source/source/src/H5Dscatgath.c:749:16: warning: size of '_len' is 8192 bytes [-Wlarger-than=]
kablam!      size_t     _len[H5D_IO_VECTOR_SIZE];        /* Array to store sequence lengths */
kablam!                 ^
kablam! /source/source/src/H5Dscatgath.c:831:13: warning: request for implicit conversion from 'void *' to 'size_t * {aka long unsigned int *}' not permitted in C++ [-Wc++-compat]
kablam!          len = H5FL_SEQ_FREE(size_t, len);
kablam!              ^
kablam! /source/source/src/H5Dscatgath.c:833:13: warning: request for implicit conversion from 'void *' to 'hsize_t * {aka long long unsigned int *}' not permitted in C++ [-Wc++-compat]
kablam!          off = H5FL_SEQ_FREE(hsize_t, off);
kablam!              ^
kablam! /source/source/src/H5Dscatgath.c: In function 'H5Dscatter':
kablam! /source/source/src/H5Dscatgath.c:926:20: warning: size of 'iter' is 2232 bytes [-Wlarger-than=]
kablam!      H5S_sel_iter_t iter;        /* Selection iteration info*/
kablam!                     ^
kablam! /source/source/src/H5Dscatgath.c: In function 'H5Dgather':
kablam! /source/source/src/H5Dscatgath.c:1026:20: warning: size of 'iter' is 2232 bytes [-Wlarger-than=]
kablam!      H5S_sel_iter_t iter;        /* Selection iteration info*/
kablam!                     ^
kablam! /source/source/src/H5Dscatgath.c: In function 'H5D__gather_file':
kablam! /source/source/src/H5Dscatgath.c:194:1: warning: stack usage might be 16784 bytes [-Wstack-usage=]
kablam!  H5D__gather_file(const H5D_io_info_t *_io_info,
kablam!  ^
kablam! /source/source/src/H5Dscatgath.c:270:1: warning: the frame size of 16688 bytes is larger than 16384 bytes [-Wframe-larger-than=]
kablam!  } /* H5D__gather_file() */
kablam!  ^
kablam! /source/source/src/H5Dscatgath.c: In function 'H5D__gather_mem.isra.1':
kablam! /source/source/src/H5Dscatgath.c:376:1: warning: stack usage might be 16592 bytes [-Wstack-usage=]
kablam!  H5D__gather_mem(const void *_buf, const H5S_t *space,
kablam!  ^
kablam! /source/source/src/H5Dscatgath.c:442:1: warning: the frame size of 16496 bytes is larger than 16384 bytes [-Wframe-larger-than=]
kablam!  }   /* H5D__gather_mem() */
kablam!  ^
kablam! /source/source/src/H5Dscatgath.c: In function 'H5D__scatter_mem':
kablam! /source/source/src/H5Dscatgath.c:289:1: warning: stack usage might be 16592 bytes [-Wstack-usage=]
kablam!  H5D__scatter_mem (const void *_tscat_buf, const H5S_t *space,
kablam!  ^
kablam! /source/source/src/H5Dscatgath.c:355:1: warning: the frame size of 16496 bytes is larger than 16384 bytes [-Wframe-larger-than=]
kablam!  }   /* H5D__scatter_mem() */
kablam!  ^
kablam! /source/source/src/H5Dscatgath.c: In function 'H5D__scatgath_read':
kablam! /source/source/src/H5Dscatgath.c:458:1: warning: stack usage might be 23408 bytes [-Wstack-usage=]
kablam!  H5D__scatgath_read(const H5D_io_info_t *io_info, const H5D_type_info_t *type_info,
kablam!  ^
kablam! /source/source/src/H5Dscatgath.c:574:1: warning: the frame size of 23312 bytes is larger than 16384 bytes [-Wframe-larger-than=]
kablam!  } /* end H5D__scatgath_read() */
kablam!  ^
kablam! /source/source/src/H5Dscatgath.c: In function 'H5D__scatgath_write':
kablam! /source/source/src/H5Dscatgath.c:590:1: warning: stack usage might be 23584 bytes [-Wstack-usage=]
kablam!  H5D__scatgath_write(const H5D_io_info_t *io_info, const H5D_type_info_t *type_info,
kablam!  ^
kablam! /source/source/src/H5Dscatgath.c:705:1: warning: the frame size of 23488 bytes is larger than 16384 bytes [-Wframe-larger-than=]
kablam!  } /* end H5D__scatgath_write() */
kablam!  ^
kablam! /source/source/src/H5Dselect.c: In function 'H5D__select_io':
kablam! /source/source/src/H5Dselect.c:89:20: warning: size of 'mem_iter' is 2232 bytes [-Wlarger-than=]
kablam!      H5S_sel_iter_t mem_iter;    /* Memory selection iteration info */
kablam!                     ^
kablam! /source/source/src/H5Dselect.c:91:20: warning: size of 'file_iter' is 2232 bytes [-Wlarger-than=]
kablam!      H5S_sel_iter_t file_iter;   /* File selection iteration info */
kablam!                     ^
kablam! /source/source/src/H5Dselect.c:93:13: warning: size of '_mem_off' is 8192 bytes [-Wlarger-than=]
kablam!      hsize_t _mem_off[H5D_IO_VECTOR_SIZE];      /* Array to store sequence offsets in memory */
kablam!              ^
kablam! /source/source/src/H5Dselect.c:95:13: warning: size of '_file_off' is 8192 bytes [-Wlarger-than=]
kablam!      hsize_t _file_off[H5D_IO_VECTOR_SIZE];     /* Array to store sequence offsets in the file */
kablam!              ^
kablam! /source/source/src/H5Dselect.c:97:12: warning: size of '_mem_len' is 8192 bytes [-Wlarger-than=]
kablam!      size_t _mem_len[H5D_IO_VECTOR_SIZE];       /* Array to store sequence lengths in memory */
kablam!             ^
kablam! /source/source/src/H5Dselect.c:99:12: warning: size of '_file_len' is 8192 bytes [-Wlarger-than=]
kablam!      size_t _file_len[H5D_IO_VECTOR_SIZE];      /* Array to store sequence lengths in the file */
kablam!             ^
kablam! /source/source/src/H5Dselect.c:242:18: warning: request for implicit conversion from 'void *' to 'size_t * {aka long unsigned int *}' not permitted in C++ [-Wc++-compat]
kablam!          file_len = H5FL_SEQ_FREE(size_t, file_len);
kablam!                   ^
kablam! /source/source/src/H5Dselect.c:244:18: warning: request for implicit conversion from 'void *' to 'hsize_t * {aka long long unsigned int *}' not permitted in C++ [-Wc++-compat]
kablam!          file_off = H5FL_SEQ_FREE(hsize_t, file_off);
kablam!                   ^
kablam! /source/source/src/H5Dselect.c:246:17: warning: request for implicit conversion from 'void *' to 'size_t * {aka long unsigned int *}' not permitted in C++ [-Wc++-compat]
kablam!          mem_len = H5FL_SEQ_FREE(size_t, mem_len);
kablam!                  ^
kablam! /source/source/src/H5Dselect.c:248:17: warning: request for implicit conversion from 'void *' to 'hsize_t * {aka long long unsigned int *}' not permitted in C++ [-Wc++-compat]
kablam!          mem_off = H5FL_SEQ_FREE(hsize_t, mem_off);
kablam!                  ^
kablam! /source/source/src/H5Dselect.c:86:1: warning: stack usage might be 37488 bytes [-Wstack-usage=]
kablam!  H5D__select_io(const H5D_io_info_t *io_info, size_t elmt_size,
kablam!  ^
kablam! /source/source/src/H5Dselect.c:251:1: warning: the frame size of 37392 bytes is larger than 16384 bytes [-Wframe-larger-than=]
kablam!  } /* end H5D__select_io() */
kablam!  ^
kablam! /source/source/src/H5E.c: In function 'H5Epush2':
kablam! /source/source/src/H5E.c:1391:5: warning: function might be possible candidate for 'gnu_printf' format attribute [-Wsuggest-attribute=format]
kablam!      if(HDvasprintf(&tmp, fmt, ap) < 0)
kablam!      ^
kablam! /source/source/src/H5Eint.c: In function 'H5E_printf_stack':
kablam! /source/source/src/H5Eint.c:739:5: warning: function might be possible candidate for 'gnu_printf' format attribute [-Wsuggest-attribute=format]
kablam!      if(HDvasprintf(&tmp, fmt, ap) < 0)
kablam!      ^
kablam! /source/source/src/H5Eint.c: In function 'H5E_clear_entries':
kablam! /source/source/src/H5Eint.c:905:24: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!              H5MM_xfree((void *)error->func_name);        /* Casting away const OK - QAK */
kablam!                         ^
kablam! /source/source/src/H5Eint.c:907:24: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!              H5MM_xfree((void *)error->file_name);        /* Casting away const OK - QAK */
kablam!                         ^
kablam! /source/source/src/H5Eint.c:909:24: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!              H5MM_xfree((void *)error->desc);     /* Casting away const OK - QAK */
kablam!                         ^
kablam! /source/source/src/H5Eint.c: In function 'H5E_walk':
kablam! /source/source/src/H5Eint.c:574:53: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                  for(i = (int)(estack->nused - 1); i >= 0 && status >= 0; i--) {
kablam!                                                      ^
kablam! /source/source/src/H5Eint.c:604:53: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                  for(i = (int)(estack->nused - 1); i >= 0 && status >= 0; i--)
kablam!                                                      ^
kablam! /source/source/src/H5Fint.c: In function 'H5F_build_actual_name':
kablam! /source/source/src/H5Fint.c:1583:18: warning: size of 'realname' is 4096 bytes [-Wlarger-than=]
kablam!              char realname[PATH_MAX];    /* Fully resolved path name of file */
kablam!                   ^
kablam! /source/source/src/H5Fdbg.c: In function 'H5F_debug':
kablam! /source/source/src/H5Fdbg.c:126:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!              H5G__ent_debug(f->shared->sblock->root_ent, stream, indent + 3, MAX(0, fwidth - 3), NULL);
kablam!              ^
kablam! /source/source/src/H5Fdbg.c:141:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!              H5G__ent_debug(&root_ent, stream, indent + 3, MAX(0, fwidth - 3), NULL);
kablam!              ^
kablam! /source/source/src/H5Fefc.c: In function 'H5F_efc_max_nfiles':
kablam! /source/source/src/H5Fefc.c:396:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_efc_max_nfiles(H5F_efc_t *efc)
kablam!  ^
kablam! /source/source/src/H5Fmount.c: In function 'H5F_is_mount':
kablam! /source/source/src/H5Fmount.c:440:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_is_mount(const H5F_t *file)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_get_intent':
kablam! /source/source/src/H5Fquery.c:94:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_get_intent(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_get_open_name':
kablam! /source/source/src/H5Fquery.c:119:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_get_open_name(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_get_actual_name':
kablam! /source/source/src/H5Fquery.c:145:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_get_actual_name(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_get_extpath':
kablam! /source/source/src/H5Fquery.c:171:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_get_extpath(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_get_shared':
kablam! /source/source/src/H5Fquery.c:195:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_get_shared(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_same_shared':
kablam! /source/source/src/H5Fquery.c:218:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_same_shared(const H5F_t *f1, const H5F_t *f2)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_get_nopen_objs':
kablam! /source/source/src/H5Fquery.c:244:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_get_nopen_objs(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_get_file_id':
kablam! /source/source/src/H5Fquery.c:267:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_get_file_id(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_get_parent':
kablam! /source/source/src/H5Fquery.c:290:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_get_parent(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_get_nmounts':
kablam! /source/source/src/H5Fquery.c:313:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_get_nmounts(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_get_fcpl':
kablam! /source/source/src/H5Fquery.c:340:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_get_fcpl(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_sizeof_addr':
kablam! /source/source/src/H5Fquery.c:367:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_sizeof_addr(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_sizeof_size':
kablam! /source/source/src/H5Fquery.c:394:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_sizeof_size(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_get_sohm_addr':
kablam! /source/source/src/H5Fquery.c:418:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_get_sohm_addr(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_get_sohm_vers':
kablam! /source/source/src/H5Fquery.c:442:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_get_sohm_vers(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_get_sohm_nindexes':
kablam! /source/source/src/H5Fquery.c:466:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_get_sohm_nindexes(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_sym_leaf_k':
kablam! /source/source/src/H5Fquery.c:497:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_sym_leaf_k(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_Kvalue':
kablam! /source/source/src/H5Fquery.c:529:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_Kvalue(const H5F_t *f, const H5B_class_t *type)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_get_nrefs':
kablam! /source/source/src/H5Fquery.c:555:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_get_nrefs(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_rdcc_nslots':
kablam! /source/source/src/H5Fquery.c:586:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_rdcc_nslots(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_rdcc_nbytes':
kablam! /source/source/src/H5Fquery.c:617:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_rdcc_nbytes(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_rdcc_w0':
kablam! /source/source/src/H5Fquery.c:648:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_rdcc_w0(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_get_base_addr':
kablam! /source/source/src/H5Fquery.c:675:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_get_base_addr(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_grp_btree_shared':
kablam! /source/source/src/H5Fquery.c:707:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_grp_btree_shared(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_sieve_buf_size':
kablam! /source/source/src/H5Fquery.c:738:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_sieve_buf_size(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_gc_ref':
kablam! /source/source/src/H5Fquery.c:769:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_gc_ref(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_use_latest_format':
kablam! /source/source/src/H5Fquery.c:798:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_use_latest_format(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_get_fc_degree':
kablam! /source/source/src/H5Fquery.c:826:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_get_fc_degree(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_store_msg_crt_idx':
kablam! /source/source/src/H5Fquery.c:854:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_store_msg_crt_idx(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_has_feature':
kablam! /source/source/src/H5Fquery.c:881:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_has_feature(const H5F_t *f, unsigned feature)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_get_driver_id':
kablam! /source/source/src/H5Fquery.c:908:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_get_driver_id(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_is_tmp_addr':
kablam! /source/source/src/H5Fquery.c:1037:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_is_tmp_addr(const H5F_t *f, haddr_t addr)
kablam!  ^
kablam! /source/source/src/H5Fquery.c: In function 'H5F_use_tmp_space':
kablam! /source/source/src/H5Fquery.c:1065:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5F_use_tmp_space(const H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5Fsfile.c: In function 'H5F_sfile_assert_num':
kablam! /source/source/src/H5Fsfile.c:57:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5F_sfile_assert_num(unsigned n)
kablam!  ^
kablam! /source/source/src/H5Fsuper_cache.c: In function 'H5F_sblock_load':
kablam! /source/source/src/H5Fsuper_cache.c:282:28: warning: to be safe all intermediate pointers in cast from 'uint8_t ** {aka unsigned char **}' to 'const uint8_t ** {aka const unsigned char **}' must be 'const' qualified [-Wcast-qual]
kablam!          H5F_addr_decode(f, (const uint8_t **)&p, &sblock->base_addr/*out*/);
kablam!                             ^
kablam! /source/source/src/H5Fsuper_cache.c:283:28: warning: to be safe all intermediate pointers in cast from 'uint8_t ** {aka unsigned char **}' to 'const uint8_t ** {aka const unsigned char **}' must be 'const' qualified [-Wcast-qual]
kablam!          H5F_addr_decode(f, (const uint8_t **)&p, &sblock->ext_addr/*out*/);
kablam!                             ^
kablam! /source/source/src/H5Fsuper_cache.c:284:28: warning: to be safe all intermediate pointers in cast from 'uint8_t ** {aka unsigned char **}' to 'const uint8_t ** {aka const unsigned char **}' must be 'const' qualified [-Wcast-qual]
kablam!          H5F_addr_decode(f, (const uint8_t **)&p, &stored_eoa/*out*/);
kablam!                             ^
kablam! /source/source/src/H5Fsuper_cache.c:285:28: warning: to be safe all intermediate pointers in cast from 'uint8_t ** {aka unsigned char **}' to 'const uint8_t ** {aka const unsigned char **}' must be 'const' qualified [-Wcast-qual]
kablam!          H5F_addr_decode(f, (const uint8_t **)&p, &sblock->driver_addr/*out*/);
kablam!                             ^
kablam! /source/source/src/H5Fsuper_cache.c:293:30: warning: to be safe all intermediate pointers in cast from 'uint8_t ** {aka unsigned char **}' to 'const uint8_t ** {aka const unsigned char **}' must be 'const' qualified [-Wcast-qual]
kablam!          if(H5G_ent_decode(f, (const uint8_t **)&p, sblock->root_ent) < 0)
kablam!                               ^
kablam! /source/source/src/H5Fsuper_cache.c:414:28: warning: to be safe all intermediate pointers in cast from 'uint8_t ** {aka unsigned char **}' to 'const uint8_t ** {aka const unsigned char **}' must be 'const' qualified [-Wcast-qual]
kablam!          H5F_addr_decode(f, (const uint8_t **)&p, &sblock->base_addr/*out*/);
kablam!                             ^
kablam! /source/source/src/H5Fsuper_cache.c:415:28: warning: to be safe all intermediate pointers in cast from 'uint8_t ** {aka unsigned char **}' to 'const uint8_t ** {aka const unsigned char **}' must be 'const' qualified [-Wcast-qual]
kablam!          H5F_addr_decode(f, (const uint8_t **)&p, &sblock->ext_addr/*out*/);
kablam!                             ^
kablam! /source/source/src/H5Fsuper_cache.c:416:28: warning: to be safe all intermediate pointers in cast from 'uint8_t ** {aka unsigned char **}' to 'const uint8_t ** {aka const unsigned char **}' must be 'const' qualified [-Wcast-qual]
kablam!          H5F_addr_decode(f, (const uint8_t **)&p, &stored_eoa/*out*/);
kablam!                             ^
kablam! /source/source/src/H5Fsuper_cache.c:417:28: warning: to be safe all intermediate pointers in cast from 'uint8_t ** {aka unsigned char **}' to 'const uint8_t ** {aka const unsigned char **}' must be 'const' qualified [-Wcast-qual]
kablam!          H5F_addr_decode(f, (const uint8_t **)&p, &sblock->root_addr/*out*/);
kablam!                             ^
kablam! /source/source/src/H5FD.c: In function 'H5FD_get_base_addr':
kablam! /source/source/src/H5FD.c:2053:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5FD_get_base_addr(const H5FD_t *file)
kablam!  ^
kablam! /source/source/src/H5FD.c: In function 'H5FDregister':
kablam! /source/source/src/H5FD.c:306:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5FDregister(const H5FD_class_t *cls)
kablam!  ^
kablam! In file included from /source/source/src/H5FDdirect.c:32:0:
kablam! /source/source/src/H5private.h:1812:15: warning: 'H5_interface_initialize_g' defined but not used [-Wunused-variable]
kablam!  static int    H5_interface_initialize_g = 0;
kablam!                ^
kablam! /source/source/src/H5FDdirect.c:26:33: warning: 'H5FD_direct_init_interface' declared 'static' but never defined [-Wunused-function]
kablam!  #define H5_INTERFACE_INIT_FUNC  H5FD_direct_init_interface
kablam!                                  ^
kablam! /source/source/src/H5private.h:1813:18: note: in expansion of macro 'H5_INTERFACE_INIT_FUNC'
kablam!  static herr_t    H5_INTERFACE_INIT_FUNC(void);
kablam!                   ^
kablam! /source/source/src/H5FDfamily.c: In function 'H5FD_family_open':
kablam! /source/source/src/H5FDfamily.c:649:11: warning: size of 'memb_name' is 4096 bytes [-Wlarger-than=]
kablam!      char  memb_name[4096], temp[4096];
kablam!            ^
kablam! /source/source/src/H5FDfamily.c:649:28: warning: size of 'temp' is 4096 bytes [-Wlarger-than=]
kablam!      char  memb_name[4096], temp[4096];
kablam!                             ^
kablam! /source/source/src/H5FDfamily.c:711:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam!      HDsnprintf(memb_name, sizeof(memb_name), name, 0);
kablam!      ^
kablam! /source/source/src/H5FDfamily.c:711:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam! /source/source/src/H5FDfamily.c:712:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam!      HDsnprintf(temp, sizeof(temp), name, 1);
kablam!      ^
kablam! /source/source/src/H5FDfamily.c:712:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam! /source/source/src/H5FDfamily.c:718:9: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam!          HDsnprintf(memb_name, sizeof(memb_name), name, file->nmembs);
kablam!          ^
kablam! /source/source/src/H5FDfamily.c:718:9: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam! /source/source/src/H5FDfamily.c: In function 'H5FD_family_cmp':
kablam! /source/source/src/H5FDfamily.c:870:1: warning: label 'done' defined but not used [-Wunused-label]
kablam!  done:
kablam!  ^
kablam! /source/source/src/H5FDfamily.c: In function 'H5FD_family_set_eoa':
kablam! /source/source/src/H5FDfamily.c:970:11: warning: size of 'memb_name' is 4096 bytes [-Wlarger-than=]
kablam!      char  memb_name[4096];
kablam!            ^
kablam! /source/source/src/H5FDfamily.c:993:13: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam!              HDsnprintf(memb_name, sizeof(memb_name), file->name, u);
kablam!              ^
kablam! /source/source/src/H5FDfamily.c:993:13: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam! /source/source/src/H5FDfamily.c: In function 'H5FD_family_get_eof':
kablam! /source/source/src/H5FDfamily.c:1045:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5FD_family_get_eof(const H5FD_t *_file)
kablam!  ^
kablam! /source/source/src/H5FDfamily.c:1045:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5FDfamily.c: In function 'H5FD_family_open':
kablam! /source/source/src/H5FDfamily.c:644:1: warning: stack usage might be 8352 bytes [-Wstack-usage=]
kablam!  H5FD_family_open(const char *name, unsigned flags, hid_t fapl_id,
kablam!  ^
kablam! /source/source/src/H5FDlog.c: In function 'H5Pset_fapl_log':
kablam! /source/source/src/H5FDlog.c:326:18: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!      fa.logfile = (char *)logfile;
kablam!                   ^
kablam! In file included from /source/source/src/H5FDmpio.c:28:0:
kablam! /source/source/src/H5private.h:1812:15: warning: 'H5_interface_initialize_g' defined but not used [-Wunused-variable]
kablam!  static int    H5_interface_initialize_g = 0;
kablam!                ^
kablam! /source/source/src/H5FDmpio.c:25:33: warning: 'H5FD_mpio_init_interface' declared 'static' but never defined [-Wunused-function]
kablam!  #define H5_INTERFACE_INIT_FUNC  H5FD_mpio_init_interface
kablam!                                  ^
kablam! /source/source/src/H5private.h:1813:18: note: in expansion of macro 'H5_INTERFACE_INIT_FUNC'
kablam!  static herr_t    H5_INTERFACE_INIT_FUNC(void);
kablam!                   ^
kablam! /source/source/src/H5FDmulti.c: In function 'H5FD_multi_read':
kablam! /source/source/src/H5FDmulti.c:1622:55: warning: unused parameter 'dxpl_id' [-Wunused-parameter]
kablam!  H5FD_multi_read(H5FD_t *_file, H5FD_mem_t type, hid_t dxpl_id, haddr_t addr,
kablam!                                                        ^
kablam! /source/source/src/H5FDmulti.c: In function 'H5FD_multi_write':
kablam! /source/source/src/H5FDmulti.c:1673:56: warning: unused parameter 'dxpl_id' [-Wunused-parameter]
kablam!  H5FD_multi_write(H5FD_t *_file, H5FD_mem_t type, hid_t dxpl_id, haddr_t addr,
kablam!                                                         ^
kablam! /source/source/src/H5FDmulti.c: In function 'compute_next':
kablam! /source/source/src/H5FDmulti.c:52:16: warning: declaration of '_unmapped' shadows a previous local [-Wshadow]
kablam!      H5FD_mem_t _unmapped, LOOPVAR;           \
kablam!                 ^
kablam! /source/source/src/H5FDmulti.c:1847:2: note: in expansion of macro 'UNIQUE_MEMBERS'
kablam!   UNIQUE_MEMBERS(file->fa.memb_map, mt2) {
kablam!   ^
kablam! /source/source/src/H5FDmulti.c:52:16: note: shadowed declaration is here
kablam!      H5FD_mem_t _unmapped, LOOPVAR;           \
kablam!                 ^
kablam! /source/source/src/H5FDmulti.c:1846:5: note: in expansion of macro 'UNIQUE_MEMBERS'
kablam!      UNIQUE_MEMBERS(file->fa.memb_map, mt1) {
kablam!      ^
kablam! /source/source/src/H5FDmulti.c:53:13: warning: declaration of '_seen' shadows a previous local [-Wshadow]
kablam!      hbool_t _seen[H5FD_MEM_NTYPES];           \
kablam!              ^
kablam! /source/source/src/H5FDmulti.c:1847:2: note: in expansion of macro 'UNIQUE_MEMBERS'
kablam!   UNIQUE_MEMBERS(file->fa.memb_map, mt2) {
kablam!   ^
kablam! /source/source/src/H5FDmulti.c:53:13: note: shadowed declaration is here
kablam!      hbool_t _seen[H5FD_MEM_NTYPES];           \
kablam!              ^
kablam! /source/source/src/H5FDmulti.c:1846:5: note: in expansion of macro 'UNIQUE_MEMBERS'
kablam!      UNIQUE_MEMBERS(file->fa.memb_map, mt1) {
kablam!      ^
kablam! /source/source/src/H5FDmulti.c: In function 'open_members':
kablam! /source/source/src/H5FDmulti.c:1896:2: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
kablam!   sprintf(tmp, file->fa.memb_name[mt], file->name);
kablam!   ^
kablam! /source/source/src/H5FDlog.c: In function 'H5FD_log_open':
kablam! /source/source/src/H5FDlog.c:616:95: warning: 'stat_timeval_diff.tv_usec' may be used uninitialized in this function [-Wmaybe-uninitialized]
kablam!              HDfprintf(file->logfp, "Stat took: (%f s)\n", (double)stat_timeval_diff.tv_sec + ((double)stat_timeval_diff.tv_usec / (double)1000000.0f));
kablam!                                                                                                ^
kablam! /source/source/src/H5FDlog.c:616:59: warning: 'stat_timeval_diff.tv_sec' may be used uninitialized in this function [-Wmaybe-uninitialized]
kablam!              HDfprintf(file->logfp, "Stat took: (%f s)\n", (double)stat_timeval_diff.tv_sec + ((double)stat_timeval_diff.tv_usec / (double)1000000.0f));
kablam!                                                            ^
kablam! /source/source/src/H5FDlog.c:614:95: warning: 'open_timeval_diff.tv_usec' may be used uninitialized in this function [-Wmaybe-uninitialized]
kablam!              HDfprintf(file->logfp, "Open took: (%f s)\n", (double)open_timeval_diff.tv_sec + ((double)open_timeval_diff.tv_usec / (double)1000000.0f));
kablam!                                                                                                ^
kablam! /source/source/src/H5FDlog.c:614:59: warning: 'open_timeval_diff.tv_sec' may be used uninitialized in this function [-Wmaybe-uninitialized]
kablam!              HDfprintf(file->logfp, "Open took: (%f s)\n", (double)open_timeval_diff.tv_sec + ((double)open_timeval_diff.tv_usec / (double)1000000.0f));
kablam!                                                            ^
kablam! /source/source/src/H5FDmulti.c:1906:8: warning: assuming signed overflow does not occur when simplifying conditional to constant [-Wstrict-overflow]
kablam!      if (nerrors)
kablam!         ^
kablam! /source/source/src/H5FDmulti.c: In function 'H5FD_multi_close':
kablam! /source/source/src/H5FDmulti.c:1133:8: warning: assuming signed overflow does not occur when simplifying conditional to constant [-Wstrict-overflow]
kablam!      if (nerrors)
kablam!         ^
kablam! /source/source/src/H5FDmulti.c: In function 'H5Pset_fapl_multi':
kablam! /source/source/src/H5FDmulti.c:443:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5Pset_fapl_multi(hid_t fapl_id, const H5FD_mem_t *memb_map,
kablam!  ^
kablam! /source/source/src/H5FS.c: In function 'H5FS_new':
kablam! /source/source/src/H5FS.c:540:24: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!      fspace->nclasses = nclasses;
kablam!                         ^
kablam! In file included from /source/source/src/H5FS.c:38:0:
kablam! /source/source/src/H5FSpkg.h:62:29: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!  #define H5FS_HEADER_SIZE(f) (                                                 \
kablam!                              ^
kablam! /source/source/src/H5FS.c:566:24: note: in expansion of macro 'H5FS_HEADER_SIZE'
kablam!      fspace->hdr_size = H5FS_HEADER_SIZE(f);
kablam!                         ^
kablam! /source/source/src/H5FS.c: In function 'H5FS_size':
kablam! /source/source/src/H5FS.c:601:24: warning: unused parameter 'f' [-Wunused-parameter]
kablam!  H5FS_size(const H5F_t *f, const H5FS_t *fspace, hsize_t *meta_size)
kablam!                         ^
kablam! /source/source/src/H5FS.c: In function 'H5FS_sinfo_dest':
kablam! /source/source/src/H5FS.c:892:17: warning: request for implicit conversion from 'void *' to 'H5FS_bin_t * {aka struct H5FS_bin_t *}' not permitted in C++ [-Wc++-compat]
kablam!      sinfo->bins = H5FL_SEQ_FREE(H5FS_bin_t, sinfo->bins);
kablam!                  ^
kablam! /source/source/src/H5FScache.c: In function 'H5FS_cache_sinfo_load':
kablam! /source/source/src/H5FScache.c:618:17: warning: variable 'old_tot_space' set but not used [-Wunused-but-set-variable]
kablam!          hsize_t old_tot_space;          /* Total space managed from header */
kablam!                  ^
kablam! /source/source/src/H5FScache.c:617:17: warning: variable 'old_ghost_sect_count' set but not used [-Wunused-but-set-variable]
kablam!          hsize_t old_ghost_sect_count;   /* Total ghost section count from header */
kablam!                  ^
kablam! /source/source/src/H5FScache.c:616:17: warning: variable 'old_serial_sect_count' set but not used [-Wunused-but-set-variable]
kablam!          hsize_t old_serial_sect_count;  /* Total serializable section count from header */
kablam!                  ^
kablam! /source/source/src/H5FScache.c:615:17: warning: variable 'old_tot_sect_count' set but not used [-Wunused-but-set-variable]
kablam!          hsize_t old_tot_sect_count;     /* Total section count from header */
kablam!                  ^
kablam! /source/source/src/H5FSdbg.c: In function 'H5FS_sects_debug':
kablam! /source/source/src/H5FSdbg.c:288:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!              if(H5HF_sects_debug(f, dxpl_id, client_addr, stream, indent + 3, MAX(0, fwidth - 3)) < 0)
kablam!              ^
kablam! /source/source/src/H5FSsection.c: In function 'H5FS_sinfo_new':
kablam! /source/source/src/H5FSsection.c:147:31: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!      sinfo->sect_prefix_size = (size_t)H5FS_SINFO_PREFIX_SIZE(f);
kablam!                                ^
kablam! /source/source/src/H5FSsection.c:178:25: warning: request for implicit conversion from 'void *' to 'H5FS_bin_t * {aka struct H5FS_bin_t *}' not permitted in C++ [-Wc++-compat]
kablam!              sinfo->bins = H5FL_SEQ_FREE(H5FS_bin_t, sinfo->bins);
kablam!                          ^
kablam! /source/source/src/H5FSsection.c: In function 'H5FS_sect_try_shrink_eoa':
kablam! /source/source/src/H5FSsection.c:2338:24: warning: passing argument 1 of 'H5FS_sinfo_lock' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!      if(H5FS_sinfo_lock(f, dxpl_id, fspace, H5AC_WRITE) < 0)
kablam!                         ^
kablam! /source/source/src/H5FSsection.c:207:1: note: expected 'H5F_t * {aka struct H5F_t *}' but argument is of type 'const H5F_t * {aka const struct H5F_t *}'
kablam!  H5FS_sinfo_lock(H5F_t *f, hid_t dxpl_id, H5FS_t *fspace, H5AC_protect_t accmode)
kablam!  ^
kablam! /source/source/src/H5FSsection.c:2338:36: warning: passing argument 3 of 'H5FS_sinfo_lock' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!      if(H5FS_sinfo_lock(f, dxpl_id, fspace, H5AC_WRITE) < 0)
kablam!                                     ^
kablam! /source/source/src/H5FSsection.c:207:1: note: expected 'H5FS_t * {aka struct H5FS_t *}' but argument is of type 'const H5FS_t * {aka const struct H5FS_t *}'
kablam!  H5FS_sinfo_lock(H5F_t *f, hid_t dxpl_id, H5FS_t *fspace, H5AC_protect_t accmode)
kablam!  ^
kablam! /source/source/src/H5FSsection.c:2362:32: warning: passing argument 1 of 'H5FS_sect_remove_real' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!        if(H5FS_sect_remove_real(fspace, tmp_sect) < 0)
kablam!                                 ^
kablam! /source/source/src/H5FSsection.c:859:1: note: expected 'H5FS_t * {aka struct H5FS_t *}' but argument is of type 'const H5FS_t * {aka const struct H5FS_t *}'
kablam!  H5FS_sect_remove_real(H5FS_t *fspace, H5FS_section_info_t *sect)
kablam!  ^
kablam! /source/source/src/H5FSsection.c:2376:41: warning: passing argument 1 of 'H5FS_sinfo_unlock' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!      if(sinfo_valid && H5FS_sinfo_unlock(f, dxpl_id, fspace, section_removed) < 0)
kablam!                                          ^
kablam! /source/source/src/H5FSsection.c:313:1: note: expected 'H5F_t * {aka struct H5F_t *}' but argument is of type 'const H5F_t * {aka const struct H5F_t *}'
kablam!  H5FS_sinfo_unlock(H5F_t *f, hid_t dxpl_id, H5FS_t *fspace, hbool_t modified)
kablam!  ^
kablam! /source/source/src/H5FSsection.c:2376:53: warning: passing argument 3 of 'H5FS_sinfo_unlock' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!      if(sinfo_valid && H5FS_sinfo_unlock(f, dxpl_id, fspace, section_removed) < 0)
kablam!                                                      ^
kablam! /source/source/src/H5FSsection.c:313:1: note: expected 'H5FS_t * {aka struct H5FS_t *}' but argument is of type 'const H5FS_t * {aka const struct H5FS_t *}'
kablam!  H5FS_sinfo_unlock(H5F_t *f, hid_t dxpl_id, H5FS_t *fspace, hbool_t modified)
kablam!  ^
kablam! /source/source/src/H5FSstat.c: In function 'H5FS_stat_info':
kablam! /source/source/src/H5FSstat.c:99:23: warning: conversion to 'hsize_t {aka long long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!      stats->hdr_size = (size_t)H5FS_HEADER_SIZE(f);
kablam!                        ^
kablam! /source/source/src/H5FStest.c: In function 'H5FS_cmp_cparam_test':
kablam! /source/source/src/H5FStest.c:118:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5FS_cmp_cparam_test(const H5FS_create_t *cparam1, const H5FS_create_t *cparam2)
kablam!  ^
kablam! In file included from /source/source/src/H5Gcache.c:39:0:
kablam! /source/source/src/H5Gcache.c: In function 'H5G_node_load':
kablam! /source/source/src/H5Gpkg.h:58:32: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!      + ((2 * H5F_SYM_LEAF_K(f)) * H5G_SIZEOF_ENTRY(f))                         \
kablam!                                 ^
kablam! /source/source/src/H5Gcache.c:148:22: note: in expansion of macro 'H5G_NODE_SIZE'
kablam!      sym->node_size = H5G_NODE_SIZE(f);
kablam!                       ^
kablam! /source/source/src/H5Gcache.c:123:60: warning: unused parameter 'udata' [-Wunused-parameter]
kablam!  H5G_node_load(H5F_t *f, hid_t dxpl_id, haddr_t addr, void *udata)
kablam!                                                             ^
kablam! /source/source/src/H5Gdense.c: In function 'H5G__dense_create':
kablam! /source/source/src/H5Gdense.c:325:28: warning: conversion to 'uint32_t {aka unsigned int}' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!      bt2_cparam.rrec_size = 4 +          /* Name's hash value */
kablam!                             ^
kablam! /source/source/src/H5Gdense.c:345:32: warning: conversion to 'uint32_t {aka unsigned int}' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!          bt2_cparam.rrec_size = 8 +      /* Creation order value */
kablam!                                 ^
kablam! /source/source/src/H5Gdeprec.c: In function 'H5G_map_obj_type':
kablam! /source/source/src/H5Gdeprec.c:169:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]
kablam!  H5G_map_obj_type(H5O_type_t obj_type)
kablam!  ^
kablam! /source/source/src/H5Gent.c: In function 'H5G__ent_copy':
kablam! /source/source/src/H5Gent.c:341:24: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!          H5G__ent_reset((H5G_entry_t *)src);
kablam!                         ^
kablam! /source/source/src/H5Gent.c: In function 'H5G__ent_debug':
kablam! /source/source/src/H5Gent.c:553:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!      nested_fwidth = MAX(0, fwidth - 3);
kablam!      ^
kablam! /source/source/src/H5Gint.c: In function 'H5G_oloc':
kablam! /source/source/src/H5Gint.c:578:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]
kablam!  H5G_oloc(H5G_t *grp)
kablam!  ^
kablam! /source/source/src/H5Gint.c: In function 'H5G_nameof':
kablam! /source/source/src/H5Gint.c:601:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]
kablam!  H5G_nameof(H5G_t *grp)
kablam!  ^
kablam! /source/source/src/H5Gint.c: In function 'H5G_fileof':
kablam! /source/source/src/H5Gint.c:625:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5G_fileof(H5G_t *grp)
kablam!  ^
kablam! /source/source/src/H5Gint.c: In function 'H5G_get_shared_count':
kablam! /source/source/src/H5Gint.c:649:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5G_get_shared_count(H5G_t *grp)
kablam!  ^
kablam! /source/source/src/H5Gint.c: In function 'H5G_mounted':
kablam! /source/source/src/H5Gint.c:701:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5G_mounted(H5G_t *grp)
kablam!  ^
kablam! /source/source/src/H5Gloc.c: In function 'H5G__loc_insert':
kablam! /source/source/src/H5Gloc.c:580:16: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!      lnk.name = (char *)name;
kablam!                 ^
kablam! /source/source/src/H5Gloc.c: In function 'H5G_loc_set_comment_cb':
kablam! /source/source/src/H5Gloc.c:793:14: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!   comment.s = (char *)udata->comment;
kablam!               ^
kablam! /source/source/src/H5Gnode.c: In function 'H5G__node_free':
kablam! /source/source/src/H5Gname.c: In function 'H5G_name_copy':
kablam! /source/source/src/H5Gname.c:537:24: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!          H5G_name_reset((H5G_name_t *)src);
kablam!                         ^
kablam! /source/source/src/H5Gnode.c:299:20: warning: request for implicit conversion from 'void *' to 'H5G_entry_t * {aka struct H5G_entry_t *}' not permitted in C++ [-Wc++-compat]
kablam!          sym->entry = H5FL_SEQ_FREE(H5G_entry_t, sym->entry);
kablam!                     ^
kablam! In file included from /source/source/src/H5Gnode.c:45:0:
kablam! /source/source/src/H5Gnode.c: In function 'H5G_node_create':
kablam! /source/source/src/H5Gpkg.h:58:32: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!      + ((2 * H5F_SYM_LEAF_K(f)) * H5G_SIZEOF_ENTRY(f))                         \
kablam!                                 ^
kablam! /source/source/src/H5Gnode.c:344:22: note: in expansion of macro 'H5G_NODE_SIZE'
kablam!      sym->node_size = H5G_NODE_SIZE(f);
kablam!                       ^
kablam! /source/source/src/H5Gnode.c:367:28: warning: request for implicit conversion from 'void *' to 'H5G_entry_t * {aka struct H5G_entry_t *}' not permitted in C++ [-Wc++-compat]
kablam!                  sym->entry = H5FL_SEQ_FREE(H5G_entry_t, sym->entry);
kablam!                             ^
kablam! /source/source/src/H5Gnode.c: In function 'H5G_node_insert':
kablam! /source/source/src/H5Gnode.c:718:10: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!       idx -= H5F_SYM_LEAF_K(f);
kablam!           ^
kablam! In file included from /source/source/src/H5Cprivate.h:37:0,
kablam!                  from /source/source/src/H5ACprivate.h:35,
kablam!                  from /source/source/src/H5Gnode.c:41:
kablam! /source/source/src/H5Fprivate.h:275:33: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!  #define H5F_SYM_LEAF_K(F)       (H5F_sym_leaf_k(F))
kablam!                                  ^
kablam! /source/source/src/H5Gnode.c:718:13: note: in expansion of macro 'H5F_SYM_LEAF_K'
kablam!       idx -= H5F_SYM_LEAF_K(f);
kablam!              ^
kablam! /source/source/src/H5Gnode.c: In function 'H5G_node_remove':
kablam! /source/source/src/H5Gnode.c:792:21: warning: unused variable 'lt_key' [-Wunused-variable]
kablam!      H5G_node_key_t *lt_key = (H5G_node_key_t *)_lt_key;
kablam!                      ^
kablam! /source/source/src/H5Gnode.c: In function 'H5G__node_copy':
kablam! /source/source/src/H5Gnode.c:1294:28: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!              grp_loc.oloc = (H5O_loc_t *)src_oloc;
kablam!                             ^
kablam! In file included from /source/source/src/H5Gnode.c:45:0:
kablam! /source/source/src/H5Gnode.c: In function 'H5G__node_iterate_size':
kablam! /source/source/src/H5Gpkg.h:58:32: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!      + ((2 * H5F_SYM_LEAF_K(f)) * H5G_SIZEOF_ENTRY(f))                         \
kablam!                                 ^
kablam! /source/source/src/H5Gnode.c:1481:19: note: in expansion of macro 'H5G_NODE_SIZE'
kablam!      *stab_size += H5G_NODE_SIZE(f);
kablam!                    ^
kablam! /source/source/src/H5Gnode.c: In function 'H5G_node_debug':
kablam! /source/source/src/H5Gnode.c:1550:9: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!          fwidth = MAX(0, fwidth - 3);
kablam!          ^
kablam! /source/source/src/H5Gobj.c: In function 'H5G__obj_create_real':
kablam! /source/source/src/H5Gobj.c:272:67: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!          if(H5O_msg_create(oloc, H5O_LINFO_ID, 0, H5O_UPDATE_TIME, (void *)linfo, dxpl_id) < 0)
kablam!                                                                    ^
kablam! /source/source/src/H5Gobj.c:277:73: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!          if(H5O_msg_create(oloc, H5O_GINFO_ID, H5O_MSG_FLAG_CONSTANT, 0, (void *)ginfo, dxpl_id) < 0)
kablam!                                                                          ^
kablam! /source/source/src/H5Gobj.c:283:77: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!              if(H5O_msg_create(oloc, H5O_PLINE_ID, H5O_MSG_FLAG_CONSTANT, 0, (void *)pline, dxpl_id) < 0)
kablam!                                                                              ^
kablam! /source/source/src/H5Gobj.c: In function 'H5G_obj_stab_to_new_cb':
kablam! /source/source/src/H5Gobj.c:433:51: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!      if(H5G_obj_insert(udata->grp_oloc, lnk->name, (H5O_link_t *)lnk, FALSE,
kablam!                                                    ^
kablam! /source/source/src/H5Gtraverse.c: In function 'H5G_traverse_real':
kablam! /source/source/src/H5Gtraverse.c:743:52: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!                      if(H5O_msg_reset(H5O_GINFO_ID, (void *)ginfo) < 0)
kablam!                                                     ^
kablam! /source/source/src/H5Gtraverse.c:747:52: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!                      if(H5O_msg_reset(H5O_LINFO_ID, (void *)linfo) < 0)
kablam!                                                     ^
kablam! /source/source/src/H5Gtraverse.c:751:52: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!                      if(H5O_msg_reset(H5O_PLINE_ID, (void *)pline) < 0)
kablam!                                                     ^
kablam! In file included from /source/source/src/H5HF.c:41:0:
kablam! /source/source/src/H5HF.c: In function 'H5HF_op_write':
kablam! /source/source/src/H5HF.c:130:14: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!      HDmemcpy((void *)obj, op_data, obj_len);    /* Casting away const OK -QAK */
kablam!               ^
kablam! /source/source/src/H5private.h:1005:47: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                ^
kablam! /source/source/src/H5HF.c: In function 'H5HF_insert':
kablam! /source/source/src/H5HF.c:375:49: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!          if(H5HF_huge_insert(hdr, dxpl_id, size, (void *)obj, id) < 0)
kablam!                                                  ^
kablam! /source/source/src/H5HFcache.c: In function 'H5HF_cache_hdr_flush':
kablam! /source/source/src/H5HFcache.c:503:23: warning: conversion to 'uint8_t {aka unsigned char}' from 'int' may alter its value [-Wconversion]
kablam!          heap_flags |= (hdr->huge_ids_wrapped ?  H5HF_HDR_FLAGS_HUGE_ID_WRAPPED : 0);
kablam!                        ^
kablam! /source/source/src/H5HFcache.c:504:23: warning: conversion to 'uint8_t {aka unsigned char}' from 'int' may alter its value [-Wconversion]
kablam!          heap_flags |= (hdr->checksum_dblocks ?  H5HF_HDR_FLAGS_CHECKSUM_DBLOCKS : 0);
kablam!                        ^
kablam! /source/source/src/H5HFcache.c: In function 'H5HF_cache_iblock_load':
kablam! /source/source/src/H5HFcache.c:708:25: warning: size of 'iblock_buf' is 4096 bytes [-Wlarger-than=]
kablam!      uint8_t             iblock_buf[H5HF_IBLOCK_BUF_SIZE]; /* Buffer for indirect block */
kablam!                          ^
kablam! In file included from /source/source/src/H5HFcache.c:40:0:
kablam! /source/source/src/H5HFpkg.h:133:79: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!      + (MIN(r, (h)->man_dtable.max_direct_rows) * (h)->man_dtable.cparam.width * H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE(h)) /* Size of entries for direct blocks */ \
kablam!                                                                                ^
kablam! /source/source/src/H5HFcache.c:749:20: note: in expansion of macro 'H5HF_MAN_INDIRECT_SIZE'
kablam!      iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);
kablam!                     ^
kablam! /source/source/src/H5HFpkg.h:133:5: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!      + (MIN(r, (h)->man_dtable.max_direct_rows) * (h)->man_dtable.cparam.width * H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE(h)) /* Size of entries for direct blocks */ \
kablam!      ^
kablam! /source/source/src/H5HFcache.c:749:20: note: in expansion of macro 'H5HF_MAN_INDIRECT_SIZE'
kablam!      iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);
kablam!                     ^
kablam! /source/source/src/H5HFcache.c: In function 'H5HF_cache_iblock_flush':
kablam! /source/source/src/H5HFcache.c:906:17: warning: size of 'iblock_buf' is 4096 bytes [-Wlarger-than=]
kablam!      uint8_t     iblock_buf[H5HF_IBLOCK_BUF_SIZE]; /* Buffer for indirect block */
kablam!                  ^
kablam! In file included from /source/source/src/H5HFcache.c:37:0:
kablam! /source/source/src/H5HFcache.c: In function 'H5HF_cache_dblock_load':
kablam! /source/source/src/H5HFcache.c:1349:18: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!          HDmemset((uint8_t *)p - H5HF_SIZEOF_CHKSUM, 0, (size_t)H5HF_SIZEOF_CHKSUM);
kablam!                   ^
kablam! /source/source/src/H5private.h:1011:39: note: in definition of macro 'HDmemset'
kablam!      #define HDmemset(X,C,Z)    memset(X,C,Z)
kablam!                                        ^
kablam! /source/source/src/H5HFdbg.c: In function 'H5HF_hdr_print':
kablam! /source/source/src/H5HFdbg.c:259:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!      H5HF_dtable_debug(&hdr->man_dtable, stream, indent + 3, MAX(0, fwidth - 3));
kablam!      ^
kablam! /source/source/src/H5HFdbg.c:267:23: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                        hdr->pline_root_direct_size);
kablam!                        ^
kablam! /source/source/src/H5HFdbg.c:270:23: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                        hdr->pline_root_direct_filter_mask);
kablam!                        ^
kablam! /source/source/src/H5HFdbg.c:273:30: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                               indent + 3, MAX(0, fwidth - 3));
kablam!                               ^
kablam! /source/source/src/H5HFdbg.c:283:19: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                    hdr->root_iblock_flags);
kablam!                    ^
kablam! /source/source/src/H5HFdbg.c:286:19: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                    hdr->root_iblock);
kablam!                    ^
kablam! /source/source/src/H5HFdbg.c: In function 'H5HF_dblock_debug_cb':
kablam! /source/source/src/H5HFdbg.c:402:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!    start, len);
kablam!    ^
kablam! In file included from /source/source/src/H5HFdbg.c:40:0:
kablam! /source/source/src/H5HFdbg.c: In function 'H5HF_dblock_debug':
kablam! /source/source/src/H5HFpkg.h:109:41: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!  #define H5HF_MAN_ABS_DIRECT_OVERHEAD(h) (                                     \
kablam!                                          ^
kablam! /source/source/src/H5HFdbg.c:483:23: note: in expansion of macro 'H5HF_MAN_ABS_DIRECT_OVERHEAD'
kablam!      blk_prefix_size = H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr);
kablam!                        ^
kablam! /source/source/src/H5HFdbg.c: In function 'H5HF_iblock_print':
kablam! /source/source/src/H5HFdbg.c:622:17: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                  temp_str);
kablam!                  ^
kablam! /source/source/src/H5HFdbg.c:632:25: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                          iblock->filt_ents[off].filter_mask);
kablam!                          ^
kablam! /source/source/src/H5HFdbg.c:636:25: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                          iblock->ents[off].addr);
kablam!                          ^
kablam! /source/source/src/H5HFdbg.c:650:21: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                      temp_str);
kablam!                      ^
kablam! /source/source/src/H5HFdbg.c:657:25: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                          iblock->ents[off].addr);
kablam!                          ^
kablam! /source/source/src/H5HFdbg.c:663:19: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                    "<none>");
kablam!                    ^
kablam! /source/source/src/H5HFdbg.c:672:19: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                    iblock->rc);
kablam!                    ^
kablam! /source/source/src/H5HFdbg.c:677:19: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                    iblock->parent);
kablam!                    ^
kablam! /source/source/src/H5HFdbg.c: In function 'H5HF_sects_debug_cb':
kablam! /source/source/src/H5HFdbg.c:791:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!      if(H5FS_sect_debug(udata->fspace, _sect, udata->stream, udata->indent + 3, MAX(0, udata->fwidth - 3)) < 0)
kablam!      ^
kablam! /source/source/src/H5HFdblock.c: In function 'H5HF_man_dblock_create':
kablam! /source/source/src/H5HFdblock.c:143:31: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!      free_space = dblock->size - H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr);
kablam!                                ^
kablam! /source/source/src/H5HFdblock.c:171:68: warning: conversion to 'hsize_t {aka long long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!      if(NULL == (sec_node = H5HF_sect_single_new((dblock->block_off + H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr)),
kablam!                                                                     ^
kablam! /source/source/src/H5HFdblock.c: In function 'H5HF_man_dblock_new':
kablam! /source/source/src/H5HFdblock.c:363:36: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
kablam!      if((min_dblock_size - request) < H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr))
kablam!                                     ^
kablam! /source/source/src/H5HFdtable.c: In function 'H5HF_dtable_size_to_row':
kablam! /source/source/src/H5HFdtable.c:241:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5HF_dtable_size_to_row(const H5HF_dtable_t *dtable, size_t block_size)
kablam!  ^
kablam! /source/source/src/H5HFdtable.c: In function 'H5HF_dtable_size_to_rows':
kablam! /source/source/src/H5HFdtable.c:275:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5HF_dtable_size_to_rows(const H5HF_dtable_t *dtable, hsize_t size)
kablam!  ^
kablam! /source/source/src/H5HFdtable.c: In function 'H5HF_dtable_span_size':
kablam! /source/source/src/H5HFdtable.c:306:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5HF_dtable_span_size(const H5HF_dtable_t *dtable, unsigned start_row,
kablam!  ^
kablam! In file included from /source/source/src/H5HFhdr.c:36:0:
kablam! /source/source/src/H5HFhdr.c: In function 'H5HF_hdr_finish_init_phase1':
kablam! /source/source/src/H5private.h:321:21: warning: conversion to 'uint8_t {aka unsigned char}' from 'unsigned int' may alter its value [-Wconversion]
kablam!  #define MIN(a,b)    (((a)<(b)) ? (a) : (b))
kablam!                      ^
kablam! /source/source/src/H5HFhdr.c:226:26: note: in expansion of macro 'MIN'
kablam!      hdr->heap_len_size = MIN(hdr->man_dtable.max_dir_blk_off_size,
kablam!                           ^
kablam! /source/source/src/H5private.h:321:21: warning: conversion to 'uint8_t {aka unsigned char}' from 'unsigned int' may alter its value [-Wconversion]
kablam!  #define MIN(a,b)    (((a)<(b)) ? (a) : (b))
kablam!                      ^
kablam! /source/source/src/H5HFhdr.c:226:26: note: in expansion of macro 'MIN'
kablam!      hdr->heap_len_size = MIN(hdr->man_dtable.max_dir_blk_off_size,
kablam!                           ^
kablam! /source/source/src/H5HFhdr.c: In function 'H5HF_hdr_finish_init_phase2':
kablam! /source/source/src/H5HFhdr.c:263:88: warning: conversion to 'hsize_t {aka long long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!              hdr->man_dtable.row_tot_dblock_free[u] = hdr->man_dtable.row_block_size[u] -
kablam!                                                                                         ^
kablam! /source/source/src/H5HFhdr.c: In function 'H5HF_hdr_create':
kablam! /source/source/src/H5HFhdr.c:435:36: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!          if(0 == (hdr->filter_len = H5O_msg_raw_size(hdr->f, H5O_PLINE_ID, FALSE, &(hdr->pline))))
kablam!                                     ^
kablam! /source/source/src/H5HFhdr.c:442:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!              + hdr->filter_len;                  /* Size of encoded I/O filter info */
kablam!              ^
kablam! In file included from /source/source/src/H5HFhdr.c:38:0:
kablam! /source/source/src/H5HFpkg.h:74:33: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!  #define H5HF_HEADER_SIZE(h)     (                                             \
kablam!                                  ^
kablam! /source/source/src/H5HFhdr.c:446:26: note: in expansion of macro 'H5HF_HEADER_SIZE'
kablam!          hdr->heap_size = H5HF_HEADER_SIZE(hdr);
kablam!                           ^
kablam! /source/source/src/H5HFhdr.c:464:31: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!                  hdr->id_len = 1         /* ID flags */
kablam!                                ^
kablam! /source/source/src/H5HFhdr.c:470:31: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!                  hdr->id_len = 1         /* ID flags */
kablam!                                ^
kablam! In file included from /source/source/src/H5HFhdr.c:38:0:
kablam! /source/source/src/H5HFpkg.h:109:41: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!  #define H5HF_MAN_ABS_DIRECT_OVERHEAD(h) (                                     \
kablam!                                          ^
kablam! /source/source/src/H5HFhdr.c:494:23: note: in expansion of macro 'H5HF_MAN_ABS_DIRECT_OVERHEAD'
kablam!      dblock_overhead = H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr);
kablam!                        ^
kablam! /source/source/src/H5HFhdr.c: In function 'H5HF_hdr_adj_free':
kablam! /source/source/src/H5HFhdr.c:763:25: warning: conversion to 'long long unsigned int' from 'ssize_t {aka long int}' may change the sign of the result [-Wsign-conversion]
kablam!      hdr->total_man_free += amt;
kablam!                          ^
kablam! /source/source/src/H5HFhdr.c: In function 'H5HF_hdr_adjust_heap':
kablam! /source/source/src/H5HFhdr.c:803:25: warning: conversion to 'long long unsigned int' from 'hssize_t {aka long long int}' may change the sign of the result [-Wsign-conversion]
kablam!      hdr->total_man_free += extra_free;
kablam!                          ^
kablam! /source/source/src/H5HFhdr.c: In function 'H5HF_hdr_reverse_iter':
kablam! /source/source/src/H5HFhdr.c:1245:21: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!          tmp_entry = curr_entry;
kablam!                      ^
kablam! /source/source/src/H5HFhdr.c:1280:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!              curr_entry = tmp_entry;
kablam!                           ^
kablam! /source/source/src/H5HFhuge.c: In function 'H5HF_huge_bt2_create':
kablam! /source/source/src/H5HFhuge.c:127:36: warning: conversion to 'uint32_t {aka unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!              bt2_cparam.rrec_size = (size_t)(hdr->sizeof_addr    /* Address of object */
kablam!                                     ^
kablam! /source/source/src/H5HFhuge.c:134:36: warning: conversion to 'uint32_t {aka unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!              bt2_cparam.rrec_size = (size_t)(hdr->sizeof_addr    /* Address of object */
kablam!                                     ^
kablam! /source/source/src/H5HFhuge.c:141:36: warning: conversion to 'uint32_t {aka unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!              bt2_cparam.rrec_size = (size_t)(hdr->sizeof_addr    /* Address of filtered object */
kablam!                                     ^
kablam! /source/source/src/H5HFhuge.c:149:36: warning: conversion to 'uint32_t {aka unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!              bt2_cparam.rrec_size = (size_t)(hdr->sizeof_addr    /* Address of object */
kablam!                                     ^
kablam! /source/source/src/H5HFhdr.c:1205:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5HF_hdr_reverse_iter(H5HF_hdr_t *hdr, hid_t dxpl_id, haddr_t dblock_addr)
kablam!  ^
kablam! /source/source/src/H5HFiblock.c: In function 'H5HF_iblock_unpin':
kablam! /source/source/src/H5HFiblock.c:216:44: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]
kablam!              iblock->hdr->root_iblock_flags &= ~(H5HF_ROOT_IBLOCK_PINNED);
kablam!                                             ^
kablam! In file included from /source/source/src/H5HFiblock.c:39:0:
kablam! /source/source/src/H5HFiblock.c: In function 'H5HF_man_iblock_root_double':
kablam! /source/source/src/H5HFpkg.h:133:79: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!      + (MIN(r, (h)->man_dtable.max_direct_rows) * (h)->man_dtable.cparam.width * H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE(h)) /* Size of entries for direct blocks */ \
kablam!                                                                                ^
kablam! /source/source/src/H5HFiblock.c:592:20: note: in expansion of macro 'H5HF_MAN_INDIRECT_SIZE'
kablam!      iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);
kablam!                     ^
kablam! /source/source/src/H5HFpkg.h:133:5: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!      + (MIN(r, (h)->man_dtable.max_direct_rows) * (h)->man_dtable.cparam.width * H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE(h)) /* Size of entries for direct blocks */ \
kablam!      ^
kablam! /source/source/src/H5HFiblock.c:592:20: note: in expansion of macro 'H5HF_MAN_INDIRECT_SIZE'
kablam!      iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);
kablam!                     ^
kablam! /source/source/src/H5HFiblock.c:631:24: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!          unsigned row = u / hdr->man_dtable.cparam.width;        /* Row for current entry */
kablam!                         ^
kablam! /source/source/src/H5HFiblock.c: In function 'H5HF_man_iblock_root_halve':
kablam! /source/source/src/H5HFiblock.c:733:17: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!      new_nrows = 1 << (1 + H5VM_log2_gen((uint64_t)max_child_row));
kablam!                  ^
kablam! In file included from /source/source/src/H5HFiblock.c:39:0:
kablam! /source/source/src/H5HFpkg.h:133:79: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!      + (MIN(r, (h)->man_dtable.max_direct_rows) * (h)->man_dtable.cparam.width * H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE(h)) /* Size of entries for direct blocks */ \
kablam!                                                                                ^
kablam! /source/source/src/H5HFiblock.c:761:20: note: in expansion of macro 'H5HF_MAN_INDIRECT_SIZE'
kablam!      iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);
kablam!                     ^
kablam! /source/source/src/H5HFpkg.h:133:5: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!      + (MIN(r, (h)->man_dtable.max_direct_rows) * (h)->man_dtable.cparam.width * H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE(h)) /* Size of entries for direct blocks */ \
kablam!      ^
kablam! /source/source/src/H5HFiblock.c:761:20: note: in expansion of macro 'H5HF_MAN_INDIRECT_SIZE'
kablam!      iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);
kablam!                     ^
kablam! /source/source/src/H5HFiblock.c: In function 'H5HF_man_iblock_create':
kablam! /source/source/src/H5HFpkg.h:133:79: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!      + (MIN(r, (h)->man_dtable.max_direct_rows) * (h)->man_dtable.cparam.width * H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE(h)) /* Size of entries for direct blocks */ \
kablam!                                                                                ^
kablam! /source/source/src/H5HFiblock.c:1030:20: note: in expansion of macro 'H5HF_MAN_INDIRECT_SIZE'
kablam!      iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);
kablam!                     ^
kablam! /source/source/src/H5HFpkg.h:133:5: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!      + (MIN(r, (h)->man_dtable.max_direct_rows) * (h)->man_dtable.cparam.width * H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE(h)) /* Size of entries for direct blocks */ \
kablam!      ^
kablam! /source/source/src/H5HFiblock.c:1030:20: note: in expansion of macro 'H5HF_MAN_INDIRECT_SIZE'
kablam!      iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);
kablam!                     ^
kablam! /source/source/src/H5HFiblock.c: In function 'H5HF_man_iblock_unprotect':
kablam! /source/source/src/H5HFiblock.c:1283:44: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]
kablam!              iblock->hdr->root_iblock_flags &= ~(H5HF_ROOT_IBLOCK_PROTECTED);
kablam!                                             ^
kablam! /source/source/src/H5HFiblock.c: In function 'H5HF_man_iblock_dest':
kablam! /source/source/src/H5HFiblock.c:1725:22: warning: request for implicit conversion from 'void *' to 'H5HF_indirect_ent_t * {aka struct H5HF_indirect_ent_t *}' not permitted in C++ [-Wc++-compat]
kablam!          iblock->ents = H5FL_SEQ_FREE(H5HF_indirect_ent_t, iblock->ents);
kablam!                       ^
kablam! /source/source/src/H5HFiblock.c:1727:27: warning: request for implicit conversion from 'void *' to 'H5HF_indirect_filt_ent_t * {aka struct H5HF_indirect_filt_ent_t *}' not permitted in C++ [-Wc++-compat]
kablam!          iblock->filt_ents = H5FL_SEQ_FREE(H5HF_indirect_filt_ent_t, iblock->filt_ents);
kablam!                            ^
kablam! /source/source/src/H5HFiblock.c:1729:31: warning: request for implicit conversion from 'void *' to 'struct H5HF_indirect_t **' not permitted in C++ [-Wc++-compat]
kablam!          iblock->child_iblocks = H5FL_SEQ_FREE(H5HF_indirect_ptr_t, iblock->child_iblocks);
kablam!                                ^
kablam! /source/source/src/H5HFhuge.c: In function 'H5HF_huge_write':
kablam! /source/source/src/H5HFhuge.c:805:8: warning: 'obj_size' may be used uninitialized in this function [-Wmaybe-uninitialized]
kablam!      if(H5F_block_write(hdr->f, H5FD_MEM_FHEAP_HUGE_OBJ, obj_addr, obj_size, dxpl_id, obj) < 0)
kablam!         ^
kablam! /source/source/src/H5HFiter.c: In function 'H5HF_man_iter_ready':
kablam! /source/source/src/H5HFiter.c:653:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5HF_man_iter_ready(H5HF_block_iter_t *biter)
kablam!  ^
kablam! /source/source/src/H5HFman.c: In function 'H5HF_man_write':
kablam! /source/source/src/H5HFman.c:432:58: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!      if(H5HF_man_op_real(hdr, dxpl_id, id, H5HF_op_write, (void *)obj, H5HF_OP_MODIFY) < 0)
kablam!                                                           ^
kablam! /source/source/src/H5HFsection.c: In function 'H5HF_sect_single_dblock_info':
kablam! /source/source/src/H5HFsection.c:651:53: warning: unused parameter 'dxpl_id' [-Wunused-parameter]
kablam!  H5HF_sect_single_dblock_info(H5HF_hdr_t *hdr, hid_t dxpl_id,
kablam!                                                      ^
kablam! In file included from /source/source/src/H5HFsection.c:35:0:
kablam! /source/source/src/H5HFsection.c: In function 'H5HF_sect_single_full_dblock':
kablam! /source/source/src/H5HFpkg.h:109:41: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!  #define H5HF_MAN_ABS_DIRECT_OVERHEAD(h) (                                     \
kablam!                                          ^
kablam! /source/source/src/H5HFsection.c:774:23: note: in expansion of macro 'H5HF_MAN_ABS_DIRECT_OVERHEAD'
kablam!      dblock_overhead = H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr);
kablam!                        ^
kablam! /source/source/src/H5HFsection.c: In function 'H5HF_sect_single_can_shrink':
kablam! /source/source/src/H5HFpkg.h:109:41: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!  #define H5HF_MAN_ABS_DIRECT_OVERHEAD(h) (                                     \
kablam!                                          ^
kablam! /source/source/src/H5HFsection.c:1034:27: note: in expansion of macro 'H5HF_MAN_ABS_DIRECT_OVERHEAD'
kablam!          dblock_overhead = H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr);
kablam!                            ^
kablam! /source/source/src/H5HFsection.c: In function 'H5HF_sect_single_valid':
kablam! /source/source/src/H5HFsection.c:1200:78: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!              status = H5HF_sect_single_dblock_info(iblock->hdr, H5AC_dxpl_id, (H5HF_free_section_t *)sect, &dblock_addr, &dblock_size);
kablam!                                                                               ^
kablam! In file included from /source/source/src/H5HFsection.c:35:0:
kablam! /source/source/src/H5HFpkg.h:109:41: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!  #define H5HF_MAN_ABS_DIRECT_OVERHEAD(h) (                                     \
kablam!                                          ^
kablam! /source/source/src/H5HFsection.c:1209:31: note: in expansion of macro 'H5HF_MAN_ABS_DIRECT_OVERHEAD'
kablam!              dblock_overhead = H5HF_MAN_ABS_DIRECT_OVERHEAD(iblock->hdr);
kablam!                                ^
kablam! /source/source/src/H5HFsection.c:1192:20: warning: variable 'status' set but not used [-Wunused-but-set-variable]
kablam!              herr_t status;              /* Generic status value */
kablam!                     ^
kablam! /source/source/src/H5HFsection.c:1190:20: warning: variable 'dblock_overhead' set but not used [-Wunused-but-set-variable]
kablam!              size_t dblock_overhead;     /* Direct block's overhead */
kablam!                     ^
kablam! /source/source/src/H5HFsection.c: In function 'H5HF_sect_row_init_cls':
kablam! /source/source/src/H5HFsection.c:44:43: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!  #define H5HF_SECT_INDIRECT_SERIAL_SIZE(h) (                                   \
kablam!                                            ^
kablam! /source/source/src/H5HFsection.c:1569:28: note: in expansion of macro 'H5HF_SECT_INDIRECT_SERIAL_SIZE'
kablam!          cls->serial_size = H5HF_SECT_INDIRECT_SERIAL_SIZE(hdr);
kablam!                             ^
kablam! /source/source/src/H5HFsection.c: In function 'H5HF_sect_row_valid':
kablam! /source/source/src/H5HFsection.c:2000:14: warning: variable 'indir_idx' set but not used [-Wunused-but-set-variable]
kablam!      unsigned indir_idx;         /* Index of row in underlying indirect section's row array */
kablam!               ^
kablam! /source/source/src/H5HFsection.c: In function 'H5HF_sect_row_debug':
kablam! /source/source/src/H5HFsection.c:2082:9: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!          H5HF_sect_indirect_debug(sect->u.row.under, stream, indent + 3, MAX(0, fwidth - 3));
kablam!          ^
kablam! /source/source/src/H5HFsection.c: In function 'H5HF_sect_indirect_init_cls':
kablam! /source/source/src/H5HFsection.c:44:43: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!  #define H5HF_SECT_INDIRECT_SERIAL_SIZE(h) (                                   \
kablam!                                            ^
kablam! /source/source/src/H5HFsection.c:2185:24: note: in expansion of macro 'H5HF_SECT_INDIRECT_SERIAL_SIZE'
kablam!      cls->serial_size = H5HF_SECT_INDIRECT_SERIAL_SIZE(hdr);
kablam!                         ^
kablam! In file included from /source/source/src/H5HFsection.c:35:0:
kablam! /source/source/src/H5HFsection.c: In function 'H5HF_sect_indirect_init_rows':
kablam! /source/source/src/H5HFpkg.h:109:41: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!  #define H5HF_MAN_ABS_DIRECT_OVERHEAD(h) (                                     \
kablam!                                          ^
kablam! /source/source/src/H5HFsection.c:2478:23: note: in expansion of macro 'H5HF_MAN_ABS_DIRECT_OVERHEAD'
kablam!      dblock_overhead = H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr);
kablam!                        ^
kablam! /source/source/src/H5HFsection.c: In function 'H5HF_sect_indirect_valid':
kablam! /source/source/src/H5HFsection.c:4107:44: warning: variable 'tmp_row_sect2' set but not used [-Wunused-but-set-variable]
kablam!                  const H5HF_free_section_t *tmp_row_sect2;    /* Pointer to row section */
kablam!                                             ^
kablam! /source/source/src/H5HFsection.c:4099:40: warning: variable 'tmp_row_sect' set but not used [-Wunused-but-set-variable]
kablam!              const H5HF_free_section_t *tmp_row_sect;    /* Pointer to row section */
kablam!                                         ^
kablam! /source/source/src/H5HFsection.c:4134:44: warning: variable 'tmp_child_sect2' set but not used [-Wunused-but-set-variable]
kablam!                  const H5HF_free_section_t *tmp_child_sect2;    /* Pointer to child indirect section */
kablam!                                             ^
kablam! /source/source/src/H5HFsection.c: In function 'H5HF_sect_indirect_top':
kablam! /source/source/src/H5HFsection.c:2134:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5HF_sect_indirect_top(H5HF_free_section_t *sect)
kablam!  ^
kablam! /source/source/src/H5HFsection.c: In function 'H5HF_sect_row_can_merge':
kablam! /source/source/src/H5HFsection.c:1716:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5HF_sect_row_can_merge(const H5FS_section_info_t *_sect1,
kablam!  ^
kablam! /source/source/src/H5HFsection.c: In function 'H5HF_sect_indirect_is_first.isra.0':
kablam! /source/source/src/H5HFsection.c:3389:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5HF_sect_indirect_is_first(H5HF_free_section_t *sect)
kablam!  ^
kablam! /source/source/src/H5HFsection.c: In function 'H5HF_sect_indirect_valid.isra.2':
kablam! /source/source/src/H5HFsection.c:4060:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5HF_sect_indirect_valid(const H5HF_hdr_t *hdr, const H5HF_free_section_t *sect)
kablam!  ^
kablam! /source/source/src/H5HFsection.c: In function 'H5HF_sect_row_get_iblock':
kablam! /source/source/src/H5HFsection.c:1514:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5HF_sect_row_get_iblock(H5HF_free_section_t *sect)
kablam!  ^
kablam! /source/source/src/H5HFsection.c: At top level:
kablam! /source/source/src/H5HFsection.c:4060:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5HF_sect_indirect_valid(const H5HF_hdr_t *hdr, const H5HF_free_section_t *sect)
kablam!  ^
kablam! /source/source/src/H5HFsection.c:1994:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5HF_sect_row_valid(const H5FS_section_class_t *cls, const H5FS_section_info_t *_sect)
kablam!  ^
kablam! /source/source/src/H5HFtest.c: In function 'H5HF_get_cparam_test':
kablam! /source/source/src/H5HFtest.c:99:29: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
kablam!      else if(fh->hdr->id_len == (1 + fh->hdr->sizeof_size + fh->hdr->sizeof_addr))
kablam!                              ^
kablam! /source/source/src/H5HFtest.c:102:26: warning: conversion to 'uint16_t {aka short unsigned int}' from 'unsigned int' may alter its value [-Wconversion]
kablam!          cparam->id_len = fh->hdr->id_len;
kablam!                           ^
kablam! /source/source/src/H5HFtest.c: In function 'H5HF_cmp_cparam_test':
kablam! /source/source/src/H5HFtest.c:125:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5HF_cmp_cparam_test(const H5HF_create_t *cparam1, const H5HF_create_t *cparam2)
kablam!  ^
kablam! /source/source/src/H5HFtest.c: In function 'H5HF_get_max_root_rows':
kablam! /source/source/src/H5HFtest.c:245:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5HF_get_max_root_rows(const H5HF_t *fh)
kablam!  ^
kablam! /source/source/src/H5HFtest.c: In function 'H5HF_get_dtable_width_test':
kablam! /source/source/src/H5HFtest.c:276:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5HF_get_dtable_width_test(const H5HF_t *fh)
kablam!  ^
kablam! /source/source/src/H5HFtest.c: In function 'H5HF_get_dtable_max_drows_test':
kablam! /source/source/src/H5HFtest.c:307:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5HF_get_dtable_max_drows_test(const H5HF_t *fh)
kablam!  ^
kablam! /source/source/src/H5HFtest.c: In function 'H5HF_get_iblock_max_drows_test':
kablam! /source/source/src/H5HFtest.c:342:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5HF_get_iblock_max_drows_test(const H5HF_t *fh, unsigned pos)
kablam!  ^
kablam! /source/source/src/H5HFtest.c: In function 'H5HF_get_dblock_size_test':
kablam! /source/source/src/H5HFtest.c:375:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5HF_get_dblock_size_test(const H5HF_t *fh, unsigned row)
kablam!  ^
kablam! /source/source/src/H5HFtest.c: In function 'H5HF_get_dblock_free_test':
kablam! /source/source/src/H5HFtest.c:407:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5HF_get_dblock_free_test(const H5HF_t *fh, unsigned row)
kablam!  ^
kablam! In file included from /source/source/src/H5HFtiny.c:39:0:
kablam! /source/source/src/H5HFtiny.c: In function 'H5HF_tiny_insert':
kablam! /source/source/src/H5HFpkg.h:143:33: warning: conversion to 'uint8_t {aka unsigned char}' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!  #define H5HF_ID_VERS_CURR       0x00    /* Current version of ID format */
kablam!                                  ^
kablam! /source/source/src/H5HFtiny.c:172:17: note: in expansion of macro 'H5HF_ID_VERS_CURR'
kablam!          *id++ = H5HF_ID_VERS_CURR | H5HF_ID_TYPE_TINY |
kablam!                  ^
kablam! /source/source/src/H5HFpkg.h:143:33: warning: conversion to 'uint8_t {aka unsigned char}' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!  #define H5HF_ID_VERS_CURR       0x00    /* Current version of ID format */
kablam!                                  ^
kablam! /source/source/src/H5HFtiny.c:176:17: note: in expansion of macro 'H5HF_ID_VERS_CURR'
kablam!          *id++ = H5HF_ID_VERS_CURR | H5HF_ID_TYPE_TINY |
kablam!                  ^
kablam! /source/source/src/H5HFtiny.c: In function 'H5HF_tiny_get_obj_len':
kablam! /source/source/src/H5HFtiny.c:232:24: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!          enc_obj_size = *(id + 1) | ((*id & H5HF_TINY_MASK_EXT_1) << 8);
kablam!                         ^
kablam! /source/source/src/H5HFtiny.c: In function 'H5HF_tiny_op_real':
kablam! /source/source/src/H5HFtiny.c:283:24: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!          enc_obj_size = *(id + 1) | ((*id & H5HF_TINY_MASK_EXT_1) << 8);
kablam!                         ^
kablam! /source/source/src/H5HFtiny.c: In function 'H5HF_tiny_remove':
kablam! /source/source/src/H5HFtiny.c:408:24: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!          enc_obj_size = *(id + 1) | ((*id & H5HF_TINY_MASK_EXT_1) << 8);
kablam!                         ^
kablam! /source/source/src/H5HG.c: In function 'H5HG_create':
kablam! /source/source/src/H5HG.c:185:37: warning: conversion to 'long unsigned int' from 'long int' may change the sign of the result [-Wsign-conversion]
kablam!      n = H5HG_ALIGN(p - heap->chunk) - (size_t)(p - heap->chunk);
kablam!                                      ^
kablam! /source/source/src/H5HG.c: In function 'H5HG_free':
kablam! /source/source/src/H5HG.c:844:19: warning: request for implicit conversion from 'void *' to 'H5HG_obj_t * {aka struct H5HG_obj_t *}' not permitted in C++ [-Wc++-compat]
kablam!          heap->obj = H5FL_SEQ_FREE(H5HG_obj_t, heap->obj);
kablam!                    ^
kablam! /source/source/src/H5HGcache.c: In function 'H5HG_load':
kablam! /source/source/src/H5HGcache.c:186:26: warning: conversion to 'size_t {aka long unsigned int}' from 'long int' may change the sign of the result [-Wsign-conversion]
kablam!       heap->obj[0].size = ((const uint8_t *)heap->chunk + heap->size) - p;
kablam!                           ^
kablam! /source/source/src/H5HGcache.c:114:56: warning: unused parameter 'udata' [-Wunused-parameter]
kablam!  H5HG_load(H5F_t *f, hid_t dxpl_id, haddr_t addr, void *udata)
kablam!                                                         ^
kablam! /source/source/src/H5HGdbg.c: In function 'H5HG_debug':
kablam! /source/source/src/H5HGdbg.c:144:8: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!         (unsigned long)(h->obj[u].begin - h->chunk));
kablam!         ^
kablam! /source/source/src/H5HGdbg.c:147:8: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!         h->obj[u].nrefs);
kablam!         ^
kablam! /source/source/src/H5HGdbg.c:152:8: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!         (unsigned long)H5HG_ALIGN(h->obj[u].size));
kablam!         ^
kablam! /source/source/src/H5HGquery.c: In function 'H5HG_get_addr':
kablam! /source/source/src/H5HGquery.c:88:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5HG_get_addr(const H5HG_heap_t *heap)
kablam!  ^
kablam! /source/source/src/H5HGquery.c: In function 'H5HG_get_size':
kablam! /source/source/src/H5HGquery.c:112:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5HG_get_size(const H5HG_heap_t *heap)
kablam!  ^
kablam! /source/source/src/H5HGquery.c: In function 'H5HG_get_free_size':
kablam! /source/source/src/H5HGquery.c:136:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5HG_get_free_size(const H5HG_heap_t *heap)
kablam!  ^
kablam! /source/source/src/H5HLcache.c: In function 'H5HL_datablock_load':
kablam! /source/source/src/H5HLcache.c:627:54: warning: unused parameter 'addr' [-Wunused-parameter]
kablam!  H5HL_datablock_load(H5F_t *f, hid_t dxpl_id, haddr_t addr, void *_udata)
kablam!                                                       ^
kablam! /source/source/src/H5HLcache.c: In function 'H5HL_datablock_flush':
kablam! /source/source/src/H5HLcache.c:693:72: warning: unused parameter 'addr' [-Wunused-parameter]
kablam!  H5HL_datablock_flush(H5F_t *f, hid_t dxpl_id, hbool_t destroy, haddr_t addr,
kablam!                                                                         ^
kablam! /source/source/src/H5HL.c: In function 'H5HL_offset_into':
kablam! /source/source/src/H5HL.c:536:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5HL_offset_into(const H5HL_t *heap, size_t offset)
kablam!  ^
kablam! /source/source/src/H5HLdbg.c: In function 'H5HL_debug':
kablam! /source/source/src/H5HLdbg.c:100:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!    freelist->offset, freelist->size);
kablam!    ^
kablam! /source/source/src/H5HP.c: In function 'H5HP_create':
kablam! /source/source/src/H5HP.c:384:32: warning: request for implicit conversion from 'void *' to 'H5HP_ent_t * {aka struct <anonymous> *}' not permitted in C++ [-Wc++-compat]
kablam!                  new_heap->heap = H5FL_SEQ_FREE(H5HP_ent_t, new_heap->heap);
kablam!                                 ^
kablam! /source/source/src/H5HP.c: In function 'H5HP_decr':
kablam! /source/source/src/H5HP.c:851:28: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!      heap->heap[obj_loc].val-=amt;
kablam!                             ^
kablam! /source/source/src/H5HP.c:851:30: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!      heap->heap[obj_loc].val-=amt;
kablam!                               ^
kablam! /source/source/src/H5HP.c: In function 'H5HP_close':
kablam! /source/source/src/H5HP.c:913:16: warning: request for implicit conversion from 'void *' to 'H5HP_ent_t * {aka struct <anonymous> *}' not permitted in C++ [-Wc++-compat]
kablam!      heap->heap = H5FL_SEQ_FREE(H5HP_ent_t, heap->heap);
kablam!                 ^
kablam! /source/source/src/H5HP.c: In function 'H5HP_count':
kablam! /source/source/src/H5HP.c:412:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5HP_count(const H5HP_t *heap)
kablam!  ^
kablam! /source/source/src/H5I.c: In function 'H5Iregister_type':
kablam! /source/source/src/H5I.c:254:25: warning: unused parameter 'hash_size' [-Wunused-parameter]
kablam!  H5Iregister_type(size_t hash_size, unsigned reserved, H5I_free_t free_func)
kablam!                          ^
kablam! /source/source/src/H5I.c: In function 'H5I__clear_type_cb':
kablam! /source/source/src/H5I.c:655:81: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!          if(udata->type_ptr->cls->free_func && (udata->type_ptr->cls->free_func)((void *)id->obj_ptr) < 0) {
kablam!                                                                                  ^
kablam! In file included from /source/source/src/H5I.c:47:0:
kablam! /source/source/src/H5I.c: In function 'H5I__destroy_type':
kablam! /source/source/src/H5I.c:760:48: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!          type_ptr->cls = H5FL_FREE(H5I_class_t, (void *)type_ptr->cls);
kablam!                                                 ^
kablam! /source/source/src/H5FLprivate.h:132:65: note: in definition of macro 'H5FL_FREE'
kablam!  #define H5FL_FREE(t,obj) (t *)H5FL_reg_free(&(H5FL_REG_NAME(t)),obj)
kablam!                                                                  ^
kablam! /source/source/src/H5I.c: In function 'H5I_subst':
kablam! /source/source/src/H5I.c:987:17: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!      ret_value = (void *)id_ptr->obj_ptr;
kablam!                  ^
kablam! /source/source/src/H5I.c: In function 'H5I_object':
kablam! /source/source/src/H5I.c:1022:21: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!          ret_value = (void *)id_ptr->obj_ptr;
kablam!                      ^
kablam! /source/source/src/H5I.c: In function 'H5I_object_verify':
kablam! /source/source/src/H5I.c:1097:21: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!          ret_value = (void *)id_ptr->obj_ptr;
kablam!                      ^
kablam! /source/source/src/H5I.c: In function 'H5I__remove_common':
kablam! /source/source/src/H5I.c:1271:17: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!      ret_value = (void *)curr_id->obj_ptr;
kablam!                  ^
kablam! /source/source/src/H5I.c: In function 'H5I_dec_ref':
kablam! /source/source/src/H5I.c:1445:68: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!          if(!type_ptr->cls->free_func || (type_ptr->cls->free_func)((void *)id_ptr->obj_ptr) >= 0) {
kablam!                                                                     ^
kablam! /source/source/src/H5I.c: In function 'H5I__iterate_cb':
kablam! /source/source/src/H5I.c:2104:42: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!          cb_ret_val = (*udata->user_func)((void *)item->obj_ptr, item->id, udata->user_udata);
kablam!                                           ^
kablam! /source/source/src/H5I.c: In function 'H5Iregister_type':
kablam! /source/source/src/H5I.c:254:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5Iregister_type(size_t hash_size, unsigned reserved, H5I_free_t free_func)
kablam!  ^
kablam! /source/source/src/H5L.c: In function 'H5L_link_cb':
kablam! /source/source/src/H5L.c:1718:24: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!      udata->lnk->name = (char *)name;
kablam!                         ^
kablam! /source/source/src/H5L.c: In function 'H5L_move_dest_cb':
kablam! /source/source/src/H5L.c:2437:24: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!      udata->lnk->name = (char *)name;
kablam!                         ^
kablam! /source/source/src/H5L.c: In function 'H5L_move_cb':
kablam! /source/source/src/H5L.c:2580:36: warning: passing argument 1 of 'H5RS_wrap' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!              dst_name_r = H5RS_wrap(udata->dst_name);
kablam!                                     ^
kablam! In file included from /source/source/src/H5Gprivate.h:37:0,
kablam!                  from /source/source/src/H5Tprivate.h:30,
kablam!                  from /source/source/src/H5Oprivate.h:41,
kablam!                  from /source/source/src/H5Dprivate.h:27,
kablam!                  from /source/source/src/H5L.c:30:
kablam! /source/source/src/H5RSprivate.h:49:20: note: expected 'char *' but argument is of type 'const char *'
kablam!  H5_DLL H5RS_str_t *H5RS_wrap(char *s);
kablam!                     ^
kablam! /source/source/src/H5L.c: In function 'H5L_link_copy_file':
kablam! /source/source/src/H5L.c:3014:28: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!          lnk_grp_loc.oloc = (H5O_loc_t *)src_oloc;    /* Casting away const OK -QAK */
kablam!                             ^
kablam! /source/source/src/H5L.c: In function 'H5L_find_class_idx':
kablam! /source/source/src/H5L.c:1410:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5L_find_class_idx(H5L_type_t id)
kablam!  ^
kablam! /source/source/src/H5Lexternal.c: In function 'H5L_extern_traverse':
kablam! /source/source/src/H5Lexternal.c:280:11: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]
kablam!          if((size_t)group_name_len > sizeof(local_group_name)) {
kablam!            ^
kablam! /source/source/src/H5Lexternal.c:189:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5L_extern_traverse(const char H5_ATTR_UNUSED *link_name, hid_t cur_group,
kablam!  ^
kablam! /source/source/src/H5MF.c: In function 'H5MF_init_merge_flags':
kablam! /source/source/src/H5MF.c:113:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5MF_init_merge_flags(H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5MFaggr.c: In function 'H5MF_aggr_try_extend':
kablam! /source/source/src/H5MFaggr.c:417:43: warning: conversion to 'float' from 'hsize_t {aka long long unsigned int}' may alter its value [-Wconversion]
kablam!    if(extra_requested <= (EXTEND_THRESHOLD * aggr->size)) {
kablam!                                            ^
kablam! /source/source/src/H5MPtest.c: In function 'H5MP_pool_is_free_size_correct':
kablam! /source/source/src/H5MPtest.c:119:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5MP_pool_is_free_size_correct(const H5MP_pool_t *mp)
kablam!  ^
kablam! /source/source/src/H5O.c: In function 'H5O_get_oh_addr':
kablam! /source/source/src/H5O.c:3047:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5O_get_oh_addr(const H5O_t *oh)
kablam!  ^
kablam! /source/source/src/H5Oainfo.c: In function 'H5O_ainfo_copy_file':
kablam! /source/source/src/H5Oainfo.c:405:28: warning: unused parameter 'file_src' [-Wunused-parameter]
kablam!  H5O_ainfo_copy_file(H5F_t *file_src, void *mesg_src, H5F_t *file_dst,
kablam!                             ^
kablam! /source/source/src/H5Oainfo.c:407:17: warning: unused parameter 'cpy_info' [-Wunused-parameter]
kablam!      H5O_copy_t *cpy_info, void H5_ATTR_UNUSED *udata, hid_t dxpl_id)
kablam!                  ^
kablam! /source/source/src/H5Oattr.c: In function 'H5O_attr_debug':
kablam! /source/source/src/H5Oattr.c:862:6: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!       (unsigned long)(mesg->shared->dt_size));
kablam!       ^
kablam! /source/source/src/H5Oattr.c:863:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!      if((H5O_MSG_DTYPE->debug)(f, dxpl_id, mesg->shared->dt, stream, indent + 3, MAX(0, fwidth - 3)) < 0)
kablam!      ^
kablam! /source/source/src/H5Oattr.c:869:6: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!       (unsigned long)(mesg->shared->ds_size));
kablam!       ^
kablam! /source/source/src/H5Oattr.c:870:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!      if(H5S_debug(f, dxpl_id, mesg->shared->ds, stream, indent + 3, MAX(0, fwidth - 3)) < 0)
kablam!      ^
kablam! /source/source/src/H5Oattr.c: In function 'H5O_attr_reset':
kablam! /source/source/src/H5Oattr.c:481:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]
kablam!  H5O_attr_reset(void H5_ATTR_UNUSED *_mesg)
kablam!  ^
kablam! /source/source/src/H5Oalloc.c: In function 'H5O_add_gap':
kablam! /source/source/src/H5Oalloc.c:112:20: warning: unused parameter 'f' [-Wunused-parameter]
kablam!  H5O_add_gap(H5F_t *f, H5O_t *oh, unsigned chunkno, hbool_t *chk_dirtied,
kablam!                     ^
kablam! /source/source/src/H5Oalloc.c: In function 'H5O_alloc_new_chunk':
kablam! /source/source/src/H5Oalloc.c:955:67: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!          if(NULL == (chk_proxy = H5O_chunk_protect(f, dxpl_id, oh, chunkno - 1)))
kablam!                                                                    ^
kablam! /source/source/src/H5Oalloc.c:973:41: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!                      curr_msg->chunkno = chunkno;
kablam!                                          ^
kablam! /source/source/src/H5Oalloc.c:994:29: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!          null_msg->chunkno = chunkno - 1;
kablam!                              ^
kablam! /source/source/src/H5Oalloc.c:1029:47: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!          oh->mesg[found_other.msgno].chunkno = chunkno;
kablam!                                                ^
kablam! /source/source/src/H5Oalloc.c:1081:29: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!      oh->mesg[idx].chunkno = chunkno;
kablam!                              ^
kablam! /source/source/src/H5Oalloc.c:1084:38: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!      if(H5O_chunk_add(f, dxpl_id, oh, chunkno) < 0)
kablam!                                       ^
kablam! /source/source/src/H5Oalloc.c:1092:21: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!      cont->chunkno = chunkno;
kablam!                      ^
kablam! /source/source/src/H5Ocache.c: In function 'H5O_load':
kablam! /source/source/src/H5Ocache.c:166:12: warning: variable 'prefix_size' set but not used [-Wunused-but-set-variable]
kablam!      size_t prefix_size;    /* Size of object header prefix */
kablam!             ^
kablam! /source/source/src/H5Ocache.c: In function 'H5O_cache_chk_load':
kablam! /source/source/src/H5Ocache.c:728:30: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!          chk_proxy->chunkno = udata->oh->nchunks - 1;
kablam!                               ^
kablam! /source/source/src/H5Ocache.c: In function 'H5O_chunk_deserialize':
kablam! /source/source/src/H5Ocache.c:1064:15: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!      chunkno = oh->nchunks++;
kablam!                ^
kablam! /source/source/src/H5Ocache.c:1186:36: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!              oh->mesg[mesgno].raw = (uint8_t *)p;        /* Casting away const OK - QAK */
kablam!                                     ^
kablam! /source/source/src/H5Ocache.c:1289:29: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!              cont->chunkno = udata->cont_msg_info->nmsgs + 1; /*the next continuation message/chunk */
kablam!                              ^
kablam! /source/source/src/H5Ocache.c: In function 'H5O_chunk_serialize':
kablam! /source/source/src/H5Ocache.c:1385:30: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!              if(H5O_msg_flush((H5F_t *)f, oh, curr_msg) < 0)
kablam!                               ^
kablam! /source/source/src/H5Odbg.c: In function 'H5O_debug_real':
kablam! /source/source/src/H5Odbg.c:395:19: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                    oh->chunk[i].addr);
kablam!                    ^
kablam! /source/source/src/H5Odbg.c:412:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!      chunk_size);
kablam!      ^
kablam! /source/source/src/H5Odbg.c:416:19: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                    oh->chunk[i].gap);
kablam!                    ^
kablam! /source/source/src/H5Odbg.c:448:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!      sequence[oh->mesg[i].type->id]++);
kablam!      ^
kablam! /source/source/src/H5Odbg.c:451:6: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!       oh->mesg[i].dirty);
kablam!       ^
kablam! /source/source/src/H5Odbg.c:453:20: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                     "Message flags:");
kablam!                     ^
kablam! /source/source/src/H5Odbg.c:488:28: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                             oh->mesg[i].flags & ~H5O_MSG_FLAG_BITS);
kablam!                             ^
kablam! /source/source/src/H5Odbg.c:494:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!      oh->mesg[i].chunkno);
kablam!      ^
kablam! /source/source/src/H5Odbg.c:501:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!      oh->mesg[i].raw_size);
kablam!      ^
kablam! /source/source/src/H5Odbg.c:516:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!      "Message Information:");
kablam!      ^
kablam! /source/source/src/H5Odbg.c:518:6: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!       (debug_type->debug)(f, dxpl_id, oh->mesg[i].native, stream, indent + 6, MAX(0, fwidth - 6));
kablam!       ^
kablam! /source/source/src/H5Odtype.c: In function 'H5O_dtype_copy':
kablam! /source/source/src/H5Odtype.c:1188:32: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!      if(NULL == (dst = H5T_copy(src, H5T_COPY_ALL)))
kablam!                                 ^
kablam! In file included from /source/source/src/H5Oprivate.h:41:0,
kablam!                  from /source/source/src/H5Dprivate.h:27,
kablam!                  from /source/source/src/H5Odtype.c:20:
kablam! /source/source/src/H5Tprivate.h:109:15: note: expected 'H5T_t * {aka struct H5T_t *}' but argument is of type 'const H5T_t * {aka const struct H5T_t *}'
kablam!  H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
kablam!                ^
kablam! /source/source/src/H5Odtype.c: In function 'H5O_dtype_pre_copy_file':
kablam! /source/source/src/H5Odtype.c:1533:49: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!          if(NULL == (udata->src_dtype = H5T_copy(dt_src, H5T_COPY_TRANSIENT)))
kablam!                                                  ^
kablam! In file included from /source/source/src/H5Oprivate.h:41:0,
kablam!                  from /source/source/src/H5Dprivate.h:27,
kablam!                  from /source/source/src/H5Odtype.c:20:
kablam! /source/source/src/H5Tprivate.h:109:15: note: expected 'H5T_t * {aka struct H5T_t *}' but argument is of type 'const H5T_t * {aka const struct H5T_t *}'
kablam!  H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
kablam!                ^
kablam! /source/source/src/H5Odtype.c: In function 'H5O_dtype_debug':
kablam! /source/source/src/H5Odtype.c:1732:7: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!        (unsigned long)(dt->shared->u.compnd.memb[i].offset));
kablam!        ^
kablam! /source/source/src/H5Odtype.c:1734:8: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!         indent + 3, MAX(0, fwidth - 3));
kablam!         ^
kablam! /source/source/src/H5Odtype.c:1738:2: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!   H5O_dtype_debug(f, dxpl_id, dt->shared->parent, stream, indent+3, MAX(0, fwidth-3));
kablam!   ^
kablam! /source/source/src/H5Odtype.c:1965:2: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!   H5O_dtype_debug(f, dxpl_id, dt->shared->parent, stream, indent + 3, MAX(0, fwidth - 3));
kablam!   ^
kablam! /source/source/src/H5Odtype.c: In function 'H5O_dtype_size':
kablam! /source/source/src/H5Odtype.c:1223:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5O_dtype_size(const H5F_t *f, const void *_mesg)
kablam!  ^
kablam! /source/source/src/H5Oefl.c: In function 'H5O_efl_debug':
kablam! /source/source/src/H5Oefl.c:574:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!      mesg->slot[u].name);
kablam!      ^
kablam! /source/source/src/H5Oefl.c:578:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!      (unsigned long)(mesg->slot[u].name_offset));
kablam!      ^
kablam! /source/source/src/H5Oefl.c:582:6: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!       (unsigned long)(mesg->slot[u].offset));
kablam!       ^
kablam! /source/source/src/H5Oefl.c:586:6: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!       (unsigned long)(mesg->slot[u].size));
kablam!       ^
kablam! /source/source/src/H5Odtype.c: In function 'H5O_dtype_decode_helper':
kablam! /source/source/src/H5Odtype.c:333:25: warning: cannot optimize possibly infinite loops [-Wunsafe-loop-optimizations]
kablam!                          for(j = 0; j <= i; j++)
kablam!                          ^
kablam! /source/source/src/H5Odtype.c:353:33: warning: cannot optimize possibly infinite loops [-Wunsafe-loop-optimizations]
kablam!                                  for(j = 0; j <= i; j++)
kablam!                                  ^
kablam! In file included from /source/source/src/H5Ofill.c:69:0:
kablam! /source/source/src/H5Oshared.h: In function 'H5O_fill_shared_post_copy_file':
kablam! /source/source/src/H5Oshared.h:386:44: warning: unused parameter 'oloc_src' [-Wunused-parameter]
kablam!  H5O_SHARED_POST_COPY_FILE(const H5O_loc_t *oloc_src, const void *mesg_src,
kablam!                                             ^
kablam! In file included from /source/source/src/H5Ofill.c:105:0:
kablam! /source/source/src/H5Oshared.h: In function 'H5O_fill_new_shared_post_copy_file':
kablam! /source/source/src/H5Oshared.h:386:44: warning: unused parameter 'oloc_src' [-Wunused-parameter]
kablam!  H5O_SHARED_POST_COPY_FILE(const H5O_loc_t *oloc_src, const void *mesg_src,
kablam!                                             ^
kablam! In file included from /source/source/src/H5Cprivate.h:37:0,
kablam!                  from /source/source/src/H5ACprivate.h:35,
kablam!                  from /source/source/src/H5Oprivate.h:38,
kablam!                  from /source/source/src/H5Dprivate.h:27,
kablam!                  from /source/source/src/H5Ofill.c:26:
kablam! /source/source/src/H5Ofill.c: In function 'H5O_fill_new_decode':
kablam! /source/source/src/H5Fprivate.h:132:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!     (i) |= ((int32_t)(((*(p) & 0xff) << 24) |                                  \
kablam!                                             ^
kablam! /source/source/src/H5Ofill.c:219:13: note: in expansion of macro 'INT32DECODE'
kablam!              INT32DECODE(p, fill->size);
kablam!              ^
kablam! /source/source/src/H5Olayout.c: In function 'H5O_layout_decode':
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! /source/source/src/H5Omessage.c: In function 'H5O_msg_reset_share':
kablam! /source/source/src/H5Omessage.c:1703:28: warning: variable 'type' set but not used [-Wunused-but-set-variable]
kablam!      const H5O_msg_class_t *type;        /* Actual H5O class type for the ID */
kablam!                             ^
kablam! /source/source/src/H5Omessage.c: In function 'H5O_msg_count_real':
kablam! /source/source/src/H5Omessage.c:836:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5O_msg_count_real(const H5O_t *oh, const H5O_msg_class_t *type)
kablam!  ^
kablam! /source/source/src/H5Omessage.c: In function 'H5O_msg_exists_oh':
kablam! /source/source/src/H5Omessage.c:921:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5O_msg_exists_oh(const H5O_t *oh, unsigned type_id)
kablam!  ^
kablam! /source/source/src/H5Omessage.c: In function 'H5O_msg_can_share_in_ohdr':
kablam! /source/source/src/H5Omessage.c:1574:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5O_msg_can_share_in_ohdr(unsigned type_id)
kablam!  ^
kablam! /source/source/src/H5Omessage.c: In function 'H5O_msg_is_shared':
kablam! /source/source/src/H5Omessage.c:1612:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5O_msg_is_shared(unsigned type_id, const void *mesg)
kablam!  ^
kablam! /source/source/src/H5Omtime.c: In function 'H5O_mtime_decode':
kablam! /source/source/src/H5Omtime.c:182:5: warning: "_MSC_VER" is not defined [-Wundef]
kablam!  #if _MSC_VER >= 1900  // VS 2015
kablam!      ^
kablam! In file included from /source/source/src/H5Opline.c:67:0:
kablam! /source/source/src/H5Oshared.h: In function 'H5O_pline_shared_post_copy_file':
kablam! /source/source/src/H5Oshared.h:386:44: warning: unused parameter 'oloc_src' [-Wunused-parameter]
kablam!  H5O_SHARED_POST_COPY_FILE(const H5O_loc_t *oloc_src, const void *mesg_src,
kablam!                                             ^
kablam! /source/source/src/H5Opline.c: In function 'H5O_pline_debug':
kablam! /source/source/src/H5Opline.c:637:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!    (unsigned)(pline->filter[i].id));
kablam!    ^
kablam! /source/source/src/H5Opline.c:641:7: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!        pline->filter[i].name);
kablam!        ^
kablam! /source/source/src/H5Opline.c:644:7: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!        "Filter name:");
kablam!        ^
kablam! /source/source/src/H5Opline.c:647:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!    pline->filter[i].flags);
kablam!    ^
kablam! /source/source/src/H5Opline.c:650:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!    pline->filter[i].cd_nelmts);
kablam!    ^
kablam! /source/source/src/H5Opline.c:659:7: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!        pline->filter[i].cd_values[j]);
kablam!        ^
kablam! In file included from /source/source/src/H5Osdspace.c:61:0:
kablam! /source/source/src/H5Oshared.h: In function 'H5O_sdspace_shared_post_copy_file':
kablam! /source/source/src/H5Oshared.h:386:44: warning: unused parameter 'oloc_src' [-Wunused-parameter]
kablam!  H5O_SHARED_POST_COPY_FILE(const H5O_loc_t *oloc_src, const void *mesg_src,
kablam!                                             ^
kablam! /source/source/src/H5Oshared.c: In function 'H5O_shared_copy_file':
kablam! /source/source/src/H5Oshared.c:590:29: warning: unused parameter 'file_src' [-Wunused-parameter]
kablam!  H5O_shared_copy_file(H5F_t *file_src, H5F_t *file_dst,
kablam!                              ^
kablam! /source/source/src/H5Oshared.c:592:79: warning: unused parameter 'cpy_info' [-Wunused-parameter]
kablam!      hbool_t H5_ATTR_UNUSED *recompute_size, unsigned *mesg_flags, H5O_copy_t *cpy_info,
kablam!                                                                                ^
kablam! /source/source/src/H5Pdcpl.c: In function 'H5P_get_fill_value':
kablam! /source/source/src/H5Pdcpl.c:1565:54: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!      if((dst_id = H5I_register(H5I_DATATYPE, H5T_copy(type, H5T_COPY_TRANSIENT), FALSE)) < 0)
kablam!                                                       ^
kablam! In file included from /source/source/src/H5Oprivate.h:41:0,
kablam!                  from /source/source/src/H5Dprivate.h:27,
kablam!                  from /source/source/src/H5Pdcpl.c:39:
kablam! /source/source/src/H5Tprivate.h:109:15: note: expected 'H5T_t * {aka struct H5T_t *}' but argument is of type 'const H5T_t * {aka const struct H5T_t *}'
kablam!  H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
kablam!                ^
kablam! /source/source/src/H5Pint.c: In function 'H5P__iterate_pclass_cb':
kablam! /source/source/src/H5Pint.c:3632:11: warning: unused variable 'key' [-Wunused-variable]
kablam!      char *key = (char *)_key;                           /* Pointer to the property's name */
kablam!            ^
kablam! /source/source/src/H5Pint.c: In function 'H5P_get_class_parent':
kablam! /source/source/src/H5Pint.c:4830:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5P_get_class_parent(const H5P_genclass_t *pclass)
kablam!  ^
kablam! /source/source/src/H5Pint.c: In function 'H5P_get_plist_id':
kablam! /source/source/src/H5Pint.c:4898:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5P_get_plist_id(const H5P_genplist_t *plist)
kablam!  ^
kablam! /source/source/src/H5Pint.c: In function 'H5P_get_class':
kablam! /source/source/src/H5Pint.c:4926:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5P_get_class(const H5P_genplist_t *plist)
kablam!  ^
kablam! /source/source/src/H5Plapl.c: In function 'H5P_lacc_elink_fapl_cmp':
kablam! /source/source/src/H5Plapl.c:305:16: warning: variable 'status' set but not used [-Wunused-but-set-variable]
kablam!          herr_t status;
kablam!                 ^
kablam! /source/source/src/H5Pocpypl.c: In function 'H5P__ocpy_merge_comm_dt_list_cmp':
kablam! /source/source/src/H5Pocpypl.c:280:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5P__ocpy_merge_comm_dt_list_cmp(const void *_dt_list1, const void *_dt_list2,
kablam!  ^
kablam! /source/source/src/H5Pocpl.c: In function 'H5Pget_filter_by_id2':
kablam! /source/source/src/H5Pocpl.c:1072:30: warning: unused variable 'filter' [-Wunused-variable]
kablam!      const H5Z_filter_info_t *filter;        /* Pointer to filter information */
kablam!                               ^
kablam! /source/source/src/H5Pocpl.c:1071:21: warning: unused variable 'pline' [-Wunused-variable]
kablam!      H5O_pline_t     pline;                  /* Filter pipeline */
kablam!                      ^
kablam! /source/source/src/H5PL.c: In function 'H5PL_load':
kablam! /source/source/src/H5PL.c:326:5: warning: enumeration value 'H5PL_TYPE_ERROR' not handled in switch [-Wswitch-enum]
kablam!      switch (type) {
kablam!      ^
kablam! /source/source/src/H5PL.c:326:5: warning: enumeration value 'H5PL_TYPE_NONE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5PL.c: In function 'H5PL__open':
kablam! /source/source/src/H5PL.c:605:39: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
kablam!          if(NULL == (get_plugin_info = (H5PL_get_plugin_info_t)H5PL_GET_LIB_FUNC(handle, "H5PLget_plugin_info"))) {
kablam!                                        ^
kablam! /source/source/src/H5PL.c: In function 'H5PL__search_table':
kablam! /source/source/src/H5PL.c:688:47: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
kablam!                  if(NULL == (get_plugin_info = (H5PL_get_plugin_info_t)H5PL_GET_LIB_FUNC((H5PL_table_g[i]).handle, "H5PLget_plugin_info")))
kablam!                                                ^
kablam! /source/source/src/H5RS.c: In function 'H5RS_cmp':
kablam! /source/source/src/H5RS.c:389:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5RS_cmp(const H5RS_str_t *rs1, const H5RS_str_t *rs2)
kablam!  ^
kablam! /source/source/src/H5RS.c: In function 'H5RS_len':
kablam! /source/source/src/H5RS.c:423:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5RS_len(const H5RS_str_t *rs)
kablam!  ^
kablam! /source/source/src/H5RS.c: In function 'H5RS_get_str':
kablam! /source/source/src/H5RS.c:457:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5RS_get_str(const H5RS_str_t *rs)
kablam!  ^
kablam! /source/source/src/H5RS.c: In function 'H5RS_get_count':
kablam! /source/source/src/H5RS.c:489:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5RS_get_count(const H5RS_str_t *rs)
kablam!  ^
kablam! /source/source/src/H5S.c: In function 'H5S_has_extent':
kablam! /source/source/src/H5S.c:1903:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5S_has_extent(const H5S_t *ds)
kablam!  ^
kablam! /source/source/src/H5S.c: In function 'H5S_extent_equal':
kablam! /source/source/src/H5S.c:2018:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5S_extent_equal(const H5S_t *ds1, const H5S_t *ds2)
kablam!  ^
kablam! /source/source/src/H5S.c: In function 'H5S_extent_nelem':
kablam! /source/source/src/H5S.c:2079:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5S_extent_nelem(const H5S_extent_t *ext)
kablam!  ^
kablam! /source/source/src/H5Sall.c: In function 'H5S_all_project_simple':
kablam! /source/source/src/H5Sall.c:814:37: warning: unused parameter 'base_space' [-Wunused-parameter]
kablam!  H5S_all_project_simple(const H5S_t *base_space, H5S_t *new_space, hsize_t *offset)
kablam!                                      ^
kablam! /source/source/src/H5Sall.c:814:76: warning: unused parameter 'offset' [-Wunused-parameter]
kablam!  H5S_all_project_simple(const H5S_t *base_space, H5S_t *new_space, hsize_t *offset)
kablam!                                                                             ^
kablam! /source/source/src/H5Sdbg.c: In function 'H5S_debug':
kablam! /source/source/src/H5Sdbg.c:113:34: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                                   indent + 3, MAX(0, fwidth - 3));
kablam!                                   ^
kablam! /source/source/src/H5Shyper.c: In function 'H5S_hyper_serialize':
kablam! /source/source/src/H5Shyper.c:2200:16: warning: conversion to 'uint32_t {aka unsigned int}' from 'long unsigned int' may alter its value [-Wconversion]
kablam!          len += (size_t)(8 * space->extent.rank * block_count);
kablam!                 ^
kablam! /source/source/src/H5Shyper.c: In function 'H5S_hyper_iter_has_next_block':
kablam! /source/source/src/H5Shyper.c:598:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5S_hyper_iter_has_next_block(const H5S_sel_iter_t *iter)
kablam!  ^
kablam! /source/source/src/H5Shyper.c: In function 'H5S_hyper_cmp_spans':
kablam! /source/source/src/H5Shyper.c:1415:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5S_hyper_cmp_spans (H5S_hyper_span_info_t *span_info1, H5S_hyper_span_info_t *span_info2)
kablam!  ^
kablam! /source/source/src/H5Shyper.c: In function 'H5S_hyper_is_valid_helper.isra.4':
kablam! /source/source/src/H5Shyper.c:1690:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5S_hyper_is_valid_helper (const H5S_hyper_span_info_t *spans, const hssize_t *offset, const hsize_t *size, hsize_t rank)
kablam!  ^
kablam! /source/source/src/H5Shyper.c: In function 'H5S_hyper_span_nblocks':
kablam! /source/source/src/H5Shyper.c:1814:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5S_hyper_span_nblocks(H5S_hyper_span_info_t *spans)
kablam!  ^
kablam! /source/source/src/H5Shyper.c: In function 'H5S_get_select_hyper_nblocks.isra.5':
kablam! /source/source/src/H5Shyper.c:1859:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5S_get_select_hyper_nblocks(H5S_t *space)
kablam!  ^
kablam! /source/source/src/H5Shyper.c: In function 'H5S_hyper_serial_size':
kablam! /source/source/src/H5Shyper.c:1941:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5S_hyper_serial_size(const H5S_t *space)
kablam!  ^
kablam! /source/source/src/H5Shyper.c: In function 'H5S_hyper_is_contiguous':
kablam! /source/source/src/H5Shyper.c:2882:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5S_hyper_is_contiguous(const H5S_t *space)
kablam!  ^
kablam! /source/source/src/H5Shyper.c: In function 'H5S_hyper_is_single':
kablam! /source/source/src/H5Shyper.c:3067:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5S_hyper_is_single(const H5S_t *space)
kablam!  ^
kablam! /source/source/src/H5Shyper.c: In function 'H5S_hyper_spans_nelem':
kablam! /source/source/src/H5Shyper.c:5623:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5S_hyper_spans_nelem (H5S_hyper_span_info_t *spans)
kablam!  ^
kablam! /source/source/src/H5Shyper.c: In function 'H5S_hyper_iter_coords':
kablam! /source/source/src/H5Shyper.c:8857:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  } /* end H5S_hyper_get_seq_list() */
kablam!  ^
kablam! /source/source/src/H5Shyper.c:8857:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Shyper.c: At top level:
kablam! /source/source/src/H5Shyper.c:1753:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5S_hyper_is_valid (const H5S_t *space)
kablam!  ^
kablam! /source/source/src/H5Shyper.c: In function 'H5S_hyper_iter_next':
kablam! /source/source/src/H5Shyper.c:655:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5S_hyper_iter_next(H5S_sel_iter_t *iter, size_t nelem)
kablam!  ^
kablam! /source/source/src/H5Shyper.c:655:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Shyper.c:655:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Snone.c: In function 'H5S_none_project_simple':
kablam! /source/source/src/H5Snone.c:763:38: warning: unused parameter 'base_space' [-Wunused-parameter]
kablam!  H5S_none_project_simple(const H5S_t *base_space, H5S_t *new_space, hsize_t *offset)
kablam!                                       ^
kablam! /source/source/src/H5Snone.c:763:77: warning: unused parameter 'offset' [-Wunused-parameter]
kablam!  H5S_none_project_simple(const H5S_t *base_space, H5S_t *new_space, hsize_t *offset)
kablam!                                                                              ^
kablam! /source/source/src/H5Shyper.c: In function 'H5S_hyper_iter_next_block':
kablam! /source/source/src/H5Shyper.c:870:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5S_hyper_iter_next_block(H5S_sel_iter_t *iter)
kablam!  ^
kablam! /source/source/src/H5Shyper.c:870:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Shyper.c:870:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Shyper.c:870:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5S.c: In function 'H5S_extend':
kablam! /source/source/src/H5S.c:2156:7: warning: assuming signed overflow does not occur when simplifying conditional to constant [-Wstrict-overflow]
kablam!      if(ret_value) {
kablam!        ^
kablam! /source/source/src/H5Spoint.c: In function 'H5S_point_bounds':
kablam! /source/source/src/H5Spoint.c:1106:41: warning: conversion to 'long long unsigned int' from 'hssize_t {aka const long long int}' may change the sign of the result [-Wsign-conversion]
kablam!              if(start[u] > (node->pnt[u] + space->select.offset[u]))
kablam!                                          ^
kablam! /source/source/src/H5Spoint.c:1107:41: warning: conversion to 'long long unsigned int' from 'hssize_t {aka const long long int}' may change the sign of the result [-Wsign-conversion]
kablam!                  start[u] = node->pnt[u] + space->select.offset[u];
kablam!                                          ^
kablam! /source/source/src/H5Spoint.c:1108:39: warning: conversion to 'long long unsigned int' from 'hssize_t {aka const long long int}' may change the sign of the result [-Wsign-conversion]
kablam!              if(end[u] < (node->pnt[u] + space->select.offset[u]))
kablam!                                        ^
kablam! /source/source/src/H5Spoint.c:1109:39: warning: conversion to 'long long unsigned int' from 'hssize_t {aka const long long int}' may change the sign of the result [-Wsign-conversion]
kablam!                  end[u] = node->pnt[u] + space->select.offset[u];
kablam!                                        ^
kablam! /source/source/src/H5Shyper.c: In function 'H5S_hyper_get_seq_list':
kablam! /source/source/src/H5Spoint.c: In function 'H5S_point_get_seq_list':
kablam! /source/source/src/H5Spoint.c:1655:34: warning: conversion to 'long long unsigned int' from 'hssize_t {aka const long long int}' may change the sign of the result [-Wsign-conversion]
kablam!              loc += (node->pnt[i] + space->select.offset[i]) * acc;
kablam!                                   ^
kablam! /source/source/src/H5Shyper.c:8715:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5S_hyper_get_seq_list(const H5S_t *space, unsigned H5_ATTR_UNUSED flags, H5S_sel_iter_t *iter,
kablam!  ^
kablam! /source/source/src/H5Shyper.c:8715:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Shyper.c:8715:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Shyper.c:8715:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Shyper.c:8715:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Shyper.c:8715:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Shyper.c:8715:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Shyper.c:8715:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Shyper.c:8715:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Shyper.c:8715:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Shyper.c:8715:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Shyper.c:8715:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Spoint.c: In function 'H5S_point_is_valid':
kablam! /source/source/src/H5Spoint.c:685:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5S_point_is_valid (const H5S_t *space)
kablam!  ^
kablam! /source/source/src/H5Spoint.c: In function 'H5S_point_serial_size':
kablam! /source/source/src/H5Spoint.c:774:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5S_point_serial_size (const H5S_t *space)
kablam!  ^
kablam! /source/source/src/H5Spoint.c: In function 'H5S_point_offset':
kablam! /source/source/src/H5Spoint.c:1140:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5S_point_offset(const H5S_t *space, hsize_t *offset)
kablam!  ^
kablam! /source/source/src/H5Spoint.c:1140:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Sselect.c: In function 'H5S_select_iterate':
kablam! /source/source/src/H5Sselect.c:1217:20: warning: size of 'iter' is 2232 bytes [-Wlarger-than=]
kablam!      H5S_sel_iter_t iter;        /* Selection iteration info */
kablam!                     ^
kablam! /source/source/src/H5Sselect.c:1263:17: warning: size of 'off' is 8192 bytes [-Wlarger-than=]
kablam!          hsize_t off[H5D_IO_VECTOR_SIZE];        /* Array to store sequence offsets */
kablam!                  ^
kablam! /source/source/src/H5Sselect.c:1264:16: warning: size of 'len' is 8192 bytes [-Wlarger-than=]
kablam!          size_t len[H5D_IO_VECTOR_SIZE];         /* Array to store sequence lengths */
kablam!                 ^
kablam! /source/source/src/H5Sselect.c: In function 'H5S_select_shape_same':
kablam! /source/source/src/H5Sselect.c:1436:20: warning: size of 'iter_a' is 2232 bytes [-Wlarger-than=]
kablam!      H5S_sel_iter_t iter_a;    /* Selection a iteration info */
kablam!                     ^
kablam! /source/source/src/H5Sselect.c:1437:20: warning: size of 'iter_b' is 2232 bytes [-Wlarger-than=]
kablam!      H5S_sel_iter_t iter_b;    /* Selection b iteration info */
kablam!                     ^
kablam! /source/source/src/H5Sselect.c: In function 'H5S_select_fill':
kablam! /source/source/src/H5Sselect.c:2005:20: warning: size of 'iter' is 2232 bytes [-Wlarger-than=]
kablam!      H5S_sel_iter_t iter;        /* Selection iteration info */
kablam!                     ^
kablam! /source/source/src/H5Sselect.c:2033:17: warning: size of 'off' is 8192 bytes [-Wlarger-than=]
kablam!          hsize_t off[H5D_IO_VECTOR_SIZE];          /* Array to store sequence offsets */
kablam!                  ^
kablam! /source/source/src/H5Sselect.c:2034:16: warning: size of 'len' is 8192 bytes [-Wlarger-than=]
kablam!          size_t len[H5D_IO_VECTOR_SIZE];           /* Array to store sequence lengths */
kablam!                 ^
kablam! /source/source/src/H5Sselect.c: In function 'H5S_get_select_npoints':
kablam! /source/source/src/H5Sselect.c:333:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5S_get_select_npoints(const H5S_t *space)
kablam!  ^
kablam! /source/source/src/H5Sselect.c: In function 'H5S_get_select_type':
kablam! /source/source/src/H5Sselect.c:1394:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5S_get_select_type(const H5S_t *space)
kablam!  ^
kablam! /source/source/src/H5Sselect.c: In function 'H5S_select_iterate':
kablam! /source/source/src/H5Sselect.c:1214:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5S_select_iterate(void *buf, const H5T_t *type, const H5S_t *space,
kablam!  ^
kablam! /source/source/src/H5Sselect.c:1214:1: warning: stack usage might be 19392 bytes [-Wstack-usage=]
kablam! /source/source/src/H5Sselect.c:1335:1: warning: the frame size of 19296 bytes is larger than 16384 bytes [-Wframe-larger-than=]
kablam!  }   /* end H5S_select_iterate() */
kablam!  ^
kablam! /source/source/src/H5Sselect.c: In function 'H5S_select_shape_same':
kablam! /source/source/src/H5Sselect.c:1434:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5S_select_shape_same(const H5S_t *space1, const H5S_t *space2)
kablam!  ^
kablam! /source/source/src/H5Sselect.c:1434:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Sselect.c:1434:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Sselect.c:1434:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Sselect.c:1434:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Sselect.c:1434:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Sselect.c:1434:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Sselect.c:1434:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Sselect.c:1434:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Sselect.c:1434:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Sselect.c:1434:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Sselect.c:1434:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Sselect.c: In function 'H5S_select_fill':
kablam! /source/source/src/H5Sselect.c:2003:1: warning: stack usage might be 18800 bytes [-Wstack-usage=]
kablam!  H5S_select_fill(const void *fill, size_t fill_size, const H5S_t *space, void *_buf)
kablam!  ^
kablam! /source/source/src/H5Sselect.c:2065:1: warning: the frame size of 18704 bytes is larger than 16384 bytes [-Wframe-larger-than=]
kablam!  }   /* H5S_select_fill() */
kablam!  ^
kablam! /source/source/src/H5Shyper.c: In function 'H5S_hyper_offset':
kablam! /source/source/src/H5Shyper.c:2776:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5S_hyper_offset(const H5S_t *space, hsize_t *offset)
kablam!  ^
kablam! /source/source/src/H5Shyper.c:2776:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Shyper.c: In function 'H5S_hyper_iter_coords':
kablam! /source/source/src/H5Shyper.c:429:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5S_hyper_iter_coords (const H5S_sel_iter_t *iter, hsize_t *coords)
kablam!  ^
kablam! /source/source/src/H5Shyper.c:429:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Shyper.c:429:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c: In function 'H5SL_release_common':
kablam! /source/source/src/H5SL.c:840:36: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!              (void)(op)(node->item, (void *)node->key, op_data);
kablam!                                     ^
kablam! /source/source/src/H5SL.c: In function 'H5SL_remove_first':
kablam! /source/source/src/H5SL.c:1235:25: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!      size_t      level = slist->curr_level;      /* Skip list level */
kablam!                          ^
kablam! /source/source/src/H5SL.c: In function 'H5SL_iterate':
kablam! /source/source/src/H5SL.c:2150:46: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!              if((ret_value = (op)(node->item, (void *)node->key, op_data)) != 0)
kablam!                                               ^
kablam! /source/source/src/H5SL.c: In function 'H5SL_try_free_safe':
kablam! /source/source/src/H5SL.c:2309:44: warning: cast discards 'const' qualifier from pointer target type [-Wcast-qual]
kablam!              if((op_ret = (op)(node->item , (void *)node->key, op_data)) < 0)
kablam!                                             ^
kablam! /source/source/src/H5SL.c: In function 'H5SL_term_interface':
kablam! /source/source/src/H5SL.c:2535:13: warning: variable 'ret' set but not used [-Wunused-but-set-variable]
kablam!      herr_t  ret;
kablam!              ^
kablam! /source/source/src/H5Shyper.c: In function 'H5S_get_select_hyper_blocklist.isra.16.constprop':
kablam! /source/source/src/H5Shyper.c:2515:32: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                  while(temp_dim >= 0 && !done) {
kablam!                                 ^
kablam! /source/source/src/H5SL.c: In function 'H5SL_count':
kablam! /source/source/src/H5SL.c:1009:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5SL_count(H5SL_t *slist)
kablam!  ^
kablam! /source/source/src/H5Shyper.c: In function 'H5S_hyper_serialize':
kablam! /source/source/src/H5Shyper.c:2072:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5S_hyper_serialize (const H5S_t *space, uint8_t *buf)
kablam!  ^
kablam! /source/source/src/H5Shyper.c:2162:32: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                  while(temp_dim >= 0 && done == 0) {
kablam!                                 ^
kablam! /source/source/src/H5Shyper.c: In function 'H5S_hyper_iter_init':
kablam! /source/source/src/H5Shyper.c:238:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5S_hyper_iter_init(H5S_sel_iter_t *iter, const H5S_t *space)
kablam!  ^
kablam! /source/source/src/H5Shyper.c:238:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c: In function 'H5SL_first':
kablam! /source/source/src/H5SL.c:1927:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5SL_first(H5SL_t *slist)
kablam!  ^
kablam! /source/source/src/H5SL.c: In function 'H5SL_next':
kablam! /source/source/src/H5SL.c:1964:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5SL_next(H5SL_node_t *slist_node)
kablam!  ^
kablam! /source/source/src/H5SL.c: In function 'H5SL_prev':
kablam! /source/source/src/H5SL.c:2001:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5SL_prev(H5SL_node_t *slist_node)
kablam!  ^
kablam! /source/source/src/H5SL.c: In function 'H5SL_last':
kablam! /source/source/src/H5SL.c:2039:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5SL_last(H5SL_t *slist)
kablam!  ^
kablam! /source/source/src/H5SL.c: In function 'H5SL_item':
kablam! /source/source/src/H5SL.c:2076:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5SL_item(H5SL_node_t *slist_node)
kablam!  ^
kablam! /source/source/src/H5SL.c: In function 'H5SL_insert_common':
kablam! /source/source/src/H5SL.c:699:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5SL_insert_common(H5SL_t *slist, void *item, const void *key)
kablam!  ^
kablam! /source/source/src/H5SL.c:699:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:699:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:699:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:699:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:699:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:699:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:699:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:699:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Shyper.c: In function 'H5S_generate_hyperslab':
kablam! /source/source/src/H5Shyper.c:6059:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5S_generate_hyperslab (H5S_t *space, H5S_seloper_t op,
kablam!  ^
kablam! /source/source/src/H5SL.c: In function 'H5SL_remove':
kablam! /source/source/src/H5SL.c:1143:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5SL_remove(H5SL_t *slist, const void *key)
kablam!  ^
kablam! /source/source/src/H5SL.c:1143:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1143:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1143:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1143:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1143:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1143:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1143:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1143:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5ST.c: In function 'H5ST_find_internal':
kablam! /source/source/src/H5ST.c:290:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5ST_find_internal(H5ST_ptr_t p, const char *s)
kablam!  ^
kablam! /source/source/src/H5ST.c: In function 'H5ST_findfirst_internal':
kablam! /source/source/src/H5ST.c:405:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5ST_findfirst_internal(H5ST_ptr_t p)
kablam!  ^
kablam! /source/source/src/H5ST.c: In function 'H5ST_getnext':
kablam! /source/source/src/H5ST.c:484:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5ST_getnext(H5ST_ptr_t p)
kablam!  ^
kablam! /source/source/src/H5ST.c: In function 'H5ST_search':
kablam! /source/source/src/H5ST.c:245:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5ST_search(H5ST_tree_t *tree, const char *s)
kablam!  ^
kablam! /source/source/src/H5ST.c: In function 'H5ST_findnext':
kablam! /source/source/src/H5ST.c:542:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5ST_findnext(H5ST_ptr_t p)
kablam!  ^
kablam! /source/source/src/H5T.c: In function 'H5T_path_find':
kablam! /source/source/src/H5T.c:4485:35: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!   if(NULL == (path->src = H5T_copy(src, H5T_COPY_ALL)))
kablam!                                    ^
kablam! /source/source/src/H5T.c:3115:1: note: expected 'H5T_t * {aka struct H5T_t *}' but argument is of type 'const H5T_t * {aka const struct H5T_t *}'
kablam!  H5T_copy(H5T_t *old_dt, H5T_copy_t method)
kablam!  ^
kablam! /source/source/src/H5T.c:4487:42: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!          if(NULL == (path->dst = H5T_copy(dst, H5T_COPY_ALL)))
kablam!                                           ^
kablam! /source/source/src/H5T.c:3115:1: note: expected 'H5T_t * {aka struct H5T_t *}' but argument is of type 'const H5T_t * {aka const struct H5T_t *}'
kablam!  H5T_copy(H5T_t *old_dt, H5T_copy_t method)
kablam!  ^
kablam! /source/source/src/H5T.c: At top level:
kablam! /source/source/src/H5T.c:5469:1: warning: no previous prototype for 'H5T_patch_vlen_file' [-Wmissing-prototypes]
kablam!  H5T_patch_vlen_file(H5T_t *dt, H5F_t *f)
kablam!  ^
kablam! /source/source/src/H5T.c: In function 'H5T_is_variable_str':
kablam! /source/source/src/H5T.c:2062:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5T_is_variable_str(const H5T_t *dt)
kablam!  ^
kablam! /source/source/src/H5T.c: In function 'H5T_get_size':
kablam! /source/source/src/H5T.c:3878:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5T_get_size(const H5T_t *dt)
kablam!  ^
kablam! /source/source/src/H5T.c: In function 'H5T_path_bkg':
kablam! /source/source/src/H5T.c:4726:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5T_path_bkg(const H5T_path_t *p)
kablam!  ^
kablam! /source/source/src/H5SL.c: In function 'H5SL_search':
kablam! /source/source/src/H5SL.c:1333:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5SL_search(H5SL_t *slist, const void *key)
kablam!  ^
kablam! /source/source/src/H5SL.c:1333:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1333:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1333:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1333:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1333:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1333:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1333:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1333:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1333:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1333:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1333:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1333:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1333:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1333:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1333:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1333:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1333:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c: In function 'H5SL_less':
kablam! /source/source/src/H5SL.c:1426:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5SL_less(H5SL_t *slist, const void *key)
kablam!  ^
kablam! /source/source/src/H5SL.c:1426:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1426:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1426:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1426:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1426:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1426:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1426:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1426:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1426:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1426:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1426:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1426:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1426:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1426:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1426:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1426:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1426:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c: In function 'H5SL_greater':
kablam! /source/source/src/H5SL.c:1535:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5SL_greater(H5SL_t *slist, const void *key)
kablam!  ^
kablam! /source/source/src/H5SL.c:1535:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1535:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1535:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1535:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1535:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1535:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1535:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1535:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1535:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1535:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1535:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1535:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1535:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1535:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1535:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1535:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1535:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Tarray.c: In function 'H5T__get_array_ndims':
kablam! /source/source/src/H5Tarray.c:275:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5T__get_array_ndims(const H5T_t *dt)
kablam!  ^
kablam! /source/source/src/H5SL.c: In function 'H5SL_find':
kablam! /source/source/src/H5SL.c:1634:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5SL_find(H5SL_t *slist, const void *key)
kablam!  ^
kablam! /source/source/src/H5SL.c:1634:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1634:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1634:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1634:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1634:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1634:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1634:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1634:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1634:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1634:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1634:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1634:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1634:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1634:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1634:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1634:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1634:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c: In function 'H5SL_below':
kablam! /source/source/src/H5SL.c:1727:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5SL_below(H5SL_t *slist, const void *key)
kablam!  ^
kablam! /source/source/src/H5SL.c:1727:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1727:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1727:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1727:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1727:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1727:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1727:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1727:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1727:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1727:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1727:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1727:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1727:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1727:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1727:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1727:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1727:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5T.c: In function 'H5T_cmp':
kablam! /source/source/src/H5T.c:3907:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5T_cmp(const H5T_t *dt1, const H5T_t *dt2, hbool_t superset)
kablam!  ^
kablam! /source/source/src/H5T.c:4053:95: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                  for (i = (int) dt1->shared->u.enumer.nmembs - 1, swapped = TRUE; swapped && i >= 0; --i) {
kablam!                                                                                                ^
kablam! /source/source/src/H5T.c:3907:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5T_cmp(const H5T_t *dt1, const H5T_t *dt2, hbool_t superset)
kablam!  ^
kablam! /source/source/src/H5T.c:4071:95: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                  for (i = (int) dt2->shared->u.enumer.nmembs - 1, swapped = TRUE; swapped && i >= 0; --i) {
kablam!                                                                                                ^
kablam! /source/source/src/H5T.c:3907:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5T_cmp(const H5T_t *dt1, const H5T_t *dt2, hbool_t superset)
kablam!  ^
kablam! /source/source/src/H5T.c:3968:94: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                  for(i = (int) dt1->shared->u.compnd.nmembs - 1, swapped = TRUE; swapped && i >= 0; --i) {
kablam!                                                                                               ^
kablam! /source/source/src/H5T.c:3907:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5T_cmp(const H5T_t *dt1, const H5T_t *dt2, hbool_t superset)
kablam!  ^
kablam! /source/source/src/H5T.c:3980:94: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!                  for(i = (int) dt2->shared->u.compnd.nmembs - 1, swapped = TRUE; swapped && i >= 0; --i) {
kablam!                                                                                               ^
kablam! /source/source/src/H5T.c:4068:15: warning: assuming signed overflow does not occur when simplifying range test [-Wstrict-overflow]
kablam!              if(dt2->shared->u.enumer.nmembs > 1) {
kablam!                ^
kablam! /source/source/src/H5T.c:4051:15: warning: assuming signed overflow does not occur when simplifying range test [-Wstrict-overflow]
kablam!              if(dt1->shared->u.enumer.nmembs > 1) {
kablam!                ^
kablam! /source/source/src/H5T.c: In function 'H5T_path_find':
kablam! /source/source/src/H5T.c:4387:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5T_path_find(const H5T_t *src, const H5T_t *dst, const char *name,
kablam!  ^
kablam! /source/source/src/H5T.c:4387:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c: In function 'H5SL_above':
kablam! /source/source/src/H5SL.c:1833:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5SL_above(H5SL_t *slist, const void *key)
kablam!  ^
kablam! /source/source/src/H5SL.c:1833:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1833:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1833:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1833:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1833:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1833:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1833:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1833:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1833:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1833:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1833:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1833:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1833:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1833:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1833:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1833:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c:1833:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Tbit.c: In function 'H5T__bit_copy':
kablam! /source/source/src/H5Tbit.c:85:16: warning: conversion to 'uint8_t {aka unsigned char}' from 'int' may alter its value [-Wconversion]
kablam!   dst[d_idx] |= (uint8_t)(((src[s_idx] >> src_offset) & (uint8_t)mask) << dst_offset);
kablam!                 ^
kablam! /source/source/src/H5Tbit.c:144:16: warning: conversion to 'uint8_t {aka unsigned char}' from 'int' may alter its value [-Wconversion]
kablam!   dst[d_idx] |= (uint8_t)(((src[s_idx] >> src_offset) & (uint8_t)mask) << dst_offset);
kablam!                 ^
kablam! /source/source/src/H5Tbit.c: In function 'H5T__bit_set':
kablam! /source/source/src/H5Tbit.c:379:20: warning: conversion to 'uint8_t {aka unsigned char}' from 'int' may alter its value [-Wconversion]
kablam!       buf[idx++] |= (uint8_t)(mask << offset);
kablam!                     ^
kablam! /source/source/src/H5Tbit.c: In function 'H5T__bit_inc':
kablam! /source/source/src/H5Tbit.c:554:14: warning: conversion to 'uint8_t {aka unsigned char}' from 'int' may alter its value [-Wconversion]
kablam!   buf[idx] |= (uint8_t)((acc & mask) << start);
kablam!               ^
kablam! /source/source/src/H5Tbit.c: In function 'H5T__bit_find':
kablam! /source/source/src/H5Tbit.c:424:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5T__bit_find(uint8_t *buf, size_t offset, size_t size, H5T_sdir_t direction,
kablam!  ^
kablam! /source/source/src/H5T.c: In function 'H5Tunregister':
kablam! /source/source/src/H5T.c:2580:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5Tunregister(H5T_pers_t pers, const char *name, hid_t src_id, hid_t dst_id,
kablam!  ^
kablam! /source/source/src/H5T.c:2580:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5T.c:2580:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5T.c:2580:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5SL.c: In function 'H5SL_try_free_safe':
kablam! /source/source/src/H5SL.c:2279:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]
kablam!  H5SL_try_free_safe(H5SL_t *slist, H5SL_try_free_op_t op, void *op_data)
kablam!  ^
kablam! /source/source/src/H5Tcommit.c: In function 'H5T_committed':
kablam! /source/source/src/H5Tcommit.c:493:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5T_committed(const H5T_t *type)
kablam!  ^
kablam! /source/source/src/H5Tcompound.c: In function 'H5T__insert':
kablam! /source/source/src/H5Tcompound.c:484:56: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!      parent->shared->u.compnd.memb[idx].type = H5T_copy(member, H5T_COPY_ALL);
kablam!                                                         ^
kablam! In file included from /source/source/src/H5Tpkg.h:39:0,
kablam!                  from /source/source/src/H5Tcompound.c:38:
kablam! /source/source/src/H5Tprivate.h:109:15: note: expected 'H5T_t * {aka struct H5T_t *}' but argument is of type 'const H5T_t * {aka const struct H5T_t *}'
kablam!  H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
kablam!                ^
kablam! /source/source/src/H5Tcompound.c: In function 'H5T_is_packed':
kablam! /source/source/src/H5Tcompound.c:606:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5T_is_packed(const H5T_t *dt)
kablam!  ^
kablam! /source/source/src/H5Tcompound.c: In function 'H5T_get_member_offset':
kablam! /source/source/src/H5Tcompound.c:166:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5T_get_member_offset(const H5T_t *dt, unsigned membno)
kablam!  ^
kablam! /source/source/src/H5Tcompound.c: In function 'H5T__get_member_size':
kablam! /source/source/src/H5Tcompound.c:315:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5T__get_member_size(const H5T_t *dt, unsigned membno)
kablam!  ^
kablam! /source/source/src/H5Tconv.c: In function 'H5T_conv_struct_free':
kablam! /source/source/src/H5Tconv.c:1842:17: warning: variable 'status' set but not used [-Wunused-but-set-variable]
kablam!              int status;
kablam!                  ^
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_uchar_short':
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:4889:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, SHORT, unsigned char, short, -, SHRT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:4889:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, SHORT, unsigned char, short, -, SHRT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:4889:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, SHORT, unsigned char, short, -, SHRT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:4889:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, SHORT, unsigned char, short, -, SHRT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:4889:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, SHORT, unsigned char, short, -, SHRT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:4889:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, SHORT, unsigned char, short, -, SHRT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:4889:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, SHORT, unsigned char, short, -, SHRT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:4889:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, SHORT, unsigned char, short, -, SHRT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_uchar_int':
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:4990:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, INT, unsigned char, int, -, INT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:4990:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, INT, unsigned char, int, -, INT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:4990:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, INT, unsigned char, int, -, INT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:4990:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, INT, unsigned char, int, -, INT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:4990:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, INT, unsigned char, int, -, INT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:4990:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, INT, unsigned char, int, -, INT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:4990:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, INT, unsigned char, int, -, INT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:4990:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, INT, unsigned char, int, -, INT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_uchar_long':
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5091:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, LONG, unsigned char, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5091:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, LONG, unsigned char, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5091:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, LONG, unsigned char, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5091:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, LONG, unsigned char, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5091:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, LONG, unsigned char, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5091:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, LONG, unsigned char, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5091:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, LONG, unsigned char, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5091:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, LONG, unsigned char, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_uchar_llong':
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5195:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, LLONG, unsigned char, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5195:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, LLONG, unsigned char, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5195:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, LLONG, unsigned char, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5195:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, LLONG, unsigned char, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5195:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, LLONG, unsigned char, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5195:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, LLONG, unsigned char, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5195:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, LLONG, unsigned char, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5195:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UCHAR, LLONG, unsigned char, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_ushort_int':
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5455:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, INT, unsigned short, int, -, INT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5455:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, INT, unsigned short, int, -, INT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5455:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, INT, unsigned short, int, -, INT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5455:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, INT, unsigned short, int, -, INT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5455:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, INT, unsigned short, int, -, INT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5455:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, INT, unsigned short, int, -, INT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5455:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, INT, unsigned short, int, -, INT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5455:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, INT, unsigned short, int, -, INT_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_ushort_long':
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5559:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, LONG, unsigned short, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5559:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, LONG, unsigned short, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5559:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, LONG, unsigned short, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5559:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, LONG, unsigned short, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5559:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, LONG, unsigned short, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5559:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, LONG, unsigned short, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5559:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, LONG, unsigned short, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5559:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, LONG, unsigned short, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_ushort_llong':
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5663:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, LLONG, unsigned short, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5663:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, LLONG, unsigned short, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5663:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, LLONG, unsigned short, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5663:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, LLONG, unsigned short, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5663:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, LLONG, unsigned short, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5663:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, LLONG, unsigned short, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5663:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, LLONG, unsigned short, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:5663:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(USHORT, LLONG, unsigned short, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_uint_long':
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:6022:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UINT, LONG, unsigned, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:6022:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UINT, LONG, unsigned, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:6022:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UINT, LONG, unsigned, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:6022:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UINT, LONG, unsigned, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:6022:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UINT, LONG, unsigned, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:6022:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UINT, LONG, unsigned, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:6022:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UINT, LONG, unsigned, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:6022:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UINT, LONG, unsigned, long, -, LONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_uint_llong':
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:6122:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UINT, LLONG, unsigned, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:6122:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UINT, LLONG, unsigned, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:6122:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UINT, LLONG, unsigned, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:6122:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UINT, LLONG, unsigned, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:6122:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UINT, LLONG, unsigned, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:6122:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UINT, LLONG, unsigned, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:273:41: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if(sizeof(ST) == sizeof(DT) && *(S) > (DT)(D_MAX)) {                      \
kablam!                                          ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:6122:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UINT, LLONG, unsigned, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:286:40: warning: comparison is always false due to limited range of data type [-Wtype-limits]
kablam!      if (sizeof(ST)==sizeof(DT) && *(S) > (DT)(D_MAX)) {                       \
kablam!                                         ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_uS_NOEX_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:820:89: note: in expansion of macro 'H5_GLUE'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,H5_GLUE(GUTS,_NOEX),S,D,ST,DT,D_MIN,D_MAX) \
kablam!                                                                                          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:294:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_uS, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, N)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:6122:5: note: in expansion of macro 'H5T_CONV_uS'
kablam!      H5T_CONV_uS(UINT, LLONG, unsigned, long long, -, LLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_float_ullong':
kablam! /source/source/src/H5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
kablam!                                                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8692:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
kablam!                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8692:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
kablam!                                                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8692:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
kablam!                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8692:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
kablam!                                                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8692:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
kablam!                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8692:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
kablam!                                                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8692:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
kablam!                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8692:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_double_ullong':
kablam! /source/source/src/H5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
kablam!                                                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8744:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
kablam!                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8744:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
kablam!                                                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8744:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
kablam!                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8744:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
kablam!                                                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8744:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
kablam!                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8744:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
kablam!                                                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8744:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
kablam!                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8744:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_ldouble_ullong':
kablam! /source/source/src/H5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
kablam!                                                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8799:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
kablam!                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8799:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
kablam!                                                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8799:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
kablam!                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8799:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
kablam!                                                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8799:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
kablam!                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8799:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
kablam!                                                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8799:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!      } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
kablam!                      ^
kablam! /source/source/src/H5private.h:2074:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'
kablam!  #define H5_GLUE(x,y)       x##y
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'
kablam!          H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
kablam!          ^
kablam! /source/source/src/H5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'
kablam!          H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'
kablam!          H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
kablam!          ^
kablam! /source/source/src/H5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'
kablam!                  H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
kablam!                  ^
kablam! /source/source/src/H5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'
kablam!      H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
kablam!      ^
kablam! /source/source/src/H5Tconv.c:8799:5: note: in expansion of macro 'H5T_CONV_Fx'
kablam!      H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);
kablam!      ^
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_f_i':
kablam! /source/source/src/H5Tconv.c:8917:24: warning: cast from function call of type 'double' to non-matching type 'long unsigned int' [-Wbad-function-cast]
kablam!              buf_size = (size_t)HDpow((double)2.0f, (double)src.u.f.esize) / 8 + 1;
kablam!                         ^
kablam! /source/source/src/H5Tconv.c:8993:24: warning: conversion to 'hssize_t {aka long long int}' from 'uint64_t {aka long unsigned int}' may change the sign of the result [-Wsign-conversion]
kablam!                  sign = H5T__bit_get_d(s, src.u.f.sign, (size_t)1);
kablam!                         ^
kablam! /source/source/src/H5Tconv.c:9120:24: warning: conversion to 'hssize_t {aka long long int}' from 'uint64_t {aka long unsigned int}' may change the sign of the result [-Wsign-conversion]
kablam!                  expo = H5T__bit_get_d(s, src.u.f.epos, src.u.f.esize);
kablam!                         ^
kablam! /source/source/src/H5Tconv.c:9127:26: warning: conversion to 'long long unsigned int' from 'hssize_t {aka long long int}' may change the sign of the result [-Wsign-conversion]
kablam!                      expo -= (src.u.f.ebias-1);
kablam!                           ^
kablam! /source/source/src/H5Tconv.c:9127:29: warning: conversion to 'hssize_t {aka long long int}' from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!                      expo -= (src.u.f.ebias-1);
kablam!                              ^
kablam! /source/source/src/H5Tconv.c:9129:26: warning: conversion to 'long long unsigned int' from 'hssize_t {aka long long int}' may change the sign of the result [-Wsign-conversion]
kablam!                      expo -= src.u.f.ebias;
kablam!                           ^
kablam! /source/source/src/H5Tconv.c:9129:29: warning: conversion to 'hssize_t {aka long long int}' from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!                      expo -= src.u.f.ebias;
kablam!                              ^
kablam! /source/source/src/H5Tconv.c:9159:55: warning: conversion to 'long long unsigned int' from 'hssize_t {aka long long int}' may change the sign of the result [-Wsign-conversion]
kablam!                  H5T__bit_shift(int_buf, (ssize_t)(expo-src.u.f.msize), (size_t)0, buf_size * 8);
kablam!                                                        ^
kablam! /source/source/src/H5Tconv.c:9364:37: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!                      sp += direction * buf_stride;
kablam!                                      ^
kablam! /source/source/src/H5Tconv.c:9365:37: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!                      dp += direction * buf_stride;
kablam!                                      ^
kablam! /source/source/src/H5Tconv.c:9367:37: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!                      sp += direction * src_p->shared->size;
kablam!                                      ^
kablam! /source/source/src/H5Tconv.c:9368:37: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!                      dp += direction * dst_p->shared->size;
kablam!                                      ^
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_i_f':
kablam! /source/source/src/H5Tconv.c:9714:28: warning: cast from function call of type 'double' to non-matching type 'long long unsigned int' [-Wbad-function-cast]
kablam!                  expo_max = (hsize_t)HDpow((double)2.0f, (double)dst.u.f.esize) - 1;
kablam!                             ^
kablam! /source/source/src/H5Tconv.c:9793:37: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!                      sp += direction * buf_stride;
kablam!                                      ^
kablam! /source/source/src/H5Tconv.c:9794:37: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!                      dp += direction * buf_stride;
kablam!                                      ^
kablam! /source/source/src/H5Tconv.c:9796:37: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!                      sp += direction * src_p->shared->size;
kablam!                                      ^
kablam! /source/source/src/H5Tconv.c:9797:37: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!                      dp += direction * dst_p->shared->size;
kablam!                                      ^
kablam! In file included from /source/source/src/H5Tconv.c:33:0:
kablam! /source/source/src/H5Tconv.c: At top level:
kablam! /source/source/src/H5private.h:1812:15: warning: 'H5_interface_initialize_g' defined but not used [-Wunused-variable]
kablam!  static int    H5_interface_initialize_g = 0;
kablam!                ^
kablam! /source/source/src/H5Tconv.c:985:1: warning: 'H5T_init_conv_interface' defined but not used [-Wunused-function]
kablam!  H5T_init_conv_interface(void)
kablam!  ^
kablam! /source/source/src/H5Tdbg.c: In function 'H5T_debug':
kablam! /source/source/src/H5Tdbg.c:175:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]
kablam!      switch(dt->shared->type) {
kablam!      ^
kablam! /source/source/src/H5Tdbg.c:175:5: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tdbg.c:175:5: warning: enumeration value 'H5T_ARRAY' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tdbg.c:175:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tdbg.c:249:2: warning: enumeration value 'H5T_ORDER_ERROR' not handled in switch [-Wswitch-enum]
kablam!   switch(dt->shared->u.atomic.order) {
kablam!   ^
kablam! /source/source/src/H5Tdbg.c:249:2: warning: enumeration value 'H5T_ORDER_MIXED' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tdbg.c:281:17: warning: enumeration value 'H5T_SGN_ERROR' not handled in switch [-Wswitch-enum]
kablam!                  switch(dt->shared->u.atomic.u.i.sign) {
kablam!                  ^
kablam! /source/source/src/H5Tdbg.c:281:17: warning: enumeration value 'H5T_NSGN' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tdbg.c:300:17: warning: enumeration value 'H5T_NORM_ERROR' not handled in switch [-Wswitch-enum]
kablam!                  switch(dt->shared->u.atomic.u.f.norm) {
kablam!                  ^
kablam! /source/source/src/H5Tdbg.c:279:2: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]
kablam!   switch(dt->shared->type) {
kablam!   ^
kablam! /source/source/src/H5Tdbg.c:279:2: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tdbg.c:279:2: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tdbg.c:279:2: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tdbg.c:279:2: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tdbg.c:279:2: warning: enumeration value 'H5T_COMPOUND' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tdbg.c:279:2: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tdbg.c:279:2: warning: enumeration value 'H5T_ENUM' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tdbg.c:279:2: warning: enumeration value 'H5T_VLEN' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tdbg.c:279:2: warning: enumeration value 'H5T_ARRAY' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tdbg.c:279:2: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tdbg.c:353:9: warning: enumeration value 'H5T_LOC_BADLOC' not handled in switch [-Wswitch-enum]
kablam!          switch(dt->shared->u.vlen.loc) {
kablam!          ^
kablam! /source/source/src/H5Tdbg.c:353:9: warning: enumeration value 'H5T_LOC_MAXLOC' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tdbg.c: In function 'H5T__print_stats':
kablam! /source/source/src/H5Tdbg.c:105:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]
kablam!  H5T__print_stats(H5T_path_t H5_ATTR_UNUSED * path, int H5_ATTR_UNUSED * nprint/*in,out*/)
kablam!  ^
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_struct_subset':
kablam! /source/source/src/H5Tconv.c:2077:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5T__conv_struct_subset(const H5T_cdata_t *cdata)
kablam!  ^
kablam! /source/source/src/H5Tenum.c: In function 'H5T__enum_create':
kablam! /source/source/src/H5Tenum.c:136:42: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!      ret_value->shared->parent = H5T_copy(parent, H5T_COPY_ALL);
kablam!                                           ^
kablam! In file included from /source/source/src/H5Tpkg.h:39:0,
kablam!                  from /source/source/src/H5Tenum.c:31:
kablam! /source/source/src/H5Tprivate.h:109:15: note: expected 'H5T_t * {aka struct H5T_t *}' but argument is of type 'const H5T_t * {aka const struct H5T_t *}'
kablam!  H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
kablam!                ^
kablam! /source/source/src/H5Tenum.c: In function 'H5T_enum_nameof':
kablam! /source/source/src/H5Tenum.c:437:38: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!      if(NULL == (copied_dt = H5T_copy(dt, H5T_COPY_ALL)))
kablam!                                       ^
kablam! In file included from /source/source/src/H5Tpkg.h:39:0,
kablam!                  from /source/source/src/H5Tenum.c:31:
kablam! /source/source/src/H5Tprivate.h:109:15: note: expected 'H5T_t * {aka struct H5T_t *}' but argument is of type 'const H5T_t * {aka const struct H5T_t *}'
kablam!  H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
kablam!                ^
kablam! /source/source/src/H5Tenum.c: In function 'H5T_enum_valueof':
kablam! /source/source/src/H5Tenum.c:576:35: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!      if (NULL==(copied_dt=H5T_copy(dt, H5T_COPY_ALL)))
kablam!                                    ^
kablam! In file included from /source/source/src/H5Tpkg.h:39:0,
kablam!                  from /source/source/src/H5Tenum.c:31:
kablam! /source/source/src/H5Tprivate.h:109:15: note: expected 'H5T_t * {aka struct H5T_t *}' but argument is of type 'const H5T_t * {aka const struct H5T_t *}'
kablam!  H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
kablam!                ^
kablam! /source/source/src/H5Tfixed.c: In function 'H5Tget_sign':
kablam! /source/source/src/H5Tfixed.c:82:21: warning: request for implicit conversion from 'void *' to 'H5T_t * {aka struct H5T_t *}' not permitted in C++ [-Wc++-compat]
kablam!      if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))
kablam!                      ^
kablam! /source/source/src/H5Tfixed.c: In function 'H5Tset_sign':
kablam! /source/source/src/H5Tfixed.c:161:21: warning: request for implicit conversion from 'void *' to 'H5T_t * {aka struct H5T_t *}' not permitted in C++ [-Wc++-compat]
kablam!      if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))
kablam!                      ^
kablam! /source/source/src/H5detect.c:115:19: warning: size of 'd_g' is 12800 bytes [-Wlarger-than=]
kablam!  static detected_t d_g[MAXDETECT];
kablam!                    ^
kablam! /source/source/src/H5detect.c: In function 'find_bias':
kablam! /source/source/src/H5detect.c:1180:24: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!      unsigned char *a = (unsigned char *) _a;
kablam!                         ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5private.h:321:21: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!  #define MIN(a,b)    (((a)<(b)) ? (a) : (b))
kablam!                      ^
kablam! /source/source/src/H5detect.c:1185:10: note: in expansion of macro 'MIN'
kablam!   nbits = MIN(esize, (8 - epos % 8));
kablam!           ^
kablam! /source/source/src/H5detect.c:1186:9: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]
kablam!   mask = (1 << nbits) - 1;
kablam!          ^
kablam! /source/source/src/H5detect.c:1187:6: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!   b = (a[perm[epos / 8]] >> (epos % 8)) & mask;
kablam!       ^
kablam! /source/source/src/H5detect.c:1191:8: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!   esize -= nbits;
kablam!         ^
kablam! /source/source/src/H5detect.c:1191:11: warning: conversion to 'int' from 'long unsigned int' may alter its value [-Wconversion]
kablam!   esize -= nbits;
kablam!            ^
kablam! /source/source/src/H5detect.c:1192:7: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!   epos += nbits;
kablam!        ^
kablam! /source/source/src/H5detect.c:1192:10: warning: conversion to 'int' from 'long unsigned int' may alter its value [-Wconversion]
kablam!   epos += nbits;
kablam!           ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c: In function 'detect_C89_integers':
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \
kablam!      ^
kablam! /source/source/src/H5detect.c:1357:5: note: in expansion of macro 'DETECT_BYTE'
kablam!      DETECT_BYTE(signed char,   SCHAR,        d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \
kablam!      ^
kablam! /source/source/src/H5detect.c:1357:5: note: in expansion of macro 'DETECT_BYTE'
kablam!      DETECT_BYTE(signed char,   SCHAR,        d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \
kablam!      ^
kablam! /source/source/src/H5detect.c:1358:5: note: in expansion of macro 'DETECT_BYTE'
kablam!      DETECT_BYTE(unsigned char,   UCHAR,        d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \
kablam!      ^
kablam! /source/source/src/H5detect.c:1358:5: note: in expansion of macro 'DETECT_BYTE'
kablam!      DETECT_BYTE(unsigned char,   UCHAR,        d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:254:14: warning: conversion to 'short int' from 'int' may alter its value [-Wconversion]
kablam!          _v = (_v << 8) + _i;                                                  \
kablam!               ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1359:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(short,    SHORT,        d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1359:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(short,    SHORT,        d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1359:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(short,    SHORT,        d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:254:14: warning: conversion to 'short unsigned int' from 'int' may alter its value [-Wconversion]
kablam!          _v = (_v << 8) + _i;                                                  \
kablam!               ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1360:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(unsigned short,   USHORT,       d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1360:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(unsigned short,   USHORT,       d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1360:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(unsigned short,   USHORT,       d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1361:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int,    INT,         d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1361:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int,    INT,         d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:254:24: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!          _v = (_v << 8) + _i;                                                  \
kablam!                         ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1362:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(unsigned int,   UINT,         d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1362:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(unsigned int,   UINT,         d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1362:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(unsigned int,   UINT,         d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1363:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(long,    LONG,         d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1363:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(long,    LONG,         d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:254:24: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!          _v = (_v << 8) + _i;                                                  \
kablam!                         ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1364:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(unsigned long,   ULONG,        d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1364:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(unsigned long,   ULONG,        d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1364:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(unsigned long,   ULONG,        d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c: In function 'detect_C89_floats':
kablam! /source/source/src/H5detect.c:327:21: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!      HDmemcpy(_buf1, (const void *)&_v1, sizeof(TYPE));                        \
kablam!                      ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:1385:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(float,     FLOAT,      d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:329:71: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]
kablam!          for(_byte_mask = (unsigned char)1; _byte_mask; _byte_mask <<= 1) {    \
kablam!                                                                        ^
kablam! /source/source/src/H5detect.c:1385:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(float,     FLOAT,      d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:331:22: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!              HDmemcpy((void *)&_v2, (const void *)_buf1, sizeof(TYPE));        \
kablam!                       ^
kablam! /source/source/src/H5private.h:1005:47: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                ^
kablam! /source/source/src/H5detect.c:1385:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(float,     FLOAT,      d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:332:20: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!              if(_v1 != _v2)                                                    \
kablam!                     ^
kablam! /source/source/src/H5detect.c:1385:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(float,     FLOAT,      d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:342:25: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!          HDmemcpy(_buf1, (const void *)&_v1, sizeof(TYPE));                    \
kablam!                          ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:1385:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(float,     FLOAT,      d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:343:25: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!          HDmemcpy(_buf3, (const void *)&_v3, sizeof(TYPE));                    \
kablam!                          ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:1385:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(float,     FLOAT,      d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:350:47: warning: to be safe all intermediate pointers in cast from 'char **' to 'const char **' must be 'const' qualified [-Wcast-qual]
kablam!      fix_order(sizeof(TYPE), _last, INFO.perm, (const char**)&_mesg);          \
kablam!                                                ^
kablam! /source/source/src/H5detect.c:1385:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(float,     FLOAT,      d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:381:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1385:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(float,     FLOAT,      d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:381:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1385:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(float,     FLOAT,      d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:448:9: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!   if(_val!=_val2)             \
kablam!          ^
kablam! /source/source/src/H5detect.c:381:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1385:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(float,     FLOAT,      d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:327:21: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!      HDmemcpy(_buf1, (const void *)&_v1, sizeof(TYPE));                        \
kablam!                      ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:1386:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(double,    DOUBLE,     d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:329:71: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]
kablam!          for(_byte_mask = (unsigned char)1; _byte_mask; _byte_mask <<= 1) {    \
kablam!                                                                        ^
kablam! /source/source/src/H5detect.c:1386:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(double,    DOUBLE,     d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:331:22: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!              HDmemcpy((void *)&_v2, (const void *)_buf1, sizeof(TYPE));        \
kablam!                       ^
kablam! /source/source/src/H5private.h:1005:47: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                ^
kablam! /source/source/src/H5detect.c:1386:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(double,    DOUBLE,     d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:332:20: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!              if(_v1 != _v2)                                                    \
kablam!                     ^
kablam! /source/source/src/H5detect.c:1386:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(double,    DOUBLE,     d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:342:25: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!          HDmemcpy(_buf1, (const void *)&_v1, sizeof(TYPE));                    \
kablam!                          ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:1386:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(double,    DOUBLE,     d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:343:25: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!          HDmemcpy(_buf3, (const void *)&_v3, sizeof(TYPE));                    \
kablam!                          ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:1386:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(double,    DOUBLE,     d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:350:47: warning: to be safe all intermediate pointers in cast from 'char **' to 'const char **' must be 'const' qualified [-Wcast-qual]
kablam!      fix_order(sizeof(TYPE), _last, INFO.perm, (const char**)&_mesg);          \
kablam!                                                ^
kablam! /source/source/src/H5detect.c:1386:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(double,    DOUBLE,     d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:381:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1386:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(double,    DOUBLE,     d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:381:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1386:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(double,    DOUBLE,     d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:448:9: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!   if(_val!=_val2)             \
kablam!          ^
kablam! /source/source/src/H5detect.c:381:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1386:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(double,    DOUBLE,     d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c: In function 'detect_C99_integers8':
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \
kablam!      ^
kablam! /source/source/src/H5detect.c:1409:5: note: in expansion of macro 'DETECT_BYTE'
kablam!      DETECT_BYTE(int8_t,           INT8,         d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \
kablam!      ^
kablam! /source/source/src/H5detect.c:1409:5: note: in expansion of macro 'DETECT_BYTE'
kablam!      DETECT_BYTE(int8_t,           INT8,         d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \
kablam!      ^
kablam! /source/source/src/H5detect.c:1416:5: note: in expansion of macro 'DETECT_BYTE'
kablam!      DETECT_BYTE(uint8_t,    UINT8,        d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \
kablam!      ^
kablam! /source/source/src/H5detect.c:1416:5: note: in expansion of macro 'DETECT_BYTE'
kablam!      DETECT_BYTE(uint8_t,    UINT8,        d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \
kablam!      ^
kablam! /source/source/src/H5detect.c:1423:5: note: in expansion of macro 'DETECT_BYTE'
kablam!      DETECT_BYTE(int_least8_t,     INT_LEAST8,   d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \
kablam!      ^
kablam! /source/source/src/H5detect.c:1423:5: note: in expansion of macro 'DETECT_BYTE'
kablam!      DETECT_BYTE(int_least8_t,     INT_LEAST8,   d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \
kablam!      ^
kablam! /source/source/src/H5detect.c:1430:5: note: in expansion of macro 'DETECT_BYTE'
kablam!      DETECT_BYTE(uint_least8_t,    UINT_LEAST8,  d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \
kablam!      ^
kablam! /source/source/src/H5detect.c:1430:5: note: in expansion of macro 'DETECT_BYTE'
kablam!      DETECT_BYTE(uint_least8_t,    UINT_LEAST8,  d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \
kablam!      ^
kablam! /source/source/src/H5detect.c:1437:5: note: in expansion of macro 'DETECT_BYTE'
kablam!      DETECT_BYTE(int_fast8_t,      INT_FAST8,    d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \
kablam!      ^
kablam! /source/source/src/H5detect.c:1437:5: note: in expansion of macro 'DETECT_BYTE'
kablam!      DETECT_BYTE(int_fast8_t,      INT_FAST8,    d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \
kablam!      ^
kablam! /source/source/src/H5detect.c:1444:5: note: in expansion of macro 'DETECT_BYTE'
kablam!      DETECT_BYTE(uint_fast8_t,    UINT_FAST8,   d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \
kablam!      ^
kablam! /source/source/src/H5detect.c:1444:5: note: in expansion of macro 'DETECT_BYTE'
kablam!      DETECT_BYTE(uint_fast8_t,    UINT_FAST8,   d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c: In function 'detect_C99_integers16':
kablam! /source/source/src/H5detect.c:254:14: warning: conversion to 'int16_t {aka short int}' from 'int' may alter its value [-Wconversion]
kablam!          _v = (_v << 8) + _i;                                                  \
kablam!               ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1470:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int16_t,     INT16,        d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1470:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int16_t,     INT16,        d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1470:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int16_t,     INT16,        d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:254:14: warning: conversion to 'uint16_t {aka short unsigned int}' from 'int' may alter its value [-Wconversion]
kablam!          _v = (_v << 8) + _i;                                                  \
kablam!               ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1473:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint16_t,     UINT16,       d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1473:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint16_t,     UINT16,       d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1473:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint16_t,     UINT16,       d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:254:14: warning: conversion to 'int_least16_t {aka short int}' from 'int' may alter its value [-Wconversion]
kablam!          _v = (_v << 8) + _i;                                                  \
kablam!               ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1476:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int_least16_t,    INT_LEAST16,  d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1476:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int_least16_t,    INT_LEAST16,  d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1476:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int_least16_t,    INT_LEAST16,  d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:254:14: warning: conversion to 'uint_least16_t {aka short unsigned int}' from 'int' may alter its value [-Wconversion]
kablam!          _v = (_v << 8) + _i;                                                  \
kablam!               ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1479:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint_least16_t,    UINT_LEAST16, d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1479:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint_least16_t,    UINT_LEAST16, d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1479:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint_least16_t,    UINT_LEAST16, d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1482:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int_fast16_t,    INT_FAST16,   d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1482:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int_fast16_t,    INT_FAST16,   d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:254:24: warning: conversion to 'uint_fast16_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!          _v = (_v << 8) + _i;                                                  \
kablam!                         ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1485:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint_fast16_t,    UINT_FAST16,  d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1485:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint_fast16_t,    UINT_FAST16,  d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1485:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint_fast16_t,    UINT_FAST16,  d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c: In function 'detect_C99_integers32':
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1508:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int32_t,     INT32,        d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1508:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int32_t,     INT32,        d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:254:24: warning: conversion to 'uint32_t {aka unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!          _v = (_v << 8) + _i;                                                  \
kablam!                         ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1511:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint32_t,     UINT32,       d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1511:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint32_t,     UINT32,       d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1511:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint32_t,     UINT32,       d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1514:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int_least32_t,    INT_LEAST32,  d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1514:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int_least32_t,    INT_LEAST32,  d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:254:24: warning: conversion to 'uint_least32_t {aka unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!          _v = (_v << 8) + _i;                                                  \
kablam!                         ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1517:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint_least32_t,    UINT_LEAST32, d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1517:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint_least32_t,    UINT_LEAST32, d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1517:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint_least32_t,    UINT_LEAST32, d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1520:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int_fast32_t,    INT_FAST32,   d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1520:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int_fast32_t,    INT_FAST32,   d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:254:24: warning: conversion to 'uint_fast32_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!          _v = (_v << 8) + _i;                                                  \
kablam!                         ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1523:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint_fast32_t,    UINT_FAST32,  d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1523:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint_fast32_t,    UINT_FAST32,  d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1523:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint_fast32_t,    UINT_FAST32,  d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c: In function 'detect_C99_integers64':
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1546:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int64_t,     INT64,        d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1546:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int64_t,     INT64,        d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:254:24: warning: conversion to 'uint64_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!          _v = (_v << 8) + _i;                                                  \
kablam!                         ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1549:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint64_t,     UINT64,       d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1549:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint64_t,     UINT64,       d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1549:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint64_t,     UINT64,       d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1552:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int_least64_t,    INT_LEAST64,  d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1552:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int_least64_t,    INT_LEAST64,  d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:254:24: warning: conversion to 'uint_least64_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!          _v = (_v << 8) + _i;                                                  \
kablam!                         ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1555:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint_least64_t,    UINT_LEAST64, d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1555:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint_least64_t,    UINT_LEAST64, d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1555:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint_least64_t,    UINT_LEAST64, d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1558:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int_fast64_t,    INT_FAST64,   d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1558:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(int_fast64_t,    INT_FAST64,   d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:254:24: warning: conversion to 'uint_fast64_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!          _v = (_v << 8) + _i;                                                  \
kablam!                         ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1561:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint_fast64_t,    UINT_FAST64,  d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1561:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint_fast64_t,    UINT_FAST64,  d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1561:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(uint_fast64_t,    UINT_FAST64,  d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1565:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(long long,    LLONG,        d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1565:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(long long,    LLONG,        d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:254:24: warning: conversion to 'long long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!          _v = (_v << 8) + _i;                                                  \
kablam!                         ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1566:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(unsigned long long,  ULLONG,       d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1566:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(unsigned long long,  ULLONG,       d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'
kablam!      DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1566:5: note: in expansion of macro 'DETECT_I'
kablam!      DETECT_I(unsigned long long,  ULLONG,       d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c: In function 'detect_C99_floats':
kablam! /source/source/src/H5detect.c:327:21: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!      HDmemcpy(_buf1, (const void *)&_v1, sizeof(TYPE));                        \
kablam!                      ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:1631:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(long double,   LDOUBLE,      d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:329:71: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]
kablam!          for(_byte_mask = (unsigned char)1; _byte_mask; _byte_mask <<= 1) {    \
kablam!                                                                        ^
kablam! /source/source/src/H5detect.c:1631:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(long double,   LDOUBLE,      d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:331:22: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!              HDmemcpy((void *)&_v2, (const void *)_buf1, sizeof(TYPE));        \
kablam!                       ^
kablam! /source/source/src/H5private.h:1005:47: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                ^
kablam! /source/source/src/H5detect.c:1631:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(long double,   LDOUBLE,      d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:332:20: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!              if(_v1 != _v2)                                                    \
kablam!                     ^
kablam! /source/source/src/H5detect.c:1631:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(long double,   LDOUBLE,      d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:342:25: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!          HDmemcpy(_buf1, (const void *)&_v1, sizeof(TYPE));                    \
kablam!                          ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:1631:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(long double,   LDOUBLE,      d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:343:25: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!          HDmemcpy(_buf3, (const void *)&_v3, sizeof(TYPE));                    \
kablam!                          ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:1631:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(long double,   LDOUBLE,      d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:350:47: warning: to be safe all intermediate pointers in cast from 'char **' to 'const char **' must be 'const' qualified [-Wcast-qual]
kablam!      fix_order(sizeof(TYPE), _last, INFO.perm, (const char**)&_mesg);          \
kablam!                                                ^
kablam! /source/source/src/H5detect.c:1631:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(long double,   LDOUBLE,      d_g[nd_g]); nd_g++;
kablam!      ^
kablam! In file included from /source/source/src/H5detect.c:57:0:
kablam! /source/source/src/H5detect.c:444:80: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \
kablam!                                                                                 ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:381:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1631:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(long double,   LDOUBLE,      d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:446:51: warning: cast discards 'volatile' qualifier from pointer target type [-Wcast-qual]
kablam!       HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \
kablam!                                                    ^
kablam! /source/source/src/H5private.h:1005:64: note: in definition of macro 'HDmemcpy'
kablam!      #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
kablam!                                                                 ^
kablam! /source/source/src/H5detect.c:381:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1631:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(long double,   LDOUBLE,      d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c:448:9: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
kablam!   if(_val!=_val2)             \
kablam!          ^
kablam! /source/source/src/H5detect.c:381:5: note: in expansion of macro 'ALIGNMENT'
kablam!      ALIGNMENT(TYPE, INFO);                                                    \
kablam!      ^
kablam! /source/source/src/H5detect.c:1631:5: note: in expansion of macro 'DETECT_F'
kablam!      DETECT_F(long double,   LDOUBLE,      d_g[nd_g]); nd_g++;
kablam!      ^
kablam! /source/source/src/H5detect.c: In function 'find_bias':
kablam! /source/source/src/H5detect.c:1178:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  find_bias(int epos, int esize, int *perm, volatile void *_a)
kablam!  ^
kablam! /source/source/src/H5detect.c: In function 'detect_C89_integers':
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  }
kablam!  ^
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c: In function 'detect_C99_integers8':
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c: In function 'detect_C99_integers16':
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c: In function 'detect_C99_integers32':
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c: In function 'detect_C99_integers64':
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1790:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c: In function 'verify_signal_handlers':
kablam! /source/source/src/H5detect.c:1667:12: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  static int verify_signal_handlers(int signum, void (*handler)(int))
kablam!             ^
kablam! /source/source/src/H5detect.c:1670:9: warning: variable 'i' might be clobbered by 'longjmp' or 'vfork' [-Wclobbered]
kablam!      int i, val;
kablam!          ^
kablam! /source/source/src/H5detect.c: In function 'detect_C89_integers':
kablam! /source/source/src/H5detect.c:1355:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  detect_C89_integers(void)
kablam!  ^
kablam! /source/source/src/H5detect.c:1355:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1355:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1355:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1355:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1355:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1355:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1355:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1355:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1355:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1355:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1355:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1355:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1355:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1355:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1355:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1355:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1355:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1355:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1355:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_b_b':
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_struct':
kablam! /source/source/src/H5Tconv.c:2119:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5T__conv_struct(hid_t src_id, hid_t dst_id, H5T_cdata_t *cdata, size_t nelmts,
kablam!  ^
kablam! /source/source/src/H5Tconv.c:2119:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c: In function 'detect_C99_integers8':
kablam! /source/source/src/H5detect.c:1405:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  detect_C99_integers8(void)
kablam!  ^
kablam! /source/source/src/H5detect.c:1405:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1405:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1405:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1405:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1405:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1405:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1405:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1405:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1405:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1405:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1405:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_struct_opt':
kablam! /source/source/src/H5Tconv.c:2373:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5T__conv_struct_opt(hid_t src_id, hid_t dst_id, H5T_cdata_t *cdata,
kablam!  ^
kablam! /source/source/src/H5Tconv.c:2373:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Tconv.c:2373:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Tconv.c:2373:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c: In function 'detect_C99_integers16':
kablam! /source/source/src/H5detect.c:1467:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  detect_C99_integers16(void)
kablam!  ^
kablam! /source/source/src/H5detect.c:1467:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1467:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1467:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1467:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1467:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1467:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1467:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1467:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1467:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1467:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1467:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1467:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1467:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1467:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1467:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1467:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1467:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1467:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1467:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c: In function 'detect_C99_integers32':
kablam! /source/source/src/H5detect.c:1505:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  detect_C99_integers32(void)
kablam!  ^
kablam! /source/source/src/H5detect.c:1505:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1505:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1505:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1505:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1505:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1505:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1505:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1505:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1505:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1505:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1505:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Topaque.c: In function 'H5Tset_tag':
kablam! /source/source/src/H5Topaque.c:80:21: warning: request for implicit conversion from 'void *' to 'H5T_t * {aka struct H5T_t *}' not permitted in C++ [-Wc++-compat]
kablam!      if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))
kablam!                      ^
kablam! /source/source/src/H5Topaque.c: In function 'H5Tget_tag':
kablam! /source/source/src/H5Topaque.c:127:21: warning: request for implicit conversion from 'void *' to 'H5T_t * {aka struct H5T_t *}' not permitted in C++ [-Wc++-compat]
kablam!      if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))
kablam!                      ^
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_i_i':
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tpad.c: In function 'H5Tget_pad':
kablam! /source/source/src/H5Tpad.c:83:21: warning: request for implicit conversion from 'void *' to 'H5T_t * {aka struct H5T_t *}' not permitted in C++ [-Wc++-compat]
kablam!      if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))
kablam!                      ^
kablam! /source/source/src/H5Tpad.c: In function 'H5Tset_pad':
kablam! /source/source/src/H5Tpad.c:127:21: warning: request for implicit conversion from 'void *' to 'H5T_t * {aka struct H5T_t *}' not permitted in C++ [-Wc++-compat]
kablam!      if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))
kablam!                      ^
kablam! /source/source/src/H5detect.c: In function 'detect_C99_integers64':
kablam! /source/source/src/H5detect.c:1543:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  detect_C99_integers64(void)
kablam!  ^
kablam! /source/source/src/H5detect.c:1543:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1543:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1543:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1543:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1543:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1543:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1543:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1543:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1543:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1543:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1543:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1543:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1543:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1543:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1543:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Tprecis.c: In function 'H5Tget_precision':
kablam! /source/source/src/H5Tprecis.c:90:21: warning: request for implicit conversion from 'void *' to 'H5T_t * {aka struct H5T_t *}' not permitted in C++ [-Wc++-compat]
kablam!      if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))
kablam!                      ^
kablam! /source/source/src/H5Tprecis.c: In function 'H5Tset_precision':
kablam! /source/source/src/H5Tprecis.c:179:21: warning: request for implicit conversion from 'void *' to 'H5T_t * {aka struct H5T_t *}' not permitted in C++ [-Wc++-compat]
kablam!      if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))
kablam!                      ^
kablam! /source/source/src/H5Tprecis.c: In function 'H5T_set_precision':
kablam! /source/source/src/H5Tprecis.c:268:6: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]
kablam!       switch (dt->shared->type) {
kablam!       ^
kablam! /source/source/src/H5Tprecis.c:268:6: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tprecis.c:268:6: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tprecis.c:268:6: warning: enumeration value 'H5T_COMPOUND' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tprecis.c:268:6: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tprecis.c:268:6: warning: enumeration value 'H5T_ENUM' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tprecis.c:268:6: warning: enumeration value 'H5T_VLEN' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tprecis.c:268:6: warning: enumeration value 'H5T_ARRAY' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tprecis.c:268:6: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_f_f':
kablam! /source/source/src/H5Tconv.c:4482:21: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!                      for (i = 0; i < tsize; i += 4) {
kablam!                      ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:4127:21: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!                      for (i = 0; i < tsize; i += 4) {
kablam!                      ^
kablam! /source/source/src/H5Tstrpad.c: In function 'H5Tget_strpad':
kablam! /source/source/src/H5Tstrpad.c:86:21: warning: request for implicit conversion from 'void *' to 'H5T_t * {aka struct H5T_t *}' not permitted in C++ [-Wc++-compat]
kablam!      if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))
kablam!                      ^
kablam! /source/source/src/H5Tstrpad.c: In function 'H5Tset_strpad':
kablam! /source/source/src/H5Tstrpad.c:143:21: warning: request for implicit conversion from 'void *' to 'H5T_t * {aka struct H5T_t *}' not permitted in C++ [-Wc++-compat]
kablam!      if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))
kablam!                      ^
kablam! /source/source/src/H5Tvisit.c: In function 'H5T__visit':
kablam! /source/source/src/H5Tvisit.c:119:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]
kablam!      switch(dt->shared->type) {
kablam!      ^
kablam! /source/source/src/H5Tvisit.c:119:5: warning: enumeration value 'H5T_INTEGER' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tvisit.c:119:5: warning: enumeration value 'H5T_FLOAT' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tvisit.c:119:5: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tvisit.c:119:5: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tvisit.c:119:5: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tvisit.c:119:5: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tvisit.c:119:5: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tvisit.c:119:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tvlen.c: In function 'H5Tvlen_create':
kablam! /source/source/src/H5Tvlen.c:116:22: warning: request for implicit conversion from 'void *' to 'H5T_t * {aka struct H5T_t *}' not permitted in C++ [-Wc++-compat]
kablam!      if(NULL == (base = H5I_object_verify(base_id, H5I_DATATYPE)))
kablam!                       ^
kablam! /source/source/src/H5Tvlen.c: In function 'H5T__vlen_create':
kablam! /source/source/src/H5Tvlen.c:168:47: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
kablam!      if(NULL == (dt->shared->parent = H5T_copy(base, H5T_COPY_ALL)))
kablam!                                                ^
kablam! In file included from /source/source/src/H5Oprivate.h:41:0,
kablam!                  from /source/source/src/H5Dprivate.h:27,
kablam!                  from /source/source/src/H5Tvlen.c:28:
kablam! /source/source/src/H5Tprivate.h:109:15: note: expected 'H5T_t * {aka struct H5T_t *}' but argument is of type 'const H5T_t * {aka const struct H5T_t *}'
kablam!  H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
kablam!                ^
kablam! /source/source/src/H5Tvlen.c: In function 'H5T__vlen_set_loc':
kablam! /source/source/src/H5Tvlen.c:270:36: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!                  dt->shared->size = 4 + H5F_SIZEOF_ADDR(f) + 4;
kablam!                                     ^
kablam! /source/source/src/H5Tvlen.c:222:9: warning: enumeration value 'H5T_LOC_MAXLOC' not handled in switch [-Wswitch-enum]
kablam!          switch(loc) {
kablam!          ^
kablam! /source/source/src/H5Tvlen.c: In function 'H5T_vlen_str_mem_write':
kablam! /source/source/src/H5Tvlen.c:719:20: warning: request for implicit conversion from 'void *' to 'char *' not permitted in C++ [-Wc++-compat]
kablam!          if(NULL==(t=(vl_alloc_info->alloc_func)((seq_len+1)*base_size,vl_alloc_info->alloc_info)))
kablam!                     ^
kablam! /source/source/src/H5Tvlen.c:723:20: warning: request for implicit conversion from 'void *' to 'char *' not permitted in C++ [-Wc++-compat]
kablam!          if(NULL==(t=H5MM_malloc((seq_len+1)*base_size)))
kablam!                     ^
kablam! /source/source/src/H5Tvlen.c: In function 'H5T_vlen_disk_isnull':
kablam! /source/source/src/H5Tvlen.c:847:23: warning: to be safe all intermediate pointers in cast from 'uint8_t ** {aka unsigned char **}' to 'const uint8_t ** {aka const unsigned char **}' must be 'const' qualified [-Wcast-qual]
kablam!      H5F_addr_decode(f,(const uint8_t **)&vl,&addr);
kablam!                        ^
kablam! /source/source/src/H5Tvlen.c: In function 'H5T_vlen_disk_read':
kablam! /source/source/src/H5Tvlen.c:884:23: warning: to be safe all intermediate pointers in cast from 'uint8_t ** {aka unsigned char **}' to 'const uint8_t ** {aka const unsigned char **}' must be 'const' qualified [-Wcast-qual]
kablam!      H5F_addr_decode(f,(const uint8_t **)&vl,&(hobjid.addr));
kablam!                        ^
kablam! /source/source/src/H5Tvlen.c: In function 'H5T_vlen_disk_write':
kablam! /source/source/src/H5Tvlen.c:937:28: warning: to be safe all intermediate pointers in cast from 'uint8_t ** {aka unsigned char **}' to 'const uint8_t ** {aka const unsigned char **}' must be 'const' qualified [-Wcast-qual]
kablam!          H5F_addr_decode(f, (const uint8_t **)&bg, &(bg_hobjid.addr));
kablam!                             ^
kablam! /source/source/src/H5Tvlen.c: In function 'H5T_vlen_disk_setnull':
kablam! /source/source/src/H5Tvlen.c:999:28: warning: to be safe all intermediate pointers in cast from 'uint8_t ** {aka unsigned char **}' to 'const uint8_t ** {aka const unsigned char **}' must be 'const' qualified [-Wcast-qual]
kablam!          H5F_addr_decode(f, (const uint8_t **)&bg, &(bg_hobjid.addr));
kablam!                             ^
kablam! /source/source/src/H5Tvlen.c: In function 'H5T_vlen_reclaim_recurse':
kablam! /source/source/src/H5Tvlen.c:1055:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]
kablam!      switch(dt->shared->type) {
kablam!      ^
kablam! /source/source/src/H5Tvlen.c:1055:5: warning: enumeration value 'H5T_INTEGER' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tvlen.c:1055:5: warning: enumeration value 'H5T_FLOAT' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tvlen.c:1055:5: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tvlen.c:1055:5: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tvlen.c:1055:5: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tvlen.c:1055:5: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tvlen.c:1055:5: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tvlen.c:1055:5: warning: enumeration value 'H5T_ENUM' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tvlen.c:1055:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Tvlen.c: In function 'H5T_vlen_reclaim':
kablam! /source/source/src/H5Tvlen.c:1170:20: warning: request for implicit conversion from 'void *' to 'H5T_t * {aka struct H5T_t *}' not permitted in C++ [-Wc++-compat]
kablam!      if(NULL == (dt = H5I_object_verify(type_id, H5I_DATATYPE)))
kablam!                     ^
kablam! /source/source/src/H5detect.c: In function 'main':
kablam! /source/source/src/H5detect.c:1733:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]
kablam!  main(void)
kablam!  ^
kablam! /source/source/src/H5detect.c:1733:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:1733:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5detect.c:900:2: warning: cannot optimize possibly infinite loops [-Wunsafe-loop-optimizations]
kablam!   for (i=MIN(pass*4+3,d->size-1),
kablam!   ^
kablam! /source/source/src/H5detect.c:891:2: warning: cannot optimize possibly infinite loops [-Wunsafe-loop-optimizations]
kablam!   for (i=MIN(pass*4+3,d->size-1); i>=pass*4; --i) {
kablam!   ^
kablam! /source/source/src/H5VM.c: In function 'H5VM_hyper_eq':
kablam! /source/source/src/H5VM.c:359:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5VM_hyper_eq(unsigned n,
kablam!  ^
kablam! /source/source/src/H5VM.c: In function 'H5VM_hyper_disjointp':
kablam! /source/source/src/H5VM.c:407:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5VM_hyper_disjointp(unsigned n,
kablam!  ^
kablam! /source/source/src/H5VM.c: In function 'H5VM_array_offset_pre':
kablam! /source/source/src/H5VM.c:1080:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5VM_array_offset_pre(unsigned n, const hsize_t *acc, const hsize_t *offset)
kablam!  ^
kablam! /source/source/src/H5VM.c: In function 'H5VM_hyper_stride':
kablam! /source/source/src/H5VM.c:259:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5VM_hyper_stride(unsigned n, const hsize_t *size,
kablam!  ^
kablam! /source/source/src/H5VM.c: In function 'H5VM_stride_fill':
kablam! /source/source/src/H5VM.c:704:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5VM_stride_fill(unsigned n, hsize_t elmt_size, const hsize_t *size,
kablam!  ^
kablam! /source/source/src/H5VM.c: In function 'H5VM_stride_copy':
kablam! /source/source/src/H5VM.c:764:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5VM_stride_copy(unsigned n, hsize_t elmt_size, const hsize_t *size,
kablam!  ^
kablam! /source/source/src/H5VM.c: In function 'H5VM_hyper_copy':
kablam! /source/source/src/H5VM.c:538:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5VM_hyper_copy(unsigned n, const hsize_t *_size,
kablam!  ^
kablam! /source/source/src/H5VM.c: In function 'H5VM_stride_copy_s':
kablam! /source/source/src/H5VM.c:833:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5VM_stride_copy_s(unsigned n, hsize_t elmt_size, const hsize_t *size,
kablam!  ^
kablam! /source/source/src/H5VM.c: In function 'H5VM_array_down':
kablam! /source/source/src/H5VM.c:1034:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5VM_array_down(unsigned n, const hsize_t *total_size, hsize_t *down)
kablam!  ^
kablam! /source/source/src/H5VM.c: In function 'H5VM_array_offset_pre':
kablam! /source/source/src/H5VM.c:1080:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam!  H5VM_array_offset_pre(unsigned n, const hsize_t *acc, const hsize_t *offset)
kablam!  ^
kablam! /source/source/src/H5Z.c: In function 'H5Z_find_idx':
kablam! /source/source/src/H5Z.c:1203:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]
kablam!  H5Z_find_idx(H5Z_filter_t id)
kablam!  ^
kablam! /source/source/src/H5Znbit.c: In function 'H5Z_calc_parms_array':
kablam! /source/source/src/H5Znbit.c:253:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]
kablam!      switch(dtype_base_class) {
kablam!      ^
kablam! /source/source/src/H5Znbit.c:253:5: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:253:5: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:253:5: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:253:5: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:253:5: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:253:5: warning: enumeration value 'H5T_ENUM' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:253:5: warning: enumeration value 'H5T_VLEN' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:253:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c: In function 'H5Z_calc_parms_compound':
kablam! /source/source/src/H5Znbit.c:338:9: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]
kablam!          switch(dtype_member_class) {
kablam!          ^
kablam! /source/source/src/H5Znbit.c:338:9: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:338:9: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:338:9: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:338:9: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:338:9: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:338:9: warning: enumeration value 'H5T_ENUM' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:338:9: warning: enumeration value 'H5T_VLEN' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:338:9: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c: In function 'H5Z_set_parms_nooptype':
kablam! /source/source/src/H5Znbit.c:408:36: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!      cd_values[cd_values_index++] = dtype_size;
kablam!                                     ^
kablam! /source/source/src/H5Znbit.c: In function 'H5Z_set_parms_atomic':
kablam! /source/source/src/H5Znbit.c:450:36: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!      cd_values[cd_values_index++] = dtype_size;
kablam!                                     ^
kablam! /source/source/src/H5Znbit.c:457:5: warning: enumeration value 'H5T_ORDER_ERROR' not handled in switch [-Wswitch-enum]
kablam!      switch(dtype_order) {
kablam!      ^
kablam! /source/source/src/H5Znbit.c:457:5: warning: enumeration value 'H5T_ORDER_VAX' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:457:5: warning: enumeration value 'H5T_ORDER_MIXED' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:457:5: warning: enumeration value 'H5T_ORDER_NONE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:479:61: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!      if(dtype_precision > dtype_size * 8 || (dtype_precision + dtype_offset) > dtype_size * 8
kablam!                                                              ^
kablam! /source/source/src/H5Znbit.c:484:36: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!      cd_values[cd_values_index++] = dtype_precision;
kablam!                                     ^
kablam! /source/source/src/H5Znbit.c:487:36: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!      cd_values[cd_values_index++] = dtype_offset;
kablam!                                     ^
kablam! /source/source/src/H5Znbit.c: In function 'H5Z_set_parms_array':
kablam! /source/source/src/H5Znbit.c:536:34: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!      cd_values[cd_values_index++]=dtype_size;
kablam!                                   ^
kablam! /source/source/src/H5Znbit.c:547:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]
kablam!      switch(dtype_base_class) {
kablam!      ^
kablam! /source/source/src/H5Znbit.c:547:5: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:547:5: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:547:5: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:547:5: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:547:5: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:547:5: warning: enumeration value 'H5T_ENUM' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:547:5: warning: enumeration value 'H5T_VLEN' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:547:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c: In function 'H5Z_set_parms_compound':
kablam! /source/source/src/H5Znbit.c:626:36: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!      cd_values[cd_values_index++] = dtype_size;
kablam!                                     ^
kablam! /source/source/src/H5Znbit.c:633:36: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!      cd_values[cd_values_index++] = nmembers;
kablam!                                     ^
kablam! /source/source/src/H5Znbit.c:649:40: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!          cd_values[cd_values_index++] = dtype_member_offset;
kablam!                                         ^
kablam! /source/source/src/H5Znbit.c:690:52: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!                      cd_values[cd_values_index++] = dtype_next_member_offset - dtype_member_offset;
kablam!                                                     ^
kablam! /source/source/src/H5Znbit.c:652:9: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]
kablam!          switch(dtype_member_class) {
kablam!          ^
kablam! /source/source/src/H5Znbit.c:652:9: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:652:9: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:652:9: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:652:9: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:652:9: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:652:9: warning: enumeration value 'H5T_ENUM' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:652:9: warning: enumeration value 'H5T_VLEN' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:652:9: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c: In function 'H5Z_set_local_nbit':
kablam! /source/source/src/H5Znbit.c:757:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]
kablam!      switch(dtype_class) {
kablam!      ^
kablam! /source/source/src/H5Znbit.c:757:5: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:757:5: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:757:5: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:757:5: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:757:5: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:757:5: warning: enumeration value 'H5T_ENUM' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:757:5: warning: enumeration value 'H5T_VLEN' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:757:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:812:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]
kablam!      switch(dtype_class) {
kablam!      ^
kablam! /source/source/src/H5Znbit.c:812:5: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:812:5: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:812:5: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:812:5: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:812:5: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:812:5: warning: enumeration value 'H5T_ENUM' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:812:5: warning: enumeration value 'H5T_VLEN' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:812:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Znbit.c:837:20: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!      cd_values[0] = cd_values_actual_nparms;
kablam!                     ^
kablam! /source/source/src/H5Znbit.c: In function 'H5Z_nbit_decompress_one_byte':
kablam! /source/source/src/H5Znbit.c:971:24: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!        data[data_offset + k] =
kablam!                         ^
kablam! /source/source/src/H5Znbit.c:972:7: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]
kablam!        ((val >> (*buf_len - dat_len)) & ~(~0 << dat_len)) << uchar_offset;
kablam!        ^
kablam! /source/source/src/H5Znbit.c:975:24: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!        data[data_offset + k] =
kablam!                         ^
kablam! /source/source/src/H5Znbit.c:976:7: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]
kablam!        ((val & ~(~0 << *buf_len)) << (dat_len - *buf_len)) << uchar_offset;
kablam!        ^
kablam! /source/source/src/H5Znbit.c:982:24: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!        data[data_offset + k] |=
kablam!                         ^
kablam! /source/source/src/H5Znbit.c:983:7: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]
kablam!        ((val >> (*buf_len - dat_len)) & ~(~0 << dat_len)) << uchar_offset;
kablam!        ^
kablam! /source/source/src/H5Znbit.c: In function 'H5Z_nbit_decompress_one_nooptype':
kablam! /source/source/src/H5Znbit.c:1001:70: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!        data[data_offset + i] = ((val & ~(~0 << *buf_len)) << (dat_len - *buf_len));
kablam!                                                                       ^
kablam! /source/source/src/H5Znbit.c:1001:31: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]
kablam!        data[data_offset + i] = ((val & ~(~0 << *buf_len)) << (dat_len - *buf_len));
kablam!                                ^
kablam! /source/source/src/H5Znbit.c:1002:15: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!        dat_len -= *buf_len;
kablam!                ^
kablam! /source/source/src/H5Znbit.c:1007:51: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!        data[data_offset + i] |= ((val >> (*buf_len - dat_len)) & ~(~0 << dat_len));
kablam!                                                    ^
kablam! /source/source/src/H5Znbit.c:1007:32: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]
kablam!        data[data_offset + i] |= ((val >> (*buf_len - dat_len)) & ~(~0 << dat_len));
kablam!                                 ^
kablam! /source/source/src/H5Znbit.c:1008:16: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!        *buf_len -= dat_len;
kablam!                 ^
kablam! /source/source/src/H5Znbit.c:1008:19: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!        *buf_len -= dat_len;
kablam!                    ^
kablam! /source/source/src/H5Znbit.c: In function 'H5Z_nbit_decompress_one_atomic':
kablam! /source/source/src/H5Znbit.c:1020:19: warning: conversion to 'int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!     datatype_len = p.size * 8;
kablam!                    ^
kablam! /source/source/src/H5Znbit.c: In function 'H5Z_nbit_decompress_one_array':
kablam! /source/source/src/H5Znbit.c:1062:22: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!             p.order = parms[parms_index++];
kablam!                       ^
kablam! /source/source/src/H5Znbit.c:1063:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!             p.precision = parms[parms_index++];
kablam!                           ^
kablam! /source/source/src/H5Znbit.c:1064:23: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!             p.offset = parms[parms_index++];
kablam!                        ^
kablam! /source/source/src/H5Znbit.c:1065:16: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!             n = total_size/p.size;
kablam!                 ^
kablam! /source/source/src/H5Znbit.c: In function 'H5Z_nbit_decompress_one_compound':
kablam! /source/source/src/H5Znbit.c:1115:25: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!                p.order = parms[parms_index++];
kablam!                          ^
kablam! /source/source/src/H5Znbit.c:1116:29: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!                p.precision = parms[parms_index++];
kablam!                              ^
kablam! /source/source/src/H5Znbit.c:1117:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!                p.offset = parms[parms_index++];
kablam!                           ^
kablam! /source/source/src/H5Znbit.c: In function 'H5Z_nbit_decompress':
kablam! /source/source/src/H5Znbit.c:1161:22: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!             p.order = parms[5];
kablam!                       ^
kablam! /source/source/src/H5Znbit.c:1162:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!             p.precision = parms[6];
kablam!                           ^
kablam! /source/source/src/H5Znbit.c:1163:23: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!             p.offset = parms[7];
kablam!                        ^
kablam! /source/source/src/H5Znbit.c: In function 'H5Z_nbit_compress_one_byte':
kablam! /source/source/src/H5Znbit.c:1196:27: warning: conversion to 'size_t {aka long unsigned int}' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!     val = data[data_offset + k];
kablam!                            ^
kablam! /source/source/src/H5Znbit.c:1202:18: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]
kablam!           val >>= 8 - dat_len;
kablam!                   ^
kablam! /source/source/src/H5Znbit.c:1207:15: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]
kablam!        val >>= p.offset % 8;
kablam!                ^
kablam! /source/source/src/H5Znbit.c:1212:21: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]
kablam!        buffer[*j] |= (val & ~(~0 << dat_len)) << (*buf_len - dat_len);
kablam!                      ^
kablam! /source/source/src/H5Znbit.c:1215:21: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]
kablam!        buffer[*j] |= (val >> (dat_len - *buf_len)) & ~(~0 << *buf_len);
kablam!                      ^
kablam! /source/source/src/H5Znbit.c:1220:20: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]
kablam!        buffer[*j] = (val & ~(~0 << dat_len)) << (*buf_len - dat_len);
kablam!                     ^
kablam! /source/source/src/H5Znbit.c: In function 'H5Z_nbit_compress_one_nooptype':
kablam! /source/source/src/H5Znbit.c:1237:38: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!        buffer[*j] |= (val >> (dat_len - *buf_len)) & ~(~0 << *buf_len);
kablam!                                       ^
kablam! /source/source/src/H5Znbit.c:1237:21: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]
kablam!        buffer[*j] |= (val >> (dat_len - *buf_len)) & ~(~0 << *buf_len);
kablam!                      ^
kablam! /source/source/src/H5Znbit.c:1238:15: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!        dat_len -= *buf_len;
kablam!                ^
kablam! /source/source/src/H5Znbit.c:1242:58: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!        buffer[*j] = (val & ~(~0 << dat_len)) << (*buf_len - dat_len);
kablam!                                                           ^
kablam! /source/source/src/H5Znbit.c:1242:20: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]
kablam!        buffer[*j] = (val & ~(~0 << dat_len)) << (*buf_len - dat_len);
kablam!                     ^
kablam! /source/source/src/H5Znbit.c:1243:16: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]
kablam!        *buf_len -= dat_len;
kablam!                 ^
kablam! /source/source/src/H5Znbit.c:1243:19: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!        *buf_len -= dat_len;
kablam!                    ^
kablam! /source/source/src/H5Znbit.c: In function 'H5Z_nbit_compress_one_atomic':
kablam! /source/source/src/H5Znbit.c:1254:19: warning: conversion to 'int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!     datatype_len = p.size * 8;
kablam!                    ^
kablam! /source/source/src/H5Znbit.c: In function 'H5Z_nbit_compress_one_array':
kablam! /source/source/src/H5Znbit.c:1295:22: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!             p.order = parms[parms_index++];
kablam!                       ^
kablam! /source/source/src/H5Znbit.c:1296:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!             p.precision = parms[parms_index++];
kablam!                           ^
kablam! /source/source/src/H5Znbit.c:1297:23: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!             p.offset = parms[parms_index++];
kablam!                        ^
kablam! /source/source/src/H5Znbit.c:1298:16: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!             n = total_size/p.size;
kablam!                 ^
kablam! /source/source/src/H5Znbit.c: In function 'H5Z_nbit_compress_one_compound':
kablam! /source/source/src/H5Znbit.c:1348:25: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!                p.order = parms[parms_index++];
kablam!                          ^
kablam! /source/source/src/H5Znbit.c:1349:29: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!                p.precision = parms[parms_index++];
kablam!                              ^
kablam! /source/source/src/H5Znbit.c:1350:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!                p.offset = parms[parms_index++];
kablam!                           ^
kablam! /source/source/src/H5Znbit.c: In function 'H5Z_nbit_compress':
kablam! /source/source/src/H5Znbit.c:1393:22: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!             p.order = parms[5];
kablam!                       ^
kablam! /source/source/src/H5Znbit.c:1394:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!             p.precision = parms[6];
kablam!                           ^
kablam! /source/source/src/H5Znbit.c:1395:23: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]
kablam!             p.offset = parms[7];
kablam!                        ^
kablam! /source/source/src/H5Znbit.c: In function 'H5Z_nbit_decompress_one_atomic.isra.1':
kablam! /source/source/src/H5Znbit.c:1013:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]
kablam!  H5Z_nbit_decompress_one_atomic(unsigned char *data, size_t data_offset,
kablam!  ^
kablam! /source/source/src/H5Znbit.c:1013:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]
kablam! /source/source/src/H5Znbit.c: In function 'H5Z_nbit_compress_one_atomic.isra.3':
kablam! /source/source/src/H5Znbit.c:1247:13: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]
kablam!  static void H5Z_nbit_compress_one_atomic(unsigned char *data, size_t data_offset,
kablam!              ^
kablam! /source/source/src/H5Znbit.c:1247:13: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]
kablam! /source/source/src/H5Zscaleoffset.c: In function 'H5Z_set_local_scaleoffset':
kablam! /source/source/src/H5Zscaleoffset.c:940:44: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!      cd_values[H5Z_SCALEOFFSET_PARM_SIZE] = dtype_size;
kablam!                                             ^
kablam! /source/source/src/H5Zscaleoffset.c:969:5: warning: enumeration value 'H5T_ORDER_MIXED' not handled in switch [-Wswitch-enum]
kablam!      switch(dtype_order) {
kablam!      ^
kablam! /source/source/src/H5Zscaleoffset.c: In function 'H5Z_filter_scaleoffset':
kablam! /source/source/src/H5Zscaleoffset.c:1065:5: warning: enumeration value 'H5T_ORDER_MIXED' not handled in switch [-Wswitch-enum]
kablam!      switch(H5T_native_order_g) {
kablam!      ^
kablam! /source/source/src/H5Zscaleoffset.c: In function 'H5Z_scaleoffset_convert':
kablam! /source/source/src/H5Zscaleoffset.c:1328:51: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!         for(i = 0; i < d_nelmts * dtype_size; i += dtype_size)
kablam!                                                    ^
kablam! /source/source/src/H5Zscaleoffset.c: In function 'H5Z_scaleoffset_precompress_fd':
kablam! /source/source/src/H5Zscaleoffset.c:395:33: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!        if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
kablam!                                  ^
kablam! /source/source/src/H5Zscaleoffset.c:560:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'
kablam!        H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:395:59: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!        if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
kablam!                                                            ^
kablam! /source/source/src/H5Zscaleoffset.c:560:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'
kablam!        H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:400:33: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!        if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
kablam!                                  ^
kablam! /source/source/src/H5Zscaleoffset.c:560:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'
kablam!        H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:400:59: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!        if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
kablam!                                                            ^
kablam! /source/source/src/H5Zscaleoffset.c:560:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'
kablam!        H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:405:33: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!        if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
kablam!                                  ^
kablam! /source/source/src/H5Zscaleoffset.c:560:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'
kablam!        H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:405:59: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!        if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
kablam!                                                            ^
kablam! /source/source/src/H5Zscaleoffset.c:560:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'
kablam!        H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:561:38: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!        span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \
kablam!                                       ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:561:66: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!        span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \
kablam!                                                                   ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:561:14: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!        span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \
kablam!               ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:488:37: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!                                buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val));  \
kablam!                                      ^
kablam! /source/source/src/H5Zscaleoffset.c:564:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'
kablam!           H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:488:63: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!                                buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val));  \
kablam!                                                                ^
kablam! /source/source/src/H5Zscaleoffset.c:564:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'
kablam!           H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:487:31: warning: conversion to 'int' from 'double' may alter its value [-Wfloat-conversion]
kablam!              *(int *)&buf[i] = H5Z_scaleoffset_rnd(                                    \
kablam!                                ^
kablam! /source/source/src/H5Zscaleoffset.c:564:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'
kablam!           H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:496:38: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!                                 buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val)); \
kablam!                                       ^
kablam! /source/source/src/H5Zscaleoffset.c:564:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'
kablam!           H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:496:64: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!                                 buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val)); \
kablam!                                                                 ^
kablam! /source/source/src/H5Zscaleoffset.c:564:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'
kablam!           H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:495:32: warning: conversion to 'long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!              *(long *)&buf[i] = H5Z_scaleoffset_rnd(                                   \
kablam!                                 ^
kablam! /source/source/src/H5Zscaleoffset.c:564:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'
kablam!           H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:504:43: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!                                      buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val)); \
kablam!                                            ^
kablam! /source/source/src/H5Zscaleoffset.c:564:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'
kablam!           H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:504:69: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!                                      buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val)); \
kablam!                                                                      ^
kablam! /source/source/src/H5Zscaleoffset.c:564:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'
kablam!           H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:503:37: warning: conversion to 'long long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!              *(long long *)&buf[i] = H5Z_scaleoffset_rnd(                              \
kablam!                                      ^
kablam! /source/source/src/H5Zscaleoffset.c:564:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'
kablam!           H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:395:33: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!        if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
kablam!                                  ^
kablam! /source/source/src/H5Zscaleoffset.c:567:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'
kablam!        H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:395:59: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!        if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
kablam!                                                            ^
kablam! /source/source/src/H5Zscaleoffset.c:567:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'
kablam!        H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:400:33: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!        if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
kablam!                                  ^
kablam! /source/source/src/H5Zscaleoffset.c:567:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'
kablam!        H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:400:59: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!        if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
kablam!                                                            ^
kablam! /source/source/src/H5Zscaleoffset.c:567:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'
kablam!        H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:405:33: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!        if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
kablam!                                  ^
kablam! /source/source/src/H5Zscaleoffset.c:567:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'
kablam!        H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:405:59: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!        if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
kablam!                                                            ^
kablam! /source/source/src/H5Zscaleoffset.c:567:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'
kablam!        H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:568:38: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!        span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \
kablam!                                       ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:568:66: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!        span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \
kablam!                                                                   ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:568:14: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!        span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \
kablam!               ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:516:34: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!                             buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val));     \
kablam!                                   ^
kablam! /source/source/src/H5Zscaleoffset.c:571:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'
kablam!           H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:516:60: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!                             buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val));     \
kablam!                                                             ^
kablam! /source/source/src/H5Zscaleoffset.c:571:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'
kablam!           H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:515:28: warning: conversion to 'int' from 'double' may alter its value [-Wfloat-conversion]
kablam!           *(int *)&buf[i] = H5Z_scaleoffset_rnd(                                       \
kablam!                             ^
kablam! /source/source/src/H5Zscaleoffset.c:571:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'
kablam!           H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:520:35: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!                              buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val));    \
kablam!                                    ^
kablam! /source/source/src/H5Zscaleoffset.c:571:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'
kablam!           H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:520:61: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!                              buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val));    \
kablam!                                                              ^
kablam! /source/source/src/H5Zscaleoffset.c:571:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'
kablam!           H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:519:29: warning: conversion to 'long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!           *(long *)&buf[i] = H5Z_scaleoffset_rnd(                                      \
kablam!                              ^
kablam! /source/source/src/H5Zscaleoffset.c:571:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'
kablam!           H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:524:40: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!                                   buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val)); \
kablam!                                         ^
kablam! /source/source/src/H5Zscaleoffset.c:571:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'
kablam!           H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:524:66: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!                                   buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val)); \
kablam!                                                                   ^
kablam! /source/source/src/H5Zscaleoffset.c:571:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'
kablam!           H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:523:34: warning: conversion to 'long long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!           *(long long *)&buf[i] = H5Z_scaleoffset_rnd(                                 \
kablam!                                   ^
kablam! /source/source/src/H5Zscaleoffset.c:571:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'
kablam!           H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1517:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:561:14: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!        span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \
kablam!               ^
kablam! /source/source/src/H5Zscaleoffset.c:1520:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(double, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:487:31: warning: conversion to 'int' from 'double' may alter its value [-Wfloat-conversion]
kablam!              *(int *)&buf[i] = H5Z_scaleoffset_rnd(                                    \
kablam!                                ^
kablam! /source/source/src/H5Zscaleoffset.c:564:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'
kablam!           H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1520:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(double, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:495:32: warning: conversion to 'long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!              *(long *)&buf[i] = H5Z_scaleoffset_rnd(                                   \
kablam!                                 ^
kablam! /source/source/src/H5Zscaleoffset.c:564:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'
kablam!           H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1520:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(double, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:503:37: warning: conversion to 'long long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!              *(long long *)&buf[i] = H5Z_scaleoffset_rnd(                              \
kablam!                                      ^
kablam! /source/source/src/H5Zscaleoffset.c:564:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'
kablam!           H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1520:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(double, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:568:14: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!        span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \
kablam!               ^
kablam! /source/source/src/H5Zscaleoffset.c:1520:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(double, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:515:28: warning: conversion to 'int' from 'double' may alter its value [-Wfloat-conversion]
kablam!           *(int *)&buf[i] = H5Z_scaleoffset_rnd(                                       \
kablam!                             ^
kablam! /source/source/src/H5Zscaleoffset.c:571:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'
kablam!           H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1520:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(double, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:519:29: warning: conversion to 'long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!           *(long *)&buf[i] = H5Z_scaleoffset_rnd(                                      \
kablam!                              ^
kablam! /source/source/src/H5Zscaleoffset.c:571:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'
kablam!           H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1520:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(double, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:523:34: warning: conversion to 'long long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!           *(long long *)&buf[i] = H5Z_scaleoffset_rnd(                                 \
kablam!                                   ^
kablam! /source/source/src/H5Zscaleoffset.c:571:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'
kablam!           H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
kablam!           ^
kablam! /source/source/src/H5Zscaleoffset.c:1520:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'
kablam!        H5Z_scaleoffset_precompress_3(double, data, d_nelmts,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c: In function 'H5Z_scaleoffset_postdecompress_fd':
kablam! /source/source/src/H5Zscaleoffset.c:629:76: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!                    filval : (double)(*(int *)&buf[i]) / HDpow(10.0f, D_val) + min);        \
kablam!                                                                             ^
kablam! /source/source/src/H5Zscaleoffset.c:669:7: note: in expansion of macro 'H5Z_scaleoffset_modify_3'
kablam!        H5Z_scaleoffset_modify_3(i, type, buf, d_nelmts, filval, minbits, min, D_val)    \
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:1540:7: note: in expansion of macro 'H5Z_scaleoffset_postdecompress_3'
kablam!        H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:629:26: warning: implicit conversion from 'float' to 'double' to match other result of conditional [-Wdouble-promotion]
kablam!                    filval : (double)(*(int *)&buf[i]) / HDpow(10.0f, D_val) + min);        \
kablam!                           ^
kablam! /source/source/src/H5Zscaleoffset.c:669:7: note: in expansion of macro 'H5Z_scaleoffset_modify_3'
kablam!        H5Z_scaleoffset_modify_3(i, type, buf, d_nelmts, filval, minbits, min, D_val)    \
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:1540:7: note: in expansion of macro 'H5Z_scaleoffset_postdecompress_3'
kablam!        H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:633:77: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!                    filval : (double)(*(long *)&buf[i]) / HDpow(10.0f, D_val) + min);       \
kablam!                                                                              ^
kablam! /source/source/src/H5Zscaleoffset.c:669:7: note: in expansion of macro 'H5Z_scaleoffset_modify_3'
kablam!        H5Z_scaleoffset_modify_3(i, type, buf, d_nelmts, filval, minbits, min, D_val)    \
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:1540:7: note: in expansion of macro 'H5Z_scaleoffset_postdecompress_3'
kablam!        H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:633:26: warning: implicit conversion from 'float' to 'double' to match other result of conditional [-Wdouble-promotion]
kablam!                    filval : (double)(*(long *)&buf[i]) / HDpow(10.0f, D_val) + min);       \
kablam!                           ^
kablam! /source/source/src/H5Zscaleoffset.c:669:7: note: in expansion of macro 'H5Z_scaleoffset_modify_3'
kablam!        H5Z_scaleoffset_modify_3(i, type, buf, d_nelmts, filval, minbits, min, D_val)    \
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:1540:7: note: in expansion of macro 'H5Z_scaleoffset_postdecompress_3'
kablam!        H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:637:82: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!                    filval : (double)(*(long long *)&buf[i]) / HDpow(10.0f, D_val) + min);  \
kablam!                                                                                   ^
kablam! /source/source/src/H5Zscaleoffset.c:669:7: note: in expansion of macro 'H5Z_scaleoffset_modify_3'
kablam!        H5Z_scaleoffset_modify_3(i, type, buf, d_nelmts, filval, minbits, min, D_val)    \
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:1540:7: note: in expansion of macro 'H5Z_scaleoffset_postdecompress_3'
kablam!        H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:637:26: warning: implicit conversion from 'float' to 'double' to match other result of conditional [-Wdouble-promotion]
kablam!                    filval : (double)(*(long long *)&buf[i]) / HDpow(10.0f, D_val) + min);  \
kablam!                           ^
kablam! /source/source/src/H5Zscaleoffset.c:669:7: note: in expansion of macro 'H5Z_scaleoffset_modify_3'
kablam!        H5Z_scaleoffset_modify_3(i, type, buf, d_nelmts, filval, minbits, min, D_val)    \
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:1540:7: note: in expansion of macro 'H5Z_scaleoffset_postdecompress_3'
kablam!        H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:647:74: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!           buf[i] = (type)((double)(*(int *)&buf[i]) / HDpow(10.0f, D_val) + min);       \
kablam!                                                                           ^
kablam! /source/source/src/H5Zscaleoffset.c:671:7: note: in expansion of macro 'H5Z_scaleoffset_modify_4'
kablam!        H5Z_scaleoffset_modify_4(i, type, buf, d_nelmts, min, D_val)                     \
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:1540:7: note: in expansion of macro 'H5Z_scaleoffset_postdecompress_3'
kablam!        H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:650:75: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!           buf[i] = (type)((double)(*(long *)&buf[i]) / HDpow(10.0f, D_val) + min);      \
kablam!                                                                            ^
kablam! /source/source/src/H5Zscaleoffset.c:671:7: note: in expansion of macro 'H5Z_scaleoffset_modify_4'
kablam!        H5Z_scaleoffset_modify_4(i, type, buf, d_nelmts, min, D_val)                     \
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:1540:7: note: in expansion of macro 'H5Z_scaleoffset_postdecompress_3'
kablam!        H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:653:80: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!           buf[i] = (type)((double)(*(long long *)&buf[i]) / HDpow(10.0f, D_val) + min); \
kablam!                                                                                 ^
kablam! /source/source/src/H5Zscaleoffset.c:671:7: note: in expansion of macro 'H5Z_scaleoffset_modify_4'
kablam!        H5Z_scaleoffset_modify_4(i, type, buf, d_nelmts, min, D_val)                     \
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c:1540:7: note: in expansion of macro 'H5Z_scaleoffset_postdecompress_3'
kablam!        H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,
kablam!        ^
kablam! /source/source/src/H5Zscaleoffset.c: In function 'H5Z_scaleoffset_decompress_one_atomic':
kablam! /source/source/src/H5Zscaleoffset.c:1600:16: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!     dtype_len = p.size * 8;
kablam!                 ^
kablam! /source/source/src/H5Zscaleoffset.c:1603:17: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!        begin_i = p.size - 1 - (dtype_len - p.minbits) / 8;
kablam!                  ^
kablam! /source/source/src/H5Zscaleoffset.c: In function 'H5Z_scaleoffset_compress_one_byte':
kablam! /source/source/src/H5Zscaleoffset.c:1658:21: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]
kablam!        buffer[*j] |= (unsigned char)((val & ~(~0 << dat_len)) << (*buf_len - dat_len));
kablam!                      ^
kablam! /source/source/src/H5Zscaleoffset.c: In function 'H5Z_scaleoffset_compress_one_atomic':
kablam! /source/source/src/H5Zscaleoffset.c:1683:16: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!     dtype_len = p.size * 8;
kablam!                 ^
kablam! /source/source/src/H5Zscaleoffset.c:1686:17: warning: conversion to 'unsigned int' from 'size_t {aka long unsigned int}' may alter its value [-Wconversion]
kablam!        begin_i = p.size - 1 - (dtype_len - p.minbits) / 8;
kablam!                  ^
kablam! /source/source/src/H5Zscaleoffset.c: In function 'H5Z_scaleoffset_log2':
kablam! /source/source/src/H5Zscaleoffset.c:1368:1: warning: function might be candidate for attribute 'const' if it is known to return normally [-Wsuggest-attribute=const]
kablam!  H5Z_scaleoffset_log2(unsigned long long num)
kablam!  ^
kablam! /source/source/src/H5Ztrans.c: In function 'H5Z_parse_term':
kablam! /source/source/src/H5Ztrans.c:689:9: warning: enumeration value 'H5Z_XFORM_ERROR' not handled in switch [-Wswitch-enum]
kablam!          switch (current->tok_type) {
kablam!          ^
kablam! /source/source/src/H5Ztrans.c:689:9: warning: enumeration value 'H5Z_XFORM_INTEGER' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Ztrans.c:689:9: warning: enumeration value 'H5Z_XFORM_FLOAT' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Ztrans.c:689:9: warning: enumeration value 'H5Z_XFORM_SYMBOL' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Ztrans.c:689:9: warning: enumeration value 'H5Z_XFORM_PLUS' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Ztrans.c:689:9: warning: enumeration value 'H5Z_XFORM_MINUS' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Ztrans.c:689:9: warning: enumeration value 'H5Z_XFORM_LPAREN' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Ztrans.c: In function 'H5Z_parse_factor':
kablam! /source/source/src/H5Ztrans.c:775:5: warning: enumeration value 'H5Z_XFORM_ERROR' not handled in switch [-Wswitch-enum]
kablam!      switch (current->tok_type) {
kablam!      ^
kablam! /source/source/src/H5Ztrans.c:775:5: warning: enumeration value 'H5Z_XFORM_MULT' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Ztrans.c:775:5: warning: enumeration value 'H5Z_XFORM_DIVIDE' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Ztrans.c: In function 'H5Z_xform_eval_full':
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:167:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), char, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:167:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), char, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:155:12: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]
kablam!       *pl = *pl OP *pr;                                            \
kablam!             ^
kablam! /source/source/src/H5Ztrans.c:167:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), char, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'unsigned char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:169:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'unsigned char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:169:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:155:12: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]
kablam!       *pl = *pl OP *pr;                                            \
kablam!             ^
kablam! /source/source/src/H5Ztrans.c:169:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'signed char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:171:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), signed char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'signed char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:171:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), signed char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:155:12: warning: conversion to 'signed char' from 'int' may alter its value [-Wconversion]
kablam!       *pl = *pl OP *pr;                                            \
kablam!             ^
kablam! /source/source/src/H5Ztrans.c:171:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), signed char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'short int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:173:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), short, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'short int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:173:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), short, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:155:12: warning: conversion to 'short int' from 'int' may alter its value [-Wconversion]
kablam!       *pl = *pl OP *pr;                                            \
kablam!             ^
kablam! /source/source/src/H5Ztrans.c:173:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), short, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'short unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:175:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned short, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'short unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:175:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned short, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:155:12: warning: conversion to 'short unsigned int' from 'int' may alter its value [-Wconversion]
kablam!       *pl = *pl OP *pr;                                            \
kablam!             ^
kablam! /source/source/src/H5Ztrans.c:175:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned short, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:177:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), int, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:177:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), int, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:179:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned int, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:179:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned int, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1094:46: warning: conversion to 'double' from 'long int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = *p OP tree_val;                                            \
kablam!               ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:181:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1094:46: warning: conversion to 'double' from 'long int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = tree_val OP *p;                                            \
kablam!                     ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:181:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1094:46: warning: conversion to 'double' from 'long unsigned int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = *p OP tree_val;                                            \
kablam!               ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'long unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:183:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1094:46: warning: conversion to 'double' from 'long unsigned int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = tree_val OP *p;                                            \
kablam!                     ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'long unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:183:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1094:46: warning: conversion to 'double' from 'long long int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = *p OP tree_val;                                            \
kablam!               ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'long long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:185:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1094:46: warning: conversion to 'double' from 'long long int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = tree_val OP *p;                                            \
kablam!                     ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'long long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:185:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1094:46: warning: conversion to 'double' from 'long long unsigned int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = *p OP tree_val;                                            \
kablam!               ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:187:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1094:46: warning: conversion to 'double' from 'long long unsigned int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = tree_val OP *p;                                            \
kablam!                     ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:187:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1094:46: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = *p OP tree_val;                                            \
kablam!               ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'float' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:189:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), float, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1094:46: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = tree_val OP *p;                                            \
kablam!                     ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'float' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:189:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), float, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1094:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:167:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), char, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:167:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), char, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:155:12: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]
kablam!       *pl = *pl OP *pr;                                            \
kablam!             ^
kablam! /source/source/src/H5Ztrans.c:167:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), char, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'unsigned char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:169:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'unsigned char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:169:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:155:12: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]
kablam!       *pl = *pl OP *pr;                                            \
kablam!             ^
kablam! /source/source/src/H5Ztrans.c:169:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'signed char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:171:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), signed char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'signed char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:171:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), signed char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:155:12: warning: conversion to 'signed char' from 'int' may alter its value [-Wconversion]
kablam!       *pl = *pl OP *pr;                                            \
kablam!             ^
kablam! /source/source/src/H5Ztrans.c:171:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), signed char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'short int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:173:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), short, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'short int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:173:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), short, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:155:12: warning: conversion to 'short int' from 'int' may alter its value [-Wconversion]
kablam!       *pl = *pl OP *pr;                                            \
kablam!             ^
kablam! /source/source/src/H5Ztrans.c:173:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), short, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'short unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:175:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned short, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'short unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:175:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned short, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:155:12: warning: conversion to 'short unsigned int' from 'int' may alter its value [-Wconversion]
kablam!       *pl = *pl OP *pr;                                            \
kablam!             ^
kablam! /source/source/src/H5Ztrans.c:175:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned short, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:177:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), int, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:177:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), int, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:179:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned int, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:179:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned int, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1098:46: warning: conversion to 'double' from 'long int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = *p OP tree_val;                                            \
kablam!               ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:181:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1098:46: warning: conversion to 'double' from 'long int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = tree_val OP *p;                                            \
kablam!                     ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:181:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1098:46: warning: conversion to 'double' from 'long unsigned int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = *p OP tree_val;                                            \
kablam!               ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'long unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:183:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1098:46: warning: conversion to 'double' from 'long unsigned int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = tree_val OP *p;                                            \
kablam!                     ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'long unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:183:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1098:46: warning: conversion to 'double' from 'long long int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = *p OP tree_val;                                            \
kablam!               ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'long long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:185:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1098:46: warning: conversion to 'double' from 'long long int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = tree_val OP *p;                                            \
kablam!                     ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'long long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:185:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1098:46: warning: conversion to 'double' from 'long long unsigned int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = *p OP tree_val;                                            \
kablam!               ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:187:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1098:46: warning: conversion to 'double' from 'long long unsigned int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = tree_val OP *p;                                            \
kablam!                     ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:187:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1098:46: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = *p OP tree_val;                                            \
kablam!               ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'float' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:189:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), float, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1098:46: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = tree_val OP *p;                                            \
kablam!                     ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'float' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:189:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), float, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1098:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:167:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), char, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:167:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), char, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:155:12: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]
kablam!       *pl = *pl OP *pr;                                            \
kablam!             ^
kablam! /source/source/src/H5Ztrans.c:167:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), char, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'unsigned char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:169:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'unsigned char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:169:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:155:12: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]
kablam!       *pl = *pl OP *pr;                                            \
kablam!             ^
kablam! /source/source/src/H5Ztrans.c:169:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'signed char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:171:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), signed char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'signed char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:171:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), signed char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:155:12: warning: conversion to 'signed char' from 'int' may alter its value [-Wconversion]
kablam!       *pl = *pl OP *pr;                                            \
kablam!             ^
kablam! /source/source/src/H5Ztrans.c:171:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), signed char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'short int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:173:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), short, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'short int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:173:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), short, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:155:12: warning: conversion to 'short int' from 'int' may alter its value [-Wconversion]
kablam!       *pl = *pl OP *pr;                                            \
kablam!             ^
kablam! /source/source/src/H5Ztrans.c:173:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), short, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'short unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:175:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned short, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'short unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:175:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned short, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:155:12: warning: conversion to 'short unsigned int' from 'int' may alter its value [-Wconversion]
kablam!       *pl = *pl OP *pr;                                            \
kablam!             ^
kablam! /source/source/src/H5Ztrans.c:175:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned short, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:177:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), int, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:177:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), int, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:179:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned int, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:179:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned int, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:1102:45: warning: conversion to 'double' from 'long int' may alter its value [-Wconversion]
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!                                              ^
kablam! /source/source/src/H5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = *p OP tree_val;                                            \
kablam!               ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:181:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:1102:45: warning: conversion to 'double' from 'long int' may alter its value [-Wconversion]
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!                                              ^
kablam! /source/source/src/H5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = tree_val OP *p;                                            \
kablam!                     ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:181:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:1102:45: warning: conversion to 'double' from 'long unsigned int' may alter its value [-Wconversion]
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!                                              ^
kablam! /source/source/src/H5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = *p OP tree_val;                                            \
kablam!               ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'long unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:183:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:1102:45: warning: conversion to 'double' from 'long unsigned int' may alter its value [-Wconversion]
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!                                              ^
kablam! /source/source/src/H5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = tree_val OP *p;                                            \
kablam!                     ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'long unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:183:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:1102:45: warning: conversion to 'double' from 'long long int' may alter its value [-Wconversion]
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!                                              ^
kablam! /source/source/src/H5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = *p OP tree_val;                                            \
kablam!               ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'long long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:185:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:1102:45: warning: conversion to 'double' from 'long long int' may alter its value [-Wconversion]
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!                                              ^
kablam! /source/source/src/H5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = tree_val OP *p;                                            \
kablam!                     ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'long long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:185:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:1102:45: warning: conversion to 'double' from 'long long unsigned int' may alter its value [-Wconversion]
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!                                              ^
kablam! /source/source/src/H5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = *p OP tree_val;                                            \
kablam!               ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:187:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:1102:45: warning: conversion to 'double' from 'long long unsigned int' may alter its value [-Wconversion]
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!                                              ^
kablam! /source/source/src/H5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = tree_val OP *p;                                            \
kablam!                     ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:187:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:1102:45: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!                                              ^
kablam! /source/source/src/H5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = *p OP tree_val;                                            \
kablam!               ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'float' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:189:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), float, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:1102:45: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!                                              ^
kablam! /source/source/src/H5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = tree_val OP *p;                                            \
kablam!                     ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'float' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:189:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), float, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1102:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!    H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
kablam!    ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:167:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), char, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:167:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), char, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:155:12: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]
kablam!       *pl = *pl OP *pr;                                            \
kablam!             ^
kablam! /source/source/src/H5Ztrans.c:167:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), char, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'unsigned char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:169:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'unsigned char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:169:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'signed char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:171:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), signed char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'signed char' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:171:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), signed char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:155:12: warning: conversion to 'signed char' from 'int' may alter its value [-Wconversion]
kablam!       *pl = *pl OP *pr;                                            \
kablam!             ^
kablam! /source/source/src/H5Ztrans.c:171:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), signed char, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'short int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:173:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), short, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'short int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:173:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), short, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:155:12: warning: conversion to 'short int' from 'int' may alter its value [-Wconversion]
kablam!       *pl = *pl OP *pr;                                            \
kablam!             ^
kablam! /source/source/src/H5Ztrans.c:173:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), short, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'short unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:175:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned short, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'short unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:175:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned short, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:177:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), int, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:177:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), int, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:179:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned int, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:179:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned int, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1106:46: warning: conversion to 'double' from 'long int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = *p OP tree_val;                                            \
kablam!               ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:181:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1106:46: warning: conversion to 'double' from 'long int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = tree_val OP *p;                                            \
kablam!                     ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:181:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1106:46: warning: conversion to 'double' from 'long unsigned int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = *p OP tree_val;                                            \
kablam!               ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'long unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:183:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1106:46: warning: conversion to 'double' from 'long unsigned int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = tree_val OP *p;                                            \
kablam!                     ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'long unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:183:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1106:46: warning: conversion to 'double' from 'long long int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = *p OP tree_val;                                            \
kablam!               ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'long long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:185:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1106:46: warning: conversion to 'double' from 'long long int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = tree_val OP *p;                                            \
kablam!                     ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'long long int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:185:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1106:46: warning: conversion to 'double' from 'long long unsigned int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = *p OP tree_val;                                            \
kablam!               ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:187:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1106:46: warning: conversion to 'double' from 'long long unsigned int' may alter its value [-Wconversion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = tree_val OP *p;                                            \
kablam!                     ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:187:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1106:46: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = *p OP tree_val;                                            \
kablam!               ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:128:11: warning: conversion to 'float' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = *p OP tree_val;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:189:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), float, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1106:46: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!                                               ^
kablam! /source/source/src/H5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'
kablam!       *p = tree_val OP *p;                                            \
kablam!                     ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:145:11: warning: conversion to 'float' from 'double' may alter its value [-Wfloat-conversion]
kablam!       *p = tree_val OP *p;                                            \
kablam!            ^
kablam! /source/source/src/H5Ztrans.c:189:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'
kablam!   H5Z_XFORM_DO_OP1((RESL), (RESR), float, OP, (SIZE))  \
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1106:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'
kablam!     H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
kablam!     ^
kablam! /source/source/src/H5Ztrans.c:1092:2: warning: enumeration value 'H5Z_XFORM_ERROR' not handled in switch [-Wswitch-enum]
kablam!   switch (tree->type) {
kablam!   ^
kablam! /source/source/src/H5Ztrans.c:1092:2: warning: enumeration value 'H5Z_XFORM_INTEGER' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Ztrans.c:1092:2: warning: enumeration value 'H5Z_XFORM_FLOAT' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Ztrans.c:1092:2: warning: enumeration value 'H5Z_XFORM_SYMBOL' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Ztrans.c:1092:2: warning: enumeration value 'H5Z_XFORM_LPAREN' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Ztrans.c:1092:2: warning: enumeration value 'H5Z_XFORM_RPAREN' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Ztrans.c:1092:2: warning: enumeration value 'H5Z_XFORM_END' not handled in switch [-Wswitch-enum]
kablam! /source/source/src/H5Ztrans.c: In function 'H5Z_xform_noop':
kablam! /source/source/src/H5Ztrans.c:1678:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]
kablam!  H5Z_xform_noop(const H5Z_data_xform_t *data_xform_prop)
kablam!  ^
kablam! /source/source/src/H5Ztrans.c: In function 'H5Z_xform_extract_xform_str':
kablam! /source/source/src/H5Ztrans.c:1707:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]
kablam!  H5Z_xform_extract_xform_str(const H5Z_data_xform_t *data_xform_prop)
kablam!  ^
kablam! /source/source/src/H5Zscaleoffset.c: In function 'H5Z_scaleoffset_precompress_i':
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! cc1: warning: vector shuffling operation will be expanded piecewise [-Wvector-operation-performance]
kablam! H5lib_settings.c:34:6: warning: size of 'H5libhdf5_settings' is 3051 bytes [-Wlarger-than=]
kablam!  char H5libhdf5_settings[]=
kablam!       ^
kablam! /source/source/src/H5Zscaleoffset.c: In function 'H5Z_filter_scaleoffset':
kablam! /source/source/src/H5Zscaleoffset.c:1037:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]
kablam!  H5Z_filter_scaleoffset(unsigned flags, size_t cd_nelmts, const unsigned cd_values[],
kablam!  ^
kablam! /source/source/src/H5Zscaleoffset.c:1037:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Zscaleoffset.c:1037:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]
kablam! /source/source/src/H5Zscaleoffset.c:1037:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_f_i':
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:8975:21: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!                      for (i = 0; i < tsize; i += 4) {
kablam!                      ^
kablam! /source/source/src/H5Tconv.c: In function 'H5T__conv_i_f':
kablam! /source/source/src/H5Tconv.c:9774:21: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!                      for (i = 0; i < tsize; i += 4) {
kablam!                      ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! /source/source/src/H5Tconv.c:9851:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]
kablam!          for (i = 0; i < size; i += 2) {
kablam!          ^
kablam! ar: `u' modifier ignored since `D' is the default (see `U')
kablam! unable to modify source at /source/source/bin/make_err line 170.
kablam! make[2]: *** [/source/source/src/H5Edefin.h] Error 30
kablam! make[1]: *** [install-am] Error 2
kablam! make: *** [install-recursive] Error 1
kablam! thread 'main' panicked at 'assertion failed: cmd!("make").current_dir(&build).arg(&format!("-j{}" , & get ! ( "NUM_JOBS"
kablam!                                               ))).arg("install").stdout(process::Stdio::inherit()).stderr(process::Stdio::inherit()).status().unwrap().success()', build.rs:49
kablam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
kablam! 
boom! running `docker rm -f 69f363c7b999825b3bd10399d3ce90765ccf3402ee37f52e738a91a26a65d404`
blam! 69f363c7b999825b3bd10399d3ce90765ccf3402ee37f52e738a91a26a65d404
