boom! testing socket-0.0.7 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 40b1de65998ca31c991fca187ad2c115d878de6bb655481a43d281a8ff08cf55
boom! running `docker start -a 40b1de65998ca31c991fca187ad2c115d878de6bb655481a43d281a8ff08cf55`
kablam!    Compiling socket v0.0.7 (file:///source)
kablam! warning: found Rust slice type in foreign module, consider using a raw pointer instead
kablam!   --> src/lib.rs:49:71
kablam!    |
kablam! 49 |     fn c_socketpair(domain: c_int, type_: c_int, protocol: c_int, sv: *mut [c_int]) -> c_int;
kablam!    |                                                                       ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/lib.rs:39:21
kablam!    |
kablam! 39 |         let value = unsafe { $fun($($x,)*) };
kablam!    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ unnecessary `unsafe` block
kablam! ...
kablam! 83 |         _try!(c_socketpair, domain as c_int, type_ as c_int, protocol as c_int, &mut fds as *mut [c_int]);
kablam!    |         -------------------------------------------------------------------------------------------------- in this macro invocation
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! note: because it's nested under this `unsafe` block
kablam!   --> src/lib.rs:81:5
kablam!    |
kablam! 81 |       unsafe {
kablam!    |  _____^ starting here...
kablam! 82 | |         let mut fds: [c_int; 2] = mem::zeroed();
kablam! 83 | |         _try!(c_socketpair, domain as c_int, type_ as c_int, protocol as c_int, &mut fds as *mut [c_int]);
kablam! 84 | |         Ok((Socket { fd: fds[0] }, Socket { fd: fds[1] }))
kablam! 85 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!    --> src/lib.rs:39:21
kablam!     |
kablam! 39  |           let value = unsafe { $fun($($x,)*) };
kablam!     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ unnecessary `unsafe` block
kablam! ...
kablam! 131 |               _try!(
kablam!     |  _____________- starting here...
kablam! 132 | |                 setsockopt,
kablam! 133 | |                 self.fd, level, name, value, mem::size_of::<T>() as socklen_t);
kablam!     | |_______________________________________________________________________________- ...ending here: in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_unsafe)] on by default
kablam! note: because it's nested under this `unsafe` block
kablam!    --> src/lib.rs:129:9
kablam!     |
kablam! 129 |           unsafe {
kablam!     |  _________^ starting here...
kablam! 130 | |             let value = &value as *const T as *const c_void;
kablam! 131 | |             _try!(
kablam! 132 | |                 setsockopt,
kablam! 133 | |                 self.fd, level, name, value, mem::size_of::<T>() as socklen_t);
kablam! 134 | |         }
kablam!     | |_________^ ...ending here
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.4 secs
boom! running `docker rm -f 40b1de65998ca31c991fca187ad2c115d878de6bb655481a43d281a8ff08cf55`
blam! 40b1de65998ca31c991fca187ad2c115d878de6bb655481a43d281a8ff08cf55
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 3ed49ac3e53100678378dd724c2a372b1bbe0fa3deb6855e35534e626dd33926
boom! running `docker start -a 3ed49ac3e53100678378dd724c2a372b1bbe0fa3deb6855e35534e626dd33926`
kablam!    Compiling socket v0.0.7 (file:///source)
kablam! warning: found Rust slice type in foreign module, consider using a raw pointer instead
kablam!   --> src/lib.rs:49:71
kablam!    |
kablam! 49 |     fn c_socketpair(domain: c_int, type_: c_int, protocol: c_int, sv: *mut [c_int]) -> c_int;
kablam!    |                                                                       ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(improper_ctypes)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/lib.rs:39:21
kablam!    |
kablam! 39 |         let value = unsafe { $fun($($x,)*) };
kablam!    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ unnecessary `unsafe` block
kablam! ...
kablam! 83 |         _try!(c_socketpair, domain as c_int, type_ as c_int, protocol as c_int, &mut fds as *mut [c_int]);
kablam!    |         -------------------------------------------------------------------------------------------------- in this macro invocation
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! note: because it's nested under this `unsafe` block
kablam!   --> src/lib.rs:81:5
kablam!    |
kablam! 81 |       unsafe {
kablam!    |  _____^ starting here...
kablam! 82 | |         let mut fds: [c_int; 2] = mem::zeroed();
kablam! 83 | |         _try!(c_socketpair, domain as c_int, type_ as c_int, protocol as c_int, &mut fds as *mut [c_int]);
kablam! 84 | |         Ok((Socket { fd: fds[0] }, Socket { fd: fds[1] }))
kablam! 85 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!    --> src/lib.rs:39:21
kablam!     |
kablam! 39  |           let value = unsafe { $fun($($x,)*) };
kablam!     |                       ^^^^^^^^^^^^^^^^^^^^^^^^ unnecessary `unsafe` block
kablam! ...
kablam! 131 |               _try!(
kablam!     |  _____________- starting here...
kablam! 132 | |                 setsockopt,
kablam! 133 | |                 self.fd, level, name, value, mem::size_of::<T>() as socklen_t);
kablam!     | |_______________________________________________________________________________- ...ending here: in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_unsafe)] on by default
kablam! note: because it's nested under this `unsafe` block
kablam!    --> src/lib.rs:129:9
kablam!     |
kablam! 129 |           unsafe {
kablam!     |  _________^ starting here...
kablam! 130 | |             let value = &value as *const T as *const c_void;
kablam! 131 | |             _try!(
kablam! 132 | |                 setsockopt,
kablam! 133 | |                 self.fd, level, name, value, mem::size_of::<T>() as socklen_t);
kablam! 134 | |         }
kablam!     | |_________^ ...ending here
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:370:9
kablam!     |
kablam! 370 |         thread.join();
kablam!     |         ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:384:9
kablam!     |
kablam! 384 |         thread.join();
kablam!     |         ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.91 secs
boom! running `docker rm -f 3ed49ac3e53100678378dd724c2a372b1bbe0fa3deb6855e35534e626dd33926`
blam! 3ed49ac3e53100678378dd724c2a372b1bbe0fa3deb6855e35534e626dd33926
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 8c07c7b2cd09621480281fc9a82e1e19f9189b3002a9413f59040fa26394645f
boom! running `docker start -a 8c07c7b2cd09621480281fc9a82e1e19f9189b3002a9413f59040fa26394645f`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/socket-a2405bed31502ec0
blam! 
blam! running 5 tests
blam! test tests::getsockname_works ... ok
blam! test tests::some_basic_socket_stuff_works ... ok
blam! test tests::udp_communication_works ... ok
blam! test tests::socketpair_and_unix_sockets_work ... ok
blam! test tests::tcp_communication_works ... ok
blam! 
blam! test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests socket
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 8c07c7b2cd09621480281fc9a82e1e19f9189b3002a9413f59040fa26394645f`
blam! 8c07c7b2cd09621480281fc9a82e1e19f9189b3002a9413f59040fa26394645f
