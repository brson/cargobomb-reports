boom! testing config-0.4.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! e82a792fd593df283bc2fae1ceebc30cfbdd631da63c3f68a86e5aa1d9618c0f
boom! running `docker start -a e82a792fd593df283bc2fae1ceebc30cfbdd631da63c3f68a86e5aa1d9618c0f`
kablam!    Compiling config v0.4.1 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.86 secs
boom! running `docker rm -f e82a792fd593df283bc2fae1ceebc30cfbdd631da63c3f68a86e5aa1d9618c0f`
blam! e82a792fd593df283bc2fae1ceebc30cfbdd631da63c3f68a86e5aa1d9618c0f
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 3230af3916c8b723f6dfa50c61187a6f071150bd2ca02f2b2cd5beb0d769cd0d
boom! running `docker start -a 3230af3916c8b723f6dfa50c61187a6f071150bd2ca02f2b2cd5beb0d769cd0d`
kablam!    Compiling config v0.4.1 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 4.35 secs
boom! running `docker rm -f 3230af3916c8b723f6dfa50c61187a6f071150bd2ca02f2b2cd5beb0d769cd0d`
blam! 3230af3916c8b723f6dfa50c61187a6f071150bd2ca02f2b2cd5beb0d769cd0d
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 79aaacad9805102233d5f011ce0ec42ffb536da155acb5367412411887218314
boom! running `docker start -a 79aaacad9805102233d5f011ce0ec42ffb536da155acb5367412411887218314`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/config-6afeaf8cb8a6f486
blam! 
blam! running 23 tests
blam! test config::test::test_bool ... ok
blam! test config::test::test_default_override ... ok
blam! test config::test::test_float ... ok
blam! test config::test::test_file_namespace ... ok
blam! test config::test::test_int ... ok
blam! test config::test::test_map_into ... ok
blam! test config::test::test_map ... ok
blam! test config::test::test_not_found ... ok
blam! test config::test::test_path ... ok
blam! test config::test::test_retrieve_float ... ok
blam! test config::test::test_map_set_coerce ... ok
blam! test config::test::test_retrieve_str ... ok
blam! test config::test::test_retrieve_int ... ok
blam! test config::test::test_slice_into ... ok
blam! test config::test::test_slice ... ok
blam! test config::test::test_slice_set_coerce ... ok
blam! test config::test::test_str ... ok
blam! test path::test::test_id ... ok
blam! test path::test::test_subscript ... ok
blam! test config::test::test_retrieve_bool ... ok
blam! test path::test::test_id_dash ... ok
blam! test path::test::test_child ... ok
blam! test path::test::test_subscript_neg ... ok
blam! 
blam! test result: ok. 23 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests config
blam! 
blam! running 2 tests
blam! test src/lib.rs -  (line 4) ... ok
blam! test src/lib.rs -  (line 34) ... ok
blam! 
blam! test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 79aaacad9805102233d5f011ce0ec42ffb536da155acb5367412411887218314`
blam! 79aaacad9805102233d5f011ce0ec42ffb536da155acb5367412411887218314
