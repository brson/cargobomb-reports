boom! testing mqtt-protocol-0.1.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 2de181be83e5256d2ade8e2527139e5afcedf5a92e2da13f3e8faf1b72358170
boom! running `docker start -a 2de181be83e5256d2ade8e2527139e5afcedf5a92e2da13f3e8faf1b72358170`
kablam!    Compiling mqtt-protocol v0.1.1 (file:///source)
kablam! warning: unused `#[macro_use]` import
kablam!  --> src/lib.rs:2:1
kablam!   |
kablam! 2 | #[macro_use]
kablam!   | ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Write`
kablam!  --> src/control/variable_header/mod.rs:3:21
kablam!   |
kablam! 3 | use std::io::{self, Write};
kablam!   |                     ^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable `Cond` should have a snake case name such as `cond`
kablam!   --> src/encodable.rs:25:45
kablam!    |
kablam! 25 |     fn decode_with<R: Read>(reader: &mut R, Cond: Option<Self::Cond>) -> Result<Self, Self::Err>;
kablam!    |                                             ^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 6.63 secs
boom! running `docker rm -f 2de181be83e5256d2ade8e2527139e5afcedf5a92e2da13f3e8faf1b72358170`
blam! 2de181be83e5256d2ade8e2527139e5afcedf5a92e2da13f3e8faf1b72358170
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! d23ce9130ab26e1f34020c365aad224a0f78e36b76a0641d71a6a5d4c7851d22
boom! running `docker start -a d23ce9130ab26e1f34020c365aad224a0f78e36b76a0641d71a6a5d4c7851d22`
kablam!    Compiling mqtt-protocol v0.1.1 (file:///source)
kablam! warning: unused `#[macro_use]` import
kablam!  --> src/lib.rs:2:1
kablam!   |
kablam! 2 | #[macro_use]
kablam!   | ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Write`
kablam!  --> src/control/variable_header/mod.rs:3:21
kablam!   |
kablam! 3 | use std::io::{self, Write};
kablam!   |                     ^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable `Cond` should have a snake case name such as `cond`
kablam!   --> src/encodable.rs:25:45
kablam!    |
kablam! 25 |     fn decode_with<R: Read>(reader: &mut R, Cond: Option<Self::Cond>) -> Result<Self, Self::Err>;
kablam!    |                                             ^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 14.55 secs
boom! running `docker rm -f d23ce9130ab26e1f34020c365aad224a0f78e36b76a0641d71a6a5d4c7851d22`
blam! d23ce9130ab26e1f34020c365aad224a0f78e36b76a0641d71a6a5d4c7851d22
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 985bda21eb0e7b52378e11616d0da91eba2039c15424f713ea366099ddcc8616
boom! running `docker start -a 985bda21eb0e7b52378e11616d0da91eba2039c15424f713ea366099ddcc8616`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.3 secs
kablam!      Running /target/debug/deps/mqtt-4c47c63da4e6c96a
blam! 
blam! running 11 tests
blam! test packet::connack::test::test_connack_packet_basic ... ok
blam! test control::fixed_header::test::test_encode_fixed_header ... ok
blam! test control::fixed_header::test::test_decode_too_long_fixed_header ... ok
blam! test packet::connect::test::test_connect_packet_decode_basic ... ok
blam! test packet::connect::test::test_connect_packet_encode_basic ... ok
blam! test control::fixed_header::test::test_decode_fixed_header ... ok
blam! test packet::connect::test::test_connect_packet_user_name ... ok
blam! test packet::test::test_variable_packet_basic ... ok
blam! test packet::publish::test::test_publish_packet_basic ... ok
blam! test topic_name::test::test_topic_name_basic ... ok
blam! test topic_filter::test::test_topic_filter_validate ... ok
blam! 
blam! test result: ok. 11 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests mqtt
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 985bda21eb0e7b52378e11616d0da91eba2039c15424f713ea366099ddcc8616`
blam! 985bda21eb0e7b52378e11616d0da91eba2039c15424f713ea366099ddcc8616
