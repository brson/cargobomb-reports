boom! testing numeral-0.3.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 5f2d77d3577ff26a2e1a427ff002b50e8d2f32410a4be8b1e94d9268e5f73e92
boom! running `docker start -a 5f2d77d3577ff26a2e1a427ff002b50e8d2f32410a4be8b1e94d9268e5f73e92`
kablam!    Compiling numeral v0.3.1 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.64 secs
boom! running `docker rm -f 5f2d77d3577ff26a2e1a427ff002b50e8d2f32410a4be8b1e94d9268e5f73e92`
blam! 5f2d77d3577ff26a2e1a427ff002b50e8d2f32410a4be8b1e94d9268e5f73e92
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! d355ee6fcfc03b0fa67978c3dc03716fcbb8cf92e5fe2c670294a7ee44caa230
boom! running `docker start -a d355ee6fcfc03b0fa67978c3dc03716fcbb8cf92e5fe2c670294a7ee44caa230`
kablam!    Compiling numeral v0.3.1 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.12 secs
boom! running `docker rm -f d355ee6fcfc03b0fa67978c3dc03716fcbb8cf92e5fe2c670294a7ee44caa230`
blam! d355ee6fcfc03b0fa67978c3dc03716fcbb8cf92e5fe2c670294a7ee44caa230
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 05845104da4e89622ea5630f71c0cd3df0a614d146873748c35f1c344bcc9e7a
boom! running `docker start -a 05845104da4e89622ea5630f71c0cd3df0a614d146873748c35f1c344bcc9e7a`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/lib-7cc2465c21a088d6
blam! 
blam! running 23 tests
blam! test call_on_critical_ranges_u32 ... ok
blam! test call_on_critical_ranges_i32 ... ok
blam! test call_on_critical_ranges_isize ... ok
blam! test call_on_min_max_i16 ... ok
blam! test call_on_min_max_i32 ... ok
blam! test call_on_min_max_i64 ... ok
blam! test call_on_critical_ranges_i64 ... ok
blam! test call_on_min_max_isize ... ok
blam! test call_on_min_max_i8 ... ok
blam! test call_on_min_max_u16 ... ok
blam! test call_on_min_max_u32 ... ok
blam! test call_on_min_max_u8 ... ok
blam! test call_on_min_max_u64 ... ok
blam! test call_on_min_max_usize ... ok
blam! test call_on_range_i8 ... ok
blam! test call_on_critical_ranges_u64 ... ok
blam! test call_on_range_u8 ... ok
blam! test call_on_critical_ranges_usize ... ok
blam! test cardinal_value_m256_256 ... ok
blam! test cardinal_value_min_max_ptr ... ok
blam! test cardinal_value_min_max_int ... ok
blam! test call_on_range_i16 ... ok
blam! test call_on_range_u16 ... ok
blam! 
blam! test result: ok. 23 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/numeral-1e8dd4abfc2141bc
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests numeral
blam! 
blam! running 2 tests
blam! test src/lib.rs - Cardinal::cardinal (line 74) ... ok
blam! test src/lib.rs -  (line 10) ... ok
blam! 
blam! test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 05845104da4e89622ea5630f71c0cd3df0a614d146873748c35f1c344bcc9e7a`
blam! 05845104da4e89622ea5630f71c0cd3df0a614d146873748c35f1c344bcc9e7a
