boom! testing linux_tuples_client-0.1.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 36b728fa770d6077fd5d4d28a2579b62fd4652431b89623f10621360f455d552
boom! running `docker start -a 36b728fa770d6077fd5d4d28a2579b62fd4652431b89623f10621360f455d552`
kablam!    Compiling linux_tuples_client v0.1.1 (file:///source)
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:112:5
kablam!     |
kablam! 112 |     stream.write_all(& (ti(tuple.len() as i32)));
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:123:5
kablam!     |
kablam! 123 |     stream.write_all(&ti(string_length));
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:137:9
kablam!     |
kablam! 137 |    	 			stream.write_all(&buff); 
kablam!     |    	 			^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:144:9
kablam!     |
kablam! 144 |    	 			stream.write_all(&buff);
kablam!     |    	 			^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:156:9
kablam!     |
kablam! 156 |    	 			stream.write_all(&buff);
kablam!     |    	 			^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:163:8
kablam!     |
kablam! 163 |     			stream.write_all(&mut buff);
kablam!     |     			^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:170:8
kablam!     |
kablam! 170 |     			stream.write_all(&buff);
kablam!     |     			^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:178:8
kablam!     |
kablam! 178 |     			stream.write_all(s.as_bytes());
kablam!     |     			^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: type `str_desc` should have a camel case name such as `StrDesc`
kablam!    --> src/lib.rs:187:2
kablam!     |
kablam! 187 |   	struct str_desc {
kablam!     |  __^ starting here...
kablam! 188 | | 		used: bool,
kablam! 189 | | 		offset: i32,
kablam! 190 | | 		len: i32,
kablam! 191 | | 	}
kablam!     | |__^ ...ending here
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:197:6
kablam!     |
kablam! 197 | 	let mut buff_8:[u8; 8] = [0; 8];
kablam!     | 	    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `buff_8`
kablam!    --> src/lib.rs:197:6
kablam!     |
kablam! 197 | 	let mut buff_8:[u8; 8] = [0; 8];
kablam!     | 	    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:200:2
kablam!     |
kablam! 200 | 	stream.read_exact(&mut buff_4);
kablam!     | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:208:2
kablam!     |
kablam! 208 | 	stream.read_exact(&mut buff_4);
kablam!     | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused variable: `i`
kablam!    --> src/lib.rs:211:6
kablam!     |
kablam! 211 | 	for i in 0..num_elements {
kablam!     | 	    ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:213:3
kablam!     |
kablam! 213 | 		stream.read_exact(&mut buff);
kablam!     | 		^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:249:3
kablam!     |
kablam! 249 | 		stream.read_exact(&mut string_space);
kablam!     | 		^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:251:7
kablam!     |
kablam! 251 | 		let mut str_slice = string_space.as_slice();
kablam!     | 		    ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `str_slice`
kablam!    --> src/lib.rs:251:7
kablam!     |
kablam! 251 | 		let mut str_slice = string_space.as_slice();
kablam!     | 		    ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:279:10
kablam!     |
kablam! 279 | 	    let mut stream_err = TcpStream::connect(&self.connection);
kablam!     | 	        ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:282:8
kablam!     |
kablam! 282 | 	    		stream.write_all(&ti(PUT));
kablam!     | 	    		^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:284:5
kablam!     |
kablam! 284 | 				stream.shutdown(Shutdown::Write);
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:306:7
kablam!     |
kablam! 306 | 		let mut stream_err = TcpStream::connect(&self.connection);
kablam!     | 		    ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:309:5
kablam!     |
kablam! 309 | 				stream.write_all(&ti(GET));
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:313:5
kablam!     |
kablam! 313 | 				stream.shutdown(Shutdown::Write);
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:335:7
kablam!     |
kablam! 335 | 		let mut stream_err = TcpStream::connect(&self.connection);
kablam!     | 		    ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:338:5
kablam!     |
kablam! 338 | 				stream.write_all(&ti(READ));
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:342:5
kablam!     |
kablam! 342 | 				stream.shutdown(Shutdown::Write);
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:366:7
kablam!     |
kablam! 366 | 		let mut stream_err = TcpStream::connect(&self.connection);
kablam!     | 		    ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:369:5
kablam!     |
kablam! 369 | 				stream.write_all(&ti(GET_NB));
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:373:5
kablam!     |
kablam! 373 | 				stream.shutdown(Shutdown::Write);
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:398:7
kablam!     |
kablam! 398 | 		let mut stream_err = TcpStream::connect(&self.connection);
kablam!     | 		    ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:401:5
kablam!     |
kablam! 401 | 				stream.write_all(&ti(READ_NB));
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:405:5
kablam!     |
kablam! 405 | 				stream.shutdown(Shutdown::Write);
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:430:7
kablam!     |
kablam! 430 | 		let mut stream_err = TcpStream::connect(&self.connection);
kablam!     | 		    ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:433:5
kablam!     |
kablam! 433 | 				stream.write_all(&ti(DUMP));
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:435:5
kablam!     |
kablam! 435 | 				stream.write_all(&ti(count));
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:443:5
kablam!     |
kablam! 443 | 				stream.read_exact(&mut buff_4);
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused variable: `i`
kablam!    --> src/lib.rs:449:9
kablam!     |
kablam! 449 | 				for i in 0..recv_count {
kablam!     | 				    ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:475:7
kablam!     |
kablam! 475 | 		let mut stream_err = TcpStream::connect(&self.connection);
kablam!     | 		    ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:478:5
kablam!     |
kablam! 478 | 				stream.write_all(&ti(COUNT));
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:480:5
kablam!     |
kablam! 480 | 				stream.write_all(&ti(count));
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:488:5
kablam!     |
kablam! 488 | 				stream.read_exact(&mut buff_4);
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:513:8
kablam!     |
kablam! 513 | 			let mut stream_err = TcpStream::connect(&self.connection);
kablam!     | 			    ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:516:6
kablam!     |
kablam! 516 | 					stream.write_all(&ti(REPLACE));
kablam!     | 					^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:520:6
kablam!     |
kablam! 520 | 					stream.read_exact(&mut buff_4);
kablam!     | 					^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:546:7
kablam!     |
kablam! 546 | 		let mut stream_err = TcpStream::connect(&self.connection);
kablam!     | 		    ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:549:5
kablam!     |
kablam! 549 | 				stream.write_all(&ti(LOG));
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:551:5
kablam!     |
kablam! 551 | 				stream.read_to_string(&mut log);
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.22 secs
boom! running `docker rm -f 36b728fa770d6077fd5d4d28a2579b62fd4652431b89623f10621360f455d552`
blam! 36b728fa770d6077fd5d4d28a2579b62fd4652431b89623f10621360f455d552
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! c6e4e967376e315ef6f43aeffd298c4972cd21408fabd41ed7fdad3fb5428b68
boom! running `docker start -a c6e4e967376e315ef6f43aeffd298c4972cd21408fabd41ed7fdad3fb5428b68`
kablam!    Compiling linux_tuples_client v0.1.1 (file:///source)
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:112:5
kablam!     |
kablam! 112 |     stream.write_all(& (ti(tuple.len() as i32)));
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:123:5
kablam!     |
kablam! 123 |     stream.write_all(&ti(string_length));
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:137:9
kablam!     |
kablam! 137 |    	 			stream.write_all(&buff); 
kablam!     |    	 			^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:144:9
kablam!     |
kablam! 144 |    	 			stream.write_all(&buff);
kablam!     |    	 			^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:156:9
kablam!     |
kablam! 156 |    	 			stream.write_all(&buff);
kablam!     |    	 			^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:163:8
kablam!     |
kablam! 163 |     			stream.write_all(&mut buff);
kablam!     |     			^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:170:8
kablam!     |
kablam! 170 |     			stream.write_all(&buff);
kablam!     |     			^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:178:8
kablam!     |
kablam! 178 |     			stream.write_all(s.as_bytes());
kablam!     |     			^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: type `str_desc` should have a camel case name such as `StrDesc`
kablam!    --> src/lib.rs:187:2
kablam!     |
kablam! 187 |   	struct str_desc {
kablam!     |  __^ starting here...
kablam! 188 | | 		used: bool,
kablam! 189 | | 		offset: i32,
kablam! 190 | | 		len: i32,
kablam! 191 | | 	}
kablam!     | |__^ ...ending here
kablam!     |
kablam!     = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:197:6
kablam!     |
kablam! 197 | 	let mut buff_8:[u8; 8] = [0; 8];
kablam!     | 	    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `buff_8`
kablam!    --> src/lib.rs:197:6
kablam!     |
kablam! 197 | 	let mut buff_8:[u8; 8] = [0; 8];
kablam!     | 	    ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:200:2
kablam!     |
kablam! 200 | 	stream.read_exact(&mut buff_4);
kablam!     | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:208:2
kablam!     |
kablam! 208 | 	stream.read_exact(&mut buff_4);
kablam!     | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused variable: `i`
kablam!    --> src/lib.rs:211:6
kablam!     |
kablam! 211 | 	for i in 0..num_elements {
kablam!     | 	    ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:213:3
kablam!     |
kablam! 213 | 		stream.read_exact(&mut buff);
kablam!     | 		^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:249:3
kablam!     |
kablam! 249 | 		stream.read_exact(&mut string_space);
kablam!     | 		^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:251:7
kablam!     |
kablam! 251 | 		let mut str_slice = string_space.as_slice();
kablam!     | 		    ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `str_slice`
kablam!    --> src/lib.rs:251:7
kablam!     |
kablam! 251 | 		let mut str_slice = string_space.as_slice();
kablam!     | 		    ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:279:10
kablam!     |
kablam! 279 | 	    let mut stream_err = TcpStream::connect(&self.connection);
kablam!     | 	        ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:282:8
kablam!     |
kablam! 282 | 	    		stream.write_all(&ti(PUT));
kablam!     | 	    		^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:284:5
kablam!     |
kablam! 284 | 				stream.shutdown(Shutdown::Write);
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:306:7
kablam!     |
kablam! 306 | 		let mut stream_err = TcpStream::connect(&self.connection);
kablam!     | 		    ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:309:5
kablam!     |
kablam! 309 | 				stream.write_all(&ti(GET));
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:313:5
kablam!     |
kablam! 313 | 				stream.shutdown(Shutdown::Write);
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:335:7
kablam!     |
kablam! 335 | 		let mut stream_err = TcpStream::connect(&self.connection);
kablam!     | 		    ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:338:5
kablam!     |
kablam! 338 | 				stream.write_all(&ti(READ));
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:342:5
kablam!     |
kablam! 342 | 				stream.shutdown(Shutdown::Write);
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:366:7
kablam!     |
kablam! 366 | 		let mut stream_err = TcpStream::connect(&self.connection);
kablam!     | 		    ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:369:5
kablam!     |
kablam! 369 | 				stream.write_all(&ti(GET_NB));
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:373:5
kablam!     |
kablam! 373 | 				stream.shutdown(Shutdown::Write);
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:398:7
kablam!     |
kablam! 398 | 		let mut stream_err = TcpStream::connect(&self.connection);
kablam!     | 		    ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:401:5
kablam!     |
kablam! 401 | 				stream.write_all(&ti(READ_NB));
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:405:5
kablam!     |
kablam! 405 | 				stream.shutdown(Shutdown::Write);
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:430:7
kablam!     |
kablam! 430 | 		let mut stream_err = TcpStream::connect(&self.connection);
kablam!     | 		    ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:433:5
kablam!     |
kablam! 433 | 				stream.write_all(&ti(DUMP));
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:435:5
kablam!     |
kablam! 435 | 				stream.write_all(&ti(count));
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:443:5
kablam!     |
kablam! 443 | 				stream.read_exact(&mut buff_4);
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused variable: `i`
kablam!    --> src/lib.rs:449:9
kablam!     |
kablam! 449 | 				for i in 0..recv_count {
kablam!     | 				    ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:475:7
kablam!     |
kablam! 475 | 		let mut stream_err = TcpStream::connect(&self.connection);
kablam!     | 		    ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:478:5
kablam!     |
kablam! 478 | 				stream.write_all(&ti(COUNT));
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:480:5
kablam!     |
kablam! 480 | 				stream.write_all(&ti(count));
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:488:5
kablam!     |
kablam! 488 | 				stream.read_exact(&mut buff_4);
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:513:8
kablam!     |
kablam! 513 | 			let mut stream_err = TcpStream::connect(&self.connection);
kablam!     | 			    ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:516:6
kablam!     |
kablam! 516 | 					stream.write_all(&ti(REPLACE));
kablam!     | 					^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:520:6
kablam!     |
kablam! 520 | 					stream.read_exact(&mut buff_4);
kablam!     | 					^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:546:7
kablam!     |
kablam! 546 | 		let mut stream_err = TcpStream::connect(&self.connection);
kablam!     | 		    ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:549:5
kablam!     |
kablam! 549 | 				stream.write_all(&ti(LOG));
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/lib.rs:551:5
kablam!     |
kablam! 551 | 				stream.read_to_string(&mut log);
kablam!     | 				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.85 secs
boom! running `docker rm -f c6e4e967376e315ef6f43aeffd298c4972cd21408fabd41ed7fdad3fb5428b68`
blam! c6e4e967376e315ef6f43aeffd298c4972cd21408fabd41ed7fdad3fb5428b68
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 7fbed794d8621f033339af3e42b1c9114bbc13b5eed829511bc078841ba79401
boom! running `docker start -a 7fbed794d8621f033339af3e42b1c9114bbc13b5eed829511bc078841ba79401`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/linux_tuples_client-d65f7f2bed3061f3
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests linux_tuples_client
blam! 
blam! running 11 tests
blam! test src/lib.rs - LinuxTuplesConnection::get_nb_tuple (line 357) ... FAILED
blam! test src/lib.rs - LinuxTuplesConnection (line 47) ... FAILED
blam! test src/lib.rs - E::print (line 22) ... FAILED
blam! test src/lib.rs - LinuxTuplesConnection::get_tuple (line 297) ... FAILED
blam! test src/lib.rs - LinuxTuplesConnection::number_of_tuples (line 466) ... FAILED
blam! test src/lib.rs - LinuxTuplesConnection::put_tuple (line 271) ... FAILED
blam! test src/lib.rs - LinuxTuplesConnection::read_nb_tuple (line 389) ... FAILED
blam! test src/lib.rs - LinuxTuplesConnection::read_all_tuples (line 421) ... FAILED
blam! test src/lib.rs - LinuxTuplesConnection::read_tuple (line 327) ... FAILED
blam! test src/lib.rs - LinuxTuplesConnection::replace_tuple (line 505) ... FAILED
blam! test src/lib.rs - LinuxTuplesConnection::server_log (line 539) ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- src/lib.rs - LinuxTuplesConnection::get_nb_tuple (line 357) stdout ----
blam! 	error[E0425]: cannot find value `conn` in this scope
blam!  --> <anon>:2:13
blam!   |
blam! 2 | let tuple = conn.get_nb_tuple(&vec![E::I(123), E::S("123".to_string())]).unwrap();
blam!   |             ^^^^ not found in this scope
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `E`
blam!  --> <anon>:2:37
blam!   |
blam! 2 | let tuple = conn.get_nb_tuple(&vec![E::I(123), E::S("123".to_string())]).unwrap();
blam!   |                                     ^^^^ Use of undeclared type or module `E`
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `E`
blam!  --> <anon>:2:48
blam!   |
blam! 2 | let tuple = conn.get_nb_tuple(&vec![E::I(123), E::S("123".to_string())]).unwrap();
blam!   |                                                ^^^^ Use of undeclared type or module `E`
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'rustc' panicked at 'Box<Any>', /checkout/src/librustc/session/mod.rs:203
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! ---- src/lib.rs - LinuxTuplesConnection (line 47) stdout ----
blam! 	error[E0422]: cannot find struct, variant or union type `LinuxTuplesConnection` in this scope
blam!  --> <anon>:2:12
blam!   |
blam! 2 | let conn = LinuxTuplesConnection { addr };
blam!   |            ^^^^^^^^^^^^^^^^^^^^^ not found in this scope
blam! 
blam! error[E0425]: cannot find value `addr` in this scope
blam!  --> <anon>:2:36
blam!   |
blam! 2 | let conn = LinuxTuplesConnection { addr };
blam!   |                                    ^^^^ not found in this scope
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'rustc' panicked at 'Box<Any>', /checkout/src/librustc/session/mod.rs:203
blam! 
blam! ---- src/lib.rs - E::print (line 22) stdout ----
blam! 	error[E0425]: cannot find value `e` in this scope
blam!  --> <anon>:2:1
blam!   |
blam! 2 | e.print()
blam!   | ^ not found in this scope
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'rustc' panicked at 'Box<Any>', /checkout/src/librustc/session/mod.rs:203
blam! 
blam! ---- src/lib.rs - LinuxTuplesConnection::get_tuple (line 297) stdout ----
blam! 	error[E0425]: cannot find value `conn` in this scope
blam!  --> <anon>:2:13
blam!   |
blam! 2 | let tuple = conn.get_tuple(&vec![E::I(123), E::None]).unwrap();
blam!   |             ^^^^ not found in this scope
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `E`
blam!  --> <anon>:2:34
blam!   |
blam! 2 | let tuple = conn.get_tuple(&vec![E::I(123), E::None]).unwrap();
blam!   |                                  ^^^^ Use of undeclared type or module `E`
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `E`
blam!  --> <anon>:2:45
blam!   |
blam! 2 | let tuple = conn.get_tuple(&vec![E::I(123), E::None]).unwrap();
blam!   |                                             ^^^^^^^ Use of undeclared type or module `E`
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'rustc' panicked at 'Box<Any>', /checkout/src/librustc/session/mod.rs:203
blam! 
blam! ---- src/lib.rs - LinuxTuplesConnection::number_of_tuples (line 466) stdout ----
blam! 	error[E0425]: cannot find value `conn` in this scope
blam!  --> <anon>:2:13
blam!   |
blam! 2 | let count = conn.number_of_tuples(&vec![vec![E::I(123), E::None], vec![E::S("123".to_string()), E::None]]).unwrap();
blam!   |             ^^^^ not found in this scope
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `E`
blam!  --> <anon>:2:46
blam!   |
blam! 2 | let count = conn.number_of_tuples(&vec![vec![E::I(123), E::None], vec![E::S("123".to_string()), E::None]]).unwrap();
blam!   |                                              ^^^^ Use of undeclared type or module `E`
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `E`
blam!  --> <anon>:2:57
blam!   |
blam! 2 | let count = conn.number_of_tuples(&vec![vec![E::I(123), E::None], vec![E::S("123".to_string()), E::None]]).unwrap();
blam!   |                                                         ^^^^^^^ Use of undeclared type or module `E`
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `E`
blam!  --> <anon>:2:72
blam!   |
blam! 2 | let count = conn.number_of_tuples(&vec![vec![E::I(123), E::None], vec![E::S("123".to_string()), E::None]]).unwrap();
blam!   |                                                                        ^^^^ Use of undeclared type or module `E`
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `E`
blam!  --> <anon>:2:97
blam!   |
blam! 2 | let count = conn.number_of_tuples(&vec![vec![E::I(123), E::None], vec![E::S("123".to_string()), E::None]]).unwrap();
blam!   |                                                                                                 ^^^^^^^ Use of undeclared type or module `E`
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'rustc' panicked at 'Box<Any>', /checkout/src/librustc/session/mod.rs:203
blam! 
blam! ---- src/lib.rs - LinuxTuplesConnection::put_tuple (line 271) stdout ----
blam! 	error[E0425]: cannot find value `conn` in this scope
blam!  --> <anon>:2:1
blam!   |
blam! 2 | conn.put_tuple(&vec![E::I(123), E::S("123".to_string())]);
blam!   | ^^^^ not found in this scope
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `E`
blam!  --> <anon>:2:22
blam!   |
blam! 2 | conn.put_tuple(&vec![E::I(123), E::S("123".to_string())]);
blam!   |                      ^^^^ Use of undeclared type or module `E`
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `E`
blam!  --> <anon>:2:33
blam!   |
blam! 2 | conn.put_tuple(&vec![E::I(123), E::S("123".to_string())]);
blam!   |                                 ^^^^ Use of undeclared type or module `E`
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'rustc' panicked at 'Box<Any>', /checkout/src/librustc/session/mod.rs:203
blam! 
blam! ---- src/lib.rs - LinuxTuplesConnection::read_nb_tuple (line 389) stdout ----
blam! 	error[E0425]: cannot find value `conn` in this scope
blam!  --> <anon>:2:13
blam!   |
blam! 2 | let tuple = conn.read_nb_tuple(&vec![E::I(123), E::S("123".to_string())]).unwrap();
blam!   |             ^^^^ not found in this scope
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `E`
blam!  --> <anon>:2:38
blam!   |
blam! 2 | let tuple = conn.read_nb_tuple(&vec![E::I(123), E::S("123".to_string())]).unwrap();
blam!   |                                      ^^^^ Use of undeclared type or module `E`
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `E`
blam!  --> <anon>:2:49
blam!   |
blam! 2 | let tuple = conn.read_nb_tuple(&vec![E::I(123), E::S("123".to_string())]).unwrap();
blam!   |                                                 ^^^^ Use of undeclared type or module `E`
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'rustc' panicked at 'Box<Any>', /checkout/src/librustc/session/mod.rs:203
blam! 
blam! ---- src/lib.rs - LinuxTuplesConnection::read_all_tuples (line 421) stdout ----
blam! 	error[E0425]: cannot find value `conn` in this scope
blam!  --> <anon>:2:18
blam!   |
blam! 2 | let tuple_list = conn.read_all_tuples(&vec![vec![E::I(123), E::None], vec![E::S("123".to_string()), E::None]]).unwrap();
blam!   |                  ^^^^ not found in this scope
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `E`
blam!  --> <anon>:2:50
blam!   |
blam! 2 | let tuple_list = conn.read_all_tuples(&vec![vec![E::I(123), E::None], vec![E::S("123".to_string()), E::None]]).unwrap();
blam!   |                                                  ^^^^ Use of undeclared type or module `E`
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `E`
blam!  --> <anon>:2:61
blam!   |
blam! 2 | let tuple_list = conn.read_all_tuples(&vec![vec![E::I(123), E::None], vec![E::S("123".to_string()), E::None]]).unwrap();
blam!   |                                                             ^^^^^^^ Use of undeclared type or module `E`
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `E`
blam!  --> <anon>:2:76
blam!   |
blam! 2 | let tuple_list = conn.read_all_tuples(&vec![vec![E::I(123), E::None], vec![E::S("123".to_string()), E::None]]).unwrap();
blam!   |                                                                            ^^^^ Use of undeclared type or module `E`
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `E`
blam!  --> <anon>:2:101
blam!   |
blam! 2 | let tuple_list = conn.read_all_tuples(&vec![vec![E::I(123), E::None], vec![E::S("123".to_string()), E::None]]).unwrap();
blam!   |                                                                                                     ^^^^^^^ Use of undeclared type or module `E`
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'rustc' panicked at 'Box<Any>', /checkout/src/librustc/session/mod.rs:203
blam! 
blam! ---- src/lib.rs - LinuxTuplesConnection::read_tuple (line 327) stdout ----
blam! 	error[E0425]: cannot find value `conn` in this scope
blam!  --> <anon>:2:13
blam!   |
blam! 2 | let tuple = conn.read_tuple(&vec![E::I(123), E::None]).unwrap();
blam!   |             ^^^^ not found in this scope
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `E`
blam!  --> <anon>:2:35
blam!   |
blam! 2 | let tuple = conn.read_tuple(&vec![E::I(123), E::None]).unwrap();
blam!   |                                   ^^^^ Use of undeclared type or module `E`
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `E`
blam!  --> <anon>:2:46
blam!   |
blam! 2 | let tuple = conn.read_tuple(&vec![E::I(123), E::None]).unwrap();
blam!   |                                              ^^^^^^^ Use of undeclared type or module `E`
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'rustc' panicked at 'Box<Any>', /checkout/src/librustc/session/mod.rs:203
blam! 
blam! ---- src/lib.rs - LinuxTuplesConnection::replace_tuple (line 505) stdout ----
blam! 	error[E0425]: cannot find value `conn` in this scope
blam!  --> <anon>:2:1
blam!   |
blam! 2 | conn.replace_tuple(&vec![E::I(123)], &vec![E::S("123".to_string())]).unwrap();
blam!   | ^^^^ not found in this scope
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `E`
blam!  --> <anon>:2:26
blam!   |
blam! 2 | conn.replace_tuple(&vec![E::I(123)], &vec![E::S("123".to_string())]).unwrap();
blam!   |                          ^^^^ Use of undeclared type or module `E`
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `E`
blam!  --> <anon>:2:44
blam!   |
blam! 2 | conn.replace_tuple(&vec![E::I(123)], &vec![E::S("123".to_string())]).unwrap();
blam!   |                                            ^^^^ Use of undeclared type or module `E`
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'rustc' panicked at 'Box<Any>', /checkout/src/librustc/session/mod.rs:203
blam! 
blam! ---- src/lib.rs - LinuxTuplesConnection::server_log (line 539) stdout ----
blam! 	error[E0425]: cannot find value `conn` in this scope
blam!  --> <anon>:2:11
blam!   |
blam! 2 | let log = conn.server_log();
blam!   |           ^^^^ not found in this scope
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'rustc' panicked at 'Box<Any>', /checkout/src/librustc/session/mod.rs:203
blam! 
blam! 
blam! failures:
blam!     src/lib.rs - E::print (line 22)
blam!     src/lib.rs - LinuxTuplesConnection (line 47)
blam!     src/lib.rs - LinuxTuplesConnection::get_nb_tuple (line 357)
blam!     src/lib.rs - LinuxTuplesConnection::get_tuple (line 297)
blam!     src/lib.rs - LinuxTuplesConnection::number_of_tuples (line 466)
blam!     src/lib.rs - LinuxTuplesConnection::put_tuple (line 271)
blam!     src/lib.rs - LinuxTuplesConnection::read_all_tuples (line 421)
blam!     src/lib.rs - LinuxTuplesConnection::read_nb_tuple (line 389)
blam!     src/lib.rs - LinuxTuplesConnection::read_tuple (line 327)
blam!     src/lib.rs - LinuxTuplesConnection::replace_tuple (line 505)
blam!     src/lib.rs - LinuxTuplesConnection::server_log (line 539)
blam! 
blam! test result: FAILED. 0 passed; 11 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f 7fbed794d8621f033339af3e42b1c9114bbc13b5eed829511bc078841ba79401`
blam! 7fbed794d8621f033339af3e42b1c9114bbc13b5eed829511bc078841ba79401
