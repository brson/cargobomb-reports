boom! testing https://github.com/dropbox/ruba#d570b2454bac75d9bae3125b13ccc44854ab7616 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 611d1b9e47583c62864186194351af0e9057da2421270129a8b3d631e628b67b
boom! running `docker start -a 611d1b9e47583c62864186194351af0e9057da2421270129a8b3d631e628b67b`
kablam!    Compiling heapsize v0.3.8
kablam!    Compiling nix v0.5.1
kablam!    Compiling memchr v1.0.1
kablam!    Compiling thread-id v3.0.0
kablam!    Compiling rand v0.3.15
kablam!    Compiling aho-corasick v0.6.2
kablam!    Compiling time v0.1.36
kablam!    Compiling thread_local v0.3.2
kablam!    Compiling regex v0.2.1
kablam!    Compiling csv v0.15.0
kablam!    Compiling num-bigint v0.1.35
kablam!    Compiling rustyline v1.0.0
kablam!    Compiling num-rational v0.1.35
kablam!    Compiling num v0.1.36
kablam!    Compiling ruba v0.1.0 (file:///source)
kablam! warning: unused import: `InpRecordType`
kablam!  --> src/columns/mod.rs:3:32
kablam!   |
kablam! 3 | use value::{ValueType, InpVal, InpRecordType};
kablam!   |                                ^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::collections::HashMap`
kablam!  --> src/columns/mod.rs:5:5
kablam!   |
kablam! 5 | use std::collections::HashMap;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::collections::hash_map::Entry`
kablam!  --> src/columns/mod.rs:7:5
kablam!   |
kablam! 7 | use std::collections::hash_map::Entry;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: method is never used: `new`
kablam!    --> src/columns/mod.rs:172:5
kablam!     |
kablam! 172 |       fn new(max_count: usize) -> UniqueValues<T> {
kablam!     |  _____^ starting here...
kablam! 173 | |         UniqueValues {
kablam! 174 | |             max_count: max_count,
kablam! 175 | |             values: HashSet::new(),
kablam! 176 | |         }
kablam! 177 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `TimestampVec`
kablam!    --> src/columns/mod.rs:204:5
kablam!     |
kablam! 204 |     TimestampVec(Vec<u64>),
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `SetVec`
kablam!    --> src/columns/mod.rs:207:5
kablam!     |
kablam! 207 |     SetVec(Vec<Vec<String>>),
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/columns/mod.rs:239:21
kablam!     |
kablam! 239 |                 let mut int_vec = iter::repeat(0i64).take(*n).collect();
kablam!     |                     ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `min`
kablam!    --> src/columns/mod.rs:270:40
kablam!     |
kablam! 270 |             &mut IntegerVec(ref mut v, ref mut min, ref mut max) => {
kablam!     |                                        ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `max`
kablam!    --> src/columns/mod.rs:270:53
kablam!     |
kablam! 270 |             &mut IntegerVec(ref mut v, ref mut min, ref mut max) => {
kablam!     |                                                     ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: type alias is never used: `InpRecordType`
kablam!   --> src/value.rs:25:1
kablam!    |
kablam! 25 | pub type InpRecordType<'a> = Vec<(&'a str, InpVal)>;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `value::ValueType`
kablam!   --> src/lib.rs:21:5
kablam!    |
kablam! 21 | use value::ValueType;
kablam!    |     ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::env`
kablam!   --> src/lib.rs:24:5
kablam!    |
kablam! 24 | use std::env;
kablam!    |     ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::panic`
kablam!   --> src/lib.rs:25:5
kablam!    |
kablam! 25 | use std::panic;
kablam!    |     ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::collections::HashMap`
kablam!   --> src/lib.rs:26:5
kablam!    |
kablam! 26 | use std::collections::HashMap;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused variable: `remaining`
kablam!   --> src/main.rs:73:32
kablam!    |
kablam! 73 |             nom::IResult::Done(remaining, query) => {
kablam!    |                                ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/main.rs:74:17
kablam!    |
kablam! 74 |                   panic::catch_unwind(std::panic::AssertUnwindSafe(|| {
kablam!    |  _________________^ starting here...
kablam! 75 | |                     let mut compiled_query = query.compile(datasource);
kablam! 76 | |                     let result = compiled_query.run();
kablam! 77 | |                     query_engine::print_query_result(&result);
kablam! 78 | |                 }));
kablam!    | |____________________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 40.65 secs
boom! running `docker rm -f 611d1b9e47583c62864186194351af0e9057da2421270129a8b3d631e628b67b`
blam! 611d1b9e47583c62864186194351af0e9057da2421270129a8b3d631e628b67b
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 6e05f108db9b480b4674fe2891eafa2aca357aa52d499462caf6dfd82b4c7918
boom! running `docker start -a 6e05f108db9b480b4674fe2891eafa2aca357aa52d499462caf6dfd82b4c7918`
kablam!    Compiling ruba v0.1.0 (file:///source)
kablam! warning: unused variable: `remaining`
kablam!   --> src/main.rs:73:32
kablam!    |
kablam! 73 |             nom::IResult::Done(remaining, query) => {
kablam!    |                                ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/main.rs:74:17
kablam!    |
kablam! 74 |                   panic::catch_unwind(std::panic::AssertUnwindSafe(|| {
kablam!    |  _________________^ starting here...
kablam! 75 | |                     let mut compiled_query = query.compile(datasource);
kablam! 76 | |                     let result = compiled_query.run();
kablam! 77 | |                     query_engine::print_query_result(&result);
kablam! 78 | |                 }));
kablam!    | |____________________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused import: `InpRecordType`
kablam!  --> src/columns/mod.rs:3:32
kablam!   |
kablam! 3 | use value::{ValueType, InpVal, InpRecordType};
kablam!   |                                ^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::collections::HashMap`
kablam!  --> src/columns/mod.rs:5:5
kablam!   |
kablam! 5 | use std::collections::HashMap;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::collections::hash_map::Entry`
kablam!  --> src/columns/mod.rs:7:5
kablam!   |
kablam! 7 | use std::collections::hash_map::Entry;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: method is never used: `new`
kablam!    --> src/columns/mod.rs:172:5
kablam!     |
kablam! 172 |       fn new(max_count: usize) -> UniqueValues<T> {
kablam!     |  _____^ starting here...
kablam! 173 | |         UniqueValues {
kablam! 174 | |             max_count: max_count,
kablam! 175 | |             values: HashSet::new(),
kablam! 176 | |         }
kablam! 177 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `TimestampVec`
kablam!    --> src/columns/mod.rs:204:5
kablam!     |
kablam! 204 |     TimestampVec(Vec<u64>),
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `SetVec`
kablam!    --> src/columns/mod.rs:207:5
kablam!     |
kablam! 207 |     SetVec(Vec<Vec<String>>),
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/columns/mod.rs:239:21
kablam!     |
kablam! 239 |                 let mut int_vec = iter::repeat(0i64).take(*n).collect();
kablam!     |                     ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `min`
kablam!    --> src/columns/mod.rs:270:40
kablam!     |
kablam! 270 |             &mut IntegerVec(ref mut v, ref mut min, ref mut max) => {
kablam!     |                                        ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `max`
kablam!    --> src/columns/mod.rs:270:53
kablam!     |
kablam! 270 |             &mut IntegerVec(ref mut v, ref mut min, ref mut max) => {
kablam!     |                                                     ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: type alias is never used: `InpRecordType`
kablam!   --> src/value.rs:25:1
kablam!    |
kablam! 25 | pub type InpRecordType<'a> = Vec<(&'a str, InpVal)>;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `value::ValueType`
kablam!   --> src/lib.rs:21:5
kablam!    |
kablam! 21 | use value::ValueType;
kablam!    |     ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::env`
kablam!   --> src/lib.rs:24:5
kablam!    |
kablam! 24 | use std::env;
kablam!    |     ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::panic`
kablam!   --> src/lib.rs:25:5
kablam!    |
kablam! 25 | use std::panic;
kablam!    |     ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::collections::HashMap`
kablam!   --> src/lib.rs:26:5
kablam!    |
kablam! 26 | use std::collections::HashMap;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 15.46 secs
boom! running `docker rm -f 6e05f108db9b480b4674fe2891eafa2aca357aa52d499462caf6dfd82b4c7918`
blam! 6e05f108db9b480b4674fe2891eafa2aca357aa52d499462caf6dfd82b4c7918
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 4ef40599da0e4602a7734f85943eb96138fa83cc66c143113825bbfb38a1a375
boom! running `docker start -a 4ef40599da0e4602a7734f85943eb96138fa83cc66c143113825bbfb38a1a375`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/ruba-d446a90c4172e3c3
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/ruba-a5d07ca99d313b1f
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests ruba
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 4ef40599da0e4602a7734f85943eb96138fa83cc66c143113825bbfb38a1a375`
blam! 4ef40599da0e4602a7734f85943eb96138fa83cc66c143113825bbfb38a1a375
