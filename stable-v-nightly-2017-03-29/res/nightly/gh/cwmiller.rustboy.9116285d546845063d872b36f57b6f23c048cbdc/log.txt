boom! testing https://github.com/cwmiller/rustboy#9116285d546845063d872b36f57b6f23c048cbdc against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! b51d3d9c23a600729a70e115f6c38c64394a85e052c48a79446c0988f10b2f62
boom! running `docker start -a b51d3d9c23a600729a70e115f6c38c64394a85e052c48a79446c0988f10b2f62`
kablam!    Compiling rustboy v0.1.0 (file:///source)
kablam! warning: struct is never used: `ImmediateAddressing`
kablam!   --> src/cpu/addressing.rs:11:1
kablam!    |
kablam! 11 | pub struct ImmediateAddressing<T>(pub T);
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `RelativeAddressing`
kablam!   --> src/cpu/addressing.rs:23:1
kablam!    |
kablam! 23 | pub struct RelativeAddressing(pub i8);
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `ExtendedAddressing`
kablam!   --> src/cpu/addressing.rs:37:1
kablam!    |
kablam! 37 | pub struct ExtendedAddressing(pub u16);
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `RegisterAddressing`
kablam!   --> src/cpu/addressing.rs:49:1
kablam!    |
kablam! 49 | pub struct RegisterAddressing(pub Register);
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `RegisterIndirectAddressing`
kablam!    --> src/cpu/addressing.rs:131:1
kablam!     |
kablam! 131 | pub struct RegisterIndirectAddressing(Register);
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `A`
kablam!  --> src/cpu/registers.rs:2:5
kablam!   |
kablam! 2 |     A,
kablam!   |     ^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `B`
kablam!  --> src/cpu/registers.rs:3:5
kablam!   |
kablam! 3 |     B,
kablam!   |     ^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `C`
kablam!  --> src/cpu/registers.rs:4:5
kablam!   |
kablam! 4 |     C,
kablam!   |     ^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `D`
kablam!  --> src/cpu/registers.rs:5:5
kablam!   |
kablam! 5 |     D,
kablam!   |     ^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `E`
kablam!  --> src/cpu/registers.rs:6:5
kablam!   |
kablam! 6 |     E,
kablam!   |     ^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `F`
kablam!  --> src/cpu/registers.rs:7:5
kablam!   |
kablam! 7 |     F,
kablam!   |     ^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `H`
kablam!  --> src/cpu/registers.rs:8:5
kablam!   |
kablam! 8 |     H,
kablam!   |     ^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `L`
kablam!  --> src/cpu/registers.rs:9:5
kablam!   |
kablam! 9 |     L,
kablam!   |     ^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `AF`
kablam!   --> src/cpu/registers.rs:10:5
kablam!    |
kablam! 10 |     AF,
kablam!    |     ^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `BC`
kablam!   --> src/cpu/registers.rs:11:5
kablam!    |
kablam! 11 |     BC,
kablam!    |     ^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `DE`
kablam!   --> src/cpu/registers.rs:12:5
kablam!    |
kablam! 12 |     DE,
kablam!    |     ^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `HL`
kablam!   --> src/cpu/registers.rs:13:5
kablam!    |
kablam! 13 |     HL,
kablam!    |     ^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `SP`
kablam!   --> src/cpu/registers.rs:14:5
kablam!    |
kablam! 14 |     SP,
kablam!    |     ^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `PC`
kablam!   --> src/cpu/registers.rs:15:5
kablam!    |
kablam! 15 |     PC
kablam!    |     ^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `FLAG_Z`
kablam!   --> src/cpu/registers.rs:18:1
kablam!    |
kablam! 18 | pub const FLAG_Z: u8 = 0b10000000;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `FLAG_N`
kablam!   --> src/cpu/registers.rs:19:1
kablam!    |
kablam! 19 | pub const FLAG_N: u8 = 0b01000000;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `FLAG_H`
kablam!   --> src/cpu/registers.rs:20:1
kablam!    |
kablam! 20 | pub const FLAG_H: u8 = 0b00100000;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `FLAG_C`
kablam!   --> src/cpu/registers.rs:21:1
kablam!    |
kablam! 21 | pub const FLAG_C: u8 = 0b00010000;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `self::addressing`
kablam!  --> src/cpu/mod.rs:4:5
kablam!   |
kablam! 4 | use self::addressing::*;
kablam!   |     ^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: enum is never used: `Condition`
kablam!   --> src/cpu/mod.rs:8:1
kablam!    |
kablam! 8  |   enum Condition {
kablam!    |  _^ starting here...
kablam! 9  | |     None,
kablam! 10 | |     Z,
kablam! 11 | |     C,
kablam! 12 | |     Nz,
kablam! 13 | |     Nc
kablam! 14 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `opcode`
kablam!   --> src/cpu/mod.rs:43:13
kablam!    |
kablam! 43 |         let opcode = self.imm_byte(&bus);
kablam!    |             ^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: method is never used: `condition_met`
kablam!   --> src/cpu/mod.rs:56:5
kablam!    |
kablam! 56 |       fn condition_met(&self, cond: Condition) -> bool {
kablam!    |  _____^ starting here...
kablam! 57 | |         match cond {
kablam! 58 | |             Condition::None => true,
kablam! 59 | |             Condition::C => (self.regs.f() & FLAG_C) == FLAG_C,
kablam! 60 | |             Condition::Z => (self.regs.f() & FLAG_Z) == FLAG_Z,
kablam! 61 | |             Condition::Nc => (self.regs.f() & FLAG_C) != FLAG_C,
kablam! 62 | |             Condition::Nz => (self.regs.f() & FLAG_Z) != FLAG_Z
kablam! 63 | |         }
kablam! 64 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.34 secs
boom! running `docker rm -f b51d3d9c23a600729a70e115f6c38c64394a85e052c48a79446c0988f10b2f62`
blam! b51d3d9c23a600729a70e115f6c38c64394a85e052c48a79446c0988f10b2f62
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! fc24b479ec69026ad96c98638c76176dd3c13c0d8f8da651df83f806a3ebda10
boom! running `docker start -a fc24b479ec69026ad96c98638c76176dd3c13c0d8f8da651df83f806a3ebda10`
kablam!    Compiling rustboy v0.1.0 (file:///source)
kablam! warning: struct is never used: `ImmediateAddressing`
kablam!   --> src/cpu/addressing.rs:11:1
kablam!    |
kablam! 11 | pub struct ImmediateAddressing<T>(pub T);
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `RelativeAddressing`
kablam!   --> src/cpu/addressing.rs:23:1
kablam!    |
kablam! 23 | pub struct RelativeAddressing(pub i8);
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `ExtendedAddressing`
kablam!   --> src/cpu/addressing.rs:37:1
kablam!    |
kablam! 37 | pub struct ExtendedAddressing(pub u16);
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `RegisterAddressing`
kablam!   --> src/cpu/addressing.rs:49:1
kablam!    |
kablam! 49 | pub struct RegisterAddressing(pub Register);
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `RegisterIndirectAddressing`
kablam!    --> src/cpu/addressing.rs:131:1
kablam!     |
kablam! 131 | pub struct RegisterIndirectAddressing(Register);
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `A`
kablam!  --> src/cpu/registers.rs:2:5
kablam!   |
kablam! 2 |     A,
kablam!   |     ^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `B`
kablam!  --> src/cpu/registers.rs:3:5
kablam!   |
kablam! 3 |     B,
kablam!   |     ^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `C`
kablam!  --> src/cpu/registers.rs:4:5
kablam!   |
kablam! 4 |     C,
kablam!   |     ^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `D`
kablam!  --> src/cpu/registers.rs:5:5
kablam!   |
kablam! 5 |     D,
kablam!   |     ^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `E`
kablam!  --> src/cpu/registers.rs:6:5
kablam!   |
kablam! 6 |     E,
kablam!   |     ^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `F`
kablam!  --> src/cpu/registers.rs:7:5
kablam!   |
kablam! 7 |     F,
kablam!   |     ^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `H`
kablam!  --> src/cpu/registers.rs:8:5
kablam!   |
kablam! 8 |     H,
kablam!   |     ^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `L`
kablam!  --> src/cpu/registers.rs:9:5
kablam!   |
kablam! 9 |     L,
kablam!   |     ^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `AF`
kablam!   --> src/cpu/registers.rs:10:5
kablam!    |
kablam! 10 |     AF,
kablam!    |     ^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `BC`
kablam!   --> src/cpu/registers.rs:11:5
kablam!    |
kablam! 11 |     BC,
kablam!    |     ^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `DE`
kablam!   --> src/cpu/registers.rs:12:5
kablam!    |
kablam! 12 |     DE,
kablam!    |     ^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `HL`
kablam!   --> src/cpu/registers.rs:13:5
kablam!    |
kablam! 13 |     HL,
kablam!    |     ^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `SP`
kablam!   --> src/cpu/registers.rs:14:5
kablam!    |
kablam! 14 |     SP,
kablam!    |     ^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `PC`
kablam!   --> src/cpu/registers.rs:15:5
kablam!    |
kablam! 15 |     PC
kablam!    |     ^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `FLAG_Z`
kablam!   --> src/cpu/registers.rs:18:1
kablam!    |
kablam! 18 | pub const FLAG_Z: u8 = 0b10000000;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `FLAG_N`
kablam!   --> src/cpu/registers.rs:19:1
kablam!    |
kablam! 19 | pub const FLAG_N: u8 = 0b01000000;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `FLAG_H`
kablam!   --> src/cpu/registers.rs:20:1
kablam!    |
kablam! 20 | pub const FLAG_H: u8 = 0b00100000;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `FLAG_C`
kablam!   --> src/cpu/registers.rs:21:1
kablam!    |
kablam! 21 | pub const FLAG_C: u8 = 0b00010000;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `self::addressing`
kablam!  --> src/cpu/mod.rs:4:5
kablam!   |
kablam! 4 | use self::addressing::*;
kablam!   |     ^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: enum is never used: `Condition`
kablam!   --> src/cpu/mod.rs:8:1
kablam!    |
kablam! 8  |   enum Condition {
kablam!    |  _^ starting here...
kablam! 9  | |     None,
kablam! 10 | |     Z,
kablam! 11 | |     C,
kablam! 12 | |     Nz,
kablam! 13 | |     Nc
kablam! 14 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `opcode`
kablam!   --> src/cpu/mod.rs:43:13
kablam!    |
kablam! 43 |         let opcode = self.imm_byte(&bus);
kablam!    |             ^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: method is never used: `condition_met`
kablam!   --> src/cpu/mod.rs:56:5
kablam!    |
kablam! 56 |       fn condition_met(&self, cond: Condition) -> bool {
kablam!    |  _____^ starting here...
kablam! 57 | |         match cond {
kablam! 58 | |             Condition::None => true,
kablam! 59 | |             Condition::C => (self.regs.f() & FLAG_C) == FLAG_C,
kablam! 60 | |             Condition::Z => (self.regs.f() & FLAG_Z) == FLAG_Z,
kablam! 61 | |             Condition::Nc => (self.regs.f() & FLAG_C) != FLAG_C,
kablam! 62 | |             Condition::Nz => (self.regs.f() & FLAG_Z) != FLAG_Z
kablam! 63 | |         }
kablam! 64 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.31 secs
boom! running `docker rm -f fc24b479ec69026ad96c98638c76176dd3c13c0d8f8da651df83f806a3ebda10`
blam! fc24b479ec69026ad96c98638c76176dd3c13c0d8f8da651df83f806a3ebda10
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 383cea8ae3049d7d3609ce0e320109091a6ca92351fb27b5ef3a7867452f53f0
boom! running `docker start -a 383cea8ae3049d7d3609ce0e320109091a6ca92351fb27b5ef3a7867452f53f0`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/rustboy-2a1cdf488fc84e82
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 383cea8ae3049d7d3609ce0e320109091a6ca92351fb27b5ef3a7867452f53f0`
blam! 383cea8ae3049d7d3609ce0e320109091a6ca92351fb27b5ef3a7867452f53f0
