boom! testing https://github.com/KeepCalmAndLearnRust/object-factory-pattern#0087c6f772021426bc90f91b8cd49f814392fe05 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! c8491dd415b07f307a061a735ff26e4c2b7ed107574b485a46f822f964d80d1f
boom! running `docker start -a c8491dd415b07f307a061a735ff26e4c2b7ed107574b485a46f822f964d80d1f`
kablam!    Compiling object-factory-pattern v0.1.0 (file:///source)
kablam! warning: variable does not need to be mutable
kablam!   --> src/main.rs:13:13
kablam!    |
kablam! 13 |         let mut pool = vec![];
kablam!    |             ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: method is never used: `return_conn`
kablam!   --> src/main.rs:24:5
kablam!    |
kablam! 24 |       fn return_conn(&mut self, conn: T) {
kablam!    |  _____^ starting here...
kablam! 25 | |         self.pool.push(conn);
kablam! 26 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.70 secs
boom! running `docker rm -f c8491dd415b07f307a061a735ff26e4c2b7ed107574b485a46f822f964d80d1f`
blam! c8491dd415b07f307a061a735ff26e4c2b7ed107574b485a46f822f964d80d1f
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! a039486d675f4b735b9a87351a5163274a8afce8a5860c08bad3369a04ea0f33
boom! running `docker start -a a039486d675f4b735b9a87351a5163274a8afce8a5860c08bad3369a04ea0f33`
kablam!    Compiling object-factory-pattern v0.1.0 (file:///source)
kablam! warning: variable does not need to be mutable
kablam!   --> src/main.rs:13:13
kablam!    |
kablam! 13 |         let mut pool = vec![];
kablam!    |             ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: method is never used: `return_conn`
kablam!   --> src/main.rs:24:5
kablam!    |
kablam! 24 |       fn return_conn(&mut self, conn: T) {
kablam!    |  _____^ starting here...
kablam! 25 | |         self.pool.push(conn);
kablam! 26 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.80 secs
boom! running `docker rm -f a039486d675f4b735b9a87351a5163274a8afce8a5860c08bad3369a04ea0f33`
blam! a039486d675f4b735b9a87351a5163274a8afce8a5860c08bad3369a04ea0f33
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! dec4b9a8bfbd033a8b09f556d9304159fabe86e55f584a76199365e48733737a
boom! running `docker start -a dec4b9a8bfbd033a8b09f556d9304159fabe86e55f584a76199365e48733737a`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/object_factory_pattern-c76b316ba5c84fc9
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f dec4b9a8bfbd033a8b09f556d9304159fabe86e55f584a76199365e48733737a`
blam! dec4b9a8bfbd033a8b09f556d9304159fabe86e55f584a76199365e48733737a
