boom! testing https://github.com/TheToolbox/json-toy#54dfa3ac5a5d0ac2c0ae4aad689b190e9ad4256c against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! cb96e7d3c1ef6c1d91ba1e2548b66678ddd07910afdd3975e567e3cd6bc8bd68
boom! running `docker start -a cb96e7d3c1ef6c1d91ba1e2548b66678ddd07910afdd3975e567e3cd6bc8bd68`
kablam!    Compiling json-toy v0.1.0 (file:///source)
kablam! warning: value assigned to `state` is never read
kablam!    --> main.rs:86:51
kablam!     |
kablam! 86  |                     None => { retval = Ok($item); state = ExpectingNothingElse; },
kablam!     |                                                   ^^^^^
kablam! ...
kablam! 135 |                         '}' | ']' => { CompleteItem!(JSON::Number(input[start..i].parse::<f64>().unwrap())); PopObject!(); },
kablam!     |                                        --------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: value assigned to `state` is never read
kablam!    --> main.rs:87:74
kablam!     |
kablam! 87  |                     Some(&mut JSON::Array(ref mut a)) => {a.push($item); state = ExpectingComma; },
kablam!     |                                                                          ^^^^^
kablam! ...
kablam! 135 |                         '}' | ']' => { CompleteItem!(JSON::Number(input[start..i].parse::<f64>().unwrap())); PopObject!(); },
kablam!     |                                        --------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: value assigned to `state` is never read
kablam!    --> main.rs:91:82
kablam!     |
kablam! 91  |                             Some(k) => {o.insert(k,$item); key_stack.push(None); state = ExpectingComma; },
kablam!     |                                                                                  ^^^^^
kablam! ...
kablam! 135 |                         '}' | ']' => { CompleteItem!(JSON::Number(input[start..i].parse::<f64>().unwrap())); PopObject!(); },
kablam!     |                                        --------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: value assigned to `state` is never read
kablam!    --> main.rs:94:83
kablam!     |
kablam! 94  |                                     JSON::String(s) => { key_stack.push(Some(s)); state = ExpectingColon; },
kablam!     |                                                                                   ^^^^^
kablam! ...
kablam! 135 |                         '}' | ']' => { CompleteItem!(JSON::Number(input[start..i].parse::<f64>().unwrap())); PopObject!(); },
kablam!     |                                        --------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: value assigned to `state` is never read
kablam!    --> main.rs:86:51
kablam!     |
kablam! 86  |                     None => { retval = Ok($item); state = ExpectingNothingElse; },
kablam!     |                                                   ^^^^^
kablam! ...
kablam! 136 |                         ',' => { CompleteItem!(JSON::Number(input[start..i].parse::<f64>().unwrap())); state = ExpectingItem; }
kablam!     |                                  --------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: value assigned to `state` is never read
kablam!    --> main.rs:87:74
kablam!     |
kablam! 87  |                     Some(&mut JSON::Array(ref mut a)) => {a.push($item); state = ExpectingComma; },
kablam!     |                                                                          ^^^^^
kablam! ...
kablam! 136 |                         ',' => { CompleteItem!(JSON::Number(input[start..i].parse::<f64>().unwrap())); state = ExpectingItem; }
kablam!     |                                  --------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: value assigned to `state` is never read
kablam!    --> main.rs:91:82
kablam!     |
kablam! 91  |                             Some(k) => {o.insert(k,$item); key_stack.push(None); state = ExpectingComma; },
kablam!     |                                                                                  ^^^^^
kablam! ...
kablam! 136 |                         ',' => { CompleteItem!(JSON::Number(input[start..i].parse::<f64>().unwrap())); state = ExpectingItem; }
kablam!     |                                  --------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: value assigned to `state` is never read
kablam!    --> main.rs:94:83
kablam!     |
kablam! 94  |                                     JSON::String(s) => { key_stack.push(Some(s)); state = ExpectingColon; },
kablam!     |                                                                                   ^^^^^
kablam! ...
kablam! 136 |                         ',' => { CompleteItem!(JSON::Number(input[start..i].parse::<f64>().unwrap())); state = ExpectingItem; }
kablam!     |                                  --------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_assignments)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.74 secs
boom! running `docker rm -f cb96e7d3c1ef6c1d91ba1e2548b66678ddd07910afdd3975e567e3cd6bc8bd68`
blam! cb96e7d3c1ef6c1d91ba1e2548b66678ddd07910afdd3975e567e3cd6bc8bd68
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 3da9a081f8e5e2463b55a90bd615403dafbeb550c1e7e54df6eb05a4cc58af32
boom! running `docker start -a 3da9a081f8e5e2463b55a90bd615403dafbeb550c1e7e54df6eb05a4cc58af32`
kablam!    Compiling json-toy v0.1.0 (file:///source)
kablam! warning: value assigned to `state` is never read
kablam!    --> main.rs:86:51
kablam!     |
kablam! 86  |                     None => { retval = Ok($item); state = ExpectingNothingElse; },
kablam!     |                                                   ^^^^^
kablam! ...
kablam! 135 |                         '}' | ']' => { CompleteItem!(JSON::Number(input[start..i].parse::<f64>().unwrap())); PopObject!(); },
kablam!     |                                        --------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: value assigned to `state` is never read
kablam!    --> main.rs:87:74
kablam!     |
kablam! 87  |                     Some(&mut JSON::Array(ref mut a)) => {a.push($item); state = ExpectingComma; },
kablam!     |                                                                          ^^^^^
kablam! ...
kablam! 135 |                         '}' | ']' => { CompleteItem!(JSON::Number(input[start..i].parse::<f64>().unwrap())); PopObject!(); },
kablam!     |                                        --------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: value assigned to `state` is never read
kablam!    --> main.rs:91:82
kablam!     |
kablam! 91  |                             Some(k) => {o.insert(k,$item); key_stack.push(None); state = ExpectingComma; },
kablam!     |                                                                                  ^^^^^
kablam! ...
kablam! 135 |                         '}' | ']' => { CompleteItem!(JSON::Number(input[start..i].parse::<f64>().unwrap())); PopObject!(); },
kablam!     |                                        --------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: value assigned to `state` is never read
kablam!    --> main.rs:94:83
kablam!     |
kablam! 94  |                                     JSON::String(s) => { key_stack.push(Some(s)); state = ExpectingColon; },
kablam!     |                                                                                   ^^^^^
kablam! ...
kablam! 135 |                         '}' | ']' => { CompleteItem!(JSON::Number(input[start..i].parse::<f64>().unwrap())); PopObject!(); },
kablam!     |                                        --------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: value assigned to `state` is never read
kablam!    --> main.rs:86:51
kablam!     |
kablam! 86  |                     None => { retval = Ok($item); state = ExpectingNothingElse; },
kablam!     |                                                   ^^^^^
kablam! ...
kablam! 136 |                         ',' => { CompleteItem!(JSON::Number(input[start..i].parse::<f64>().unwrap())); state = ExpectingItem; }
kablam!     |                                  --------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: value assigned to `state` is never read
kablam!    --> main.rs:87:74
kablam!     |
kablam! 87  |                     Some(&mut JSON::Array(ref mut a)) => {a.push($item); state = ExpectingComma; },
kablam!     |                                                                          ^^^^^
kablam! ...
kablam! 136 |                         ',' => { CompleteItem!(JSON::Number(input[start..i].parse::<f64>().unwrap())); state = ExpectingItem; }
kablam!     |                                  --------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: value assigned to `state` is never read
kablam!    --> main.rs:91:82
kablam!     |
kablam! 91  |                             Some(k) => {o.insert(k,$item); key_stack.push(None); state = ExpectingComma; },
kablam!     |                                                                                  ^^^^^
kablam! ...
kablam! 136 |                         ',' => { CompleteItem!(JSON::Number(input[start..i].parse::<f64>().unwrap())); state = ExpectingItem; }
kablam!     |                                  --------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: value assigned to `state` is never read
kablam!    --> main.rs:94:83
kablam!     |
kablam! 94  |                                     JSON::String(s) => { key_stack.push(Some(s)); state = ExpectingColon; },
kablam!     |                                                                                   ^^^^^
kablam! ...
kablam! 136 |                         ',' => { CompleteItem!(JSON::Number(input[start..i].parse::<f64>().unwrap())); state = ExpectingItem; }
kablam!     |                                  --------------------------------------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_assignments)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.82 secs
boom! running `docker rm -f 3da9a081f8e5e2463b55a90bd615403dafbeb550c1e7e54df6eb05a4cc58af32`
blam! 3da9a081f8e5e2463b55a90bd615403dafbeb550c1e7e54df6eb05a4cc58af32
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 987a0b60e317126aeb34f46a1cf53f406ef069107d44500668e6b21c4f73a273
boom! running `docker start -a 987a0b60e317126aeb34f46a1cf53f406ef069107d44500668e6b21c4f73a273`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/json_toy-de0da527768b0f26
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 987a0b60e317126aeb34f46a1cf53f406ef069107d44500668e6b21c4f73a273`
blam! 987a0b60e317126aeb34f46a1cf53f406ef069107d44500668e6b21c4f73a273
