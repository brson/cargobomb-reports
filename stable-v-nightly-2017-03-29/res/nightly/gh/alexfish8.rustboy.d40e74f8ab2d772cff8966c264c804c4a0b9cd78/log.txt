boom! testing https://github.com/alexfish8/rustboy#d40e74f8ab2d772cff8966c264c804c4a0b9cd78 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! e8ebd0bc8601af2ebe2a1a0627ce5020ea4ddaaa92506d56f55a68a30fff862d
boom! running `docker start -a e8ebd0bc8601af2ebe2a1a0627ce5020ea4ddaaa92506d56f55a68a30fff862d`
kablam!    Compiling sdl2-sys v0.27.2
kablam! warning: redundant linker flag specified for library `SDL2`
kablam! 
kablam!    Compiling sdl2 v0.29.0
kablam!    Compiling rustboy v0.1.0 (file:///source)
kablam! warning: field is never used: `data`
kablam!  --> src/cartridge.rs:7:5
kablam!   |
kablam! 7 |     data : Vec<u8>
kablam!   |     ^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `num_bytes`
kablam!   --> src/cartridge.rs:14:13
kablam!    |
kablam! 14 |         let num_bytes = match f.read_to_end(&mut buf) {
kablam!    |             ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `e`
kablam!   --> src/cartridge.rs:16:17
kablam!    |
kablam! 16 |             Err(e)           => return Err("Failed to read file")
kablam!    |                 ^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused import: `std::fs::File`
kablam!  --> src/gameboy.rs:3:5
kablam!   |
kablam! 3 | use std::fs::File;
kablam!   |     ^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::process`
kablam!  --> src/gameboy.rs:4:5
kablam!   |
kablam! 4 | use std::process;
kablam!   |     ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::io::Read`
kablam!  --> src/gameboy.rs:5:5
kablam!   |
kablam! 5 | use std::io::Read;
kablam!   |     ^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `self::sdl2::pixels::Color`
kablam!  --> src/gameboy.rs:7:5
kablam!   |
kablam! 7 | use self::sdl2::pixels::Color;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::thread`
kablam!  --> src/gameboy.rs:8:5
kablam!   |
kablam! 8 | use std::thread;
kablam!   |     ^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::time::Duration`
kablam!  --> src/gameboy.rs:9:5
kablam!   |
kablam! 9 | use std::time::Duration;
kablam!   |     ^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::ops::Index`
kablam!   --> src/gameboy.rs:10:5
kablam!    |
kablam! 10 | use std::ops::Index;
kablam!    |     ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: constant item is never used: `CLOCK_FREQUENCY`
kablam!   --> src/gameboy.rs:20:1
kablam!    |
kablam! 20 | const CLOCK_FREQUENCY : f32 = 4.194304e6; // TODO let this be configured by the user
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/gameboy.rs:39:13
kablam!    |
kablam! 39 |         let mut renderer = window.renderer()
kablam!    |             ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/gameboy.rs:47:13
kablam!    |
kablam! 47 |         let mut cycles = 0;
kablam!    |             ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `cycles`
kablam!   --> src/gameboy.rs:47:13
kablam!    |
kablam! 47 |         let mut cycles = 0;
kablam!    |             ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: denote infinite loops with loop { ... }
kablam!   --> src/gameboy.rs:49:9
kablam!    |
kablam! 49 |           while true {
kablam!    |  _________^ starting here...
kablam! 50 | |             cpu.step();
kablam! 51 | |             lcd.step();
kablam! 52 | |             // wait some amount of time to handle the clock
kablam! 53 | |
kablam! 54 | |         }
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(while_true)] on by default
kablam! 
kablam! warning: constant item is never used: `OPCODE_SIZE`
kablam!   --> src/cpu.rs:15:1
kablam!    |
kablam! 15 | const OPCODE_SIZE: usize = 1;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `int`
kablam!   --> src/cpu.rs:46:23
kablam!    |
kablam! 46 |     fn from_interrupt(int: Interrupt) -> Executable {
kablam!    |                       ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: field is never used: `cartridge`
kablam!   --> src/cpu.rs:87:5
kablam!    |
kablam! 87 |     cartridge: Cartridge,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `handle_interrupt`
kablam!    --> src/cpu.rs:177:5
kablam!     |
kablam! 177 |       fn handle_interrupt(&mut self, int: Interrupt) -> () {
kablam!     |  _____^ starting here...
kablam! 178 | |         // TODO implement this
kablam! 179 | |         // maybe the interrupt handling logic should be implemented as a function in the interrupt itself?
kablam! 180 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `int`
kablam!    --> src/cpu.rs:177:36
kablam!     |
kablam! 177 |     fn handle_interrupt(&mut self, int: Interrupt) -> () {
kablam!     |                                    ^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: method is never used: `dummy_instr_execution`
kablam!    --> src/cpu.rs:185:5
kablam!     |
kablam! 185 |       fn dummy_instr_execution(cpu: &mut Cpu) -> () {
kablam!     |  _____^ starting here...
kablam! 186 | |         println!("Sup son");
kablam! 187 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `cpu`
kablam!    --> src/cpu.rs:185:30
kablam!     |
kablam! 185 |     fn dummy_instr_execution(cpu: &mut Cpu) -> () {
kablam!     |                              ^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `e`
kablam!    --> src/cpu.rs:192:17
kablam!     |
kablam! 192 |             Err(e) => {
kablam!     |                 ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `num_bytes`
kablam!    --> src/cpu.rs:200:13
kablam!     |
kablam! 200 |         let num_bytes = match f.read_to_end(&mut buf) {
kablam!     |             ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `e`
kablam!    --> src/cpu.rs:202:17
kablam!     |
kablam! 202 |             Err(e)           => return Err("Failed to read file")
kablam!     |                 ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused import: `Register8`
kablam!  --> src/instruction.rs:2:11
kablam!   |
kablam! 2 | use cpu::{Register8, Register16};
kablam!   |           ^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: function is never used: `derp`
kablam!   --> src/instruction.rs:60:1
kablam!    |
kablam! 60 |   fn derp(cpu: &mut Cpu) -> () {
kablam!    |  _^ starting here...
kablam! 61 | |
kablam! 62 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `cpu`
kablam!   --> src/instruction.rs:60:9
kablam!    |
kablam! 60 | fn derp(cpu: &mut Cpu) -> () {
kablam!    |         ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `cpu`
kablam!  --> src/interrupt.rs:9:13
kablam!   |
kablam! 9 | pub fn derp(cpu: &mut Cpu) -> () {
kablam!   |             ^^^
kablam!   |
kablam!   = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: constant item is never used: `STARTUP_ROM_PATH`
kablam!   --> src/main.rs:10:1
kablam!    |
kablam! 10 | const STARTUP_ROM_PATH : &'static str = "startup_rom.bin";
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `e`
kablam!   --> src/main.rs:27:13
kablam!    |
kablam! 27 |         Err(e) => {
kablam!    |             ^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/main.rs:45:5
kablam!    |
kablam! 45 |     Gameboy::run(cartridge);
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! error: linking with `cc` failed: exit code: 1
kablam!   |
kablam!   = note: "cc" "-Wl,--as-needed" "-Wl,-z,noexecstack" "-m64" "-L" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib" "/target/debug/deps/rustboy-5bb7c46c050d4daa.0.o" "-o" "/target/debug/deps/rustboy-5bb7c46c050d4daa" "-Wl,--gc-sections" "-pie" "-nodefaultlibs" "-L" "/target/debug/deps" "-L" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib" "-Wl,-Bstatic" "-Wl,-Bdynamic" "/target/debug/deps/librustboy-573ae8d09c9dd729.rlib" "/target/debug/deps/libsdl2-10407b7478fe7b65.rlib" "/target/debug/deps/libsdl2_sys-ea93ed8d35645303.rlib" "/target/debug/deps/liblazy_static-2a16fcec40d2bdf3.rlib" "/target/debug/deps/librand-c9d9fbdab2355ee4.rlib" "/target/debug/deps/liblibc-2a4507ee5e52ea3e.rlib" "/target/debug/deps/libnum-1dc0cc712369fa49.rlib" "/target/debug/deps/libnum_iter-e3d53b72a44dd492.rlib" "/target/debug/deps/libnum_integer-bbbfaf8dce75e1b6.rlib" "/target/debug/deps/libnum_traits-69f4129d46397118.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-f4594d3e53dcb114.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libpanic_unwind-a0157c0ca919c364.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libunwind-488b4ab4bd53a138.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/librand-1efbcfd8938372b6.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcollections-532a3dbf317eff86.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-ca07b617414dd0fa.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc_jemalloc-492d8ea7fa3384ff.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liblibc-88c194c15fdb6521.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd_unicode-cfbd6648f7db2ee5.rlib" "/target/debug/deps/libbitflags-65ddff5d2b91509e.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-687e6a964d22cbb4.rlib" "/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-987729be881d4d32.rlib" "-l" "SDL2" "-l" "util" "-l" "dl" "-l" "rt" "-l" "pthread" "-l" "gcc_s" "-l" "pthread" "-l" "c" "-l" "m" "-l" "rt" "-l" "util"
kablam!   = note: /usr/bin/ld: cannot find -lSDL2
kablam!           collect2: error: ld returned 1 exit status
kablam!           
kablam! 
kablam! error: aborting due to previous error
kablam! 
kablam! error: Could not compile `rustboy`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f e8ebd0bc8601af2ebe2a1a0627ce5020ea4ddaaa92506d56f55a68a30fff862d`
blam! e8ebd0bc8601af2ebe2a1a0627ce5020ea4ddaaa92506d56f55a68a30fff862d
