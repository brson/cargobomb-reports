boom! testing https://github.com/millere/bf#cde8a51673f5b16771bd577a615cf474205dc20d against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! a6767d0569c5db5575ac62c9b4ba5a77101cd6fe06dd1c7a0d8d14b4ecbfb93c
boom! running `docker start -a a6767d0569c5db5575ac62c9b4ba5a77101cd6fe06dd1c7a0d8d14b4ecbfb93c`
kablam!    Compiling bf v0.0.1 (file:///source)
kablam! warning: unused import: `std::io::Read`
kablam!  --> src/main.rs:2:5
kablam!   |
kablam! 2 | use std::io::Read;
kablam!   |     ^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/main.rs:14:22
kablam!    |
kablam! 14 |             b'.' => {output.write(&mut buffer[mptr .. mptr+1]);},
kablam!    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.89 secs
boom! running `docker rm -f a6767d0569c5db5575ac62c9b4ba5a77101cd6fe06dd1c7a0d8d14b4ecbfb93c`
blam! a6767d0569c5db5575ac62c9b4ba5a77101cd6fe06dd1c7a0d8d14b4ecbfb93c
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! f4b944e97b9d197c128885d712dbcc0cb83dde3818b743573419799668f1c401
boom! running `docker start -a f4b944e97b9d197c128885d712dbcc0cb83dde3818b743573419799668f1c401`
kablam!    Compiling bf v0.0.1 (file:///source)
kablam! warning: unused import: `std::io::Read`
kablam!  --> src/main.rs:2:5
kablam!   |
kablam! 2 | use std::io::Read;
kablam!   |     ^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/main.rs:14:22
kablam!    |
kablam! 14 |             b'.' => {output.write(&mut buffer[mptr .. mptr+1]);},
kablam!    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.10 secs
boom! running `docker rm -f f4b944e97b9d197c128885d712dbcc0cb83dde3818b743573419799668f1c401`
blam! f4b944e97b9d197c128885d712dbcc0cb83dde3818b743573419799668f1c401
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 8fa362d40280f846bf582657a433ce3785cc9ffac6d9b650ea190ebe194fc244
boom! running `docker start -a 8fa362d40280f846bf582657a433ce3785cc9ffac6d9b650ea190ebe194fc244`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/bf-c8a1bd254795c37d
blam! 
blam! running 1 test
blam! test test_brainfuck ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- test_brainfuck stdout ----
blam! 	thread 'test_brainfuck' panicked at 'assertion failed: String::from_utf8(output).unwrap() == "Hello, world!"', src/main.rs:75
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
kablam! error: test failed
blam! 
blam! 
blam! failures:
blam!     test_brainfuck
blam! 
blam! test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 8fa362d40280f846bf582657a433ce3785cc9ffac6d9b650ea190ebe194fc244`
blam! 8fa362d40280f846bf582657a433ce3785cc9ffac6d9b650ea190ebe194fc244
