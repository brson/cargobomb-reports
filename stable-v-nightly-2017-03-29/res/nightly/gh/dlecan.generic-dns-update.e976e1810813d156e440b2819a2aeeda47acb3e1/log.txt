boom! testing https://github.com/dlecan/generic-dns-update#e976e1810813d156e440b2819a2aeeda47acb3e1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 6e985b4a43374673168b5ad9ba4b0d2dcb25852f57401205e1b02c1cd5802e50
boom! running `docker start -a 6e985b4a43374673168b5ad9ba4b0d2dcb25852f57401205e1b02c1cd5802e50`
kablam!    Compiling thread-id v2.0.0
kablam!    Compiling openssl-sys v0.7.17
kablam!    Compiling rand v0.3.15
kablam!    Compiling term_size v0.2.1
kablam!    Compiling thread_local v0.2.7
kablam!    Compiling memchr v0.1.11
kablam!    Compiling openssl-sys-extras v0.7.14
kablam!    Compiling time v0.1.35
kablam!    Compiling aho-corasick v0.5.3
kablam!    Compiling xml-rs v0.1.26
kablam!    Compiling clap v2.19.3
kablam!    Compiling regex v0.1.80
kablam!    Compiling num-bigint v0.1.35
kablam!    Compiling openssl v0.7.14
kablam!    Compiling num-rational v0.1.35
kablam!    Compiling num v0.1.36
kablam!    Compiling openssl-verify v0.1.0
kablam!    Compiling cookie v0.2.5
kablam!    Compiling hyper v0.9.14
kablam!    Compiling env_logger v0.3.5
kablam!    Compiling generic-dns-update v1.1.5-pre (file:///source)
kablam! warning: variant is never used: `STAGING`
kablam!   --> src/gandi.rs:10:5
kablam!    |
kablam! 10 |     STAGING,
kablam!    |     ^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `std::str::FromStr`
kablam!   --> src/xmlrpc/encoding.rs:21:5
kablam!    |
kablam! 21 | use std::str::FromStr;
kablam!    |     ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variant is never used: `Base64`
kablam!   --> src/xmlrpc/encoding.rs:44:5
kablam!    |
kablam! 44 |     Base64(Vec<u8>), // FIXME: added for xml-rpc, not in JSON
kablam!    |     ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `DateTime`
kablam!   --> src/xmlrpc/encoding.rs:45:5
kablam!    |
kablam! 45 |     DateTime, // FIXME: need to implement
kablam!    |     ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `AsXml`
kablam!   --> src/xmlrpc/encoding.rs:52:1
kablam!    |
kablam! 52 |   pub struct AsXml<'a, T: 'a> {
kablam!    |  _^ starting here...
kablam! 53 | |     inner: &'a T,
kablam! 54 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `InvalidSyntax`
kablam!   --> src/xmlrpc/encoding.rs:59:5
kablam!    |
kablam! 59 |     InvalidSyntax,
kablam!    |     ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `EOFWhileParsingObject`
kablam!   --> src/xmlrpc/encoding.rs:60:5
kablam!    |
kablam! 60 |     EOFWhileParsingObject,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `EOFWhileParsingArray`
kablam!   --> src/xmlrpc/encoding.rs:61:5
kablam!    |
kablam! 61 |     EOFWhileParsingArray,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `EOFWhileParsingValue`
kablam!   --> src/xmlrpc/encoding.rs:62:5
kablam!    |
kablam! 62 |     EOFWhileParsingValue,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `EOFWhileParsingString`
kablam!   --> src/xmlrpc/encoding.rs:63:5
kablam!    |
kablam! 63 |     EOFWhileParsingString,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `SyntaxError`
kablam!   --> src/xmlrpc/encoding.rs:82:5
kablam!    |
kablam! 82 |     SyntaxError(ErrorCode, String),
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `IoError`
kablam!   --> src/xmlrpc/encoding.rs:83:5
kablam!    |
kablam! 83 |     IoError(io::ErrorKind, String),
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: type alias is never used: `BuilderError`
kablam!    --> src/xmlrpc/encoding.rs:116:1
kablam!     |
kablam! 116 | pub type BuilderError = ParserError;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ParseError`
kablam!    --> src/xmlrpc/encoding.rs:120:5
kablam!     |
kablam! 120 |     ParseError(ParserError),
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `decode`
kablam!    --> src/xmlrpc/encoding.rs:160:1
kablam!     |
kablam! 160 | pub fn decode<T: Decodable>(s: &str) -> Result<Vec<T>, DecoderError> {
kablam!     | ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `f`
kablam!    --> src/xmlrpc/encoding.rs:283:76
kablam!     |
kablam! 283 |     fn emit_enum_variant<F>(&mut self, name: &str, _id: usize, cnt: usize, f: F) -> EncodeResult
kablam!     |                                                                            ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `idx`
kablam!    --> src/xmlrpc/encoding.rs:353:52
kablam!     |
kablam! 353 |     fn emit_struct_field<F>(&mut self, name: &str, idx: usize, f: F) -> EncodeResult
kablam!     |                                                    ^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `idx`
kablam!    --> src/xmlrpc/encoding.rs:408:35
kablam!     |
kablam! 408 |     fn emit_seq_elt<F>(&mut self, idx: usize, f: F) -> EncodeResult
kablam!     |                                   ^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `f`
kablam!    --> src/xmlrpc/encoding.rs:416:44
kablam!     |
kablam! 416 |     fn emit_map<F>(&mut self, _len: usize, f: F) -> EncodeResult
kablam!     |                                            ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `idx`
kablam!    --> src/xmlrpc/encoding.rs:428:39
kablam!     |
kablam! 428 |     fn emit_map_elt_key<F>(&mut self, idx: usize, f: F) -> EncodeResult { // where
kablam!     |                                       ^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `f`
kablam!    --> src/xmlrpc/encoding.rs:428:51
kablam!     |
kablam! 428 |     fn emit_map_elt_key<F>(&mut self, idx: usize, f: F) -> EncodeResult { // where
kablam!     |                                                   ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `f`
kablam!    --> src/xmlrpc/encoding.rs:447:52
kablam!     |
kablam! 447 |     fn emit_map_elt_val<F>(&mut self, _idx: usize, f: F) -> EncodeResult
kablam!     |                                                    ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: function is never used: `as_xml`
kablam!    --> src/xmlrpc/encoding.rs:474:1
kablam!     |
kablam! 474 |   pub fn as_xml<T: Encodable>(t: &T) -> AsXml<T> {
kablam!     |  _^ starting here...
kablam! 475 | |     AsXml { inner: t }
kablam! 476 | | }
kablam!     | |_^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `from_str`
kablam!    --> src/xmlrpc/encoding.rs:480:5
kablam!     |
kablam! 480 |       pub fn from_str(s: &str) -> Result<Vec<Self>, BuilderError> {
kablam!     |  _____^ starting here...
kablam! 481 | |         // let mut builder = Builder::new(s.chars());
kablam! 482 | |         // builder.build()
kablam! 483 | |         let cur = io::Cursor::new(s.as_bytes());
kablam! 484 | |         let mut builder = Builder::new(cur);
kablam! 485 | |         builder.build()
kablam! 486 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `from_parser`
kablam!    --> src/xmlrpc/encoding.rs:490:5
kablam!     |
kablam! 490 |       pub fn from_parser<B: BufRead>(p: xml::EventReader<B>) -> Result<Vec<Self>, BuilderError> {
kablam!     |  _____^ starting here...
kablam! 491 | |         let mut builder = Builder {
kablam! 492 | |             parser: p,
kablam! 493 | |             token: None,
kablam! 494 | |         };
kablam! 495 | |         builder.build()
kablam! 496 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `find_path`
kablam!    --> src/xmlrpc/encoding.rs:510:5
kablam!     |
kablam! 510 |     pub fn find_path<'a>(&'a self, keys: &[&str]) -> Option<&'a Xml> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `search`
kablam!    --> src/xmlrpc/encoding.rs:526:5
kablam!     |
kablam! 526 |     pub fn search<'a>(&'a self, key: &str) -> Option<&'a Xml> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_object`
kablam!    --> src/xmlrpc/encoding.rs:547:5
kablam!     |
kablam! 547 |       pub fn is_object<'a>(&'a self) -> bool {
kablam!     |  _____^ starting here...
kablam! 548 | |         self.as_object().is_some()
kablam! 549 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_object`
kablam!    --> src/xmlrpc/encoding.rs:553:5
kablam!     |
kablam! 553 |       pub fn as_object<'a>(&'a self) -> Option<&'a Object> {
kablam!     |  _____^ starting here...
kablam! 554 | |         match self {
kablam! 555 | |             &Xml::Object(ref map) => Some(map),
kablam! 556 | |             _ => None,
kablam! 557 | |         }
kablam! 558 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_array`
kablam!    --> src/xmlrpc/encoding.rs:561:5
kablam!     |
kablam! 561 |       pub fn is_array<'a>(&'a self) -> bool {
kablam!     |  _____^ starting here...
kablam! 562 | |         self.as_array().is_some()
kablam! 563 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_array`
kablam!    --> src/xmlrpc/encoding.rs:567:5
kablam!     |
kablam! 567 |       pub fn as_array<'a>(&'a self) -> Option<&'a Array> {
kablam!     |  _____^ starting here...
kablam! 568 | |         match self {
kablam! 569 | |             &Xml::Array(ref array) => Some(&*array),
kablam! 570 | |             _ => None,
kablam! 571 | |         }
kablam! 572 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_string`
kablam!    --> src/xmlrpc/encoding.rs:575:5
kablam!     |
kablam! 575 |       pub fn is_string<'a>(&'a self) -> bool {
kablam!     |  _____^ starting here...
kablam! 576 | |         self.as_string().is_some()
kablam! 577 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_string`
kablam!    --> src/xmlrpc/encoding.rs:581:5
kablam!     |
kablam! 581 |       pub fn as_string<'a>(&'a self) -> Option<&'a str> {
kablam!     |  _____^ starting here...
kablam! 582 | |         match *self {
kablam! 583 | |             Xml::String(ref s) => Some(&s),
kablam! 584 | |             _ => None,
kablam! 585 | |         }
kablam! 586 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_number`
kablam!    --> src/xmlrpc/encoding.rs:589:5
kablam!     |
kablam! 589 |       pub fn is_number(&self) -> bool {
kablam!     |  _____^ starting here...
kablam! 590 | |         match *self {
kablam! 591 | |             Xml::I32(_) | Xml::F64(_) => true,
kablam! 592 | |             _ => false,
kablam! 593 | |         }
kablam! 594 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_i32`
kablam!    --> src/xmlrpc/encoding.rs:597:5
kablam!     |
kablam! 597 |       pub fn is_i32(&self) -> bool {
kablam!     |  _____^ starting here...
kablam! 598 | |         match *self {
kablam! 599 | |             Xml::I32(_) => true,
kablam! 600 | |             _ => false,
kablam! 601 | |         }
kablam! 602 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_f64`
kablam!    --> src/xmlrpc/encoding.rs:605:5
kablam!     |
kablam! 605 |       pub fn is_f64(&self) -> bool {
kablam!     |  _____^ starting here...
kablam! 606 | |         match *self {
kablam! 607 | |             Xml::F64(_) => true,
kablam! 608 | |             _ => false,
kablam! 609 | |         }
kablam! 610 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_i32`
kablam!    --> src/xmlrpc/encoding.rs:614:5
kablam!     |
kablam! 614 |       pub fn as_i32(&self) -> Option<i32> {
kablam!     |  _____^ starting here...
kablam! 615 | |         match *self {
kablam! 616 | |             Xml::I32(n) => Some(n),
kablam! 617 | |             _ => None,
kablam! 618 | |         }
kablam! 619 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_f64`
kablam!    --> src/xmlrpc/encoding.rs:623:5
kablam!     |
kablam! 623 |       pub fn as_f64(&self) -> Option<f64> {
kablam!     |  _____^ starting here...
kablam! 624 | |         match *self {
kablam! 625 | |             Xml::I32(n) => num::cast(n),
kablam! 626 | |             Xml::F64(n) => Some(n),
kablam! 627 | |             _ => None,
kablam! 628 | |         }
kablam! 629 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_boolean`
kablam!    --> src/xmlrpc/encoding.rs:632:5
kablam!     |
kablam! 632 |       pub fn is_boolean(&self) -> bool {
kablam!     |  _____^ starting here...
kablam! 633 | |         self.as_boolean().is_some()
kablam! 634 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_boolean`
kablam!    --> src/xmlrpc/encoding.rs:638:5
kablam!     |
kablam! 638 |       pub fn as_boolean(&self) -> Option<bool> {
kablam!     |  _____^ starting here...
kablam! 639 | |         match self {
kablam! 640 | |             &Xml::Boolean(b) => Some(b),
kablam! 641 | |             _ => None,
kablam! 642 | |         }
kablam! 643 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_null`
kablam!    --> src/xmlrpc/encoding.rs:646:5
kablam!     |
kablam! 646 |       pub fn is_null(&self) -> bool {
kablam!     |  _____^ starting here...
kablam! 647 | |         self.as_null().is_some()
kablam! 648 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_null`
kablam!    --> src/xmlrpc/encoding.rs:652:5
kablam!     |
kablam! 652 |       pub fn as_null(&self) -> Option<()> {
kablam!     |  _____^ starting here...
kablam! 653 | |         match self {
kablam! 654 | |             &Xml::Null => Some(()),
kablam! 655 | |             _ => None,
kablam! 656 | |         }
kablam! 657 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `StartDocument`
kablam!    --> src/xmlrpc/encoding.rs:682:5
kablam!     |
kablam! 682 |     StartDocument, // <xml>
kablam!     |     ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `EndDocument`
kablam!    --> src/xmlrpc/encoding.rs:683:5
kablam!     |
kablam! 683 |     EndDocument, // </xml>
kablam!     |     ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `MethodResponseStart`
kablam!    --> src/xmlrpc/encoding.rs:684:5
kablam!     |
kablam! 684 |     MethodResponseStart, // <methodResponse>
kablam!     |     ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `MethodResponseEnd`
kablam!    --> src/xmlrpc/encoding.rs:685:5
kablam!     |
kablam! 685 |     MethodResponseEnd, // </methodResponse>
kablam!     |     ^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ParametersListStart`
kablam!    --> src/xmlrpc/encoding.rs:686:5
kablam!     |
kablam! 686 |     ParametersListStart, // <params>
kablam!     |     ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ParametersListEnd`
kablam!    --> src/xmlrpc/encoding.rs:687:5
kablam!     |
kablam! 687 |     ParametersListEnd, // </params>
kablam!     |     ^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ParameterStart`
kablam!    --> src/xmlrpc/encoding.rs:688:5
kablam!     |
kablam! 688 |     ParameterStart, // <param>
kablam!     |     ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ParameterEnd`
kablam!    --> src/xmlrpc/encoding.rs:689:5
kablam!     |
kablam! 689 |     ParameterEnd, // </param>
kablam!     |     ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ObjectStart`
kablam!    --> src/xmlrpc/encoding.rs:690:5
kablam!     |
kablam! 690 |     ObjectStart, // <struct>
kablam!     |     ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ObjectEnd`
kablam!    --> src/xmlrpc/encoding.rs:691:5
kablam!     |
kablam! 691 |     ObjectEnd, // </struct>
kablam!     |     ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `MemberStart`
kablam!    --> src/xmlrpc/encoding.rs:692:5
kablam!     |
kablam! 692 |     MemberStart, // <member>
kablam!     |     ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `MemberEnd`
kablam!    --> src/xmlrpc/encoding.rs:693:5
kablam!     |
kablam! 693 |     MemberEnd, // </member>
kablam!     |     ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `NameStart`
kablam!    --> src/xmlrpc/encoding.rs:694:5
kablam!     |
kablam! 694 |     NameStart, // <name>
kablam!     |     ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `NameValue`
kablam!    --> src/xmlrpc/encoding.rs:695:5
kablam!     |
kablam! 695 |     NameValue(String),
kablam!     |     ^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `NameEnd`
kablam!    --> src/xmlrpc/encoding.rs:696:5
kablam!     |
kablam! 696 |     NameEnd, // </name>
kablam!     |     ^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ValueStart`
kablam!    --> src/xmlrpc/encoding.rs:697:5
kablam!     |
kablam! 697 |     ValueStart, // <value>
kablam!     |     ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ValueEnd`
kablam!    --> src/xmlrpc/encoding.rs:698:5
kablam!     |
kablam! 698 |     ValueEnd, // </value>
kablam!     |     ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ArrayStart`
kablam!    --> src/xmlrpc/encoding.rs:699:5
kablam!     |
kablam! 699 |     ArrayStart, // <array>
kablam!     |     ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ArrayEnd`
kablam!    --> src/xmlrpc/encoding.rs:700:5
kablam!     |
kablam! 700 |     ArrayEnd, // </array>
kablam!     |     ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `DataStart`
kablam!    --> src/xmlrpc/encoding.rs:701:5
kablam!     |
kablam! 701 |     DataStart, // <data>
kablam!     |     ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `DataEnd`
kablam!    --> src/xmlrpc/encoding.rs:702:5
kablam!     |
kablam! 702 |     DataEnd, // </data>
kablam!     |     ^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `BooleanStart`
kablam!    --> src/xmlrpc/encoding.rs:703:5
kablam!     |
kablam! 703 |     BooleanStart, // <boolean>
kablam!     |     ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `BooleanValue`
kablam!    --> src/xmlrpc/encoding.rs:704:5
kablam!     |
kablam! 704 |     BooleanValue(bool),
kablam!     |     ^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `BooleanEnd`
kablam!    --> src/xmlrpc/encoding.rs:705:5
kablam!     |
kablam! 705 |     BooleanEnd, // </boolean>
kablam!     |     ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `I32Start`
kablam!    --> src/xmlrpc/encoding.rs:706:5
kablam!     |
kablam! 706 |     I32Start, // <int> or <i4>
kablam!     |     ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `I32Value`
kablam!    --> src/xmlrpc/encoding.rs:707:5
kablam!     |
kablam! 707 |     I32Value(i32),
kablam!     |     ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `I32End`
kablam!    --> src/xmlrpc/encoding.rs:708:5
kablam!     |
kablam! 708 |     I32End, // </int> or </i4>
kablam!     |     ^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `F64Start`
kablam!    --> src/xmlrpc/encoding.rs:709:5
kablam!     |
kablam! 709 |     F64Start, // <double>
kablam!     |     ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `F64Value`
kablam!    --> src/xmlrpc/encoding.rs:710:5
kablam!     |
kablam! 710 |     F64Value(f64),
kablam!     |     ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `F64End`
kablam!    --> src/xmlrpc/encoding.rs:711:5
kablam!     |
kablam! 711 |     F64End, // </double>
kablam!     |     ^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `StringStart`
kablam!    --> src/xmlrpc/encoding.rs:712:5
kablam!     |
kablam! 712 |     StringStart, // <string>
kablam!     |     ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `StringValue`
kablam!    --> src/xmlrpc/encoding.rs:713:5
kablam!     |
kablam! 713 |     StringValue(String),
kablam!     |     ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `StringEnd`
kablam!    --> src/xmlrpc/encoding.rs:714:5
kablam!     |
kablam! 714 |     StringEnd, // </string>
kablam!     |     ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `NullStart`
kablam!    --> src/xmlrpc/encoding.rs:715:5
kablam!     |
kablam! 715 |     NullStart, // <nil/>
kablam!     |     ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `NullEnd`
kablam!    --> src/xmlrpc/encoding.rs:716:5
kablam!     |
kablam! 716 |     NullEnd, // <nil/>
kablam!     |     ^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Error`
kablam!    --> src/xmlrpc/encoding.rs:719:5
kablam!     |
kablam! 719 |     Error(ParserError), // FIXME: add error types
kablam!     |     ^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `Builder`
kablam!    --> src/xmlrpc/encoding.rs:722:1
kablam!     |
kablam! 722 |   struct Builder<B: BufRead> {
kablam!     |  _^ starting here...
kablam! 723 | |     parser: EventReader<B>,
kablam! 724 | |     token: Option<XmlEvent>,
kablam! 725 | | }
kablam!     | |_^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `syntax_error_for_token`
kablam!    --> src/xmlrpc/encoding.rs:727:1
kablam!     |
kablam! 727 |   fn syntax_error_for_token(token: &Option<XmlEvent>) -> BuilderError {
kablam!     |  _^ starting here...
kablam! 728 | |     match token.as_ref() {
kablam! 729 | |         Some(token) => SyntaxError(InvalidSyntax, format!("Unexpected {:?}", token)),
kablam! 730 | |         None => SyntaxError(InvalidSyntax, "Got None".into()),
kablam! 731 | |     }
kablam! 732 | |
kablam! 733 | | }
kablam!     | |_^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `new`
kablam!    --> src/xmlrpc/encoding.rs:737:5
kablam!     |
kablam! 737 |       pub fn new(src: B) -> Builder<B> {
kablam!     |  _____^ starting here...
kablam! 738 | |         let config = ParserConfig::new().trim_whitespace(true);
kablam! 739 | |         Builder {
kablam! 740 | |             parser: EventReader::with_config(src, config),
kablam! 741 | |             token: None,
kablam! 742 | |         }
kablam! 743 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build`
kablam!    --> src/xmlrpc/encoding.rs:746:5
kablam!     |
kablam! 746 |     pub fn build(&mut self) -> Result<Vec<Xml>, BuilderError> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_response`
kablam!    --> src/xmlrpc/encoding.rs:776:5
kablam!     |
kablam! 776 |     fn build_response(&mut self) -> Result<Vec<Xml>, BuilderError> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_method_response`
kablam!    --> src/xmlrpc/encoding.rs:788:5
kablam!     |
kablam! 788 |     fn build_method_response(&mut self) -> Result<Vec<Xml>, BuilderError> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_params_list`
kablam!    --> src/xmlrpc/encoding.rs:800:5
kablam!     |
kablam! 800 |     fn build_params_list(&mut self) -> Result<Vec<Xml>, BuilderError> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_param`
kablam!    --> src/xmlrpc/encoding.rs:834:5
kablam!     |
kablam! 834 |       fn build_param(&mut self) -> Result<Xml, BuilderError> {
kablam!     |  _____^ starting here...
kablam! 835 | |         self.build_value()
kablam! 836 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `set_self_next_token_state`
kablam!    --> src/xmlrpc/encoding.rs:838:5
kablam!     |
kablam! 838 |     fn set_self_next_token_state(&mut self) {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_value`
kablam!    --> src/xmlrpc/encoding.rs:855:5
kablam!     |
kablam! 855 |     pub fn build_value(&mut self) -> Result<Xml, BuilderError> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_object`
kablam!    --> src/xmlrpc/encoding.rs:899:5
kablam!     |
kablam! 899 |     fn build_object(&mut self) -> Result<Xml, BuilderError> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_array`
kablam!    --> src/xmlrpc/encoding.rs:958:5
kablam!     |
kablam! 958 |     fn build_array(&mut self) -> Result<Xml, BuilderError> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_nil`
kablam!    --> src/xmlrpc/encoding.rs:981:5
kablam!     |
kablam! 981 |       fn build_nil(&mut self) -> Result<Xml, BuilderError> {
kablam!     |  _____^ starting here...
kablam! 982 | |         self.set_self_next_token_state();
kablam! 983 | |         match self.token {
kablam! 984 | |             Some(XmlEvent::NullEnd) => Ok(Xml::Null),
kablam! 985 | |             _ => Err(syntax_error_for_token(&self.token)),
kablam! 986 | |         }
kablam! 987 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_boolean`
kablam!     --> src/xmlrpc/encoding.rs:989:5
kablam!      |
kablam! 989  |     fn build_boolean(&mut self) -> Result<Xml, BuilderError> {
kablam!      |     ^
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_i32`
kablam!     --> src/xmlrpc/encoding.rs:1002:5
kablam!      |
kablam! 1002 |     fn build_i32(&mut self) -> Result<Xml, BuilderError> {
kablam!      |     ^
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_f64`
kablam!     --> src/xmlrpc/encoding.rs:1015:5
kablam!      |
kablam! 1015 |     fn build_f64(&mut self) -> Result<Xml, BuilderError> {
kablam!      |     ^
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `build_string`
kablam!     --> src/xmlrpc/encoding.rs:1028:5
kablam!      |
kablam! 1028 |     fn build_string(&mut self) -> Result<Xml, BuilderError> {
kablam!      |     ^
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `parse_bool_value`
kablam!     --> src/xmlrpc/encoding.rs:1042:5
kablam!      |
kablam! 1042 |       fn parse_bool_value(&self, s: &str) -> Option<XmlEvent> {
kablam!      |  _____^ starting here...
kablam! 1043 | |         match s {
kablam! 1044 | |             "0" => Some(XmlEvent::BooleanValue(false)),
kablam! 1045 | |             "1" => Some(XmlEvent::BooleanValue(true)),
kablam! 1046 | |             _ => None,
kablam! 1047 | |         }
kablam! 1048 | |     }
kablam!      | |_____^ ...ending here
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `parse_i32_value`
kablam!     --> src/xmlrpc/encoding.rs:1050:5
kablam!      |
kablam! 1050 |       fn parse_i32_value(&self, s: &str) -> Option<XmlEvent> {
kablam!      |  _____^ starting here...
kablam! 1051 | |         match s.parse::<i32>() {
kablam! 1052 | |             Ok(n) => Some(XmlEvent::I32Value(n)),
kablam! 1053 | |             Err(_) => None,//Err(ParserError(e))
kablam! 1054 | |         }
kablam! 1055 | |     }
kablam!      | |_____^ ...ending here
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `parse_f64_value`
kablam!     --> src/xmlrpc/encoding.rs:1056:5
kablam!      |
kablam! 1056 |       fn parse_f64_value(&self, s: &str) -> Option<XmlEvent> {
kablam!      |  _____^ starting here...
kablam! 1057 | |         match s.parse::<f64>() {
kablam! 1058 | |             Ok(n) => Some(XmlEvent::F64Value(n)),
kablam! 1059 | |             Err(_) => None,//Err(ParserError(e))
kablam! 1060 | |         }
kablam! 1061 | |     }
kablam!      | |_____^ ...ending here
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `parse_string_value`
kablam!     --> src/xmlrpc/encoding.rs:1062:5
kablam!      |
kablam! 1062 |       fn parse_string_value(&self, s: &str) -> Option<XmlEvent> {
kablam!      |  _____^ starting here...
kablam! 1063 | |         Some(XmlEvent::StringValue(s.to_string()))
kablam! 1064 | |     }
kablam!      | |_____^ ...ending here
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `parse_name_value`
kablam!     --> src/xmlrpc/encoding.rs:1065:5
kablam!      |
kablam! 1065 |       fn parse_name_value(&self, s: &str) -> Option<XmlEvent> {
kablam!      |  _____^ starting here...
kablam! 1066 | |         Some(XmlEvent::NameValue(s.to_string()))
kablam! 1067 | |     }
kablam!      | |_____^ ...ending here
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `parse_tag_start`
kablam!     --> src/xmlrpc/encoding.rs:1068:5
kablam!      |
kablam! 1068 |     fn parse_tag_start(&self, name: &str) -> Option<XmlEvent> {
kablam!      |     ^
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `parse_tag_end`
kablam!     --> src/xmlrpc/encoding.rs:1089:5
kablam!      |
kablam! 1089 |     fn parse_tag_end(&self, name: &str) -> Option<XmlEvent> {
kablam!      |     ^
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `parse_tag_characters`
kablam!     --> src/xmlrpc/encoding.rs:1110:5
kablam!      |
kablam! 1110 |     fn parse_tag_characters(&self, s: &str, token: &Option<XmlEvent>) -> Option<XmlEvent> {
kablam!      |     ^
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `new`
kablam!     --> src/xmlrpc/encoding.rs:1129:5
kablam!      |
kablam! 1129 |       pub fn new(xml: Xml) -> Decoder {
kablam!      |  _____^ starting here...
kablam! 1130 | |         Decoder { stack: vec![xml] }
kablam! 1131 | |     }
kablam!      | |_____^ ...ending here
kablam!      |
kablam!      = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `result`
kablam!   --> src/xmlrpc/protocol.rs:54:5
kablam!    |
kablam! 54 |       pub fn result<T: Decodable>(&self) -> Result<Vec<T>, encoding::DecoderError> {
kablam!    |  _____^ starting here...
kablam! 55 | |         encoding::decode(&self.body)
kablam! 56 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 56.79 secs
boom! running `docker rm -f 6e985b4a43374673168b5ad9ba4b0d2dcb25852f57401205e1b02c1cd5802e50`
blam! 6e985b4a43374673168b5ad9ba4b0d2dcb25852f57401205e1b02c1cd5802e50
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 3ae9ec1c37fdcd79cada8f1e9138fa3e8801554c7a9e292b30a31e5ed4652626
boom! running `docker start -a 3ae9ec1c37fdcd79cada8f1e9138fa3e8801554c7a9e292b30a31e5ed4652626`
kablam!    Compiling generic-dns-update v1.1.5-pre (file:///source)
kablam! warning: unused import: `error::Error`
kablam!    --> src/myip.rs:151:9
kablam!     |
kablam! 151 |     use error::Error;
kablam!     |         ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable `maybeResult` should have a snake case name such as `maybe_result`
kablam!    --> src/myip.rs:170:13
kablam!     |
kablam! 170 |         let maybeResult = provider.get_my_ip_addr();
kablam!     |             ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `maybeResult` should have a snake case name such as `maybe_result`
kablam!    --> src/myip.rs:185:13
kablam!     |
kablam! 185 |         let maybeResult = provider.get_my_ip_addr();
kablam!     |             ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `maybeResult` should have a snake case name such as `maybe_result`
kablam!    --> src/myip.rs:200:13
kablam!     |
kablam! 200 |         let maybeResult = provider.get_my_ip_addr();
kablam!     |             ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variant is never used: `STAGING`
kablam!   --> src/gandi.rs:10:5
kablam!    |
kablam! 10 |     STAGING,
kablam!    |     ^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `std::str::FromStr`
kablam!   --> src/xmlrpc/encoding.rs:21:5
kablam!    |
kablam! 21 | use std::str::FromStr;
kablam!    |     ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variant is never used: `Base64`
kablam!   --> src/xmlrpc/encoding.rs:44:5
kablam!    |
kablam! 44 |     Base64(Vec<u8>), // FIXME: added for xml-rpc, not in JSON
kablam!    |     ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `DateTime`
kablam!   --> src/xmlrpc/encoding.rs:45:5
kablam!    |
kablam! 45 |     DateTime, // FIXME: need to implement
kablam!    |     ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `AsXml`
kablam!   --> src/xmlrpc/encoding.rs:52:1
kablam!    |
kablam! 52 |   pub struct AsXml<'a, T: 'a> {
kablam!    |  _^ starting here...
kablam! 53 | |     inner: &'a T,
kablam! 54 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `EOFWhileParsingObject`
kablam!   --> src/xmlrpc/encoding.rs:60:5
kablam!    |
kablam! 60 |     EOFWhileParsingObject,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `EOFWhileParsingArray`
kablam!   --> src/xmlrpc/encoding.rs:61:5
kablam!    |
kablam! 61 |     EOFWhileParsingArray,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `EOFWhileParsingString`
kablam!   --> src/xmlrpc/encoding.rs:63:5
kablam!    |
kablam! 63 |     EOFWhileParsingString,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `IoError`
kablam!   --> src/xmlrpc/encoding.rs:83:5
kablam!    |
kablam! 83 |     IoError(io::ErrorKind, String),
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `f`
kablam!    --> src/xmlrpc/encoding.rs:283:76
kablam!     |
kablam! 283 |     fn emit_enum_variant<F>(&mut self, name: &str, _id: usize, cnt: usize, f: F) -> EncodeResult
kablam!     |                                                                            ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `idx`
kablam!    --> src/xmlrpc/encoding.rs:353:52
kablam!     |
kablam! 353 |     fn emit_struct_field<F>(&mut self, name: &str, idx: usize, f: F) -> EncodeResult
kablam!     |                                                    ^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `idx`
kablam!    --> src/xmlrpc/encoding.rs:408:35
kablam!     |
kablam! 408 |     fn emit_seq_elt<F>(&mut self, idx: usize, f: F) -> EncodeResult
kablam!     |                                   ^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `f`
kablam!    --> src/xmlrpc/encoding.rs:416:44
kablam!     |
kablam! 416 |     fn emit_map<F>(&mut self, _len: usize, f: F) -> EncodeResult
kablam!     |                                            ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `idx`
kablam!    --> src/xmlrpc/encoding.rs:428:39
kablam!     |
kablam! 428 |     fn emit_map_elt_key<F>(&mut self, idx: usize, f: F) -> EncodeResult { // where
kablam!     |                                       ^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `f`
kablam!    --> src/xmlrpc/encoding.rs:428:51
kablam!     |
kablam! 428 |     fn emit_map_elt_key<F>(&mut self, idx: usize, f: F) -> EncodeResult { // where
kablam!     |                                                   ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `f`
kablam!    --> src/xmlrpc/encoding.rs:447:52
kablam!     |
kablam! 447 |     fn emit_map_elt_val<F>(&mut self, _idx: usize, f: F) -> EncodeResult
kablam!     |                                                    ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: function is never used: `as_xml`
kablam!    --> src/xmlrpc/encoding.rs:474:1
kablam!     |
kablam! 474 |   pub fn as_xml<T: Encodable>(t: &T) -> AsXml<T> {
kablam!     |  _^ starting here...
kablam! 475 | |     AsXml { inner: t }
kablam! 476 | | }
kablam!     | |_^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `from_parser`
kablam!    --> src/xmlrpc/encoding.rs:490:5
kablam!     |
kablam! 490 |       pub fn from_parser<B: BufRead>(p: xml::EventReader<B>) -> Result<Vec<Self>, BuilderError> {
kablam!     |  _____^ starting here...
kablam! 491 | |         let mut builder = Builder {
kablam! 492 | |             parser: p,
kablam! 493 | |             token: None,
kablam! 494 | |         };
kablam! 495 | |         builder.build()
kablam! 496 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `find_path`
kablam!    --> src/xmlrpc/encoding.rs:510:5
kablam!     |
kablam! 510 |     pub fn find_path<'a>(&'a self, keys: &[&str]) -> Option<&'a Xml> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `search`
kablam!    --> src/xmlrpc/encoding.rs:526:5
kablam!     |
kablam! 526 |     pub fn search<'a>(&'a self, key: &str) -> Option<&'a Xml> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_object`
kablam!    --> src/xmlrpc/encoding.rs:547:5
kablam!     |
kablam! 547 |       pub fn is_object<'a>(&'a self) -> bool {
kablam!     |  _____^ starting here...
kablam! 548 | |         self.as_object().is_some()
kablam! 549 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_object`
kablam!    --> src/xmlrpc/encoding.rs:553:5
kablam!     |
kablam! 553 |       pub fn as_object<'a>(&'a self) -> Option<&'a Object> {
kablam!     |  _____^ starting here...
kablam! 554 | |         match self {
kablam! 555 | |             &Xml::Object(ref map) => Some(map),
kablam! 556 | |             _ => None,
kablam! 557 | |         }
kablam! 558 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_array`
kablam!    --> src/xmlrpc/encoding.rs:561:5
kablam!     |
kablam! 561 |       pub fn is_array<'a>(&'a self) -> bool {
kablam!     |  _____^ starting here...
kablam! 562 | |         self.as_array().is_some()
kablam! 563 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_array`
kablam!    --> src/xmlrpc/encoding.rs:567:5
kablam!     |
kablam! 567 |       pub fn as_array<'a>(&'a self) -> Option<&'a Array> {
kablam!     |  _____^ starting here...
kablam! 568 | |         match self {
kablam! 569 | |             &Xml::Array(ref array) => Some(&*array),
kablam! 570 | |             _ => None,
kablam! 571 | |         }
kablam! 572 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_string`
kablam!    --> src/xmlrpc/encoding.rs:575:5
kablam!     |
kablam! 575 |       pub fn is_string<'a>(&'a self) -> bool {
kablam!     |  _____^ starting here...
kablam! 576 | |         self.as_string().is_some()
kablam! 577 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_string`
kablam!    --> src/xmlrpc/encoding.rs:581:5
kablam!     |
kablam! 581 |       pub fn as_string<'a>(&'a self) -> Option<&'a str> {
kablam!     |  _____^ starting here...
kablam! 582 | |         match *self {
kablam! 583 | |             Xml::String(ref s) => Some(&s),
kablam! 584 | |             _ => None,
kablam! 585 | |         }
kablam! 586 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_number`
kablam!    --> src/xmlrpc/encoding.rs:589:5
kablam!     |
kablam! 589 |       pub fn is_number(&self) -> bool {
kablam!     |  _____^ starting here...
kablam! 590 | |         match *self {
kablam! 591 | |             Xml::I32(_) | Xml::F64(_) => true,
kablam! 592 | |             _ => false,
kablam! 593 | |         }
kablam! 594 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_i32`
kablam!    --> src/xmlrpc/encoding.rs:597:5
kablam!     |
kablam! 597 |       pub fn is_i32(&self) -> bool {
kablam!     |  _____^ starting here...
kablam! 598 | |         match *self {
kablam! 599 | |             Xml::I32(_) => true,
kablam! 600 | |             _ => false,
kablam! 601 | |         }
kablam! 602 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_f64`
kablam!    --> src/xmlrpc/encoding.rs:605:5
kablam!     |
kablam! 605 |       pub fn is_f64(&self) -> bool {
kablam!     |  _____^ starting here...
kablam! 606 | |         match *self {
kablam! 607 | |             Xml::F64(_) => true,
kablam! 608 | |             _ => false,
kablam! 609 | |         }
kablam! 610 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_i32`
kablam!    --> src/xmlrpc/encoding.rs:614:5
kablam!     |
kablam! 614 |       pub fn as_i32(&self) -> Option<i32> {
kablam!     |  _____^ starting here...
kablam! 615 | |         match *self {
kablam! 616 | |             Xml::I32(n) => Some(n),
kablam! 617 | |             _ => None,
kablam! 618 | |         }
kablam! 619 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_f64`
kablam!    --> src/xmlrpc/encoding.rs:623:5
kablam!     |
kablam! 623 |       pub fn as_f64(&self) -> Option<f64> {
kablam!     |  _____^ starting here...
kablam! 624 | |         match *self {
kablam! 625 | |             Xml::I32(n) => num::cast(n),
kablam! 626 | |             Xml::F64(n) => Some(n),
kablam! 627 | |             _ => None,
kablam! 628 | |         }
kablam! 629 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_boolean`
kablam!    --> src/xmlrpc/encoding.rs:632:5
kablam!     |
kablam! 632 |       pub fn is_boolean(&self) -> bool {
kablam!     |  _____^ starting here...
kablam! 633 | |         self.as_boolean().is_some()
kablam! 634 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_boolean`
kablam!    --> src/xmlrpc/encoding.rs:638:5
kablam!     |
kablam! 638 |       pub fn as_boolean(&self) -> Option<bool> {
kablam!     |  _____^ starting here...
kablam! 639 | |         match self {
kablam! 640 | |             &Xml::Boolean(b) => Some(b),
kablam! 641 | |             _ => None,
kablam! 642 | |         }
kablam! 643 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `is_null`
kablam!    --> src/xmlrpc/encoding.rs:646:5
kablam!     |
kablam! 646 |       pub fn is_null(&self) -> bool {
kablam!     |  _____^ starting here...
kablam! 647 | |         self.as_null().is_some()
kablam! 648 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `as_null`
kablam!    --> src/xmlrpc/encoding.rs:652:5
kablam!     |
kablam! 652 |       pub fn as_null(&self) -> Option<()> {
kablam!     |  _____^ starting here...
kablam! 653 | |         match self {
kablam! 654 | |             &Xml::Null => Some(()),
kablam! 655 | |             _ => None,
kablam! 656 | |         }
kablam! 657 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Error`
kablam!    --> src/xmlrpc/encoding.rs:719:5
kablam!     |
kablam! 719 |     Error(ParserError), // FIXME: add error types
kablam!     |     ^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 11.37 secs
boom! running `docker rm -f 3ae9ec1c37fdcd79cada8f1e9138fa3e8801554c7a9e292b30a31e5ed4652626`
blam! 3ae9ec1c37fdcd79cada8f1e9138fa3e8801554c7a9e292b30a31e5ed4652626
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! d1a4aab8397788490cb62bac094ccf2d48879763f0693b0ccf3079910b8f745f
boom! running `docker start -a d1a4aab8397788490cb62bac094ccf2d48879763f0693b0ccf3079910b8f745f`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.15 secs
kablam!      Running /target/debug/deps/gdu-6503baa9f1d4d0d4
blam! 
blam! running 5 tests
blam! test xmlrpc::protocol::tests::test_decode ... ok
blam! test xmlrpc::protocol::tests::test_encode ... ok
blam! test myip::tests::ipv4_addr ... ok
blam! test myip::tests::not_an_ip_addr ... ok
blam! test myip::tests::ipv6_addr ... ok
blam! 
blam! test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f d1a4aab8397788490cb62bac094ccf2d48879763f0693b0ccf3079910b8f745f`
blam! d1a4aab8397788490cb62bac094ccf2d48879763f0693b0ccf3079910b8f745f
