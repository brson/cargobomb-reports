boom! testing https://github.com/nikita-b/f-console#ffe1b04a7d66fdadc3bcfcf839d1656362ca2ed2 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! def95d311c15ef73f8a32122aaa28964a672a006f59cdb5e34e1cdf620cbbb66
boom! running `docker start -a def95d311c15ef73f8a32122aaa28964a672a006f59cdb5e34e1cdf620cbbb66`
kablam!    Compiling net2 v0.2.26
kablam!    Compiling nix v0.7.0
kablam!    Compiling mio v0.6.1
kablam!    Compiling f-console v0.1.0 (file:///source)
kablam! warning: unused import: `Read`
kablam!  --> src/main.rs:2:22
kablam!   |
kablam! 2 | use std::io::{Write, Read, BufReader, BufRead};
kablam!   |                      ^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable `PASSWORD` should have a snake case name such as `password`
kablam!  --> src/main.rs:6:9
kablam!   |
kablam! 6 |     let PASSWORD = String::from("12345");
kablam!   |         ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(non_snake_case)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 9.31 secs
boom! running `docker rm -f def95d311c15ef73f8a32122aaa28964a672a006f59cdb5e34e1cdf620cbbb66`
blam! def95d311c15ef73f8a32122aaa28964a672a006f59cdb5e34e1cdf620cbbb66
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 485cd05c7809b3086872d39f1af1fb13280312e383904f635bd442821214c648
boom! running `docker start -a 485cd05c7809b3086872d39f1af1fb13280312e383904f635bd442821214c648`
kablam!    Compiling f-console v0.1.0 (file:///source)
kablam! warning: unused import: `Read`
kablam!  --> src/main.rs:2:22
kablam!   |
kablam! 2 | use std::io::{Write, Read, BufReader, BufRead};
kablam!   |                      ^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable `PASSWORD` should have a snake case name such as `password`
kablam!  --> src/main.rs:6:9
kablam!   |
kablam! 6 |     let PASSWORD = String::from("12345");
kablam!   |         ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(non_snake_case)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.4 secs
boom! running `docker rm -f 485cd05c7809b3086872d39f1af1fb13280312e383904f635bd442821214c648`
blam! 485cd05c7809b3086872d39f1af1fb13280312e383904f635bd442821214c648
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! b664e2fd63a3f20ded452d9b8ef3e72ae1815329802aae2953ccc21700702c4e
boom! running `docker start -a b664e2fd63a3f20ded452d9b8ef3e72ae1815329802aae2953ccc21700702c4e`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/f_console-280176101f4a0fe8
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f b664e2fd63a3f20ded452d9b8ef3e72ae1815329802aae2953ccc21700702c4e`
blam! b664e2fd63a3f20ded452d9b8ef3e72ae1815329802aae2953ccc21700702c4e
