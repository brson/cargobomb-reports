boom! testing https://github.com/NamsooCho/search#cacc451023a1353421f34699c2c955a23a5b723d against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 8fa9bdbb1992e73b4e87490ced864119640d0ae18c784762d7c6f0c132b7f165
boom! running `docker start -a 8fa9bdbb1992e73b4e87490ced864119640d0ae18c784762d7c6f0c132b7f165`
kablam!    Compiling num-complex v0.1.36
kablam!    Compiling num-bigint v0.1.37
kablam!    Compiling num-rational v0.1.36
kablam!    Compiling num v0.1.37
kablam!    Compiling search v0.1.0 (file:///source)
kablam! warning: struct is never used: `DNS`
kablam!   --> src/http_socket_thread.rs:10:1
kablam!    |
kablam! 10 |   struct DNS {
kablam!    |  _^ starting here...
kablam! 11 | |
kablam! 12 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_sock_addr`
kablam!   --> src/http_socket_thread.rs:23:5
kablam!    |
kablam! 23 |     fn get_sock_addr (host: &str, port: &str) {}
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `host`
kablam!   --> src/http_socket_thread.rs:23:23
kablam!    |
kablam! 23 |     fn get_sock_addr (host: &str, port: &str) {}
kablam!    |                       ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `port`
kablam!   --> src/http_socket_thread.rs:23:35
kablam!    |
kablam! 23 |     fn get_sock_addr (host: &str, port: &str) {}
kablam!    |                                   ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/http_socket_thread.rs:28:13
kablam!    |
kablam! 28 |         let mut sock = HttpSocketThread{continue_: true, url_q: SyncQ::new(), output_: "".to_string(), redir_history: BTreeSet::new()};
kablam!    |             ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `ret`
kablam!   --> src/http_socket_thread.rs:67:13
kablam!    |
kablam! 67 |         let ret: bool = false;
kablam!    |             ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/http_socket_thread.rs:75:17
kablam!    |
kablam! 75 |             let mut tcp_s = TcpStream::connect ((ip, url.port_));
kablam!    |                 ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `tcp_s`
kablam!   --> src/http_socket_thread.rs:75:17
kablam!    |
kablam! 75 |             let mut tcp_s = TcpStream::connect ((ip, url.port_));
kablam!    |                 ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `send_data`
kablam!   --> src/http_socket_thread.rs:76:17
kablam!    |
kablam! 76 |             let send_data = self.make_http_header ("a", "b", "c");
kablam!    |                 ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/http_socket_thread.rs:97:21
kablam!    |
kablam! 97 |                 let mut out_file = match File::create(&out_path) {
kablam!    |                     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `out_file`
kablam!   --> src/http_socket_thread.rs:97:21
kablam!    |
kablam! 97 |                 let mut out_file = match File::create(&out_path) {
kablam!    |                     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: method is never used: `insert`
kablam!   --> src/sync_q.rs:24:5
kablam!    |
kablam! 24 |     pub fn insert (&mut self,  base_url: &mut Url, urlList: &Vec<Url>) {
kablam!    |     ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variable `urlList` should have a snake case name such as `url_list`
kablam!   --> src/sync_q.rs:24:52
kablam!    |
kablam! 24 |     pub fn insert (&mut self,  base_url: &mut Url, urlList: &Vec<Url>) {
kablam!    |                                                    ^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused import: `std::ops::BitAnd`
kablam!  --> src/url_parser.rs:2:5
kablam!   |
kablam! 2 | use std::ops::BitAnd;
kablam!   |     ^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: method is never used: `new`
kablam!   --> src/url_parser.rs:31:5
kablam!    |
kablam! 31 |     pub fn new () -> Url {
kablam!    |     ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_scheme`
kablam!   --> src/url_parser.rs:42:5
kablam!    |
kablam! 42 |       pub fn get_scheme (&self) -> String {
kablam!    |  _____^ starting here...
kablam! 43 | |         self.scheme_.clone()
kablam! 44 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_net_loc`
kablam!   --> src/url_parser.rs:46:5
kablam!    |
kablam! 46 |       pub fn get_net_loc (&self) -> String {
kablam!    |  _____^ starting here...
kablam! 47 | |         self.net_loc_.clone()
kablam! 48 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_path`
kablam!   --> src/url_parser.rs:50:5
kablam!    |
kablam! 50 |       pub fn get_path (&self) -> String {
kablam!    |  _____^ starting here...
kablam! 51 | |         self.path_.clone()
kablam! 52 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_param`
kablam!   --> src/url_parser.rs:54:5
kablam!    |
kablam! 54 |       pub fn get_param (&self) -> String {
kablam!    |  _____^ starting here...
kablam! 55 | |         self.param_.clone()
kablam! 56 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_query`
kablam!   --> src/url_parser.rs:58:5
kablam!    |
kablam! 58 |       pub fn get_query (&self) -> String {
kablam!    |  _____^ starting here...
kablam! 59 | |         self.query_.clone()
kablam! 60 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_fragment`
kablam!   --> src/url_parser.rs:62:5
kablam!    |
kablam! 62 |       pub fn get_fragment (&self) -> String {
kablam!    |  _____^ starting here...
kablam! 63 | |         self.frag_.clone()
kablam! 64 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_url`
kablam!   --> src/url_parser.rs:66:5
kablam!    |
kablam! 66 |     pub fn get_url (&self, range_: Range) -> Url {
kablam!    |     ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `swap`
kablam!    --> src/url_parser.rs:138:5
kablam!     |
kablam! 138 |       fn swap<'a> (&'a mut self, other: &'a mut Url) {
kablam!     |  _____^ starting here...
kablam! 139 | |         mem::swap (self, other);
kablam! 140 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_element`
kablam!    --> src/url_parser.rs:142:5
kablam!     |
kablam! 142 |     fn get_element (&self, url: &mut String, element: &mut String, c: char) {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `parse`
kablam!    --> src/url_parser.rs:154:5
kablam!     |
kablam! 154 |     fn parse (&self, url: &mut String, url_composer: &mut Url) -> bool {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_abs_path`
kablam!    --> src/url_parser.rs:211:5
kablam!     |
kablam! 211 |     pub fn get_abs_path (&mut self, cur_url: &Url) -> Url {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/url_parser.rs:216:13
kablam!     |
kablam! 216 |         let mut base_composer = self.clone();
kablam!     |             ^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/url_parser.rs:239:29
kablam!     |
kablam! 239 |                         let mut cur_split: Vec<&str> = cur_path.split('/').collect();
kablam!     |                             ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: method is never used: `filter`
kablam!    --> src/url_parser.rs:261:5
kablam!     |
kablam! 261 |     pub fn filter (&self) -> bool {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `Cookie`
kablam!  --> src/cookie.rs:3:1
kablam!   |
kablam! 3 |   pub struct Cookie {
kablam!   |  _^ starting here...
kablam! 4 | |     value_: String,
kablam! 5 | |     expires_: String,
kablam! 6 | |     path_: String,
kablam! 7 | |     domain_: String,
kablam! 8 | |     secure_: String,
kablam! 9 | | }
kablam!   | |_^ ...ending here
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `search_cookie_value`
kablam!   --> src/cookie.rs:13:5
kablam!    |
kablam! 13 |     fn search_cookie_value (&self, cookie: &String, field: &String) -> String {
kablam!    |     ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: value assigned to `b_pos` is never read
kablam!   --> src/cookie.rs:14:13
kablam!    |
kablam! 14 |         let mut b_pos = 0;
kablam!    |             ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: value assigned to `e_pos` is never read
kablam!   --> src/cookie.rs:15:13
kablam!    |
kablam! 15 |         let mut e_pos = 0;
kablam!    |             ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: method is never used: `parse`
kablam!   --> src/cookie.rs:47:5
kablam!    |
kablam! 47 |     pub fn parse (&self, cookie: &String, url: &Url) {
kablam!    |     ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `CookieContainer`
kablam!  --> src/cookie_container.rs:4:1
kablam!   |
kablam! 4 |   pub struct CookieContainer {
kablam!   |  _^ starting here...
kablam! 5 | |     cookie_container: MultiMap<String,Cookie>,
kablam! 6 | | }
kablam!   | |_^ ...ending here
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `new`
kablam!   --> src/cookie_container.rs:9:5
kablam!    |
kablam! 9  |       pub fn new () -> CookieContainer {
kablam!    |  _____^ starting here...
kablam! 10 | |         let mut s = CookieContainer {cookie_container: MultiMap::new()};
kablam! 11 | |         s
kablam! 12 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/cookie_container.rs:10:13
kablam!    |
kablam! 10 |         let mut s = CookieContainer {cookie_container: MultiMap::new()};
kablam!    |             ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: field is never used: `q_limit`
kablam!   --> src/main.rs:22:5
kablam!    |
kablam! 22 |     q_limit: u32,
kablam!    |     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `seed`
kablam!   --> src/main.rs:23:5
kablam!    |
kablam! 23 |     seed: String,
kablam!    |     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `out_dir`
kablam!   --> src/main.rs:24:5
kablam!    |
kablam! 24 |     out_dir: String,
kablam!    |     ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `timeout`
kablam!   --> src/main.rs:25:5
kablam!    |
kablam! 25 |     timeout: u32,
kablam!    |     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/main.rs:36:9
kablam!    |
kablam! 36 |     let mut i = 0;
kablam!    |         ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `i`
kablam!   --> src/main.rs:36:9
kablam!    |
kablam! 36 |     let mut i = 0;
kablam!    |         ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `i`
kablam!   --> src/main.rs:95:9
kablam!    |
kablam! 95 |     for i in 0..arg.sock_cnt {
kablam!    |         ^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 11.47 secs
boom! running `docker rm -f 8fa9bdbb1992e73b4e87490ced864119640d0ae18c784762d7c6f0c132b7f165`
blam! 8fa9bdbb1992e73b4e87490ced864119640d0ae18c784762d7c6f0c132b7f165
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! eff4e26cf9169b523250c3e9f4614a6a9cb35a3b5aafe4205fd4c9a8c221c574
boom! running `docker start -a eff4e26cf9169b523250c3e9f4614a6a9cb35a3b5aafe4205fd4c9a8c221c574`
kablam!    Compiling search v0.1.0 (file:///source)
kablam! warning: struct is never used: `DNS`
kablam!   --> src/http_socket_thread.rs:10:1
kablam!    |
kablam! 10 |   struct DNS {
kablam!    |  _^ starting here...
kablam! 11 | |
kablam! 12 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_sock_addr`
kablam!   --> src/http_socket_thread.rs:23:5
kablam!    |
kablam! 23 |     fn get_sock_addr (host: &str, port: &str) {}
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `host`
kablam!   --> src/http_socket_thread.rs:23:23
kablam!    |
kablam! 23 |     fn get_sock_addr (host: &str, port: &str) {}
kablam!    |                       ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `port`
kablam!   --> src/http_socket_thread.rs:23:35
kablam!    |
kablam! 23 |     fn get_sock_addr (host: &str, port: &str) {}
kablam!    |                                   ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/http_socket_thread.rs:28:13
kablam!    |
kablam! 28 |         let mut sock = HttpSocketThread{continue_: true, url_q: SyncQ::new(), output_: "".to_string(), redir_history: BTreeSet::new()};
kablam!    |             ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `ret`
kablam!   --> src/http_socket_thread.rs:67:13
kablam!    |
kablam! 67 |         let ret: bool = false;
kablam!    |             ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/http_socket_thread.rs:75:17
kablam!    |
kablam! 75 |             let mut tcp_s = TcpStream::connect ((ip, url.port_));
kablam!    |                 ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `tcp_s`
kablam!   --> src/http_socket_thread.rs:75:17
kablam!    |
kablam! 75 |             let mut tcp_s = TcpStream::connect ((ip, url.port_));
kablam!    |                 ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `send_data`
kablam!   --> src/http_socket_thread.rs:76:17
kablam!    |
kablam! 76 |             let send_data = self.make_http_header ("a", "b", "c");
kablam!    |                 ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/http_socket_thread.rs:97:21
kablam!    |
kablam! 97 |                 let mut out_file = match File::create(&out_path) {
kablam!    |                     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `out_file`
kablam!   --> src/http_socket_thread.rs:97:21
kablam!    |
kablam! 97 |                 let mut out_file = match File::create(&out_path) {
kablam!    |                     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: method is never used: `insert`
kablam!   --> src/sync_q.rs:24:5
kablam!    |
kablam! 24 |     pub fn insert (&mut self,  base_url: &mut Url, urlList: &Vec<Url>) {
kablam!    |     ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variable `urlList` should have a snake case name such as `url_list`
kablam!   --> src/sync_q.rs:24:52
kablam!    |
kablam! 24 |     pub fn insert (&mut self,  base_url: &mut Url, urlList: &Vec<Url>) {
kablam!    |                                                    ^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused import: `std::ops::BitAnd`
kablam!  --> src/url_parser.rs:2:5
kablam!   |
kablam! 2 | use std::ops::BitAnd;
kablam!   |     ^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: method is never used: `new`
kablam!   --> src/url_parser.rs:31:5
kablam!    |
kablam! 31 |     pub fn new () -> Url {
kablam!    |     ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_scheme`
kablam!   --> src/url_parser.rs:42:5
kablam!    |
kablam! 42 |       pub fn get_scheme (&self) -> String {
kablam!    |  _____^ starting here...
kablam! 43 | |         self.scheme_.clone()
kablam! 44 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_net_loc`
kablam!   --> src/url_parser.rs:46:5
kablam!    |
kablam! 46 |       pub fn get_net_loc (&self) -> String {
kablam!    |  _____^ starting here...
kablam! 47 | |         self.net_loc_.clone()
kablam! 48 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_path`
kablam!   --> src/url_parser.rs:50:5
kablam!    |
kablam! 50 |       pub fn get_path (&self) -> String {
kablam!    |  _____^ starting here...
kablam! 51 | |         self.path_.clone()
kablam! 52 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_param`
kablam!   --> src/url_parser.rs:54:5
kablam!    |
kablam! 54 |       pub fn get_param (&self) -> String {
kablam!    |  _____^ starting here...
kablam! 55 | |         self.param_.clone()
kablam! 56 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_query`
kablam!   --> src/url_parser.rs:58:5
kablam!    |
kablam! 58 |       pub fn get_query (&self) -> String {
kablam!    |  _____^ starting here...
kablam! 59 | |         self.query_.clone()
kablam! 60 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_fragment`
kablam!   --> src/url_parser.rs:62:5
kablam!    |
kablam! 62 |       pub fn get_fragment (&self) -> String {
kablam!    |  _____^ starting here...
kablam! 63 | |         self.frag_.clone()
kablam! 64 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_url`
kablam!   --> src/url_parser.rs:66:5
kablam!    |
kablam! 66 |     pub fn get_url (&self, range_: Range) -> Url {
kablam!    |     ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `swap`
kablam!    --> src/url_parser.rs:138:5
kablam!     |
kablam! 138 |       fn swap<'a> (&'a mut self, other: &'a mut Url) {
kablam!     |  _____^ starting here...
kablam! 139 | |         mem::swap (self, other);
kablam! 140 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_element`
kablam!    --> src/url_parser.rs:142:5
kablam!     |
kablam! 142 |     fn get_element (&self, url: &mut String, element: &mut String, c: char) {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `parse`
kablam!    --> src/url_parser.rs:154:5
kablam!     |
kablam! 154 |     fn parse (&self, url: &mut String, url_composer: &mut Url) -> bool {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `get_abs_path`
kablam!    --> src/url_parser.rs:211:5
kablam!     |
kablam! 211 |     pub fn get_abs_path (&mut self, cur_url: &Url) -> Url {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/url_parser.rs:216:13
kablam!     |
kablam! 216 |         let mut base_composer = self.clone();
kablam!     |             ^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/url_parser.rs:239:29
kablam!     |
kablam! 239 |                         let mut cur_split: Vec<&str> = cur_path.split('/').collect();
kablam!     |                             ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: method is never used: `filter`
kablam!    --> src/url_parser.rs:261:5
kablam!     |
kablam! 261 |     pub fn filter (&self) -> bool {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `Cookie`
kablam!  --> src/cookie.rs:3:1
kablam!   |
kablam! 3 |   pub struct Cookie {
kablam!   |  _^ starting here...
kablam! 4 | |     value_: String,
kablam! 5 | |     expires_: String,
kablam! 6 | |     path_: String,
kablam! 7 | |     domain_: String,
kablam! 8 | |     secure_: String,
kablam! 9 | | }
kablam!   | |_^ ...ending here
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `search_cookie_value`
kablam!   --> src/cookie.rs:13:5
kablam!    |
kablam! 13 |     fn search_cookie_value (&self, cookie: &String, field: &String) -> String {
kablam!    |     ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: value assigned to `b_pos` is never read
kablam!   --> src/cookie.rs:14:13
kablam!    |
kablam! 14 |         let mut b_pos = 0;
kablam!    |             ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: value assigned to `e_pos` is never read
kablam!   --> src/cookie.rs:15:13
kablam!    |
kablam! 15 |         let mut e_pos = 0;
kablam!    |             ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: method is never used: `parse`
kablam!   --> src/cookie.rs:47:5
kablam!    |
kablam! 47 |     pub fn parse (&self, cookie: &String, url: &Url) {
kablam!    |     ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `CookieContainer`
kablam!  --> src/cookie_container.rs:4:1
kablam!   |
kablam! 4 |   pub struct CookieContainer {
kablam!   |  _^ starting here...
kablam! 5 | |     cookie_container: MultiMap<String,Cookie>,
kablam! 6 | | }
kablam!   | |_^ ...ending here
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `new`
kablam!   --> src/cookie_container.rs:9:5
kablam!    |
kablam! 9  |       pub fn new () -> CookieContainer {
kablam!    |  _____^ starting here...
kablam! 10 | |         let mut s = CookieContainer {cookie_container: MultiMap::new()};
kablam! 11 | |         s
kablam! 12 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/cookie_container.rs:10:13
kablam!    |
kablam! 10 |         let mut s = CookieContainer {cookie_container: MultiMap::new()};
kablam!    |             ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: field is never used: `q_limit`
kablam!   --> src/main.rs:22:5
kablam!    |
kablam! 22 |     q_limit: u32,
kablam!    |     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `seed`
kablam!   --> src/main.rs:23:5
kablam!    |
kablam! 23 |     seed: String,
kablam!    |     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `out_dir`
kablam!   --> src/main.rs:24:5
kablam!    |
kablam! 24 |     out_dir: String,
kablam!    |     ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `timeout`
kablam!   --> src/main.rs:25:5
kablam!    |
kablam! 25 |     timeout: u32,
kablam!    |     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/main.rs:36:9
kablam!    |
kablam! 36 |     let mut i = 0;
kablam!    |         ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `i`
kablam!   --> src/main.rs:36:9
kablam!    |
kablam! 36 |     let mut i = 0;
kablam!    |         ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `i`
kablam!   --> src/main.rs:95:9
kablam!    |
kablam! 95 |     for i in 0..arg.sock_cnt {
kablam!    |         ^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 7.39 secs
boom! running `docker rm -f eff4e26cf9169b523250c3e9f4614a6a9cb35a3b5aafe4205fd4c9a8c221c574`
blam! eff4e26cf9169b523250c3e9f4614a6a9cb35a3b5aafe4205fd4c9a8c221c574
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! e2247d77be616c7bea391409fd14c128c7c3396f4f219857613abf0e7ed24875
boom! running `docker start -a e2247d77be616c7bea391409fd14c128c7c3396f4f219857613abf0e7ed24875`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/search-c4d098d54cf1f555
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f e2247d77be616c7bea391409fd14c128c7c3396f4f219857613abf0e7ed24875`
blam! e2247d77be616c7bea391409fd14c128c7c3396f4f219857613abf0e7ed24875
