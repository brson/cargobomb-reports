boom! testing https://github.com/SmilingNavern/rconsole#cdd83e2a89e420a52b014b3faa0b3688cc03dc54 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 9f563dac0a63d77378b0272f29c8a006d62627abe48bfc3945d5f80de6ce6361
boom! running `docker start -a 9f563dac0a63d77378b0272f29c8a006d62627abe48bfc3945d5f80de6ce6361`
kablam!    Compiling rconsole v0.1.0 (file:///source)
kablam! warning: unused result which must be used
kablam!   --> src/main.rs:32:9
kablam!    |
kablam! 32 |         sysreq_fh.write(key.as_bytes());
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/main.rs:53:13
kablam!    |
kablam! 53 |             do_sysreq(&mut stream, c.to_lowercase(), sysreq_fh);
kablam!    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.6 secs
boom! running `docker rm -f 9f563dac0a63d77378b0272f29c8a006d62627abe48bfc3945d5f80de6ce6361`
blam! 9f563dac0a63d77378b0272f29c8a006d62627abe48bfc3945d5f80de6ce6361
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! a45f5c014e01dfac0ee696b4f71609c04190f6a3b8ae5e88ca6163542b0041c6
boom! running `docker start -a a45f5c014e01dfac0ee696b4f71609c04190f6a3b8ae5e88ca6163542b0041c6`
kablam!    Compiling rconsole v0.1.0 (file:///source)
kablam! warning: unused result which must be used
kablam!   --> src/main.rs:32:9
kablam!    |
kablam! 32 |         sysreq_fh.write(key.as_bytes());
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/main.rs:53:13
kablam!    |
kablam! 53 |             do_sysreq(&mut stream, c.to_lowercase(), sysreq_fh);
kablam!    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.15 secs
boom! running `docker rm -f a45f5c014e01dfac0ee696b4f71609c04190f6a3b8ae5e88ca6163542b0041c6`
blam! a45f5c014e01dfac0ee696b4f71609c04190f6a3b8ae5e88ca6163542b0041c6
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! d0bad82d101726251ca7665531c0266ca5285c3abd48ce2e5f83465d92fa3803
boom! running `docker start -a d0bad82d101726251ca7665531c0266ca5285c3abd48ce2e5f83465d92fa3803`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/rconsole-f68416aa62f8c5c0
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f d0bad82d101726251ca7665531c0266ca5285c3abd48ce2e5f83465d92fa3803`
blam! d0bad82d101726251ca7665531c0266ca5285c3abd48ce2e5f83465d92fa3803
