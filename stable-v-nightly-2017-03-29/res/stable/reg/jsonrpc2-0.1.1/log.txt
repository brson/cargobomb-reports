boom! testing jsonrpc2-0.1.1 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 9f6273831fe95f7dde1bb9872ab8046d9ef39c787c56ef718d5e2f1b4169c913
boom! running `docker start -a 9f6273831fe95f7dde1bb9872ab8046d9ef39c787c56ef718d5e2f1b4169c913`
kablam!    Compiling jsonrpc2 v0.1.1 (file:///source)
kablam! warning: unused import: `std::str::FromStr`, #[warn(unused_imports)] on by default
kablam!  --> src/lib.rs:6:5
kablam!   |
kablam! 6 | use std::str::FromStr;
kablam!   |     ^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: the `jsonrpc:` in this pattern is redundant and can be removed, #[warn(non_shorthand_field_patterns)] on by default
kablam!   --> src/response.rs:17:17
kablam!    |
kablam! 17 |                 jsonrpc: ref jsonrpc,
kablam!    |                 ^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: the `result:` in this pattern is redundant and can be removed, #[warn(non_shorthand_field_patterns)] on by default
kablam!   --> src/response.rs:18:17
kablam!    |
kablam! 18 |                 result : ref result,
kablam!    |                 ^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: the `id:` in this pattern is redundant and can be removed, #[warn(non_shorthand_field_patterns)] on by default
kablam!   --> src/response.rs:19:17
kablam!    |
kablam! 19 |                 id     : ref id } => {
kablam!    |                 ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: the `jsonrpc:` in this pattern is redundant and can be removed, #[warn(non_shorthand_field_patterns)] on by default
kablam!   --> src/response.rs:27:17
kablam!    |
kablam! 27 |                 jsonrpc: ref jsonrpc,
kablam!    |                 ^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: the `error:` in this pattern is redundant and can be removed, #[warn(non_shorthand_field_patterns)] on by default
kablam!   --> src/response.rs:28:17
kablam!    |
kablam! 28 |                 error  : ref error,
kablam!    |                 ^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: the `id:` in this pattern is redundant and can be removed, #[warn(non_shorthand_field_patterns)] on by default
kablam!   --> src/response.rs:29:17
kablam!    |
kablam! 29 |                 id     : ref id } => {
kablam!    |                 ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `std::str::FromStr`, #[warn(unused_imports)] on by default
kablam!  --> src/client.rs:7:5
kablam!   |
kablam! 7 | use std::str::FromStr;
kablam!   |     ^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused imports: `ParseError`, `Url`, #[warn(unused_imports)] on by default
kablam!  --> src/client.rs:8:17
kablam!   |
kablam! 8 | use self::url::{Url, ParseError};
kablam!   |                 ^^^  ^^^^^^^^^^
kablam! 
kablam! warning: unused imports: `Error`, `Response`, #[warn(unused_imports)] on by default
kablam!   --> src/client.rs:11:17
kablam!    |
kablam! 11 | use ::{Request, Response, Json, ToJson, Error};
kablam!    |                 ^^^^^^^^                ^^^^^
kablam! 
kablam! warning: unused variable: `size`, #[warn(unused_variables)] on by default
kablam!   --> src/client.rs:32:24
kablam!    |
kablam! 32 |                     Ok(size) => match Json::from_str(str::from_utf8(&body).unwrap()) {
kablam!    |                        ^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.36 secs
boom! running `docker rm -f 9f6273831fe95f7dde1bb9872ab8046d9ef39c787c56ef718d5e2f1b4169c913`
blam! 9f6273831fe95f7dde1bb9872ab8046d9ef39c787c56ef718d5e2f1b4169c913
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 47c925e811e34534f58d2888806b7f4fed5289665e94456437b6454df388260c
boom! running `docker start -a 47c925e811e34534f58d2888806b7f4fed5289665e94456437b6454df388260c`
kablam!    Compiling jsonrpc2 v0.1.1 (file:///source)
kablam! warning: unused import: `std::str::FromStr`, #[warn(unused_imports)] on by default
kablam!  --> src/lib.rs:6:5
kablam!   |
kablam! 6 | use std::str::FromStr;
kablam!   |     ^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: the `jsonrpc:` in this pattern is redundant and can be removed, #[warn(non_shorthand_field_patterns)] on by default
kablam!   --> src/response.rs:17:17
kablam!    |
kablam! 17 |                 jsonrpc: ref jsonrpc,
kablam!    |                 ^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: the `result:` in this pattern is redundant and can be removed, #[warn(non_shorthand_field_patterns)] on by default
kablam!   --> src/response.rs:18:17
kablam!    |
kablam! 18 |                 result : ref result,
kablam!    |                 ^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: the `id:` in this pattern is redundant and can be removed, #[warn(non_shorthand_field_patterns)] on by default
kablam!   --> src/response.rs:19:17
kablam!    |
kablam! 19 |                 id     : ref id } => {
kablam!    |                 ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: the `jsonrpc:` in this pattern is redundant and can be removed, #[warn(non_shorthand_field_patterns)] on by default
kablam!   --> src/response.rs:27:17
kablam!    |
kablam! 27 |                 jsonrpc: ref jsonrpc,
kablam!    |                 ^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: the `error:` in this pattern is redundant and can be removed, #[warn(non_shorthand_field_patterns)] on by default
kablam!   --> src/response.rs:28:17
kablam!    |
kablam! 28 |                 error  : ref error,
kablam!    |                 ^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: the `id:` in this pattern is redundant and can be removed, #[warn(non_shorthand_field_patterns)] on by default
kablam!   --> src/response.rs:29:17
kablam!    |
kablam! 29 |                 id     : ref id } => {
kablam!    |                 ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `std::str::FromStr`, #[warn(unused_imports)] on by default
kablam!  --> src/client.rs:7:5
kablam!   |
kablam! 7 | use std::str::FromStr;
kablam!   |     ^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused imports: `ParseError`, `Url`, #[warn(unused_imports)] on by default
kablam!  --> src/client.rs:8:17
kablam!   |
kablam! 8 | use self::url::{Url, ParseError};
kablam!   |                 ^^^  ^^^^^^^^^^
kablam! 
kablam! warning: unused imports: `Error`, `Response`, #[warn(unused_imports)] on by default
kablam!   --> src/client.rs:11:17
kablam!    |
kablam! 11 | use ::{Request, Response, Json, ToJson, Error};
kablam!    |                 ^^^^^^^^                ^^^^^
kablam! 
kablam! warning: unused variable: `size`, #[warn(unused_variables)] on by default
kablam!   --> src/client.rs:32:24
kablam!    |
kablam! 32 |                     Ok(size) => match Json::from_str(str::from_utf8(&body).unwrap()) {
kablam!    |                        ^^^^
kablam! 
kablam! warning: unused imports: `Error`, `Response`, #[warn(unused_imports)] on by default
kablam!   --> src/lib.rs:75:26
kablam!    |
kablam! 75 |     use super::{JsonRpc, Error, Request, Response, Json, ToJson, RpcResult, Client};
kablam!    |                          ^^^^^           ^^^^^^^^
kablam! 
kablam! warning: unused variable: `params`, #[warn(unused_variables)] on by default
kablam!   --> src/lib.rs:79:14
kablam!    |
kablam! 79 |     fn hello(params: &Option<Json>) -> RpcResult {
kablam!    |              ^^^^^^
kablam! 
kablam! warning: function is never used: `test_client`, #[warn(dead_code)] on by default
kablam!    --> src/lib.rs:144:5
kablam!     |
kablam! 144 |     fn test_client(){
kablam!     |     ^
kablam! 
kablam! warning: unused variable: `method`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:146:13
kablam!     |
kablam! 146 |         let method = "ice";
kablam!     |             ^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.11 secs
boom! running `docker rm -f 47c925e811e34534f58d2888806b7f4fed5289665e94456437b6454df388260c`
blam! 47c925e811e34534f58d2888806b7f4fed5289665e94456437b6454df388260c
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! df63fd63523868512ada20a8ca82d136ef758af88747576050d50d1cd0db1967
boom! running `docker start -a df63fd63523868512ada20a8ca82d136ef758af88747576050d50d1cd0db1967`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/jsonrpc2-fe36e9353923b3de
blam! 
blam! running 3 tests
blam! test tests::test_kv ... ok
blam! test tests::test_add ... ok
blam! test tests::test_hello ... ok
blam! 
blam! test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests jsonrpc2
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f df63fd63523868512ada20a8ca82d136ef758af88747576050d50d1cd0db1967`
blam! df63fd63523868512ada20a8ca82d136ef758af88747576050d50d1cd0db1967
