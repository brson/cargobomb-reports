boom! testing fbx_direct-0.6.2 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 56c6a518313b52181b649fd23ff42a3475329dd8dc709a2f9e55b4ba3a21e37c
boom! running `docker start -a 56c6a518313b52181b649fd23ff42a3475329dd8dc709a2f9e55b4ba3a21e37c`
kablam!    Compiling fbx_direct v0.6.2 (file:///source)
kablam! warning: private type `reader::parser::CommonState` in public interface (error E0446), #[warn(private_in_public)] on by default
kablam!   --> src/reader/parser/ascii.rs:22:5
kablam!    |
kablam! 22 |       pub fn next<R: Read>(&mut self, _reader: &mut R, common: &mut CommonState) -> Result<FbxEvent> {
kablam!    |  _____^ starting here...
kablam! 23 | |         Err(Error::new(common.pos, ErrorKind::Unimplemented("Parser for ASCII FBX format is not implemented yet".to_string())))
kablam! 24 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #34537 <https://github.com/rust-lang/rust/issues/34537>
kablam! 
kablam! warning: private type `reader::parser::CommonState` in public interface (error E0446), #[warn(private_in_public)] on by default
kablam!   --> src/reader/parser/binary.rs:27:5
kablam!    |
kablam! 27 |     pub fn next<R: Read>(&mut self, reader: &mut R, common: &mut CommonState) -> Result<FbxEvent> {
kablam!    |     ^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #34537 <https://github.com/rust-lang/rust/issues/34537>
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.13 secs
boom! running `docker rm -f 56c6a518313b52181b649fd23ff42a3475329dd8dc709a2f9e55b4ba3a21e37c`
blam! 56c6a518313b52181b649fd23ff42a3475329dd8dc709a2f9e55b4ba3a21e37c
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! f5757766c79a2412c0b14f47811f8c1ff7a72ff6f81f4747d0c0dcab8dfae114
boom! running `docker start -a f5757766c79a2412c0b14f47811f8c1ff7a72ff6f81f4747d0c0dcab8dfae114`
kablam!    Compiling fbx_direct v0.6.2 (file:///source)
kablam! warning: unused import: `std::io::Write`, #[warn(unused_imports)] on by default
kablam!   --> examples/convert-to-ascii.rs:21:9
kablam!    |
kablam! 21 |     use std::io::Write;
kablam!    |         ^^^^^^^^^^^^^^
kablam! 
kablam! warning: private type `reader::parser::CommonState` in public interface (error E0446), #[warn(private_in_public)] on by default
kablam!   --> src/reader/parser/ascii.rs:22:5
kablam!    |
kablam! 22 |       pub fn next<R: Read>(&mut self, _reader: &mut R, common: &mut CommonState) -> Result<FbxEvent> {
kablam!    |  _____^ starting here...
kablam! 23 | |         Err(Error::new(common.pos, ErrorKind::Unimplemented("Parser for ASCII FBX format is not implemented yet".to_string())))
kablam! 24 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #34537 <https://github.com/rust-lang/rust/issues/34537>
kablam! 
kablam! warning: private type `reader::parser::CommonState` in public interface (error E0446), #[warn(private_in_public)] on by default
kablam!   --> src/reader/parser/binary.rs:27:5
kablam!    |
kablam! 27 |     pub fn next<R: Read>(&mut self, reader: &mut R, common: &mut CommonState) -> Result<FbxEvent> {
kablam!    |     ^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #34537 <https://github.com/rust-lang/rust/issues/34537>
kablam! 
kablam! warning: unused import: `std::io::Write`, #[warn(unused_imports)] on by default
kablam!   --> examples/import-export-binary.rs:20:9
kablam!    |
kablam! 20 |     use std::io::Write;
kablam!    |         ^^^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 7.56 secs
boom! running `docker rm -f f5757766c79a2412c0b14f47811f8c1ff7a72ff6f81f4747d0c0dcab8dfae114`
blam! f5757766c79a2412c0b14f47811f8c1ff7a72ff6f81f4747d0c0dcab8dfae114
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 71a4320afb769750c553335bda7c474ef41b49180558215c3d02b1256aa07614
boom! running `docker start -a 71a4320afb769750c553335bda7c474ef41b49180558215c3d02b1256aa07614`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/binary_export_import-c3271bd3aa1aeecc
blam! 
blam! running 1 test
blam! test binary_export_import ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/fbx_direct-6548cfa1bf2efd7f
blam! 
blam! running 2 tests
blam! test common::property_tests::owned_vec_i32_to_vec_i64 ... ok
blam! test common::property_tests::borrowed_vec_i32_to_vec_i64 ... ok
blam! 
blam! test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests fbx_direct
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 71a4320afb769750c553335bda7c474ef41b49180558215c3d02b1256aa07614`
blam! 71a4320afb769750c553335bda7c474ef41b49180558215c3d02b1256aa07614
