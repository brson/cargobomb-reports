boom! testing vfs-0.2.0 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 1ffbe5cffe60d0538eef7d91603aa9615acc2e23b4e1ca3b8663947dd329e332
boom! running `docker start -a 1ffbe5cffe60d0538eef7d91603aa9615acc2e23b4e1ca3b8663947dd329e332`
kablam!    Compiling vfs v0.2.0 (file:///source)
kablam! warning: variable `openOptions` should have a snake case name such as `open_options`, #[warn(non_snake_case)] on by default
kablam!   --> src/lib.rs:65:33
kablam!    |
kablam! 65 |     fn open_with_options(&self, openOptions: &OpenOptions) -> Result<Box<VFile>>;
kablam!    |                                 ^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.18 secs
boom! running `docker rm -f 1ffbe5cffe60d0538eef7d91603aa9615acc2e23b4e1ca3b8663947dd329e332`
blam! 1ffbe5cffe60d0538eef7d91603aa9615acc2e23b4e1ca3b8663947dd329e332
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 1709811ecad3cc1815e4bef86dcb8c5b0193878be256b354b7dd12b74725d45b
boom! running `docker start -a 1709811ecad3cc1815e4bef86dcb8c5b0193878be256b354b7dd12b74725d45b`
kablam!    Compiling vfs v0.2.0 (file:///source)
kablam! warning: variable `openOptions` should have a snake case name such as `open_options`, #[warn(non_snake_case)] on by default
kablam!   --> src/lib.rs:65:33
kablam!    |
kablam! 65 |     fn open_with_options(&self, openOptions: &OpenOptions) -> Result<Box<VFile>>;
kablam!    |                                 ^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.15 secs
boom! running `docker rm -f 1709811ecad3cc1815e4bef86dcb8c5b0193878be256b354b7dd12b74725d45b`
blam! 1709811ecad3cc1815e4bef86dcb8c5b0193878be256b354b7dd12b74725d45b
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 924f054ce243846fce2a199eaf2b82085ddf844759001628c50d2d57b0523854
boom! running `docker start -a 924f054ce243846fce2a199eaf2b82085ddf844759001628c50d2d57b0523854`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/vfs-289e7f8e95fb8508
blam! 
blam! running 20 tests
blam! test memory::tests::file_name ... ok
blam! test memory::tests::access_directory_as_file ... ok
blam! test memory::tests::append ... ok
blam! test memory::tests::mkdir ... ok
blam! test memory::tests::mkdir_fails_for_file ... ok
blam! test memory::tests::path_buf ... ok
blam! test memory::tests::read_empty_file ... ok
blam! test memory::tests::parent ... ok
blam! test memory::tests::read_dir ... ok
blam! test memory::tests::resolve ... ok
blam! test memory::tests::rm ... ok
blam! test memory::tests::rmdir ... ok
blam! test physical::tests::parent ... ok
blam! test physical::tests::file_name ... ok
blam! test memory::tests::rmrf ... ok
blam! test memory::tests::write_and_read_file ... ok
blam! test physical::tests::read_dir ... ok
blam! test physical::tests::to_path_buf ... ok
blam! test physical::tests::read_file ... ok
blam! test util::tests::mkdir ... ok
blam! 
blam! test result: ok. 20 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests vfs
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 924f054ce243846fce2a199eaf2b82085ddf844759001628c50d2d57b0523854`
blam! 924f054ce243846fce2a199eaf2b82085ddf844759001628c50d2d57b0523854
