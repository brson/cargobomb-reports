boom! testing threadpool-1.3.2 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 6f53349123aa4b51282ec6815623cc431886b6f51e30f80b9c12fde9f26e104f
boom! running `docker start -a 6f53349123aa4b51282ec6815623cc431886b6f51e30f80b9c12fde9f26e104f`
kablam!    Compiling threadpool v1.3.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.1 secs
boom! running `docker rm -f 6f53349123aa4b51282ec6815623cc431886b6f51e30f80b9c12fde9f26e104f`
blam! 6f53349123aa4b51282ec6815623cc431886b6f51e30f80b9c12fde9f26e104f
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 5ac484813471301c028a67fda6c07f48736e24fd28a9483fb526670571594065
boom! running `docker start -a 5ac484813471301c028a67fda6c07f48736e24fd28a9483fb526670571594065`
kablam!    Compiling threadpool v1.3.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.24 secs
boom! running `docker rm -f 5ac484813471301c028a67fda6c07f48736e24fd28a9483fb526670571594065`
blam! 5ac484813471301c028a67fda6c07f48736e24fd28a9483fb526670571594065
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 01506553207e1369d78966b6dc6eee07d910407d361dbc67df1c5e364c01a06e
boom! running `docker start -a 01506553207e1369d78966b6dc6eee07d910407d361dbc67df1c5e364c01a06e`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/threadpool-52a0f999035546c0
blam! 
blam! running 11 tests
kablam! thread 'test' panicked at 'explicit panic', lib.rs:614
kablam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! test test::test_name ... ok
kablam! thread '<unnamed>' panicked at 'explicit panic', lib.rs:477
kablam! thread '<unnamed>' panicked at 'explicit panic', lib.rs:477
kablam! thread '<unnamed>' panicked at 'explicit panic', lib.rs:477
kablam! thread '<unnamed>' panicked at 'explicit panic', lib.rs:477
blam! test test::test_debug ... ok
blam! test test::test_active_count ... ok
blam! test test::test_recovery_from_subtask_panic ... ok
kablam! thread '<unnamed>' panicked at 'Ignore this panic, it should!', lib.rs:506
kablam! thread '<unnamed>' panicked at 'Ignore this panic, it should!', lib.rs:506
kablam! thread 'thread '<unnamed>' panicked at 'Ignore this panic, it should!', lib.rs:506
kablam! <unnamed>' panicked at 'Ignore this panic, it should!', lib.rs:506
blam! test test::test_should_not_panic_on_drop_if_subtasks_panic_after_drop ... ok
blam! test test::test_shrink ... ok
blam! test test::test_works ... ok
blam! test test::test_zero_tasks_panic ... ok
blam! test test::test_set_num_threads_decreasing ... ok
blam! test test::test_set_num_threads_increasing ... ok
blam! test test::test_massive_task_creation ... ok
blam! 
blam! test result: ok. 11 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests threadpool
blam! 
blam! running 5 tests
blam! test _0 ... ok
blam! test ThreadPool::new_with_name_0 ... ok
blam! test ThreadPool::panic_count_0 ... ok
blam! test ThreadPool::active_count_0 ... ok
blam! test _1 ... ok
blam! 
blam! test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 01506553207e1369d78966b6dc6eee07d910407d361dbc67df1c5e364c01a06e`
blam! 01506553207e1369d78966b6dc6eee07d910407d361dbc67df1c5e364c01a06e
