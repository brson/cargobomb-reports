boom! testing quire-0.2.2 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! bbbd21b12d0caf2fc074265e3f6ee34b66f773e9cea45e38fa1669c14abd3a13
boom! running `docker start -a bbbd21b12d0caf2fc074265e3f6ee34b66f773e9cea45e38fa1669c14abd3a13`
kablam!    Compiling humannum v0.1.0
kablam!    Compiling quire v0.2.2 (file:///source)
kablam! warning: missing documentation for a variant
kablam!    --> src/errors.rs:20:9
kablam!     |
kablam! 20  |         OpenError(filename: PathBuf, err: io::Error) {
kablam!     |         ^
kablam!     |
kablam! note: lint level defined here
kablam!    --> src/lib.rs:29:9
kablam!     |
kablam! 29  | #![warn(missing_docs)]
kablam!     |         ^^^^^^^^^^^^
kablam! 
kablam! warning: missing documentation for a variant
kablam!    --> src/errors.rs:23:9
kablam!     |
kablam! 23  |         TokenizerError(pos: ErrorPos, err: tokenizer::Error) {
kablam!     |         ^
kablam! 
kablam! warning: missing documentation for a variant
kablam!    --> src/errors.rs:27:9
kablam!     |
kablam! 27  |         ParseError(pos: ErrorPos, msg: String) {
kablam!     |         ^
kablam! 
kablam! warning: missing documentation for a variant
kablam!    --> src/errors.rs:31:9
kablam!     |
kablam! 31  |         ValidationError(pos: ErrorPos, msg: String) {
kablam!     |         ^
kablam! 
kablam! warning: missing documentation for a variant
kablam!    --> src/errors.rs:35:9
kablam!     |
kablam! 35  |         PreprocessError(pos: ErrorPos, msg: String) {
kablam!     |         ^
kablam! 
kablam! warning: missing documentation for a variant
kablam!    --> src/errors.rs:39:9
kablam!     |
kablam! 39  |         DecodeError(pos: ErrorPos, path: String, msg: String) {
kablam!     |         ^
kablam! 
kablam! warning: missing documentation for a method
kablam!   --> src/errors.rs:51:5
kablam!    |
kablam! 51 |       pub fn parse_error(pos: &Pos, message: String) -> Error {
kablam!    |  _____^ starting here...
kablam! 52 | |         return Error::ParseError(
kablam! 53 | |             ErrorPos((*pos.filename).clone(), pos.line, pos.line_offset),
kablam! 54 | |             message);
kablam! 55 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!   --> src/errors.rs:56:5
kablam!    |
kablam! 56 |       pub fn tokenizer_error((pos, err): (Pos, tokenizer::Error)) -> Error {
kablam!    |  _____^ starting here...
kablam! 57 | |         return Error::TokenizerError(
kablam! 58 | |             ErrorPos((*pos.filename).clone(), pos.line, pos.line_offset),
kablam! 59 | |             err);
kablam! 60 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!   --> src/errors.rs:61:5
kablam!    |
kablam! 61 |       pub fn validation_error(pos: &Pos, message: String) -> Error {
kablam!    |  _____^ starting here...
kablam! 62 | |         return Error::ValidationError(
kablam! 63 | |             ErrorPos((*pos.filename).clone(), pos.line, pos.line_offset),
kablam! 64 | |             message);
kablam! 65 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!   --> src/errors.rs:66:5
kablam!    |
kablam! 66 |       pub fn decode_error(pos: &Pos, path: &String, message: String) -> Error {
kablam!    |  _____^ starting here...
kablam! 67 | |         return Error::DecodeError(
kablam! 68 | |             ErrorPos((*pos.filename).clone(), pos.line, pos.line_offset),
kablam! 69 | |             path.clone(),
kablam! 70 | |             message);
kablam! 71 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!   --> src/errors.rs:72:5
kablam!    |
kablam! 72 |       pub fn preprocess_error(pos: &Pos, message: String) -> Error {
kablam!    |  _____^ starting here...
kablam! 73 | |         return Error::PreprocessError(
kablam! 74 | |             ErrorPos((*pos.filename).clone(), pos.line, pos.line_offset),
kablam! 75 | |             message);
kablam! 76 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!   --> src/errors.rs:86:5
kablam!    |
kablam! 86 |       pub fn add_error(&mut self, err: Error) {
kablam!    |  _____^ starting here...
kablam! 87 | |         self.errors.push(err);
kablam! 88 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!   --> src/errors.rs:89:5
kablam!    |
kablam! 89 |       pub fn errors(&self) -> Iter<Error> {
kablam!    |  _____^ starting here...
kablam! 90 | |         self.errors.iter()
kablam! 91 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a struct field
kablam!   --> src/tokenizer.rs:74:5
kablam!    |
kablam! 74 |     pub filename: Rc<String>,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: missing documentation for a struct field
kablam!   --> src/tokenizer.rs:75:5
kablam!    |
kablam! 75 |     pub indent: usize,
kablam!    |     ^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: missing documentation for a struct field
kablam!   --> src/tokenizer.rs:76:5
kablam!    |
kablam! 76 |     pub line: usize,
kablam!    |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: missing documentation for a struct field
kablam!   --> src/tokenizer.rs:77:5
kablam!    |
kablam! 77 |     pub line_start: bool,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: missing documentation for a struct field
kablam!   --> src/tokenizer.rs:78:5
kablam!    |
kablam! 78 |     pub line_offset: usize,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: missing documentation for a struct field
kablam!   --> src/tokenizer.rs:79:5
kablam!    |
kablam! 79 |     pub offset: usize,
kablam!    |     ^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: missing documentation for a struct field
kablam!   --> src/options.rs:12:12
kablam!    |
kablam! 12 |     File { filename: &'a str },
kablam!    |            ^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/parser.rs:623:9
kablam!     |
kablam! 623 |     let mut tag = maybe_parse_tag(tokiter);
kablam!     |         ^^^^^^^
kablam! 
kablam! warning: variant is never used: `SingleQuoted`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:26:5
kablam!    |
kablam! 26 |     SingleQuoted,
kablam!    |     ^^^^^^^^^^^^
kablam! 
kablam! warning: variant is never used: `DoubleQuoted`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:27:5
kablam!    |
kablam! 27 |     DoubleQuoted,
kablam!    |     ^^^^^^^^^^^^
kablam! 
kablam! warning: variant is never used: `Literal`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:28:5
kablam!    |
kablam! 28 |     Literal,
kablam!    |     ^^^^^^^
kablam! 
kablam! warning: variant is never used: `Folded`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:29:5
kablam!    |
kablam! 29 |     Folded,
kablam!    |     ^^^^^^
kablam! 
kablam! warning: variant is never used: `Tilde`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:35:5
kablam!    |
kablam! 35 |     Tilde,
kablam!    |     ^^^^^
kablam! 
kablam! warning: variant is never used: `MapValue`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:44:5
kablam!    |
kablam! 44 |     MapValue,
kablam!    |     ^^^^^^^^
kablam! 
kablam! warning: variant is never used: `Comment`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:64:5
kablam!    |
kablam! 64 |     Comment(&'a str),
kablam!    |     ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: variant is never used: `Alias`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:65:5
kablam!    |
kablam! 65 |     Alias(&'a str),
kablam!    |     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `tag`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:246:53
kablam!     |
kablam! 246 |             (S::MapSimpleKeyValue, Opcode::SeqStart(tag, anchor)) => {
kablam!     |                                                     ^^^
kablam! 
kablam! warning: unused variable: `anchor`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:246:58
kablam!     |
kablam! 246 |             (S::MapSimpleKeyValue, Opcode::SeqStart(tag, anchor)) => {
kablam!     |                                                          ^^^^^^
kablam! 
kablam! warning: method is never used: `emit_node`, #[warn(dead_code)] on by default
kablam!    --> src/emit.rs:293:5
kablam!     |
kablam! 293 |     pub fn emit_node(&mut self, node: &Node) -> IoResult<()> {
kablam!     |     ^
kablam! 
kablam! warning: method is never used: `to_buffer`, #[warn(dead_code)] on by default
kablam!    --> src/emit.rs:362:5
kablam!     |
kablam! 362 |       fn to_buffer<'x, T: Encodable, W: Write>(
kablam!     |  _____^ starting here...
kablam! 363 | |         val: &T, wr: &'x mut W)
kablam! 364 | |     {
kablam! 365 | |         let mut encoder = Context::new(wr);
kablam! 366 | |         val.encode(&mut encoder).unwrap();
kablam! 367 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: function is never used: `emit_parse_tree`, #[warn(dead_code)] on by default
kablam!    --> src/emit.rs:371:1
kablam!     |
kablam! 371 |   pub fn emit_parse_tree(tree: &Node, stream: &mut Write)
kablam!     |  _^ starting here...
kablam! 372 | |     -> IoResult<()>
kablam! 373 | | {
kablam! 374 | |     let mut ctx = Context::new(stream);
kablam! 375 | |     return ctx.emit_node(tree);
kablam! 376 | | }
kablam!     | |_^ ...ending here
kablam! 
kablam! warning: unused variable: `name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:459:32
kablam!     |
kablam! 459 |     fn emit_enum<F>(&mut self, name: &str, f: F) -> Result<(), IoError> {
kablam!     |                                ^^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:459:44
kablam!     |
kablam! 459 |     fn emit_enum<F>(&mut self, name: &str, f: F) -> Result<(), IoError> {
kablam!     |                                            ^
kablam! 
kablam! warning: unused variable: `v_name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:462:40
kablam!     |
kablam! 462 |     fn emit_enum_variant<F>(&mut self, v_name: &str, v_id: usize, len: usize, f: F)
kablam!     |                                        ^^^^^^
kablam! 
kablam! warning: unused variable: `v_id`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:462:54
kablam!     |
kablam! 462 |     fn emit_enum_variant<F>(&mut self, v_name: &str, v_id: usize, len: usize, f: F)
kablam!     |                                                      ^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:462:67
kablam!     |
kablam! 462 |     fn emit_enum_variant<F>(&mut self, v_name: &str, v_id: usize, len: usize, f: F)
kablam!     |                                                                   ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:462:79
kablam!     |
kablam! 462 |     fn emit_enum_variant<F>(&mut self, v_name: &str, v_id: usize, len: usize, f: F)
kablam!     |                                                                               ^
kablam! 
kablam! warning: unused variable: `a_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:467:44
kablam!     |
kablam! 467 |     fn emit_enum_variant_arg<F>(&mut self, a_idx: usize, f: F)
kablam!     |                                            ^^^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:467:58
kablam!     |
kablam! 467 |     fn emit_enum_variant_arg<F>(&mut self, a_idx: usize, f: F)
kablam!     |                                                          ^
kablam! 
kablam! warning: unused variable: `v_name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:472:47
kablam!     |
kablam! 472 |     fn emit_enum_struct_variant<F>(&mut self, v_name: &str,
kablam!     |                                               ^^^^^^
kablam! 
kablam! warning: unused variable: `v_id`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:473:9
kablam!     |
kablam! 473 |         v_id: usize, len: usize, f: F)
kablam!     |         ^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:473:22
kablam!     |
kablam! 473 |         v_id: usize, len: usize, f: F)
kablam!     |                      ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:473:34
kablam!     |
kablam! 473 |         v_id: usize, len: usize, f: F)
kablam!     |                                  ^
kablam! 
kablam! warning: unused variable: `f_name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:478:53
kablam!     |
kablam! 478 |     fn emit_enum_struct_variant_field<F>(&mut self, f_name: &str, f_idx: usize,
kablam!     |                                                     ^^^^^^
kablam! 
kablam! warning: unused variable: `f_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:478:67
kablam!     |
kablam! 478 |     fn emit_enum_struct_variant_field<F>(&mut self, f_name: &str, f_idx: usize,
kablam!     |                                                                   ^^^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:479:9
kablam!     |
kablam! 479 |         f: F)
kablam!     |         ^
kablam! 
kablam! warning: unused variable: `name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:484:34
kablam!     |
kablam! 484 |     fn emit_struct<F>(&mut self, name: &str, len: usize, f: F)
kablam!     |                                  ^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:484:46
kablam!     |
kablam! 484 |     fn emit_struct<F>(&mut self, name: &str, len: usize, f: F)
kablam!     |                                              ^^^
kablam! 
kablam! warning: unused variable: `f_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:492:54
kablam!     |
kablam! 492 |     fn emit_struct_field<F>(&mut self, f_name: &str, f_idx: usize, f: F)
kablam!     |                                                      ^^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:499:33
kablam!     |
kablam! 499 |     fn emit_tuple<F>(&mut self, len: usize, f: F)
kablam!     |                                 ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:499:45
kablam!     |
kablam! 499 |     fn emit_tuple<F>(&mut self, len: usize, f: F)
kablam!     |                                             ^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:505:37
kablam!     |
kablam! 505 |     fn emit_tuple_arg<F>(&mut self, idx: usize, f: F)
kablam!     |                                     ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:505:49
kablam!     |
kablam! 505 |     fn emit_tuple_arg<F>(&mut self, idx: usize, f: F)
kablam!     |                                                 ^
kablam! 
kablam! warning: unused variable: `name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:511:40
kablam!     |
kablam! 511 |     fn emit_tuple_struct<F>(&mut self, name: &str, len: usize, f: F)
kablam!     |                                        ^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:511:52
kablam!     |
kablam! 511 |     fn emit_tuple_struct<F>(&mut self, name: &str, len: usize, f: F)
kablam!     |                                                    ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:511:64
kablam!     |
kablam! 511 |     fn emit_tuple_struct<F>(&mut self, name: &str, len: usize, f: F)
kablam!     |                                                                ^
kablam! 
kablam! warning: unused variable: `f_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:517:44
kablam!     |
kablam! 517 |     fn emit_tuple_struct_arg<F>(&mut self, f_idx: usize, f: F)
kablam!     |                                            ^^^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:517:58
kablam!     |
kablam! 517 |     fn emit_tuple_struct_arg<F>(&mut self, f_idx: usize, f: F)
kablam!     |                                                          ^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:523:34
kablam!     |
kablam! 523 |     fn emit_option<F>(&mut self, f: F) -> Result<(), IoError>
kablam!     |                                  ^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:531:39
kablam!     |
kablam! 531 |     fn emit_option_some<F>(&mut self, f: F) -> Result<(), IoError>
kablam!     |                                       ^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:536:31
kablam!     |
kablam! 536 |     fn emit_seq<F>(&mut self, len: usize, f: F) -> Result<(), IoError>
kablam!     |                               ^^^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:543:35
kablam!     |
kablam! 543 |     fn emit_seq_elt<F>(&mut self, idx: usize, f: F) -> Result<(), IoError>
kablam!     |                                   ^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:548:31
kablam!     |
kablam! 548 |     fn emit_map<F>(&mut self, len: usize, f: F) -> Result<(), IoError>
kablam!     |                               ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:548:43
kablam!     |
kablam! 548 |     fn emit_map<F>(&mut self, len: usize, f: F) -> Result<(), IoError>
kablam!     |                                           ^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:553:39
kablam!     |
kablam! 553 |     fn emit_map_elt_key<F>(&mut self, idx: usize, f: F) -> Result<(), IoError>
kablam!     |                                       ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:553:51
kablam!     |
kablam! 553 |     fn emit_map_elt_key<F>(&mut self, idx: usize, f: F) -> Result<(), IoError>
kablam!     |                                                   ^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:558:39
kablam!     |
kablam! 558 |     fn emit_map_elt_val<F>(&mut self, idx: usize, f: F) -> Result<(), IoError>
kablam!     |                                       ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:558:51
kablam!     |
kablam! 558 |     fn emit_map_elt_val<F>(&mut self, idx: usize, f: F) -> Result<(), IoError>
kablam!     |                                                   ^
kablam! 
kablam! warning: missing documentation for a variant
kablam!   --> src/ast.rs:29:5
kablam!    |
kablam! 29 |     Quoted,
kablam!    |     ^^^^^^
kablam! 
kablam! warning: missing documentation for a method
kablam!   --> src/ast.rs:56:5
kablam!    |
kablam! 56 |       pub fn is_specific(&self) -> bool {
kablam!    |  _____^ starting here...
kablam! 57 | |         match *self {
kablam! 58 | |             NonSpecific => false,
kablam! 59 | |             _ => true,
kablam! 60 | |         }
kablam! 61 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!   --> src/ast.rs:89:5
kablam!    |
kablam! 89 |       pub fn pos(&self) -> Pos {
kablam!    |  _____^ starting here...
kablam! 90 | |         match *self {
kablam! 91 | |             Map(ref pos, _, _) => pos.clone(),
kablam! 92 | |             Seq(ref pos, _, _) => pos.clone(),
kablam! 93 | |             Scalar(ref pos, _, _, _) => pos.clone(),
kablam! 94 | |             Null(ref pos, _, _) => pos.clone(),
kablam! 95 | |         }
kablam! 96 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/ast.rs:97:5
kablam!     |
kablam! 97  |       pub fn tag<'x>(&'x self) -> &'x Tag {
kablam!     |  _____^ starting here...
kablam! 98  | |         match *self {
kablam! 99  | |             Map(_, ref tag, _) => tag,
kablam! 100 | |             Seq(_, ref tag, _) => tag,
kablam! 101 | |             Scalar(_, ref tag, _, _) => tag,
kablam! 102 | |             Null(_, ref tag, _) => tag,
kablam! 103 | |         }
kablam! 104 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/ast.rs:105:5
kablam!     |
kablam! 105 |       pub fn with_tag(self, tag: Tag) -> Ast {
kablam!     |  _____^ starting here...
kablam! 106 | |         match self {
kablam! 107 | |             Map(pos, _, children) => Map(pos, tag, children),
kablam! 108 | |             Seq(pos,  _, children) => Seq(pos, tag, children),
kablam! 109 | |             Scalar(pos, _, style, value) => Scalar(pos, tag, style, value),
kablam! 110 | |             Null(pos, _, kind) => Null(pos, tag, kind),
kablam! 111 | |         }
kablam! 112 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: field is never used: `directives`, #[warn(dead_code)] on by default
kablam!    --> src/ast.rs:121:5
kablam!     |
kablam! 121 |     directives: Vec<Directive<'a>>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `pos`, #[warn(unused_variables)] on by default
kablam!    --> src/decode.rs:195:28
kablam!     |
kablam! 195 |             Node(A::Scalar(ref pos, _, _, ref val)) | Key(ref pos, ref val) => {
kablam!     |                            ^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/decode.rs:280:59
kablam!     |
kablam! 280 |     fn read_enum_variant_arg<T, F>(&mut self, idx: usize, mut f: F)
kablam!     |                                                           ^^^^^
kablam! 
kablam! warning: unused variable: `names`, #[warn(unused_variables)] on by default
kablam!    --> src/decode.rs:290:50
kablam!     |
kablam! 290 |     fn read_enum_struct_variant<T, F>(&mut self, names: &[&str], f: F)
kablam!     |                                                  ^^^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/decode.rs:290:66
kablam!     |
kablam! 290 |     fn read_enum_struct_variant<T, F>(&mut self, names: &[&str], f: F)
kablam!     |                                                                  ^
kablam! 
kablam! warning: missing documentation for a trait method
kablam!   --> src/validate.rs:26:5
kablam!    |
kablam! 26 |     fn validate(&self, ast: Ast, err: &ErrorCollector) -> Ast;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: missing documentation for a trait method
kablam!   --> src/validate.rs:27:5
kablam!    |
kablam! 27 |     fn default(&self, pos: Pos) -> Option<Ast>;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: field is never used: `descr`, #[warn(dead_code)] on by default
kablam!   --> src/validate.rs:43:5
kablam!    |
kablam! 43 |     descr: Option<String>,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: missing documentation for a method
kablam!   --> src/validate.rs:51:5
kablam!    |
kablam! 51 |       pub fn new() -> Scalar {
kablam!    |  _____^ starting here...
kablam! 52 | |         Scalar {
kablam! 53 | |             descr: None,
kablam! 54 | |             optional: false,
kablam! 55 | |             default: None,
kablam! 56 | |             min_length: None,
kablam! 57 | |             max_length: None,
kablam! 58 | |         }
kablam! 59 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!   --> src/validate.rs:60:5
kablam!    |
kablam! 60 |       pub fn optional(mut self) -> Scalar {
kablam!    |  _____^ starting here...
kablam! 61 | |         self.optional = true;
kablam! 62 | |         self
kablam! 63 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!   --> src/validate.rs:64:5
kablam!    |
kablam! 64 |       pub fn default<S:ToString>(mut self, value: S) -> Scalar {
kablam!    |  _____^ starting here...
kablam! 65 | |         self.default = Some(value.to_string());
kablam! 66 | |         self
kablam! 67 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!   --> src/validate.rs:68:5
kablam!    |
kablam! 68 |       pub fn min_length(mut self, len: usize) -> Scalar {
kablam!    |  _____^ starting here...
kablam! 69 | |         self.min_length = Some(len);
kablam! 70 | |         self
kablam! 71 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!   --> src/validate.rs:72:5
kablam!    |
kablam! 72 |       pub fn max_length(mut self, len: usize) -> Scalar {
kablam!    |  _____^ starting here...
kablam! 73 | |         self.max_length = Some(len);
kablam! 74 | |         self
kablam! 75 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: field is never used: `descr`, #[warn(dead_code)] on by default
kablam!    --> src/validate.rs:121:5
kablam!     |
kablam! 121 |     descr: Option<String>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:129:5
kablam!     |
kablam! 129 |       pub fn new() -> Numeric<T> {
kablam!     |  _____^ starting here...
kablam! 130 | |         Numeric {
kablam! 131 | |             descr: None,
kablam! 132 | |             optional: false,
kablam! 133 | |             default: None,
kablam! 134 | |             min: None,
kablam! 135 | |             max: None,
kablam! 136 | |         }
kablam! 137 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:138:5
kablam!     |
kablam! 138 |       pub fn optional(mut self) -> Numeric<T> {
kablam!     |  _____^ starting here...
kablam! 139 | |         self.optional = true;
kablam! 140 | |         self
kablam! 141 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:142:5
kablam!     |
kablam! 142 |       pub fn default(mut self, value: T) -> Numeric<T> {
kablam!     |  _____^ starting here...
kablam! 143 | |         self.default = Some(value);
kablam! 144 | |         self
kablam! 145 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:146:5
kablam!     |
kablam! 146 |       pub fn min(mut self, val: T) -> Numeric<T> {
kablam!     |  _____^ starting here...
kablam! 147 | |         self.min = Some(val);
kablam! 148 | |         self
kablam! 149 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:150:5
kablam!     |
kablam! 150 |       pub fn max(mut self, val: T) -> Numeric<T> {
kablam!     |  _____^ starting here...
kablam! 151 | |         self.max = Some(val);
kablam! 152 | |         self
kablam! 153 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: field is never used: `descr`, #[warn(dead_code)] on by default
kablam!    --> src/validate.rs:207:5
kablam!     |
kablam! 207 |     descr: Option<String>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:214:5
kablam!     |
kablam! 214 |       pub fn new() -> Directory {
kablam!     |  _____^ starting here...
kablam! 215 | |         Directory {
kablam! 216 | |             descr: None,
kablam! 217 | |             optional: false,
kablam! 218 | |             default: None,
kablam! 219 | |             absolute: None,
kablam! 220 | |         }
kablam! 221 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:222:5
kablam!     |
kablam! 222 |       pub fn optional(mut self) -> Directory {
kablam!     |  _____^ starting here...
kablam! 223 | |         self.optional = true;
kablam! 224 | |         self
kablam! 225 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:226:5
kablam!     |
kablam! 226 |       pub fn default<P:AsRef<Path>>(mut self, value: P) -> Directory {
kablam!     |  _____^ starting here...
kablam! 227 | |         self.default = Some(value.as_ref().to_path_buf());
kablam! 228 | |         self
kablam! 229 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:230:5
kablam!     |
kablam! 230 |       pub fn absolute(mut self, value: bool) -> Directory {
kablam!     |  _____^ starting here...
kablam! 231 | |         self.absolute = Some(value);
kablam! 232 | |         self
kablam! 233 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: field is never used: `descr`, #[warn(dead_code)] on by default
kablam!    --> src/validate.rs:303:5
kablam!     |
kablam! 303 |     descr: Option<String>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:310:5
kablam!     |
kablam! 310 |       pub fn new() -> Structure<'a> {
kablam!     |  _____^ starting here...
kablam! 311 | |         Structure {
kablam! 312 | |             descr: None,
kablam! 313 | |             members: Vec::new(),
kablam! 314 | |             optional: false,
kablam! 315 | |             from_scalar: None,
kablam! 316 | |         }
kablam! 317 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:318:5
kablam!     |
kablam! 318 |       pub fn member<S: Display, V: Validator + 'a>(mut self, name: S, value: V)
kablam!     |  _____^ starting here...
kablam! 319 | |         -> Structure<'a>
kablam! 320 | |     {
kablam! 321 | |         self.members.push((name.to_string(), Box::new(value)));
kablam! 322 | |         self
kablam! 323 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:324:5
kablam!     |
kablam! 324 |       pub fn optional(mut self) -> Structure<'a> {
kablam!     |  _____^ starting here...
kablam! 325 | |         self.optional = true;
kablam! 326 | |         self
kablam! 327 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:328:5
kablam!     |
kablam! 328 |       pub fn parser(mut self,
kablam!     |  _____^ starting here...
kablam! 329 | |         f: fn (scalar: Ast) -> BTreeMap<String, Ast>)
kablam! 330 | |         -> Structure<'a>
kablam! 331 | |     {
kablam! 332 | |         self.from_scalar = Some(f);
kablam! 333 | |         self
kablam! 334 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: field is never used: `descr`, #[warn(dead_code)] on by default
kablam!    --> src/validate.rs:421:5
kablam!     |
kablam! 421 |     descr: Option<String>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:430:5
kablam!     |
kablam! 430 |     pub fn new() -> Enum<'a> {
kablam!     |     ^
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:440:5
kablam!     |
kablam! 440 |       pub fn optional(mut self) -> Enum<'a> {
kablam!     |  _____^ starting here...
kablam! 441 | |         self.optional = true;
kablam! 442 | |         self
kablam! 443 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:460:5
kablam!     |
kablam! 460 |       pub fn option<S: ToString, V: Validator + 'a>(mut self, name: S, value: V)
kablam!     |  _____^ starting here...
kablam! 461 | |         -> Enum<'a>
kablam! 462 | |     {
kablam! 463 | |         self.options.push((name.to_string(), Box::new(value)));
kablam! 464 | |         self
kablam! 465 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:466:5
kablam!     |
kablam! 466 |       pub fn default_tag<S: ToString>(mut self, name: S) -> Enum<'a> {
kablam!     |  _____^ starting here...
kablam! 467 | |         assert!(!self.allow_plain,
kablam! 468 | |             "Default tag and allow_plain are not compatible");
kablam! 469 | |         self.default_tag = Some(name.to_string());
kablam! 470 | |         self
kablam! 471 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: field is never used: `descr`, #[warn(dead_code)] on by default
kablam!    --> src/validate.rs:543:5
kablam!     |
kablam! 543 |     descr: Option<String>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:550:5
kablam!     |
kablam! 550 |     pub fn new<V: Validator + 'a, W: Validator + 'a>(key: V, val: W)
kablam!     |     ^
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:560:5
kablam!     |
kablam! 560 |       pub fn parser(mut self,
kablam!     |  _____^ starting here...
kablam! 561 | |         f: fn (scalar: Ast) -> BTreeMap<String, Ast>)
kablam! 562 | |         -> Mapping<'a>
kablam! 563 | |     {
kablam! 564 | |         self.from_scalar = Some(f);
kablam! 565 | |         self
kablam! 566 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: field is never used: `descr`, #[warn(dead_code)] on by default
kablam!    --> src/validate.rs:611:5
kablam!     |
kablam! 611 |     descr: Option<String>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:618:5
kablam!     |
kablam! 618 |       pub fn new<V: Validator + 'a>(el: V) -> Sequence<'a> {
kablam!     |  _____^ starting here...
kablam! 619 | |         Sequence {
kablam! 620 | |             descr: None,
kablam! 621 | |             element: Box::new(el),
kablam! 622 | |             from_scalar: None,
kablam! 623 | |             min_length: 0,
kablam! 624 | |         }
kablam! 625 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:626:5
kablam!     |
kablam! 626 |       pub fn min_length(mut self, len: usize) -> Sequence<'a> {
kablam!     |  _____^ starting here...
kablam! 627 | |         self.min_length = len;
kablam! 628 | |         self
kablam! 629 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!    --> src/validate.rs:630:5
kablam!     |
kablam! 630 |       pub fn parser(mut self, f: fn (scalar: Ast) -> Vec<Ast>) -> Sequence<'a> {
kablam!     |  _____^ starting here...
kablam! 631 | |         self.from_scalar = Some(f);
kablam! 632 | |         self
kablam! 633 | |     }
kablam!     | |_____^ ...ending here
kablam! 
kablam! warning: missing documentation for a method
kablam!   --> src/special_cases/mod.rs:27:5
kablam!    |
kablam! 27 |       pub fn new(val: T) -> De<T> {
kablam!    |  _____^ starting here...
kablam! 28 | |         De(val)
kablam! 29 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 7.25 secs
boom! running `docker rm -f bbbd21b12d0caf2fc074265e3f6ee34b66f773e9cea45e38fa1669c14abd3a13`
blam! bbbd21b12d0caf2fc074265e3f6ee34b66f773e9cea45e38fa1669c14abd3a13
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 673a23655ec22211563d54d9eb86893430041d6c5a20c31f7109b49a85336770
boom! running `docker start -a 673a23655ec22211563d54d9eb86893430041d6c5a20c31f7109b49a85336770`
kablam!    Compiling quire v0.2.2 (file:///source)
kablam! warning: argument must be of the form: `expected = "error message"`
kablam!    --> src/decode.rs:570:7
kablam!     |
kablam! 570 |     #[should_panic(message="Expected sequence, got string")]
kablam!     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: Errors in this attribute were erroneously allowed and will become a hard error in a future release.
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/parser.rs:623:9
kablam!     |
kablam! 623 |     let mut tag = maybe_parse_tag(tokiter);
kablam!     |         ^^^^^^^
kablam! 
kablam! warning: variant is never used: `SingleQuoted`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:26:5
kablam!    |
kablam! 26 |     SingleQuoted,
kablam!    |     ^^^^^^^^^^^^
kablam! 
kablam! warning: variant is never used: `DoubleQuoted`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:27:5
kablam!    |
kablam! 27 |     DoubleQuoted,
kablam!    |     ^^^^^^^^^^^^
kablam! 
kablam! warning: variant is never used: `Literal`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:28:5
kablam!    |
kablam! 28 |     Literal,
kablam!    |     ^^^^^^^
kablam! 
kablam! warning: variant is never used: `Folded`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:29:5
kablam!    |
kablam! 29 |     Folded,
kablam!    |     ^^^^^^
kablam! 
kablam! warning: variant is never used: `Tilde`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:35:5
kablam!    |
kablam! 35 |     Tilde,
kablam!    |     ^^^^^
kablam! 
kablam! warning: variant is never used: `MapValue`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:44:5
kablam!    |
kablam! 44 |     MapValue,
kablam!    |     ^^^^^^^^
kablam! 
kablam! warning: variant is never used: `Comment`, #[warn(dead_code)] on by default
kablam!   --> src/emit.rs:64:5
kablam!    |
kablam! 64 |     Comment(&'a str),
kablam!    |     ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `tag`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:246:53
kablam!     |
kablam! 246 |             (S::MapSimpleKeyValue, Opcode::SeqStart(tag, anchor)) => {
kablam!     |                                                     ^^^
kablam! 
kablam! warning: unused variable: `anchor`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:246:58
kablam!     |
kablam! 246 |             (S::MapSimpleKeyValue, Opcode::SeqStart(tag, anchor)) => {
kablam!     |                                                          ^^^^^^
kablam! 
kablam! warning: function is never used: `emit_parse_tree`, #[warn(dead_code)] on by default
kablam!    --> src/emit.rs:371:1
kablam!     |
kablam! 371 |   pub fn emit_parse_tree(tree: &Node, stream: &mut Write)
kablam!     |  _^ starting here...
kablam! 372 | |     -> IoResult<()>
kablam! 373 | | {
kablam! 374 | |     let mut ctx = Context::new(stream);
kablam! 375 | |     return ctx.emit_node(tree);
kablam! 376 | | }
kablam!     | |_^ ...ending here
kablam! 
kablam! warning: unused variable: `name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:459:32
kablam!     |
kablam! 459 |     fn emit_enum<F>(&mut self, name: &str, f: F) -> Result<(), IoError> {
kablam!     |                                ^^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:459:44
kablam!     |
kablam! 459 |     fn emit_enum<F>(&mut self, name: &str, f: F) -> Result<(), IoError> {
kablam!     |                                            ^
kablam! 
kablam! warning: unused variable: `v_name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:462:40
kablam!     |
kablam! 462 |     fn emit_enum_variant<F>(&mut self, v_name: &str, v_id: usize, len: usize, f: F)
kablam!     |                                        ^^^^^^
kablam! 
kablam! warning: unused variable: `v_id`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:462:54
kablam!     |
kablam! 462 |     fn emit_enum_variant<F>(&mut self, v_name: &str, v_id: usize, len: usize, f: F)
kablam!     |                                                      ^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:462:67
kablam!     |
kablam! 462 |     fn emit_enum_variant<F>(&mut self, v_name: &str, v_id: usize, len: usize, f: F)
kablam!     |                                                                   ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:462:79
kablam!     |
kablam! 462 |     fn emit_enum_variant<F>(&mut self, v_name: &str, v_id: usize, len: usize, f: F)
kablam!     |                                                                               ^
kablam! 
kablam! warning: unused variable: `a_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:467:44
kablam!     |
kablam! 467 |     fn emit_enum_variant_arg<F>(&mut self, a_idx: usize, f: F)
kablam!     |                                            ^^^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:467:58
kablam!     |
kablam! 467 |     fn emit_enum_variant_arg<F>(&mut self, a_idx: usize, f: F)
kablam!     |                                                          ^
kablam! 
kablam! warning: unused variable: `v_name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:472:47
kablam!     |
kablam! 472 |     fn emit_enum_struct_variant<F>(&mut self, v_name: &str,
kablam!     |                                               ^^^^^^
kablam! 
kablam! warning: unused variable: `v_id`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:473:9
kablam!     |
kablam! 473 |         v_id: usize, len: usize, f: F)
kablam!     |         ^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:473:22
kablam!     |
kablam! 473 |         v_id: usize, len: usize, f: F)
kablam!     |                      ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:473:34
kablam!     |
kablam! 473 |         v_id: usize, len: usize, f: F)
kablam!     |                                  ^
kablam! 
kablam! warning: unused variable: `f_name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:478:53
kablam!     |
kablam! 478 |     fn emit_enum_struct_variant_field<F>(&mut self, f_name: &str, f_idx: usize,
kablam!     |                                                     ^^^^^^
kablam! 
kablam! warning: unused variable: `f_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:478:67
kablam!     |
kablam! 478 |     fn emit_enum_struct_variant_field<F>(&mut self, f_name: &str, f_idx: usize,
kablam!     |                                                                   ^^^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:479:9
kablam!     |
kablam! 479 |         f: F)
kablam!     |         ^
kablam! 
kablam! warning: unused variable: `name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:484:34
kablam!     |
kablam! 484 |     fn emit_struct<F>(&mut self, name: &str, len: usize, f: F)
kablam!     |                                  ^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:484:46
kablam!     |
kablam! 484 |     fn emit_struct<F>(&mut self, name: &str, len: usize, f: F)
kablam!     |                                              ^^^
kablam! 
kablam! warning: unused variable: `f_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:492:54
kablam!     |
kablam! 492 |     fn emit_struct_field<F>(&mut self, f_name: &str, f_idx: usize, f: F)
kablam!     |                                                      ^^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:499:33
kablam!     |
kablam! 499 |     fn emit_tuple<F>(&mut self, len: usize, f: F)
kablam!     |                                 ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:499:45
kablam!     |
kablam! 499 |     fn emit_tuple<F>(&mut self, len: usize, f: F)
kablam!     |                                             ^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:505:37
kablam!     |
kablam! 505 |     fn emit_tuple_arg<F>(&mut self, idx: usize, f: F)
kablam!     |                                     ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:505:49
kablam!     |
kablam! 505 |     fn emit_tuple_arg<F>(&mut self, idx: usize, f: F)
kablam!     |                                                 ^
kablam! 
kablam! warning: unused variable: `name`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:511:40
kablam!     |
kablam! 511 |     fn emit_tuple_struct<F>(&mut self, name: &str, len: usize, f: F)
kablam!     |                                        ^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:511:52
kablam!     |
kablam! 511 |     fn emit_tuple_struct<F>(&mut self, name: &str, len: usize, f: F)
kablam!     |                                                    ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:511:64
kablam!     |
kablam! 511 |     fn emit_tuple_struct<F>(&mut self, name: &str, len: usize, f: F)
kablam!     |                                                                ^
kablam! 
kablam! warning: unused variable: `f_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:517:44
kablam!     |
kablam! 517 |     fn emit_tuple_struct_arg<F>(&mut self, f_idx: usize, f: F)
kablam!     |                                            ^^^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:517:58
kablam!     |
kablam! 517 |     fn emit_tuple_struct_arg<F>(&mut self, f_idx: usize, f: F)
kablam!     |                                                          ^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:523:34
kablam!     |
kablam! 523 |     fn emit_option<F>(&mut self, f: F) -> Result<(), IoError>
kablam!     |                                  ^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:531:39
kablam!     |
kablam! 531 |     fn emit_option_some<F>(&mut self, f: F) -> Result<(), IoError>
kablam!     |                                       ^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:536:31
kablam!     |
kablam! 536 |     fn emit_seq<F>(&mut self, len: usize, f: F) -> Result<(), IoError>
kablam!     |                               ^^^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:543:35
kablam!     |
kablam! 543 |     fn emit_seq_elt<F>(&mut self, idx: usize, f: F) -> Result<(), IoError>
kablam!     |                                   ^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:548:31
kablam!     |
kablam! 548 |     fn emit_map<F>(&mut self, len: usize, f: F) -> Result<(), IoError>
kablam!     |                               ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:548:43
kablam!     |
kablam! 548 |     fn emit_map<F>(&mut self, len: usize, f: F) -> Result<(), IoError>
kablam!     |                                           ^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:553:39
kablam!     |
kablam! 553 |     fn emit_map_elt_key<F>(&mut self, idx: usize, f: F) -> Result<(), IoError>
kablam!     |                                       ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:553:51
kablam!     |
kablam! 553 |     fn emit_map_elt_key<F>(&mut self, idx: usize, f: F) -> Result<(), IoError>
kablam!     |                                                   ^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:558:39
kablam!     |
kablam! 558 |     fn emit_map_elt_val<F>(&mut self, idx: usize, f: F) -> Result<(), IoError>
kablam!     |                                       ^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/emit.rs:558:51
kablam!     |
kablam! 558 |     fn emit_map_elt_val<F>(&mut self, idx: usize, f: F) -> Result<(), IoError>
kablam!     |                                                   ^
kablam! 
kablam! warning: field is never used: `directives`, #[warn(dead_code)] on by default
kablam!    --> src/ast.rs:121:5
kablam!     |
kablam! 121 |     directives: Vec<Directive<'a>>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `pos`, #[warn(unused_variables)] on by default
kablam!    --> src/decode.rs:195:28
kablam!     |
kablam! 195 |             Node(A::Scalar(ref pos, _, _, ref val)) | Key(ref pos, ref val) => {
kablam!     |                            ^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/decode.rs:280:59
kablam!     |
kablam! 280 |     fn read_enum_variant_arg<T, F>(&mut self, idx: usize, mut f: F)
kablam!     |                                                           ^^^^^
kablam! 
kablam! warning: unused variable: `names`, #[warn(unused_variables)] on by default
kablam!    --> src/decode.rs:290:50
kablam!     |
kablam! 290 |     fn read_enum_struct_variant<T, F>(&mut self, names: &[&str], f: F)
kablam!     |                                                  ^^^^^
kablam! 
kablam! warning: unused variable: `f`, #[warn(unused_variables)] on by default
kablam!    --> src/decode.rs:290:66
kablam!     |
kablam! 290 |     fn read_enum_struct_variant<T, F>(&mut self, names: &[&str], f: F)
kablam!     |                                                                  ^
kablam! 
kablam! warning: unused import: `std::rc::Rc`, #[warn(unused_imports)] on by default
kablam!    --> src/decode.rs:541:9
kablam!     |
kablam! 541 |     use std::rc::Rc;
kablam!     |         ^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `rustc_serialize::Decodable`, #[warn(unused_imports)] on by default
kablam!    --> src/decode.rs:544:9
kablam!     |
kablam! 544 |     use rustc_serialize::Decodable;
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: field is never used: `descr`, #[warn(dead_code)] on by default
kablam!   --> src/validate.rs:43:5
kablam!    |
kablam! 43 |     descr: Option<String>,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: field is never used: `descr`, #[warn(dead_code)] on by default
kablam!    --> src/validate.rs:121:5
kablam!     |
kablam! 121 |     descr: Option<String>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: field is never used: `descr`, #[warn(dead_code)] on by default
kablam!    --> src/validate.rs:207:5
kablam!     |
kablam! 207 |     descr: Option<String>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: field is never used: `descr`, #[warn(dead_code)] on by default
kablam!    --> src/validate.rs:303:5
kablam!     |
kablam! 303 |     descr: Option<String>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: field is never used: `descr`, #[warn(dead_code)] on by default
kablam!    --> src/validate.rs:421:5
kablam!     |
kablam! 421 |     descr: Option<String>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: field is never used: `descr`, #[warn(dead_code)] on by default
kablam!    --> src/validate.rs:543:5
kablam!     |
kablam! 543 |     descr: Option<String>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: field is never used: `descr`, #[warn(dead_code)] on by default
kablam!    --> src/validate.rs:611:5
kablam!     |
kablam! 611 |     descr: Option<String>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `style`, #[warn(unused_variables)] on by default
kablam!     --> src/validate.rs:1000:35
kablam!      |
kablam! 1000 |                 A::Scalar(pos, _, style, value) => {
kablam!      |                                   ^^^^^
kablam! 
kablam! warning: unused variable: `style`, #[warn(unused_variables)] on by default
kablam!     --> src/validate.rs:1022:35
kablam!      |
kablam! 1022 |                 A::Scalar(pos, _, style, value) => {
kablam!      |                                   ^^^^^
kablam! 
kablam! warning: unused import: `std::path::PathBuf`, #[warn(unused_imports)] on by default
kablam!  --> src/test_util.rs:2:5
kablam!   |
kablam! 2 | use std::path::PathBuf;
kablam!   |     ^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `std::collections::BTreeMap`, #[warn(unused_imports)] on by default
kablam!  --> src/test_util.rs:3:5
kablam!   |
kablam! 3 | use std::collections::BTreeMap;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 13.72 secs
boom! running `docker rm -f 673a23655ec22211563d54d9eb86893430041d6c5a20c31f7109b49a85336770`
blam! 673a23655ec22211563d54d9eb86893430041d6c5a20c31f7109b49a85336770
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! abea3c3f8ca4dd3ced8f96af373333367e7f023a5e1ef7328044310135dfbf75
boom! running `docker start -a abea3c3f8ca4dd3ced8f96af373333367e7f023a5e1ef7328044310135dfbf75`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/quire-f74d97abd26d7647
blam! 
blam! running 237 tests
blam! test chars::test_printable ... ok
blam! test decode::test::decode_list ... ok
blam! test decode::test::decode_option_no_key ... ok
blam! test decode::test::decode_map ... ok
blam! test decode::test::decode_list_error ... ok
blam! test decode::test::decode_option_none ... ok
blam! test decode::test::decode_option_some ... ok
blam! test decode::test::decode_path ... ok
blam! test decode::test::test_enum_1 ... ok
blam! test decode::test::decode_path_map ... ok
blam! test decode::test::decode_struct ... ok
blam! test decode::test::test_enum_3 ... ok
blam! test decode::test::test_enum_2 ... ok
blam! test decode::test::test_enum_5 ... ok
blam! test decode::test::test_enum_4 ... ok
blam! test decode::test::test_enum_2_e ... ok
blam! test decode::test::test_enum_seq ... ok
blam! test decode::test::test_enum_seq_flow ... ok
blam! test decode::test::test_enum_map ... ok
blam! test emit::test::encode_int ... ok
blam! test emit::test::encode_seq ... ok
blam! test decode::test::test_enum_map_flow ... ok
blam! test decode::test::test_struct_items_tag ... ok
blam! test emit::test::encode_struct ... ok
blam! test emit::test::test_empty ... ok
blam! test emit::test::test_map ... ok
blam! test emit::test::test_plain ... ok
blam! test emit::test::test_map_null ... ok
blam! test emit::test::yaml_list ... ok
blam! test emit::test::yaml_list_map ... ok
blam! test emit::test::yaml_map_list ... ok
blam! test emit::test::yaml_list_tag ... ok
blam! test emit::test::yaml_scalar ... ok
blam! test emit::test::yaml_map ... ok
blam! test emit::test::yaml_tag_list ... ok
blam! test emit::test::yaml_map_map ... ok
blam! test emit::test::yaml_null_in_map ... ok
blam! test emit::test::yaml_tag_map ... ok
blam! test emit::test::yaml_tag_map2 ... ok
blam! test emit::test::yaml_tag_map3 ... ok
blam! test emit::test::yaml_tag_null ... ok
blam! test emit::test::yaml_tag_map_map ... ok
blam! test emit::test::yaml_tag_null_in_map ... ok
blam! test emit::test::yaml_tag_null_in_map_unindent ... ok
blam! test emit::test::yaml_tag_scalar ... ok
blam! test emit::test::yaml_tag_null_in_map_nessted ... ok
blam! test json::test::map_map ... ok
blam! test json::test::test_alias ... ok
blam! test json::test::test_doc_both ... ok
blam! test json::test::indented_map ... ok
blam! test json::test::test_doc_end_list ... ok
blam! test json::test::test_combined ... ok
blam! test json::test::test_doc_end_trailing ... ok
blam! test json::test::test_doc_end_map_early ... ok
blam! test json::test::test_doc_end_map ... ok
blam! test json::test::test_doc_start ... ok
blam! test json::test::test_doc_end_trailing2 ... ok
blam! test json::test::test_flow_list_1 ... ok
blam! test json::test::test_flow_list_2 ... ok
blam! test json::test::test_flow_list_4 ... ok
blam! test json::test::test_flow_list_3 ... ok
blam! test json::test::test_flow_map_2 ... ok
blam! test json::test::test_flow_map_1 ... ok
blam! test json::test::test_flow_map_3 ... ok
blam! test json::test::test_flow_map_4 ... ok
blam! test json::test::test_flow_map_quotes_no_space ... ok
blam! test json::test::test_flow_map_5 ... ok
blam! test json::test::test_incl_one ... ok
blam! test json::test::test_flow_list_5 ... ok
blam! test json::test::test_literal ... ok
blam! test json::test::test_literal_with_whitespace ... ok
blam! test json::test::test_map_and_scalar ... ok
blam! test json::test::test_incl_merge ... ok
blam! test json::test::test_merge1 ... ok
blam! test json::test::test_incl_unpack ... ok
blam! test json::test::test_multiple_merge ... ok
blam! test json::test::test_multiple_alias_merge ... ok
blam! test json::test::test_nl2_plain ... ok
blam! test json::test::test_nl2_quoted ... ok
blam! test json::test::test_nl_dquoted ... ok
blam! test json::test::test_nl2_dquoted ... ok
blam! test json::test::test_nl_quoted ... ok
blam! test json::test::test_nl_slash_dquoted ... ok
blam! test json::test::test_nl_slash_middle_dquoted ... ok
blam! test json::test::test_nl_plain ... ok
blam! test json::test::test_no_merge1 ... ok
blam! test json::test::test_slash_dquoted ... ok
blam! test json::test::test_slash_middle_dquoted ... ok
blam! test json::test::test_slash_dquoted_nospace ... ok
blam! test json::test::test_to_json_1 ... ok
blam! test json::test::test_to_json_1level ... ok
blam! test json::test::test_to_json_list_1 ... ok
blam! test json::test::test_to_json_list_2 ... ok
blam! test json::test::test_to_json_list_3 ... ok
blam! test json::test::test_to_json_list_4 ... ok
blam! test json::test::test_to_json_list_5 ... ok
blam! test json::test::test_to_json_list_6 ... ok
blam! test json::test::test_to_json_list_7 ... ok
blam! test json::test::test_to_json_list_map2 ... ok
blam! test json::test::test_to_json_list_map ... ok
blam! test json::test::test_to_json_list_8 ... ok
blam! test json::test::test_to_json_list_map3 ... ok
blam! test json::test::test_to_json_map1 ... ok
blam! test json::test::test_to_json_map4 ... ok
blam! test json::test::test_to_json_map2 ... ok
blam! test json::test::test_to_json_map5 ... ok
blam! test json::test::test_to_json_map_list_1 ... ok
blam! test json::test::test_to_json_map3 ... ok
blam! test json::test::test_to_json_nested ... ok
blam! test json::test::test_to_json_map_list_2 ... ok
blam! test json::test::test_to_json_str ... ok
blam! test json::test::test_to_json_str_1_dq ... ok
blam! test json::test::test_to_json_nested_2 ... ok
blam! test json::test::test_to_json_str_apos ... ok
blam! test json::test::test_to_json_str_quoted ... ok
blam! test json::test::test_unpack ... ok
blam! test json::test::test_to_json_two_keys ... ok
blam! test json::test::test_to_json_str_1_sq ... ok
blam! test json::test::wrong_escape_correct ... ok
blam! test json::test::wrong_escape_raw_correct ... ok
blam! test json::test::wrong_escape_incrorrect ... ok
blam! test json::test::test_to_json_two_nested ... ok
blam! test json::test::yaml_literal_in_list ... ok
blam! test json::test::yaml_literal_with_empty_line_in_a_list ... ok
blam! test json::test::wrong_escape_raw_incorrect ... ok
blam! test special_cases::duration::test::decode_15min ... ok
blam! test json::test::yaml_tag_null_in_map ... ok
blam! test json::test::yaml_words_with_space ... ok
blam! test json::test::yaml_words_in_list ... ok
blam! test test_errors::test_non_working_includes ... ok
blam! test test_errors::test_path ... ok
blam! test test_errors::test_unknown_alias ... ok
blam! test test_errors::test_unknown_alias_flow ... ok
blam! test tokenizer::test_bad_char_ctl ... ok
blam! test tokenizer::test_alias ... ok
blam! test tokenizer::test_bad_char_tab ... ok
blam! test tokenizer::test_anchor ... ok
blam! test tokenizer::test_bad_char_tab3 ... ok
blam! test tokenizer::test_bad_char_tab4 ... ok
blam! test tokenizer::test_bad_char_tab2 ... ok
blam! test tokenizer::test_block ... ok
blam! test special_cases::regex::test::decode_simple_regex ... ok
blam! test tokenizer::test_comment ... ok
blam! test tokenizer::test_block_in_list ... ok
blam! test tokenizer::test_block_flow ... ok
blam! test tokenizer::test_double_quoted ... ok
blam! test tokenizer::test_directive ... ok
blam! test tokenizer::test_flow_list ... ok
blam! test tokenizer::test_doc_end ... ok
blam! test tokenizer::test_flow_map_json ... ok
blam! test tokenizer::test_flow_map_map ... ok
blam! test tokenizer::test_list ... ok
blam! test tokenizer::test_list_map ... ok
blam! test tokenizer::test_list_tag ... ok
blam! test tokenizer::test_map_key ... ok
blam! test tokenizer::test_map_map ... ok
blam! test tokenizer::test_map_tag_null ... ok
blam! test tokenizer::test_map_value ... ok
blam! test tokenizer::test_nested ... ok
blam! test tokenizer::test_plain1 ... ok
blam! test tokenizer::test_plain2 ... ok
blam! test tokenizer::test_plain4 ... ok
blam! test tokenizer::test_plain3 ... ok
blam! test tokenizer::test_plain5 ... ok
blam! test tokenizer::test_plain6 ... ok
blam! test tokenizer::test_plain_scalar_braces ... ok
blam! test tokenizer::test_plain7 ... ok
blam! test tokenizer::test_plain_words ... ok
blam! test tokenizer::test_reserved ... ok
blam! test tokenizer::test_plain8 ... ok
blam! test tokenizer::test_tag ... ok
blam! test tokenizer::test_single_quoted ... ok
blam! test tokenizer::test_tag_map_flow ... ok
blam! test tokenizer::test_tokenize_map ... ok
blam! test tokenizer::test_tokenize_map_two_nulls ... ok
blam! test tokenizer::test_words_in_list ... ok
blam! test tokenizer::test_tag_map ... ok
blam! test validate::test::test_additional_keys ... ok
blam! test validate::test::test_cmap_1 ... ok
blam! test validate::test::test_all_fields ... ok
blam! test validate::test::test_enum_1 ... ok
blam! test validate::test::test_dash_str ... ok
blam! test validate::test::test_cmap_3 ... ok
blam! test validate::test::test_cmap_2 ... ok
blam! test validate::test::test_enum_2 ... ok
blam! test validate::test::test_enum_3 ... ok
blam! test validate::test::test_enum_4 ... ok
blam! test validate::test::test_enum_5 ... ok
blam! test validate::test::test_enum_def_default ... ok
blam! test validate::test::test_enum_7 ... ok
blam! test validate::test::test_enum_6 ... ok
blam! test validate::test::test_enum_def_norm ... ok
blam! test validate::test::test_enum_def_tag ... ok
blam! test validate::test::test_enum_list_null ... ok
blam! test validate::test::test_enum_def_same_as_def ... ok
blam! test validate::test::test_enum_opt_struct_2 ... ok
blam! test validate::test::test_enum_opt_struct_3 ... ok
blam! test validate::test::test_enum_val_none ... ok
blam! test validate::test::test_enum_str ... ok
blam! test validate::test::test_enum_opt_struct ... ok
blam! test validate::test::test_map_1 ... ok
blam! test validate::test::test_hash_map ... ok
blam! test validate::test::test_map_empty ... ok
blam! test validate::test::test_enum_val_some ... ok
blam! test validate::test::test_map_null ... ok
blam! test validate::test::test_map_2 ... ok
blam! test validate::test::test_numeric ... ok
blam! test validate::test::test_no_fields ... ok
blam! test validate::test::test_only_int ... ok
blam! test validate::test::test_only_str ... ok
blam! test validate::test::test_map_with_parser ... ok
blam! test validate::test::test_opt_none ... ok
blam! test validate::test::test_opt_no_key ... ok
blam! test validate::test::test_opt_val ... ok
blam! test validate::test::test_path_abs ... ok
blam! test validate::test::test_path_abs_abs ... ok
blam! test validate::test::test_path_down ... ok
blam! test validate::test::test_path_abs_rel ... ok
blam! test validate::test::test_path_down_abs ... ok
blam! test validate::test::test_path_down_rel ... ok
blam! test validate::test::test_path_rel ... ok
blam! test validate::test::test_path_rel_abs ... ok
blam! test validate::test::test_path_rel_rel ... ok
blam! test validate::test::test_path_null ... ok
blam! test validate::test::test_seq_empty ... ok
blam! test validate::test::test_seq_1 ... ok
blam! test validate::test::test_seq_2 ... ok
blam! test validate::test::test_seq_min_length_err ... ok
blam! test validate::test::test_seq_min_length ... ok
blam! test validate::test::test_seq_min_length_zero ... ok
blam! test validate::test::test_seq_null ... ok
blam! test validate::test::test_seq_parser ... ok
blam! test validate::test::test_struct_with_parser ... ok
blam! test validate::test::test_struct_with_parser_custom ... ok
blam! test validate::test::test_underscore_str ... ok
blam! test validate::test::test_underscore_keys ... ok
blam! test validate::test::test_unit ... ok
blam! 
blam! test result: ok. 237 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests quire
blam! 
blam! running 1 test
blam! test _0 ... ignored
blam! 
blam! test result: ok. 0 passed; 0 failed; 1 ignored; 0 measured
blam! 
boom! running `docker rm -f abea3c3f8ca4dd3ced8f96af373333367e7f023a5e1ef7328044310135dfbf75`
blam! abea3c3f8ca4dd3ced8f96af373333367e7f023a5e1ef7328044310135dfbf75
