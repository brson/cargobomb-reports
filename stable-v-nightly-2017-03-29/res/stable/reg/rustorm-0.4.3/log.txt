boom! testing rustorm-0.4.3 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 1c7cf258210a362bed795489b9b8a25435e60baf96e40b2ecf9804ad5c63d16f
boom! running `docker start -a 1c7cf258210a362bed795489b9b8a25435e60baf96e40b2ecf9804ad5c63d16f`
kablam!    Compiling serde v0.6.15
kablam!    Compiling serde_json v0.6.1
kablam!    Compiling rustorm v0.4.3 (file:///source)
kablam! warning: unused import: `Operand`, #[warn(unused_imports)] on by default
kablam!  --> src/em.rs:1:21
kablam!   |
kablam! 1 | use query::{Filter, Operand};
kablam!   |                     ^^^^^^^
kablam! 
kablam! warning: unused imports: `Decodable`, `Decoder`, #[warn(unused_imports)] on by default
kablam!   --> src/dao.rs:11:43
kablam!    |
kablam! 11 | use rustc_serialize::{Encodable, Encoder, Decodable, Decoder};
kablam!    |                                           ^^^^^^^^^  ^^^^^^^
kablam! 
kablam! warning: unused import: `self`, #[warn(unused_imports)] on by default
kablam!   --> src/dao.rs:12:29
kablam!    |
kablam! 12 | use rustc_serialize::json::{self, ToJson, Json};
kablam!    |                             ^^^^
kablam! 
kablam! warning: unused import: `rustc_serialize::DecoderHelpers`, #[warn(unused_imports)] on by default
kablam!   --> src/dao.rs:13:5
kablam!    |
kablam! 13 | use rustc_serialize::DecoderHelpers;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `rustc_serialize::json::Json`, #[warn(unused_imports)] on by default
kablam!   --> src/platform/postgres.rs:16:5
kablam!    |
kablam! 16 | use rustc_serialize::json::Json;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `postgres::types::IsNull`, #[warn(unused_imports)] on by default
kablam!   --> src/platform/postgres.rs:18:5
kablam!    |
kablam! 18 | use postgres::types::IsNull;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: static variable `none` should have an upper case name such as `NONE`, #[warn(non_upper_case_globals)] on by default
kablam!   --> src/platform/postgres.rs:91:9
kablam!    |
kablam! 91 | 								static none: &'static Option<String> = &None;
kablam!    | 								^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: static variable `none` should have an upper case name such as `NONE`, #[warn(non_upper_case_globals)] on by default
kablam!   --> src/platform/postgres.rs:95:9
kablam!    |
kablam! 95 | 								static none: &'static Option<Uuid> = &None;
kablam!    | 								^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `schema`, #[warn(unused_variables)] on by default
kablam!    --> src/platform/mysql.rs:371:33
kablam!     |
kablam! 371 |     fn get_table_comment(&self, schema: &str, table: &str) -> Option<String> {
kablam!     |                                 ^^^^^^
kablam! 
kablam! warning: unused variable: `table`, #[warn(unused_variables)] on by default
kablam!    --> src/platform/mysql.rs:371:47
kablam!     |
kablam! 371 |     fn get_table_comment(&self, schema: &str, table: &str) -> Option<String> {
kablam!     |                                               ^^^^^
kablam! 
kablam! warning: unused variable: `schema`, #[warn(unused_variables)] on by default
kablam!    --> src/platform/mysql.rs:555:32
kablam!     |
kablam! 555 |     fn get_parent_table(&self, schema: &str, table: &str) -> Option<String> {
kablam!     |                                ^^^^^^
kablam! 
kablam! warning: unused variable: `table`, #[warn(unused_variables)] on by default
kablam!    --> src/platform/mysql.rs:555:46
kablam!     |
kablam! 555 |     fn get_parent_table(&self, schema: &str, table: &str) -> Option<String> {
kablam!     |                                              ^^^^^
kablam! 
kablam! warning: unused variable: `schema`, #[warn(unused_variables)] on by default
kablam!    --> src/platform/mysql.rs:559:35
kablam!     |
kablam! 559 |     fn get_table_sub_class(&self, schema: &str, table: &str) -> Vec<String> {
kablam!     |                                   ^^^^^^
kablam! 
kablam! warning: unused variable: `table`, #[warn(unused_variables)] on by default
kablam!    --> src/platform/mysql.rs:559:49
kablam!     |
kablam! 559 |     fn get_table_sub_class(&self, schema: &str, table: &str) -> Vec<String> {
kablam!     |                                                 ^^^^^
kablam! 
kablam! warning: unused variable: `schema`, #[warn(unused_variables)] on by default
kablam!    --> src/platform/mysql.rs:621:37
kablam!     |
kablam! 621 |     fn get_inherited_columns(&self, schema: &str, table: &str) -> Vec<String> {
kablam!     |                                     ^^^^^^
kablam! 
kablam! warning: unused variable: `table`, #[warn(unused_variables)] on by default
kablam!    --> src/platform/mysql.rs:621:51
kablam!     |
kablam! 621 |     fn get_inherited_columns(&self, schema: &str, table: &str) -> Vec<String> {
kablam!     |                                                   ^^^^^
kablam! 
kablam! warning: method is never used: `get_parent_table`, #[warn(dead_code)] on by default
kablam!    --> src/table.rs:460:2
kablam!     |
kablam! 460 |   	fn get_parent_table<'a>(&self, tables: &'a [Table]) -> Option<&'a Table>{
kablam!     |  __^ starting here...
kablam! 461 | | 		match &self.parent_table{
kablam! 462 | | 			&Some(ref p_table) => {
kablam! 463 | | 				let tmp_table = Table::with_name(&p_table);
kablam! 464 | | 				Some(Self::get_table(&tmp_table.schema, &tmp_table.name, tables))
kablam! 465 | | 			},
kablam! 466 | | 			&None => None
kablam! 467 | | 		}
kablam! 468 | | 	}
kablam!     | |__^ ...ending here
kablam! 
kablam! warning: method is never used: `is_inherited_column`, #[warn(dead_code)] on by default
kablam!    --> src/table.rs:472:2
kablam!     |
kablam! 472 | 	fn is_inherited_column(self, column: &str, tables: &[Table])->bool{
kablam!     | 	^
kablam! 
kablam! warning: unused variable: `column`, #[warn(unused_variables)] on by default
kablam!    --> src/table.rs:472:31
kablam!     |
kablam! 472 | 	fn is_inherited_column(self, column: &str, tables: &[Table])->bool{
kablam!     | 	                             ^^^^^^
kablam! 
kablam! warning: method is never used: `same_schema`, #[warn(dead_code)] on by default
kablam!    --> src/table.rs:486:2
kablam!     |
kablam! 486 | 	fn same_schema(&self, table: &Table)->bool{
kablam!     | 	^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 31.27 secs
boom! running `docker rm -f 1c7cf258210a362bed795489b9b8a25435e60baf96e40b2ecf9804ad5c63d16f`
blam! 1c7cf258210a362bed795489b9b8a25435e60baf96e40b2ecf9804ad5c63d16f
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 912160757f58f3702bf925b92558445102fba8705ef4a33472c8c3808f7f274b
boom! running `docker start -a 912160757f58f3702bf925b92558445102fba8705ef4a33472c8c3808f7f274b`
kablam!    Compiling rustorm v0.4.3 (file:///source)
kablam! warning: unused import: `Operand`, #[warn(unused_imports)] on by default
kablam!  --> src/em.rs:1:21
kablam!   |
kablam! 1 | use query::{Filter, Operand};
kablam!   |                     ^^^^^^^
kablam! 
kablam! warning: unused imports: `Decodable`, `Decoder`, #[warn(unused_imports)] on by default
kablam!   --> src/dao.rs:11:43
kablam!    |
kablam! 11 | use rustc_serialize::{Encodable, Encoder, Decodable, Decoder};
kablam!    |                                           ^^^^^^^^^  ^^^^^^^
kablam! 
kablam! warning: unused import: `rustc_serialize::DecoderHelpers`, #[warn(unused_imports)] on by default
kablam!   --> src/dao.rs:13:5
kablam!    |
kablam! 13 | use rustc_serialize::DecoderHelpers;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `rustc_serialize::json::Json`, #[warn(unused_imports)] on by default
kablam!   --> src/platform/postgres.rs:16:5
kablam!    |
kablam! 16 | use rustc_serialize::json::Json;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `postgres::types::IsNull`, #[warn(unused_imports)] on by default
kablam!   --> src/platform/postgres.rs:18:5
kablam!    |
kablam! 18 | use postgres::types::IsNull;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: static variable `none` should have an upper case name such as `NONE`, #[warn(non_upper_case_globals)] on by default
kablam!   --> src/platform/postgres.rs:91:9
kablam!    |
kablam! 91 | 								static none: &'static Option<String> = &None;
kablam!    | 								^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: static variable `none` should have an upper case name such as `NONE`, #[warn(non_upper_case_globals)] on by default
kablam!   --> src/platform/postgres.rs:95:9
kablam!    |
kablam! 95 | 								static none: &'static Option<Uuid> = &None;
kablam!    | 								^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `schema`, #[warn(unused_variables)] on by default
kablam!    --> src/platform/mysql.rs:371:33
kablam!     |
kablam! 371 |     fn get_table_comment(&self, schema: &str, table: &str) -> Option<String> {
kablam!     |                                 ^^^^^^
kablam! 
kablam! warning: unused variable: `table`, #[warn(unused_variables)] on by default
kablam!    --> src/platform/mysql.rs:371:47
kablam!     |
kablam! 371 |     fn get_table_comment(&self, schema: &str, table: &str) -> Option<String> {
kablam!     |                                               ^^^^^
kablam! 
kablam! warning: unused variable: `schema`, #[warn(unused_variables)] on by default
kablam!    --> src/platform/mysql.rs:555:32
kablam!     |
kablam! 555 |     fn get_parent_table(&self, schema: &str, table: &str) -> Option<String> {
kablam!     |                                ^^^^^^
kablam! 
kablam! warning: unused variable: `table`, #[warn(unused_variables)] on by default
kablam!    --> src/platform/mysql.rs:555:46
kablam!     |
kablam! 555 |     fn get_parent_table(&self, schema: &str, table: &str) -> Option<String> {
kablam!     |                                              ^^^^^
kablam! 
kablam! warning: unused variable: `schema`, #[warn(unused_variables)] on by default
kablam!    --> src/platform/mysql.rs:559:35
kablam!     |
kablam! 559 |     fn get_table_sub_class(&self, schema: &str, table: &str) -> Vec<String> {
kablam!     |                                   ^^^^^^
kablam! 
kablam! warning: unused variable: `table`, #[warn(unused_variables)] on by default
kablam!    --> src/platform/mysql.rs:559:49
kablam!     |
kablam! 559 |     fn get_table_sub_class(&self, schema: &str, table: &str) -> Vec<String> {
kablam!     |                                                 ^^^^^
kablam! 
kablam! warning: unused variable: `schema`, #[warn(unused_variables)] on by default
kablam!    --> src/platform/mysql.rs:621:37
kablam!     |
kablam! 621 |     fn get_inherited_columns(&self, schema: &str, table: &str) -> Vec<String> {
kablam!     |                                     ^^^^^^
kablam! 
kablam! warning: unused variable: `table`, #[warn(unused_variables)] on by default
kablam!    --> src/platform/mysql.rs:621:51
kablam!     |
kablam! 621 |     fn get_inherited_columns(&self, schema: &str, table: &str) -> Vec<String> {
kablam!     |                                                   ^^^^^
kablam! 
kablam! warning: method is never used: `get_parent_table`, #[warn(dead_code)] on by default
kablam!    --> src/table.rs:460:2
kablam!     |
kablam! 460 |   	fn get_parent_table<'a>(&self, tables: &'a [Table]) -> Option<&'a Table>{
kablam!     |  __^ starting here...
kablam! 461 | | 		match &self.parent_table{
kablam! 462 | | 			&Some(ref p_table) => {
kablam! 463 | | 				let tmp_table = Table::with_name(&p_table);
kablam! 464 | | 				Some(Self::get_table(&tmp_table.schema, &tmp_table.name, tables))
kablam! 465 | | 			},
kablam! 466 | | 			&None => None
kablam! 467 | | 		}
kablam! 468 | | 	}
kablam!     | |__^ ...ending here
kablam! 
kablam! warning: method is never used: `is_inherited_column`, #[warn(dead_code)] on by default
kablam!    --> src/table.rs:472:2
kablam!     |
kablam! 472 | 	fn is_inherited_column(self, column: &str, tables: &[Table])->bool{
kablam!     | 	^
kablam! 
kablam! warning: unused variable: `column`, #[warn(unused_variables)] on by default
kablam!    --> src/table.rs:472:31
kablam!     |
kablam! 472 | 	fn is_inherited_column(self, column: &str, tables: &[Table])->bool{
kablam!     | 	                             ^^^^^^
kablam! 
kablam! warning: method is never used: `same_schema`, #[warn(dead_code)] on by default
kablam!    --> src/table.rs:486:2
kablam!     |
kablam! 486 | 	fn same_schema(&self, table: &Table)->bool{
kablam!     | 	^
kablam! 
kablam! warning: unused import: `rustorm::database::Database`, #[warn(unused_imports)] on by default
kablam!  --> examples/sqlite_fkey.rs:4:5
kablam!   |
kablam! 4 | use rustorm::database::Database;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `rustorm::dao::Value`, #[warn(unused_imports)] on by default
kablam!   --> examples/get_one_product_photo.rs:13:5
kablam!    |
kablam! 13 | use rustorm::dao::Value;
kablam!    |     ^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `rustorm::query::Operand`, #[warn(unused_imports)] on by default
kablam!   --> examples/get_one_product_photo.rs:14:5
kablam!    |
kablam! 14 | use rustorm::query::Operand;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `rustorm::database::Database`, #[warn(unused_imports)] on by default
kablam!  --> examples/sqlite_meta.rs:4:5
kablam!   |
kablam! 4 | use rustorm::database::Database;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `rustorm::database::Database`, #[warn(unused_imports)] on by default
kablam!  --> examples/mysql_show_version.rs:7:5
kablam!   |
kablam! 7 | use rustorm::database::Database;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `rustorm::database::Database`, #[warn(unused_imports)] on by default
kablam!  --> examples/sqlite_show_version.rs:7:5
kablam!   |
kablam! 7 | use rustorm::database::Database;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `rustorm::database::Database`, #[warn(unused_imports)] on by default
kablam!  --> examples/show_version.rs:7:5
kablam!   |
kablam! 7 | use rustorm::database::Database;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 110.86 secs
boom! running `docker rm -f 912160757f58f3702bf925b92558445102fba8705ef4a33472c8c3808f7f274b`
blam! 912160757f58f3702bf925b92558445102fba8705ef4a33472c8c3808f7f274b
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! af67b1ea0e5f0d5ef3770b7d05b6c010ffd1a355db982c1cc52c301431c13852
boom! running `docker start -a af67b1ea0e5f0d5ef3770b7d05b6c010ffd1a355db982c1cc52c301431c13852`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.9 secs
kablam!      Running /target/debug/deps/build_insert_query-903cb8bd49e8b2d7
blam! 
blam! running 1 test
blam! test test_insert_query ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- test_insert_query stdout ----
blam! 	Creating a connection with a pool size of 1
blam! thread 'test_insert_query' panicked at 'called `Result::unwrap()` on an `Err` value: PoolError(InitializationError(()))', /buildslave/rust-buildbot/slave/stable-dist-rustc-linux/build/src/libcore/result.rs:868
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! 
blam! failures:
blam!     test_insert_query
blam! 
blam! test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f af67b1ea0e5f0d5ef3770b7d05b6c010ffd1a355db982c1cc52c301431c13852`
blam! af67b1ea0e5f0d5ef3770b7d05b6c010ffd1a355db982c1cc52c301431c13852
