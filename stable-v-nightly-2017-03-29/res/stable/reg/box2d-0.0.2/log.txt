boom! testing box2d-0.0.2 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! a2d128ae960372030836c6bc35d2097f163c215d511455370b25de4dfaa33486
boom! running `docker start -a a2d128ae960372030836c6bc35d2097f163c215d511455370b25de4dfaa33486`
kablam!    Compiling box2d v0.0.2 (file:///source)
kablam! warning: field is never used: `gravity`, #[warn(dead_code)] on by default
kablam!   --> src/world.rs:12:2
kablam!    |
kablam! 12 | 	gravity: Vec2,
kablam!    | 	^^^^^^^^^^^^^
kablam! 
kablam! warning: variable `timeStep` should have a snake case name such as `time_step`, #[warn(non_snake_case)] on by default
kablam!   --> src/world.rs:36:25
kablam!    |
kablam! 36 | 	pub fn step(&mut self, timeStep: f32) {
kablam!    | 	                       ^^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> src/world.rs:65:17
kablam!    |
kablam! 65 |             let mut body_a = manifold.body_a;
kablam!    |                 ^^^^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> src/world.rs:66:17
kablam!    |
kablam! 66 |             let mut body_b = manifold.body_b;
kablam!    |                 ^^^^^^^^^^
kablam! 
kablam! warning: value assigned to `correction` is never read, #[warn(unused_assignments)] on by default
kablam!   --> src/world.rs:96:21
kablam!    |
kablam! 96 |                 let mut correction = Vec2::new(0.0, 0.0);
kablam!    |                     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: variable `timeStep` should have a snake case name such as `time_step`, #[warn(non_snake_case)] on by default
kablam!   --> src/body.rs:38:30
kablam!    |
kablam! 38 | 	pub fn integrate(&mut self, timeStep: f32) {
kablam!    | 	                            ^^^^^^^^
kablam! 
kablam! warning: value assigned to `closest_point` is never read, #[warn(unused_assignments)] on by default
kablam!   --> src/collision/circle_line_collider.rs:36:21
kablam!    |
kablam! 36 |                 let mut closest_point = Vec2::new(0.0, 0.0);
kablam!    |                     ^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: value assigned to `closest_point` is never read, #[warn(unused_assignments)] on by default
kablam!   --> src/collision/circle_chain_line_collider.rs:39:25
kablam!    |
kablam! 39 |                     let mut closest_point = Vec2::new(0.0, 0.0);
kablam!    |                         ^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `super::super::math::Vec2`, #[warn(unused_imports)] on by default
kablam!  --> src/collision/polygon_polygon_collider.rs:3:5
kablam!   |
kablam! 3 | use super::super::math::Vec2;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `super::super::manifold::Manifold`, #[warn(unused_imports)] on by default
kablam!  --> src/collision/polygon_polygon_collider.rs:4:5
kablam!   |
kablam! 4 | use super::super::manifold::Manifold;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `points_a`, #[warn(unused_variables)] on by default
kablam!   --> src/collision/polygon_polygon_collider.rs:26:35
kablam!    |
kablam! 26 |             (PolygonShape{points: points_a}, PolygonShape{points: points_b}) => {
kablam!    |                                   ^^^^^^^^
kablam! 
kablam! warning: unused variable: `points_b`, #[warn(unused_variables)] on by default
kablam!   --> src/collision/polygon_polygon_collider.rs:26:67
kablam!    |
kablam! 26 |             (PolygonShape{points: points_a}, PolygonShape{points: points_b}) => {
kablam!    |                                                                   ^^^^^^^^
kablam! 
kablam! warning: struct is never used: `DefaultCollisionResolution`, #[warn(dead_code)] on by default
kablam!  --> src/default_collision_resolution.rs:5:1
kablam!   |
kablam! 5 | pub struct DefaultCollisionResolution;
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: value assigned to `correction` is never read, #[warn(unused_assignments)] on by default
kablam!   --> src/default_collision_resolution.rs:42:21
kablam!    |
kablam! 42 |                 let mut correction = Vec2::new(0.0, 0.0);
kablam!    |                     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: method is never used: `new`, #[warn(dead_code)] on by default
kablam!   --> src/default_collision_resolution.rs:64:5
kablam!    |
kablam! 64 |       pub fn new() -> DefaultCollisionResolution {
kablam!    |  _____^ starting here...
kablam! 65 | |         return DefaultCollisionResolution
kablam! 66 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.70 secs
boom! running `docker rm -f a2d128ae960372030836c6bc35d2097f163c215d511455370b25de4dfaa33486`
blam! a2d128ae960372030836c6bc35d2097f163c215d511455370b25de4dfaa33486
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 48121a8b76605868acf63c48c63899473a41aaf6cbe3c6785ef0f0ef2410895f
boom! running `docker start -a 48121a8b76605868acf63c48c63899473a41aaf6cbe3c6785ef0f0ef2410895f`
kablam!    Compiling box2d v0.0.2 (file:///source)
kablam! warning: field is never used: `gravity`, #[warn(dead_code)] on by default
kablam!   --> src/world.rs:12:2
kablam!    |
kablam! 12 | 	gravity: Vec2,
kablam!    | 	^^^^^^^^^^^^^
kablam! 
kablam! warning: variable `timeStep` should have a snake case name such as `time_step`, #[warn(non_snake_case)] on by default
kablam!   --> src/world.rs:36:25
kablam!    |
kablam! 36 | 	pub fn step(&mut self, timeStep: f32) {
kablam!    | 	                       ^^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> src/world.rs:65:17
kablam!    |
kablam! 65 |             let mut body_a = manifold.body_a;
kablam!    |                 ^^^^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> src/world.rs:66:17
kablam!    |
kablam! 66 |             let mut body_b = manifold.body_b;
kablam!    |                 ^^^^^^^^^^
kablam! 
kablam! warning: value assigned to `correction` is never read, #[warn(unused_assignments)] on by default
kablam!   --> src/world.rs:96:21
kablam!    |
kablam! 96 |                 let mut correction = Vec2::new(0.0, 0.0);
kablam!    |                     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: variable `timeStep` should have a snake case name such as `time_step`, #[warn(non_snake_case)] on by default
kablam!   --> src/body.rs:38:30
kablam!    |
kablam! 38 | 	pub fn integrate(&mut self, timeStep: f32) {
kablam!    | 	                            ^^^^^^^^
kablam! 
kablam! warning: value assigned to `closest_point` is never read, #[warn(unused_assignments)] on by default
kablam!   --> src/collision/circle_line_collider.rs:36:21
kablam!    |
kablam! 36 |                 let mut closest_point = Vec2::new(0.0, 0.0);
kablam!    |                     ^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: value assigned to `closest_point` is never read, #[warn(unused_assignments)] on by default
kablam!   --> src/collision/circle_chain_line_collider.rs:39:25
kablam!    |
kablam! 39 |                     let mut closest_point = Vec2::new(0.0, 0.0);
kablam!    |                         ^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `super::super::math::Vec2`, #[warn(unused_imports)] on by default
kablam!  --> src/collision/polygon_polygon_collider.rs:3:5
kablam!   |
kablam! 3 | use super::super::math::Vec2;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `super::super::manifold::Manifold`, #[warn(unused_imports)] on by default
kablam!  --> src/collision/polygon_polygon_collider.rs:4:5
kablam!   |
kablam! 4 | use super::super::manifold::Manifold;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `points_a`, #[warn(unused_variables)] on by default
kablam!   --> src/collision/polygon_polygon_collider.rs:26:35
kablam!    |
kablam! 26 |             (PolygonShape{points: points_a}, PolygonShape{points: points_b}) => {
kablam!    |                                   ^^^^^^^^
kablam! 
kablam! warning: unused variable: `points_b`, #[warn(unused_variables)] on by default
kablam!   --> src/collision/polygon_polygon_collider.rs:26:67
kablam!    |
kablam! 26 |             (PolygonShape{points: points_a}, PolygonShape{points: points_b}) => {
kablam!    |                                                                   ^^^^^^^^
kablam! 
kablam! warning: struct is never used: `DefaultCollisionResolution`, #[warn(dead_code)] on by default
kablam!  --> src/default_collision_resolution.rs:5:1
kablam!   |
kablam! 5 | pub struct DefaultCollisionResolution;
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: value assigned to `correction` is never read, #[warn(unused_assignments)] on by default
kablam!   --> src/default_collision_resolution.rs:42:21
kablam!    |
kablam! 42 |                 let mut correction = Vec2::new(0.0, 0.0);
kablam!    |                     ^^^^^^^^^^^^^^
kablam! 
kablam! warning: method is never used: `new`, #[warn(dead_code)] on by default
kablam!   --> src/default_collision_resolution.rs:64:5
kablam!    |
kablam! 64 |       pub fn new() -> DefaultCollisionResolution {
kablam!    |  _____^ starting here...
kablam! 65 | |         return DefaultCollisionResolution
kablam! 66 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.89 secs
boom! running `docker rm -f 48121a8b76605868acf63c48c63899473a41aaf6cbe3c6785ef0f0ef2410895f`
blam! 48121a8b76605868acf63c48c63899473a41aaf6cbe3c6785ef0f0ef2410895f
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 12c8892799e70639370d627263af4b276eda76e075ad17135ba6623194470e53
boom! running `docker start -a 12c8892799e70639370d627263af4b276eda76e075ad17135ba6623194470e53`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/box2d-cc6264ff83b96197
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests box2d
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 12c8892799e70639370d627263af4b276eda76e075ad17135ba6623194470e53`
blam! 12c8892799e70639370d627263af4b276eda76e075ad17135ba6623194470e53
