boom! testing jlens-0.0.1 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 48c52eae649ce13ad2921883bd954b7b1d7b578b8a50647cbc2d8cccc9f7711d
boom! running `docker start -a 48c52eae649ce13ad2921883bd954b7b1d7b578b8a50647cbc2d8cccc9f7711d`
kablam!    Compiling jlens v0.0.1 (file:///source)
kablam! warning: patterns aren't allowed in methods without bodies, #[warn(patterns_in_fns_without_body)] on by default
kablam!    --> src/lib.rs:129:56
kablam!     |
kablam! 129 |     fn select<'a,'b,F>(&self, input: &JsonPath<'a,'b>, mut f: F)
kablam!     |                                                        ^^^^^
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #35203 <https://github.com/rust-lang/rust/issues/35203>
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.83 secs
boom! running `docker rm -f 48c52eae649ce13ad2921883bd954b7b1d7b578b8a50647cbc2d8cccc9f7711d`
blam! 48c52eae649ce13ad2921883bd954b7b1d7b578b8a50647cbc2d8cccc9f7711d
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 39cbb18d1090a4683380a4db96cafc09115de585340044712eacaca75e938502
boom! running `docker start -a 39cbb18d1090a4683380a4db96cafc09115de585340044712eacaca75e938502`
kablam!    Compiling jlens v0.0.1 (file:///source)
kablam! warning: patterns aren't allowed in methods without bodies, #[warn(patterns_in_fns_without_body)] on by default
kablam!    --> src/lib.rs:129:56
kablam!     |
kablam! 129 |     fn select<'a,'b,F>(&self, input: &JsonPath<'a,'b>, mut f: F)
kablam!     |                                                        ^^^^^
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #35203 <https://github.com/rust-lang/rust/issues/35203>
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.71 secs
boom! running `docker rm -f 39cbb18d1090a4683380a4db96cafc09115de585340044712eacaca75e938502`
blam! 39cbb18d1090a4683380a4db96cafc09115de585340044712eacaca75e938502
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 3f1ce1b1fbd7cf3bdbdb281d33718e56bf80dbbfec86d12ca9bf2512fc6c664c
boom! running `docker start -a 3f1ce1b1fbd7cf3bdbdb281d33718e56bf80dbbfec86d12ca9bf2512fc6c664c`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/jlens-cc4f1c39d04abcef
blam! 
blam! running 4 tests
blam! test test::match_null ... ok
blam! test test::parent_unique ... ok
blam! test test::ascend_unique ... ok
blam! test test::union_unique ... ok
blam! 
blam! test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests jlens
blam! 
blam! running 1 test
blam! test _0 ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 3f1ce1b1fbd7cf3bdbdb281d33718e56bf80dbbfec86d12ca9bf2512fc6c664c`
blam! 3f1ce1b1fbd7cf3bdbdb281d33718e56bf80dbbfec86d12ca9bf2512fc6c664c
