boom! testing reru-0.1.2 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! a13c770229405b23a76c95caa5b1c50c625c10b50a7d6f385b10680c12330377
boom! running `docker start -a a13c770229405b23a76c95caa5b1c50c625c10b50a7d6f385b10680c12330377`
kablam!    Compiling reru v0.1.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.86 secs
boom! running `docker rm -f a13c770229405b23a76c95caa5b1c50c625c10b50a7d6f385b10680c12330377`
blam! a13c770229405b23a76c95caa5b1c50c625c10b50a7d6f385b10680c12330377
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! cf0b8fc9e1cddf4bdd0ff156bbae567429a6ff7b7fc2327fc15a684d55604871
boom! running `docker start -a cf0b8fc9e1cddf4bdd0ff156bbae567429a6ff7b7fc2327fc15a684d55604871`
kablam!    Compiling reru v0.1.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.48 secs
boom! running `docker rm -f cf0b8fc9e1cddf4bdd0ff156bbae567429a6ff7b7fc2327fc15a684d55604871`
blam! cf0b8fc9e1cddf4bdd0ff156bbae567429a6ff7b7fc2327fc15a684d55604871
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 02e31d861e6bd74125c98f196d819a34638272c61c35ac6a688371ef50c75842
boom! running `docker start -a 02e31d861e6bd74125c98f196d819a34638272c61c35ac6a688371ef50c75842`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/reru-e16fb06ec851cb2a
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests reru
blam! 
blam! running 1 test
blam! test _0 ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- _0 stdout ----
blam! 	error: no method named `read_to_string` found for type `reru::Response` in the current scope
blam!   --> <anon>:12:6
blam!    |
blam! 12 |     .read_to_string(&mut res)
blam!    |      ^^^^^^^^^^^^^^
blam!    |
blam!    = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:
blam!    = help: candidate #1: `use std::io::Read;`
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'rustc' panicked at 'Box<Any>', /buildslave/rust-buildbot/slave/stable-dist-rustc-linux/build/src/librustc/session/mod.rs:203
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! 
blam! failures:
blam!     _0
blam! 
blam! test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f 02e31d861e6bd74125c98f196d819a34638272c61c35ac6a688371ef50c75842`
blam! 02e31d861e6bd74125c98f196d819a34638272c61c35ac6a688371ef50c75842
