boom! testing https://github.com/Twinklebear/tray_rust#cae96b3b8a030ddd1b76920450ed5c548c081023 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! c3e87b27c518a15e34e5b96084886a066c1f498c329c5c6e2c4130c106411e40
boom! running `docker start -a c3e87b27c518a15e34e5b96084886a066c1f498c329c5c6e2c4130c106411e40`
kablam!    Compiling nix v0.5.1
kablam!    Compiling net2 v0.2.26
kablam!    Compiling la v0.2.0
kablam!    Compiling png v0.6.2
kablam!    Compiling miow v0.1.5
kablam!    Compiling bspline v0.2.2
kablam!    Compiling image v0.12.3
kablam!    Compiling mio v0.5.1
kablam!    Compiling tray_rust v0.0.1 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 49.98 secs
boom! running `docker rm -f c3e87b27c518a15e34e5b96084886a066c1f498c329c5c6e2c4130c106411e40`
blam! c3e87b27c518a15e34e5b96084886a066c1f498c329c5c6e2c4130c106411e40
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! c4e0489a2344a827a4172f0783cfeb4a89759fc43e4e8f70e50b9466d2b84968
boom! running `docker start -a c4e0489a2344a827a4172f0783cfeb4a89759fc43e4e8f70e50b9466d2b84968`
kablam!    Compiling tray_rust v0.0.1 (file:///source)
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/linalg/transform.rs:321:16
kablam!     |
kablam! 321 |     assert_eq!(f32::abs_sub(p.y, 0.0), 0.0);
kablam!     |                ^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/linalg/transform.rs:325:16
kablam!     |
kablam! 325 |     assert_eq!(f32::abs_sub(v.y, 0.0), 0.0);
kablam!     |                ^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/linalg/transform.rs:329:16
kablam!     |
kablam! 329 |     assert_eq!(f32::abs_sub(n.y, 0.0), 0.0);
kablam!     |                ^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/linalg/transform.rs:339:16
kablam!     |
kablam! 339 |     assert_eq!(f32::abs_sub(p.x, 0.0), 0.0);
kablam!     |                ^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/linalg/transform.rs:343:16
kablam!     |
kablam! 343 |     assert_eq!(f32::abs_sub(v.x, 0.0), 0.0);
kablam!     |                ^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/linalg/transform.rs:347:16
kablam!     |
kablam! 347 |     assert_eq!(f32::abs_sub(n.x, 0.0), 0.0);
kablam!     |                ^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/linalg/transform.rs:358:16
kablam!     |
kablam! 358 |     assert_eq!(f32::abs_sub(p.x, 0.0), 0.0);
kablam!     |                ^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/linalg/transform.rs:362:16
kablam!     |
kablam! 362 |     assert_eq!(f32::abs_sub(v.x, 0.0), 0.0);
kablam!     |                ^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: you probably meant `(self - other).abs()`: this operation is `(self - other).max(0.0)` (also known as `fdimf` in C). If you truly need the positive difference, consider using that expression or the C function `fdimf`, depending on how you wish to handle NaN (please consider filing an issue describing your use-case too)., #[warn(deprecated)] on by default
kablam!    --> src/linalg/transform.rs:366:16
kablam!     |
kablam! 366 |     assert_eq!(f32::abs_sub(n.x, 0.0), 0.0);
kablam!     |                ^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 18.15 secs
boom! running `docker rm -f c4e0489a2344a827a4172f0783cfeb4a89759fc43e4e8f70e50b9466d2b84968`
blam! c4e0489a2344a827a4172f0783cfeb4a89759fc43e4e8f70e50b9466d2b84968
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! f6370116665f375dc78b53bffda9523e623d6b3b3476dd346cd4a15c2bea903d
boom! running `docker start -a f6370116665f375dc78b53bffda9523e623d6b3b3476dd346cd4a15c2bea903d`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/tray_rust-fd2bbb9290110239
blam! 
blam! running 17 tests
blam! test linalg::matrix4::test_mul ... ok
blam! test linalg::matrix4::test_add ... ok
blam! test linalg::normal::test_face_fwd ... ok
blam! test linalg::matrix4::test_sub ... ok
blam! test linalg::point::test_distance_sqr ... ok
blam! test linalg::transform::test_mult_sanity ... ok
blam! test linalg::test_dot ... ok
blam! test linalg::transform::test_rotate_x ... ok
blam! test linalg::test_cross ... ok
blam! test linalg::transform::test_rotate_z ... ok
blam! test linalg::transform::test_scale ... ok
blam! test linalg::transform::test_rotate ... ok
blam! test linalg::transform::test_rotate_y ... ok
blam! test linalg::transform::test_translate ... ok
blam! test linalg::vector::test_len_sqr ... ok
blam! test partition::test_partition ... ok
blam! test linalg::vector::test_idx ... ok
blam! 
blam! test result: ok. 17 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/tray_rust-910e447ae0caa38a
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests tray_rust
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f f6370116665f375dc78b53bffda9523e623d6b3b3476dd346cd4a15c2bea903d`
blam! f6370116665f375dc78b53bffda9523e623d6b3b3476dd346cd4a15c2bea903d
