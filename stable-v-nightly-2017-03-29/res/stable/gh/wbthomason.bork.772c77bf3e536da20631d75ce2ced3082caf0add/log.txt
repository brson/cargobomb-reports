boom! testing https://github.com/wbthomason/bork#772c77bf3e536da20631d75ce2ced3082caf0add against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 9da05ae6d268e2702546463902abb12a126c16f67f2cd069afd244714644924f
boom! running `docker start -a 9da05ae6d268e2702546463902abb12a126c16f67f2cd069afd244714644924f`
kablam!    Compiling futures v0.1.8
kablam!    Compiling net2 v0.2.26
kablam!    Compiling linked-hash-map v0.3.0
kablam!    Compiling unsafe-any v0.4.1
kablam!    Compiling typemap v0.3.3
kablam!    Compiling yaml-rust v0.3.5
kablam!    Compiling unreachable v0.1.1
kablam!    Compiling libz-sys v1.0.10
kablam!    Compiling ordered-float v0.2.3
kablam!    Compiling curl-sys v0.3.6
kablam!    Compiling serde-value v0.3.1
kablam!    Compiling metadeps v1.1.1
kablam!    Compiling syn v0.10.6
kablam!    Compiling term_size v0.2.1
kablam!    Compiling time v0.1.35
kablam!    Compiling syntex_errors v0.54.0
kablam!    Compiling serde_yaml v0.5.0
kablam!    Compiling openssl-sys v0.9.6
kablam!    Compiling chrono v0.2.25
kablam!    Compiling serde_codegen_internals v0.11.3
kablam!    Compiling syntex_syntax v0.54.0
kablam!    Compiling log4rs v0.5.2
kablam!    Compiling nix v0.7.0
kablam!    Compiling mio v0.6.2
kablam!    Compiling tokio-core v0.1.3
kablam!    Compiling clap v2.19.3
kablam!    Compiling curl v0.4.3
kablam!    Compiling tokio-curl v0.1.8
kablam!    Compiling syntex v0.54.0
kablam!    Compiling serde_codegen v0.8.22
kablam!    Compiling bork v0.0.1 (file:///source)
kablam! error[E0308]: mismatched types
kablam!   --> src/search/mod.rs:41:13
kablam!    |
kablam! 41 |             Ok(package_result)  => {
kablam!    |             ^^^^^^^^^^^^^^^^^^ expected tuple, found enum `std::result::Result`
kablam!    |
kablam!    = note: expected type `(std::string::String, std::result::Result<SearchResult, std::string::String>)`
kablam!               found type `std::result::Result<_, _>`
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> src/search/mod.rs:81:13
kablam!    |
kablam! 81 |             Err(search_error)  => format!("{}", search_error.bold().white().on_red())
kablam!    |             ^^^^^^^^^^^^^^^^^ expected tuple, found enum `std::result::Result`
kablam!    |
kablam!    = note: expected type `(std::string::String, std::result::Result<SearchResult, std::string::String>)`
kablam!               found type `std::result::Result<_, _>`
kablam! 
kablam! error[E0310]: the parameter type `T` may not live long enough
kablam!   --> src/aur/mod.rs:59:70
kablam!    |
kablam! 59 |                 }).map_err(move |e| format!("{}: {:?}", package, e)).boxed()
kablam!    |                                                                      ^^^^^
kablam!    |
kablam!    = help: consider adding an explicit lifetime bound `T: 'static`...
kablam! note: ...so that the type `futures::MapErr<futures::Then<tokio_curl::Perform, std::result::Result<std::result::Result<T, std::string::String>, tokio_curl::PerformError>, [closure@src/aur/mod.rs:51:50: 59:18 search_data:std::sync::Arc<std::sync::Mutex<std::vec::Vec<u8>>>, p:std::string::String]>, [closure@src/aur/mod.rs:59:28: 59:68 package:std::string::String]>` will meet its required lifetime bounds
kablam!   --> src/aur/mod.rs:59:70
kablam!    |
kablam! 59 |                 }).map_err(move |e| format!("{}: {:?}", package, e)).boxed()
kablam!    |                                                                      ^^^^^
kablam! 
kablam! error[E0310]: the parameter type `T` may not live long enough
kablam!   --> src/aur/mod.rs:61:61
kablam!    |
kablam! 61 |             Err(e)  => err(format!("{}: {:?}", package, e)).boxed()
kablam!    |                                                             ^^^^^
kablam!    |
kablam!    = help: consider adding an explicit lifetime bound `T: 'static`...
kablam! note: ...so that the type `futures::FutureResult<std::result::Result<T, std::string::String>, std::string::String>` will meet its required lifetime bounds
kablam!   --> src/aur/mod.rs:61:61
kablam!    |
kablam! 61 |             Err(e)  => err(format!("{}: {:?}", package, e)).boxed()
kablam!    |                                                             ^^^^^
kablam! 
kablam! error: aborting due to 4 previous errors
kablam! 
kablam! error: Could not compile `bork`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 9da05ae6d268e2702546463902abb12a126c16f67f2cd069afd244714644924f`
blam! 9da05ae6d268e2702546463902abb12a126c16f67f2cd069afd244714644924f
