boom! testing https://github.com/millere/bf#cde8a51673f5b16771bd577a615cf474205dc20d against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 618f01b0007f2c4e29296cef183f600dc279aff29b46f64f128774514ec14753
boom! running `docker start -a 618f01b0007f2c4e29296cef183f600dc279aff29b46f64f128774514ec14753`
kablam!    Compiling bf v0.0.1 (file:///source)
kablam! warning: unused import: `std::io::Read`
kablam!  --> src/main.rs:2:5
kablam!   |
kablam! 2 | use std::io::Read;
kablam!   |     ^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/main.rs:14:22
kablam!    |
kablam! 14 |             b'.' => {output.write(&mut buffer[mptr .. mptr+1]);},
kablam!    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.82 secs
boom! running `docker rm -f 618f01b0007f2c4e29296cef183f600dc279aff29b46f64f128774514ec14753`
blam! 618f01b0007f2c4e29296cef183f600dc279aff29b46f64f128774514ec14753
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! a44d6d7227c82e477b6fcbad4883ba26d4c2cfa20fd76f2d19b587b365745e2b
boom! running `docker start -a a44d6d7227c82e477b6fcbad4883ba26d4c2cfa20fd76f2d19b587b365745e2b`
kablam!    Compiling bf v0.0.1 (file:///source)
kablam! warning: unused import: `std::io::Read`
kablam!  --> src/main.rs:2:5
kablam!   |
kablam! 2 | use std::io::Read;
kablam!   |     ^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/main.rs:14:22
kablam!    |
kablam! 14 |             b'.' => {output.write(&mut buffer[mptr .. mptr+1]);},
kablam!    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.0 secs
boom! running `docker rm -f a44d6d7227c82e477b6fcbad4883ba26d4c2cfa20fd76f2d19b587b365745e2b`
blam! a44d6d7227c82e477b6fcbad4883ba26d4c2cfa20fd76f2d19b587b365745e2b
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! bc6930b5a24b9b793b8b8eab58f79f18690041484880a01671ed5335871da677
boom! running `docker start -a bc6930b5a24b9b793b8b8eab58f79f18690041484880a01671ed5335871da677`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/bf-c8a1bd254795c37d
blam! 
blam! running 1 test
blam! test test_brainfuck ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- test_brainfuck stdout ----
blam! 	thread 'test_brainfuck' panicked at 'assertion failed: String::from_utf8(output).unwrap() == "Hello, world!"', src/main.rs:75
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! 
blam! failures:
blam!     test_brainfuck
blam! 
blam! test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f bc6930b5a24b9b793b8b8eab58f79f18690041484880a01671ed5335871da677`
blam! bc6930b5a24b9b793b8b8eab58f79f18690041484880a01671ed5335871da677
