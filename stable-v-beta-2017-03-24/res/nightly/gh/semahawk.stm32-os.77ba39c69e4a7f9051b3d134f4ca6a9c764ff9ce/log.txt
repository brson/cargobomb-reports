boom! testing https://github.com/semahawk/stm32-os#77ba39c69e4a7f9051b3d134f4ca6a9c764ff9ce against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 91b34e78c722354b69f3eb8cf82a2444d4a25dbbe10d5e0399ccca1954fb2a56
boom! running `docker start -a 91b34e78c722354b69f3eb8cf82a2444d4a25dbbe10d5e0399ccca1954fb2a56`
kablam!    Compiling stm32-os v0.1.0 (file:///source)
kablam! warning: unused import: `core::fmt::Write`
kablam!  --> src/main.rs:9:5
kablam!   |
kablam! 9 | use core::fmt::Write;
kablam!   |     ^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: constant item is never used: `USART_CR1_M`
kablam!   --> src/usart.rs:25:1
kablam!    |
kablam! 25 | const USART_CR1_M: u32 = 1 << 1;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: type `Usart_register_map` should have a camel case name such as `UsartRegisterMap`
kablam!   --> src/usart.rs:32:1
kablam!    |
kablam! 32 |   struct Usart_register_map {
kablam!    |  _^ starting here...
kablam! 33 | |   SR:   u32,
kablam! 34 | |   DR:   u32,
kablam! 35 | |   BRR:  u32,
kablam! 36 | |   CR1:  u32,
kablam! 37 | |   CR2:  u32,
kablam! 38 | |   CR3:  u32,
kablam! 39 | |   GTPR: u32,
kablam! 40 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: structure field `SR` should have a snake case name such as `sr`
kablam!   --> src/usart.rs:33:3
kablam!    |
kablam! 33 |   SR:   u32,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `DR` should have a snake case name such as `dr`
kablam!   --> src/usart.rs:34:3
kablam!    |
kablam! 34 |   DR:   u32,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `BRR` should have a snake case name such as `brr`
kablam!   --> src/usart.rs:35:3
kablam!    |
kablam! 35 |   BRR:  u32,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `CR1` should have a snake case name such as `cr1`
kablam!   --> src/usart.rs:36:3
kablam!    |
kablam! 36 |   CR1:  u32,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `CR2` should have a snake case name such as `cr2`
kablam!   --> src/usart.rs:37:3
kablam!    |
kablam! 37 |   CR2:  u32,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `CR3` should have a snake case name such as `cr3`
kablam!   --> src/usart.rs:38:3
kablam!    |
kablam! 38 |   CR3:  u32,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `GTPR` should have a snake case name such as `gtpr`
kablam!   --> src/usart.rs:39:3
kablam!    |
kablam! 39 |   GTPR: u32,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: field is never used: `CR3`
kablam!   --> src/usart.rs:38:3
kablam!    |
kablam! 38 |   CR3:  u32,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `GTPR`
kablam!   --> src/usart.rs:39:3
kablam!    |
kablam! 39 |   GTPR: u32,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `USART1`
kablam!   --> src/usart.rs:46:1
kablam!    |
kablam! 46 | pub const USART1: Usart = Usart(0x4001_3800, rcc::Clock::PCLK2);
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `USART3`
kablam!   --> src/usart.rs:48:1
kablam!    |
kablam! 48 | pub const USART3: Usart = Usart(0x4000_4800, rcc::Clock::PCLK1);
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: static variable `current` should have an upper case name such as `CURRENT`
kablam!   --> src/usart.rs:51:1
kablam!    |
kablam! 51 | pub static mut current: Option<Usart> = Some(USART2);
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_upper_case_globals)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/usart.rs:160:18
kablam!     |
kablam! 160 | pub fn output_to(mut usart: Usart) {
kablam!     |                  ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: constant item is never used: `RCC_CFGR_SW`
kablam!   --> src/rcc.rs:24:1
kablam!    |
kablam! 24 | const RCC_CFGR_SW: u32 = 0b11 << 0;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `RCC_CFGR_ADCPRE`
kablam!   --> src/rcc.rs:32:1
kablam!    |
kablam! 32 | const RCC_CFGR_ADCPRE: u32 = 0b11 << 14;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `RCC_CFGR_MCO`
kablam!   --> src/rcc.rs:37:1
kablam!    |
kablam! 37 | const RCC_CFGR_MCO: u32 = 0b1111 << 24;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `FLASH_ACR_LATENCY`
kablam!   --> src/rcc.rs:72:1
kablam!    |
kablam! 72 | const FLASH_ACR_LATENCY: u32 = 0b111 << 0;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant `apb1_usart2` should have a camel case name such as `Apb1Usart2`
kablam!   --> src/rcc.rs:77:3
kablam!    |
kablam! 77 |   apb1_usart2,
kablam!    |   ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `apb2_afio` should have a camel case name such as `Apb2Afio`
kablam!   --> src/rcc.rs:78:3
kablam!    |
kablam! 78 |   apb2_afio,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `apb2_gpioa` should have a camel case name such as `Apb2Gpioa`
kablam!   --> src/rcc.rs:79:3
kablam!    |
kablam! 79 |   apb2_gpioa,
kablam!    |   ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `apb2_gpiob` should have a camel case name such as `Apb2Gpiob`
kablam!   --> src/rcc.rs:80:3
kablam!    |
kablam! 80 |   apb2_gpiob,
kablam!    |   ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `apb2_gpioc` should have a camel case name such as `Apb2Gpioc`
kablam!   --> src/rcc.rs:81:3
kablam!    |
kablam! 81 |   apb2_gpioc,
kablam!    |   ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `apb2_gpiod` should have a camel case name such as `Apb2Gpiod`
kablam!   --> src/rcc.rs:82:3
kablam!    |
kablam! 82 |   apb2_gpiod,
kablam!    |   ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `apb2_gpioe` should have a camel case name such as `Apb2Gpioe`
kablam!   --> src/rcc.rs:83:3
kablam!    |
kablam! 83 |   apb2_gpioe,
kablam!    |   ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `apb2_gpiof` should have a camel case name such as `Apb2Gpiof`
kablam!   --> src/rcc.rs:84:3
kablam!    |
kablam! 84 |   apb2_gpiof,
kablam!    |   ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `apb2_gpiog` should have a camel case name such as `Apb2Gpiog`
kablam!   --> src/rcc.rs:85:3
kablam!    |
kablam! 85 |   apb2_gpiog,
kablam!    |   ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: type `Gpio_register_map` should have a camel case name such as `GpioRegisterMap`
kablam!   --> src/gpio.rs:21:1
kablam!    |
kablam! 21 |   struct Gpio_register_map {
kablam!    |  _^ starting here...
kablam! 22 | |   CRL:  u32,
kablam! 23 | |   CRH:  u32,
kablam! 24 | |   IDR:  u32,
kablam! 25 | |   ODR:  u32,
kablam! 26 | |   BSRR: u32,
kablam! 27 | |   BRR:  u32,
kablam! 28 | |   LCK:  u32,
kablam! 29 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: structure field `CRL` should have a snake case name such as `crl`
kablam!   --> src/gpio.rs:22:3
kablam!    |
kablam! 22 |   CRL:  u32,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `CRH` should have a snake case name such as `crh`
kablam!   --> src/gpio.rs:23:3
kablam!    |
kablam! 23 |   CRH:  u32,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `IDR` should have a snake case name such as `idr`
kablam!   --> src/gpio.rs:24:3
kablam!    |
kablam! 24 |   IDR:  u32,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `ODR` should have a snake case name such as `odr`
kablam!   --> src/gpio.rs:25:3
kablam!    |
kablam! 25 |   ODR:  u32,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `BSRR` should have a snake case name such as `bsrr`
kablam!   --> src/gpio.rs:26:3
kablam!    |
kablam! 26 |   BSRR: u32,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `BRR` should have a snake case name such as `brr`
kablam!   --> src/gpio.rs:27:3
kablam!    |
kablam! 27 |   BRR:  u32,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: structure field `LCK` should have a snake case name such as `lck`
kablam!   --> src/gpio.rs:28:3
kablam!    |
kablam! 28 |   LCK:  u32,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: field is never used: `CRH`
kablam!   --> src/gpio.rs:23:3
kablam!    |
kablam! 23 |   CRH:  u32,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `IDR`
kablam!   --> src/gpio.rs:24:3
kablam!    |
kablam! 24 |   IDR:  u32,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `ODR`
kablam!   --> src/gpio.rs:25:3
kablam!    |
kablam! 25 |   ODR:  u32,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `BRR`
kablam!   --> src/gpio.rs:27:3
kablam!    |
kablam! 27 |   BRR:  u32,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `LCK`
kablam!   --> src/gpio.rs:28:3
kablam!    |
kablam! 28 |   LCK:  u32,
kablam!    |   ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `write_u8`
kablam!   --> src/mmio.rs:24:1
kablam!    |
kablam! 24 |   pub fn write_u8(reg: u32, val: u8) {
kablam!    |  _^ starting here...
kablam! 25 | |   unsafe {
kablam! 26 | |     volatile_store(reg as *mut u8, val)
kablam! 27 | |   }
kablam! 28 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `core::fmt::Write`
kablam!   --> src/cmd.rs:10:5
kablam!    |
kablam! 10 | use core::fmt::Write;
kablam!    |     ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: constant `commands` should have an upper case name such as `COMMANDS`
kablam!   --> src/cmd.rs:15:1
kablam!    |
kablam! 15 |   const commands: &'static [(&str, fn (Split<char>))] = &[
kablam!    |  _^ starting here...
kablam! 16 | |   ("gpio", gpio),
kablam! 17 | |   ("loadb", loadb),
kablam! 18 | | ];
kablam!    | |__^ ...ending here
kablam!    |
kablam!    = note: #[warn(non_upper_case_globals)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/cmd.rs:40:7
kablam!    |
kablam! 40 |   let mut address = address as *mut u8;
kablam!    |       ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: variant `set` should have a camel case name such as `Set`
kablam!   --> src/cmd.rs:65:13
kablam!    |
kablam! 65 |   enum Op { set, clear, mode };
kablam!    |             ^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `clear` should have a camel case name such as `Clear`
kablam!   --> src/cmd.rs:65:18
kablam!    |
kablam! 65 |   enum Op { set, clear, mode };
kablam!    |                  ^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `mode` should have a camel case name such as `Mode`
kablam!   --> src/cmd.rs:65:25
kablam!    |
kablam! 65 |   enum Op { set, clear, mode };
kablam!    |                         ^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: function is never used: `dummy_handler`
kablam!   --> src/main.rs:82:3
kablam!    |
kablam! 82 |     pub extern "C" fn dummy_handler() {
kablam!    |  ___^ starting here...
kablam! 83 | |     unsafe { asm!("bkpt"); }
kablam! 84 | |     loop {}
kablam! 85 | |   }
kablam!    | |___^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: static item is never used: `EXCEPTIONS`
kablam!    --> src/main.rs:88:3
kablam!     |
kablam! 88  |   pub static EXCEPTIONS: [Option<extern "C" fn()>; 14] = [
kablam!     |   ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: use of extern static requires unsafe function or block (error E0133)
kablam!    --> src/main.rs:114:15
kablam!     |
kablam! 114 |   let from = &data_in_flash_start as *const u32;
kablam!     |               ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(safe_extern_statics)] on by default
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #36247 <https://github.com/rust-lang/rust/issues/35112>
kablam! 
kablam! warning: use of extern static requires unsafe function or block (error E0133)
kablam!    --> src/main.rs:115:17
kablam!     |
kablam! 115 |   let mut to = &data_in_ram_start as *const u32;
kablam!     |                 ^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(safe_extern_statics)] on by default
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #36247 <https://github.com/rust-lang/rust/issues/35112>
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/main.rs:116:7
kablam!     |
kablam! 116 |   let mut size = &data_in_ram_end as *const u32 as u32 - &data_in_ram_start as *const u32 as u32;
kablam!     |       ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: use of extern static requires unsafe function or block (error E0133)
kablam!    --> src/main.rs:116:19
kablam!     |
kablam! 116 |   let mut size = &data_in_ram_end as *const u32 as u32 - &data_in_ram_start as *const u32 as u32;
kablam!     |                   ^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(safe_extern_statics)] on by default
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #36247 <https://github.com/rust-lang/rust/issues/35112>
kablam! 
kablam! warning: use of extern static requires unsafe function or block (error E0133)
kablam!    --> src/main.rs:116:59
kablam!     |
kablam! 116 |   let mut size = &data_in_ram_end as *const u32 as u32 - &data_in_ram_start as *const u32 as u32;
kablam!     |                                                           ^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(safe_extern_statics)] on by default
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #36247 <https://github.com/rust-lang/rust/issues/35112>
kablam! 
kablam! warning: function panic_fmt is marked #[no_mangle], but not exported
kablam!    --> src/main.rs:141:3
kablam!     |
kablam! 141 |   extern "C" fn panic_fmt() { loop {} }
kablam!     |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(private_no_mangle_fns)] on by default
kablam! 
kablam! error: <inline asm>:1:2: error: invalid instruction mnemonic 'bkpt'
kablam!         bkpt
kablam!         ^
kablam! 
kablam!   --> src/main.rs:83:14
kablam!    |
kablam! 83 |     unsafe { asm!("bkpt"); }
kablam!    |              ^^^^^^^^^^^^^
kablam! 
kablam! error: aborting due to previous error
kablam! 
kablam! error: Could not compile `stm32-os`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 91b34e78c722354b69f3eb8cf82a2444d4a25dbbe10d5e0399ccca1954fb2a56`
blam! 91b34e78c722354b69f3eb8cf82a2444d4a25dbbe10d5e0399ccca1954fb2a56
