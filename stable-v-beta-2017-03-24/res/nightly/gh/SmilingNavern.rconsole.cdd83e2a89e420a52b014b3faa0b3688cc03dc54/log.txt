boom! testing https://github.com/SmilingNavern/rconsole#cdd83e2a89e420a52b014b3faa0b3688cc03dc54 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 617e4a91120b42444cf88af1f9588411cb5cbb024d1c1562f92387dfd347b443
boom! running `docker start -a 617e4a91120b42444cf88af1f9588411cb5cbb024d1c1562f92387dfd347b443`
kablam!    Compiling rconsole v0.1.0 (file:///source)
kablam! warning: unused result which must be used
kablam!   --> src/main.rs:32:9
kablam!    |
kablam! 32 |         sysreq_fh.write(key.as_bytes());
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/main.rs:53:13
kablam!    |
kablam! 53 |             do_sysreq(&mut stream, c.to_lowercase(), sysreq_fh);
kablam!    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.6 secs
boom! running `docker rm -f 617e4a91120b42444cf88af1f9588411cb5cbb024d1c1562f92387dfd347b443`
blam! 617e4a91120b42444cf88af1f9588411cb5cbb024d1c1562f92387dfd347b443
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 2852e25708565d7081631bf593e7c7214373ecfcfec92f38eb871fb37c01384b
boom! running `docker start -a 2852e25708565d7081631bf593e7c7214373ecfcfec92f38eb871fb37c01384b`
kablam!    Compiling rconsole v0.1.0 (file:///source)
kablam! warning: unused result which must be used
kablam!   --> src/main.rs:32:9
kablam!    |
kablam! 32 |         sysreq_fh.write(key.as_bytes());
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/main.rs:53:13
kablam!    |
kablam! 53 |             do_sysreq(&mut stream, c.to_lowercase(), sysreq_fh);
kablam!    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.11 secs
boom! running `docker rm -f 2852e25708565d7081631bf593e7c7214373ecfcfec92f38eb871fb37c01384b`
blam! 2852e25708565d7081631bf593e7c7214373ecfcfec92f38eb871fb37c01384b
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 23a1b8db894dc279e46164f137243e66c1749eb0647a5839e94355e9303a8f74
boom! running `docker start -a 23a1b8db894dc279e46164f137243e66c1749eb0647a5839e94355e9303a8f74`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/rconsole-f68416aa62f8c5c0
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 23a1b8db894dc279e46164f137243e66c1749eb0647a5839e94355e9303a8f74`
blam! 23a1b8db894dc279e46164f137243e66c1749eb0647a5839e94355e9303a8f74
