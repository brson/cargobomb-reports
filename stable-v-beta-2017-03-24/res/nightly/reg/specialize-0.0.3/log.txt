boom! testing specialize-0.0.3 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! d3982e21f8931f033bd22ac3ebae5e75cb1c3018d4c81214b0c7574885103746
boom! running `docker start -a d3982e21f8931f033bd22ac3ebae5e75cb1c3018d4c81214b0c7574885103746`
kablam!    Compiling specialize v0.0.3 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.33 secs
boom! running `docker rm -f d3982e21f8931f033bd22ac3ebae5e75cb1c3018d4c81214b0c7574885103746`
blam! d3982e21f8931f033bd22ac3ebae5e75cb1c3018d4c81214b0c7574885103746
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 566980b3fed5c016ebfcd21fa4699639cce34e235cd04d44571244603263dd4d
boom! running `docker start -a 566980b3fed5c016ebfcd21fa4699639cce34e235cd04d44571244603263dd4d`
kablam!    Compiling specialize v0.0.3 (file:///source)
kablam! warning: patterns aren't allowed in methods without bodies
kablam!    --> src/lib.rs:594:65
kablam!     |
kablam! 593 |               specialize! {
kablam!     |  _____________- starting here...
kablam! 594 | |                 trait fn WriteTest::write_test[W: Write](&self, mut w: W) -> io::Result<()>;
kablam!     | |                                                                 ^^^^^
kablam! 595 | |
kablam! 596 | |                 match impl[T: ?Sized] for T {
kablam! 597 | |                     where [T: Display] => writeln!(w, "{}", self),
kablam! 598 | |                     _ => Err(io::Error::new(io::ErrorKind::Other, "unimplemented")),
kablam! 599 | |                 }
kablam! 600 | |             }
kablam!     | |_____________- ...ending here: in this macro invocation
kablam!     |
kablam!     = note: #[warn(patterns_in_fns_without_body)] on by default
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #35203 <https://github.com/rust-lang/rust/issues/35203>
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/lib.rs:594:65
kablam!     |
kablam! 593 |               specialize! {
kablam!     |  _____________- starting here...
kablam! 594 | |                 trait fn WriteTest::write_test[W: Write](&self, mut w: W) -> io::Result<()>;
kablam!     | |                                                                 ^^^^^
kablam! 595 | |
kablam! 596 | |                 match impl[T: ?Sized] for T {
kablam! 597 | |                     where [T: Display] => writeln!(w, "{}", self),
kablam! 598 | |                     _ => Err(io::Error::new(io::ErrorKind::Other, "unimplemented")),
kablam! 599 | |                 }
kablam! 600 | |             }
kablam!     | |_____________- ...ending here: in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `w`
kablam!    --> src/lib.rs:594:65
kablam!     |
kablam! 593 |               specialize! {
kablam!     |  _____________- starting here...
kablam! 594 | |                 trait fn WriteTest::write_test[W: Write](&self, mut w: W) -> io::Result<()>;
kablam!     | |                                                                 ^^^^^
kablam! 595 | |
kablam! 596 | |                 match impl[T: ?Sized] for T {
kablam! 597 | |                     where [T: Display] => writeln!(w, "{}", self),
kablam! 598 | |                     _ => Err(io::Error::new(io::ErrorKind::Other, "unimplemented")),
kablam! 599 | |                 }
kablam! 600 | |             }
kablam!     | |_____________- ...ending here: in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.74 secs
boom! running `docker rm -f 566980b3fed5c016ebfcd21fa4699639cce34e235cd04d44571244603263dd4d`
blam! 566980b3fed5c016ebfcd21fa4699639cce34e235cd04d44571244603263dd4d
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! ea8d8f201fb8471fbdcf1993439f76393c600ad5f80ab11ae5c6e52f646b4d3f
boom! running `docker start -a ea8d8f201fb8471fbdcf1993439f76393c600ad5f80ab11ae5c6e52f646b4d3f`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/specialize-1f28c552bef3b1e1
blam! 
blam! running 7 tests
blam! test test::constrain_eq ... ok
blam! test test::by_value ... ok
blam! test test::constrain_eq_value ... ok
blam! test test::by_type ... ok
blam! test test::constrain_mut ... ok
blam! test test::constrain_ref ... ok
blam! test test::fn_bounds ... ok
blam! 
blam! test result: ok. 7 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests specialize
blam! 
blam! running 3 tests
blam! test src/lib.rs -  (line 13) ... ok
blam! test src/lib.rs -  (line 49) ... ok
blam! test src/lib.rs -  (line 70) ... ok
blam! 
blam! test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f ea8d8f201fb8471fbdcf1993439f76393c600ad5f80ab11ae5c6e52f646b4d3f`
blam! ea8d8f201fb8471fbdcf1993439f76393c600ad5f80ab11ae5c6e52f646b4d3f
