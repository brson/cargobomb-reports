boom! testing cronparse-0.5.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 792fa11af4333e50025cf1741b286912bfe3570f280f53044a4d03585ca746df
boom! running `docker start -a 792fa11af4333e50025cf1741b286912bfe3570f280f53044a4d03585ca746df`
kablam!    Compiling cronparse v0.5.1 (file:///source)
kablam! warning: unused import: `FromIterator`
kablam!  --> src/schedule.rs:8:17
kablam!   |
kablam! 8 | use std::iter::{FromIterator, IntoIterator, Iterator};
kablam!   |                 ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::iter::FromIterator`
kablam!  --> src/crontab.rs:2:5
kablam!   |
kablam! 2 | use std::iter::FromIterator;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.64 secs
boom! running `docker rm -f 792fa11af4333e50025cf1741b286912bfe3570f280f53044a4d03585ca746df`
blam! 792fa11af4333e50025cf1741b286912bfe3570f280f53044a4d03585ca746df
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 2d68642b83e0577a8c7d577e4d7ce163c1cbfb4225239e58b22a6406dc40f123
boom! running `docker start -a 2d68642b83e0577a8c7d577e4d7ce163c1cbfb4225239e58b22a6406dc40f123`
kablam!    Compiling cronparse v0.5.1 (file:///source)
kablam! warning: unused import: `FromIterator`
kablam!  --> src/schedule.rs:8:17
kablam!   |
kablam! 8 | use std::iter::{FromIterator, IntoIterator, Iterator};
kablam!   |                 ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::iter::FromIterator`
kablam!  --> src/crontab.rs:2:5
kablam!   |
kablam! 2 | use std::iter::FromIterator;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.55 secs
boom! running `docker rm -f 2d68642b83e0577a8c7d577e4d7ce163c1cbfb4225239e58b22a6406dc40f123`
blam! 2d68642b83e0577a8c7d577e4d7ce163c1cbfb4225239e58b22a6406dc40f123
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 137537c9e535c6415ac7d4d2e59d8e6a22e1b5782f5b5e5e0699c8d5d64c9c05
boom! running `docker start -a 137537c9e535c6415ac7d4d2e59d8e6a22e1b5782f5b5e5e0699c8d5d64c9c05`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/cronparse-287d00258741cc31
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/skeptic-5ea1106a1ac90b47
blam! 
blam! running 1 test
kablam! thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Error { repr: Os { code: 2, message: "No such file or directory" } }', /checkout/src/libcore/result.rs:860
kablam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! test readme_0 ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- readme_0 stdout ----
blam! 	thread 'readme_0' panicked at 'command failed', /cargo-home/registry/src/github.com-1ecc6299db9ec823/skeptic-0.5.0/lib.rs:351
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! 
blam! failures:
blam!     readme_0
blam! 
blam! test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f 137537c9e535c6415ac7d4d2e59d8e6a22e1b5782f5b5e5e0699c8d5d64c9c05`
blam! 137537c9e535c6415ac7d4d2e59d8e6a22e1b5782f5b5e5e0699c8d5d64c9c05
