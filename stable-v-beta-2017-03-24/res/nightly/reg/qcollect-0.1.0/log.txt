boom! testing qcollect-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 095cea63d2f59863b3fea32b05cf9e0b2fe1a301a20e3e309ba069630a75a005
boom! running `docker start -a 095cea63d2f59863b3fea32b05cf9e0b2fe1a301a20e3e309ba069630a75a005`
kablam!    Compiling raw-vec v0.1.0
kablam!    Compiling qindex_multi v0.1.2
kablam! error[E0557]: feature has been removed
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/raw-vec-0.1.0/src/lib.rs:11:16
kablam!    |
kablam! 11 | #![feature(rt, unsafe_no_drop_flag, unique, heap_api, box_raw, filling_drop)]
kablam!    |                ^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error[E0432]: unresolved import `std::rt::heap`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/raw-vec-0.1.0/src/lib.rs:16:5
kablam!    |
kablam! 16 | use std::rt::heap;
kablam!    |     ^^^^^^^^^^^^^ no `heap` in `rt`
kablam! 
kablam! error[E0432]: unresolved import `std::rt::util::abort`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/raw-vec-0.1.0/src/lib.rs:17:5
kablam!    |
kablam! 17 | use std::rt::util::abort;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^ Could not find `util` in `rt`
kablam! 
kablam! error[E0425]: cannot find value `POST_DROP_USIZE` in module `mem`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/raw-vec-0.1.0/src/lib.rs:413:21
kablam!     |
kablam! 413 |         self.cap != mem::POST_DROP_USIZE
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^ not found in `mem`
kablam! 
kablam! error: The attribute `unsafe_no_drop_flag` is currently unknown to the compiler and may have meaning added to it in the future (see issue #29642)
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/raw-vec-0.1.0/src/lib.rs:46:1
kablam!    |
kablam! 46 | #[unsafe_no_drop_flag]
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: add #![feature(custom_attribute)] to the crate attributes to enable
kablam! 
kablam! error: aborting due to previous error
kablam! 
kablam! error: Could not compile `raw-vec`.
blam! Build failed, waiting for other jobs to finish...
kablam! error[E0309]: the associated type `<C as std::ops::Index<Idx>>::Output` may not live long enough
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/qindex_multi-0.1.2/src/lib.rs:115:5
kablam!     |
kablam! 115 |     type Item = &'c <C as Index<Idx>>::Output;
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: consider adding an explicit lifetime bound `<C as std::ops::Index<Idx>>::Output: 'c`...
kablam! note: ...so that the reference type `&'c <C as std::ops::Index<Idx>>::Output` does not outlive the data it points at
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/qindex_multi-0.1.2/src/lib.rs:115:5
kablam!     |
kablam! 115 |     type Item = &'c <C as Index<Idx>>::Output;
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error[E0309]: the associated type `<C as std::ops::Index<Idx>>::Output` may not live long enough
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/qindex_multi-0.1.2/src/lib.rs:131:5
kablam!     |
kablam! 131 |     type Item = &'c mut <C as Index<Idx>>::Output;
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: consider adding an explicit lifetime bound `<C as std::ops::Index<Idx>>::Output: 'c`...
kablam! note: ...so that the reference type `&'c mut <C as std::ops::Index<Idx>>::Output` does not outlive the data it points at
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/qindex_multi-0.1.2/src/lib.rs:131:5
kablam!     |
kablam! 131 |     type Item = &'c mut <C as Index<Idx>>::Output;
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error: aborting due to 2 previous errors
kablam! 
kablam! error: build failed
boom! running `docker rm -f 095cea63d2f59863b3fea32b05cf9e0b2fe1a301a20e3e309ba069630a75a005`
blam! 095cea63d2f59863b3fea32b05cf9e0b2fe1a301a20e3e309ba069630a75a005
