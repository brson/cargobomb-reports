boom! testing novaxml-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 50b5ad962a4edb7768eae7f9ffa56f4b6632f6e2df9f991290367c7bba598f13
boom! running `docker start -a 50b5ad962a4edb7768eae7f9ffa56f4b6632f6e2df9f991290367c7bba598f13`
kablam!    Compiling novaxml v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.61 secs
boom! running `docker rm -f 50b5ad962a4edb7768eae7f9ffa56f4b6632f6e2df9f991290367c7bba598f13`
blam! 50b5ad962a4edb7768eae7f9ffa56f4b6632f6e2df9f991290367c7bba598f13
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 408fcc146d91df788a264c619783981e8b7a473be723fc5c70da01a688445b14
boom! running `docker start -a 408fcc146d91df788a264c619783981e8b7a473be723fc5c70da01a688445b14`
kablam!    Compiling novaxml v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.72 secs
boom! running `docker rm -f 408fcc146d91df788a264c619783981e8b7a473be723fc5c70da01a688445b14`
blam! 408fcc146d91df788a264c619783981e8b7a473be723fc5c70da01a688445b14
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! d1f9e12c248ec6646955fe6ddd6e512df534dd599282b30854fbf611f464323f
boom! running `docker start -a d1f9e12c248ec6646955fe6ddd6e512df534dd599282b30854fbf611f464323f`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/novaxml-1ad41a202d2d89fb
blam! 
blam! running 4 tests
blam! test tests::parse_file ... FAILED
blam! test tests::iter_children ... FAILED
blam! test tests::get_child ... FAILED
blam! test tests::tokenize_string ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- tests::parse_file stdout ----
blam! 	Error while reading file at res/player_light.sprite: No such file or directory (os error 2)
blam! thread 'tests::parse_file' panicked at 'loading failed: Couldn't make String from file', src/tests.rs:9
blam! 
blam! ---- tests::iter_children stdout ----
blam! 	Error while reading file at res/player_light.sprite: No such file or directory (os error 2)
blam! thread 'tests::iter_children' panicked at 'loading failed: Couldn't make String from file', src/tests.rs:35
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! ---- tests::get_child stdout ----
blam! 	Error while reading file at res/player_light.sprite: No such file or directory (os error 2)
blam! thread 'tests::get_child' panicked at 'loading failed: Couldn't make String from file', src/tests.rs:52
blam! 
blam! ---- tests::tokenize_string stdout ----
blam! 	Error while reading file at res/test.xml: No such file or directory (os error 2)
blam! thread 'tests::tokenize_string' panicked at 'failed to load string from file', src/tests.rs:20
blam! 
blam! 
blam! failures:
blam!     tests::get_child
blam!     tests::iter_children
blam!     tests::parse_file
blam!     tests::tokenize_string
blam! 
blam! test result: FAILED. 0 passed; 4 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f d1f9e12c248ec6646955fe6ddd6e512df534dd599282b30854fbf611f464323f`
blam! d1f9e12c248ec6646955fe6ddd6e512df534dd599282b30854fbf611f464323f
