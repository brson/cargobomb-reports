boom! testing basichll-0.3.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 17ac424c26ab7d0a431e1324a8809d44f6b98c4ed4fe200f29135b5a5ebce43e
boom! running `docker start -a 17ac424c26ab7d0a431e1324a8809d44f6b98c4ed4fe200f29135b5a5ebce43e`
kablam!    Compiling basichll v0.3.1 (file:///source)
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead
kablam!   --> src/lib.rs:12:32
kablam!    |
kablam! 12 | use std::hash::{ Hash, Hasher, SipHasher };
kablam!    |                                ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(deprecated)] on by default
kablam! 
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead
kablam!    --> src/lib.rs:126:26
kablam!     |
kablam! 126 |         let mut hasher = SipHasher::new();
kablam!     |                          ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(deprecated)] on by default
kablam! 
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead
kablam!    --> src/lib.rs:126:26
kablam!     |
kablam! 126 |         let mut hasher = SipHasher::new();
kablam!     |                          ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(deprecated)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.1 secs
boom! running `docker rm -f 17ac424c26ab7d0a431e1324a8809d44f6b98c4ed4fe200f29135b5a5ebce43e`
blam! 17ac424c26ab7d0a431e1324a8809d44f6b98c4ed4fe200f29135b5a5ebce43e
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 8a71aaa2ab786931b0f32a9e525aae3e6575f99c01e28b7b25e028404352544b
boom! running `docker start -a 8a71aaa2ab786931b0f32a9e525aae3e6575f99c01e28b7b25e028404352544b`
kablam!    Compiling basichll v0.3.1 (file:///source)
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead
kablam!   --> src/lib.rs:12:32
kablam!    |
kablam! 12 | use std::hash::{ Hash, Hasher, SipHasher };
kablam!    |                                ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(deprecated)] on by default
kablam! 
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead
kablam!    --> src/lib.rs:126:26
kablam!     |
kablam! 126 |         let mut hasher = SipHasher::new();
kablam!     |                          ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(deprecated)] on by default
kablam! 
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead
kablam!    --> src/lib.rs:126:26
kablam!     |
kablam! 126 |         let mut hasher = SipHasher::new();
kablam!     |                          ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(deprecated)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.47 secs
boom! running `docker rm -f 8a71aaa2ab786931b0f32a9e525aae3e6575f99c01e28b7b25e028404352544b`
blam! 8a71aaa2ab786931b0f32a9e525aae3e6575f99c01e28b7b25e028404352544b
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! a33249bdec6afa1c36e36ea4ede5a06465a332fbf2d4bd207d35744a0e176626
boom! running `docker start -a a33249bdec6afa1c36e36ea4ede5a06465a332fbf2d4bd207d35744a0e176626`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/addition-761ea62b41433f13
blam! 
blam! running 4 tests
blam! test tests::adding_two_empty_hlls_results_in_an_empty_hll ... ok
blam! test tests::adding_together_two_hlls_preserves_the_sum_of_their_counts ... ok
blam! test tests::add_together_two_hlls_doesnt_double_count_duplicate_elements ... ok
blam! test tests::monoid_laws_should_hold_for_hll ... ok
blam! 
blam! test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/basichll-e181b5084740d2f8
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/counting-7b7c18473de10997
blam! 
blam! running 2 tests
blam! test tests::a_hll_can_count_heterogenuous_items ... ok
blam! test tests::a_hll_can_count_small_numbers ... ok
blam! 
blam! test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/equality-7349b559dc2272d1
blam! 
blam! running 3 tests
blam! test tests::adding_two_different_elements_to_two_different_hlls_produces_differences ... ok
blam! test tests::a_non_empty_hll_is_not_equal_to_an_empty_one ... ok
blam! test tests::two_empty_hlls_are_equal ... ok
blam! 
blam! test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/estimation-9bb65c8543b7c539
blam! 
blam! running 2 tests
blam! test tests::can_estimate_a_small_range_subset_of_the_system_dictionary ... FAILED
blam! test tests::can_estimate_a_large_sequence_of_floating_points ... ok
blam! 
blam! failures:
blam! 
blam! ---- tests::can_estimate_a_small_range_subset_of_the_system_dictionary stdout ----
blam! 	thread 'tests::can_estimate_a_small_range_subset_of_the_system_dictionary' panicked at 'called `Result::unwrap()` on an `Err` value: Error { repr: Os { code: 2, message: "No such file or directory" } }', /checkout/src/libcore/result.rs:860
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
kablam! error: test failed
blam! 
blam! 
blam! failures:
blam!     tests::can_estimate_a_small_range_subset_of_the_system_dictionary
blam! 
blam! test result: FAILED. 1 passed; 1 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f a33249bdec6afa1c36e36ea4ede5a06465a332fbf2d4bd207d35744a0e176626`
blam! a33249bdec6afa1c36e36ea4ede5a06465a332fbf2d4bd207d35744a0e176626
