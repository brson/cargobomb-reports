boom! testing numeral-0.3.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! bad06e6b5a99a20103bddfdb390d97420cef061be0d54b12fd23ce39ff92346f
boom! running `docker start -a bad06e6b5a99a20103bddfdb390d97420cef061be0d54b12fd23ce39ff92346f`
kablam!    Compiling numeral v0.3.1 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.73 secs
boom! running `docker rm -f bad06e6b5a99a20103bddfdb390d97420cef061be0d54b12fd23ce39ff92346f`
blam! bad06e6b5a99a20103bddfdb390d97420cef061be0d54b12fd23ce39ff92346f
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 38edbbe82807872b853b8a986148580210f88a5c9a310339cc600f239304da51
boom! running `docker start -a 38edbbe82807872b853b8a986148580210f88a5c9a310339cc600f239304da51`
kablam!    Compiling numeral v0.3.1 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.69 secs
boom! running `docker rm -f 38edbbe82807872b853b8a986148580210f88a5c9a310339cc600f239304da51`
blam! 38edbbe82807872b853b8a986148580210f88a5c9a310339cc600f239304da51
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! fffa946adb6d2006a9ae743ba19ee60dbb01e4953a792e1b0428734c0646b13f
boom! running `docker start -a fffa946adb6d2006a9ae743ba19ee60dbb01e4953a792e1b0428734c0646b13f`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/lib-7cc2465c21a088d6
blam! 
blam! running 23 tests
blam! test call_on_critical_ranges_u32 ... ok
blam! test call_on_critical_ranges_isize ... ok
blam! test call_on_critical_ranges_u64 ... ok
blam! test call_on_min_max_i16 ... ok
blam! test call_on_min_max_i32 ... ok
blam! test call_on_critical_ranges_i32 ... ok
blam! test call_on_min_max_i64 ... ok
blam! test call_on_min_max_i8 ... ok
blam! test call_on_min_max_isize ... ok
blam! test call_on_min_max_u16 ... ok
blam! test call_on_min_max_u32 ... ok
blam! test call_on_min_max_u64 ... ok
blam! test call_on_min_max_u8 ... ok
blam! test call_on_min_max_usize ... ok
blam! test call_on_critical_ranges_usize ... ok
blam! test call_on_range_i8 ... ok
blam! test call_on_critical_ranges_i64 ... ok
blam! test call_on_range_u8 ... ok
blam! test cardinal_value_min_max_int ... ok
blam! test cardinal_value_min_max_ptr ... ok
blam! test cardinal_value_m256_256 ... ok
blam! test call_on_range_i16 ... ok
kablam!      Running /target/debug/deps/numeral-1e8dd4abfc2141bc
blam! test call_on_range_u16 ... ok
blam! 
blam! test result: ok. 23 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests numeral
blam! 
blam! running 2 tests
blam! test src/lib.rs -  (line 10) ... ok
blam! test src/lib.rs - Cardinal::cardinal (line 74) ... ok
blam! 
blam! test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f fffa946adb6d2006a9ae743ba19ee60dbb01e4953a792e1b0428734c0646b13f`
blam! fffa946adb6d2006a9ae743ba19ee60dbb01e4953a792e1b0428734c0646b13f
