boom! testing google-cloudsearch1-0.1.6+20150416 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 380f998a6b72ed3f3fe21741434d782259e0b9abb3541e23e2dd85ede4833741
boom! running `docker start -a 380f998a6b72ed3f3fe21741434d782259e0b9abb3541e23e2dd85ede4833741`
kablam!    Compiling aster v0.27.0
kablam!    Compiling quasi v0.20.1
kablam!    Compiling ring v0.7.1
kablam! error: failed to run custom build command for `ring v0.7.1`
kablam! process didn't exit successfully: `/target/debug/build/ring-9381a93ef658a2ac/build-script-build` (exit code: 101)
kablam! --- stdout
kablam! HOSTNAME: 380f998a6b72
kablam! SHELL: /bin/bash
kablam! USER: cargobomb
kablam! CMD: cargo +nightly build --frozen
kablam! PATH: /cargo-home/bin:/cargo-home/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
kablam! MAIL: /var/mail/cargobomb
kablam! CARGO_HOME: /cargo-home
kablam! PWD: /source
kablam! USER_ID: 500
kablam! SOURCE_DIR: /source
kablam! SHLVL: 3
kablam! HOME: /home/cargobomb
kablam! RUSTUP_HOME: /rustup-home
kablam! LOGNAME: cargobomb
kablam! CARGO_TARGET_DIR: /target
kablam! _: /cargo-home/bin/cargo
kablam! LD_LIBRARY_PATH: /target/debug/deps:/rustup-home/toolchains/nightly-x86_64-unknown-linux-gnu/lib
kablam! RUST_RECURSION_COUNT: 1
kablam! RUSTUP_TOOLCHAIN: nightly-x86_64-unknown-linux-gnu
kablam! SSL_CERT_FILE: /usr/lib/ssl/certs/ca-certificates.crt
kablam! SSL_CERT_DIR: /usr/lib/ssl/certs
kablam! CARGO_CFG_TARGET_FEATURE: sse,sse2
kablam! TARGET: x86_64-unknown-linux-gnu
kablam! CARGO_FEATURE_USE_HEAP: 1
kablam! CARGO_CFG_UNIX: 
kablam! CARGO_CFG_TARGET_THREAD_LOCAL: 
kablam! RUSTDOC: rustdoc
kablam! CARGO_CFG_TARGET_VENDOR: unknown
kablam! CARGO_CFG_TARGET_HAS_ATOMIC: 16,32,64,8,ptr
kablam! CARGO_CFG_TARGET_FAMILY: unix
kablam! HOST: x86_64-unknown-linux-gnu
kablam! CARGO_FEATURE_DEV_URANDOM_FALLBACK: 1
kablam! PROFILE: debug
kablam! CARGO_CFG_TARGET_ARCH: x86_64
kablam! CARGO_PKG_DESCRIPTION: Safe, fast, small crypto using Rust.
kablam! OPT_LEVEL: 0
kablam! CARGO_CFG_TARGET_OS: linux
kablam! CARGO_PKG_VERSION_MAJOR: 0
kablam! CARGO_FEATURE_RSA_SIGNING: 1
kablam! CARGO_FEATURE_DEFAULT: 1
kablam! CARGO_CFG_PROC_MACRO: 
kablam! OUT_DIR: /target/debug/build/ring-76acb9c1be5e4776/out
kablam! CARGO_MANIFEST_DIR: /cargo-home/registry/src/github.com-1ecc6299db9ec823/ring-0.7.1
kablam! RUSTC: rustc
kablam! CARGO_PKG_HOMEPAGE: 
kablam! CARGO_CFG_TARGET_POINTER_WIDTH: 64
kablam! CARGO_PKG_VERSION_MINOR: 7
kablam! CARGO_PKG_VERSION_PRE: 
kablam! NUM_JOBS: 4
kablam! CARGO_CFG_DEBUG_ASSERTIONS: 
kablam! CARGO_PKG_VERSION: 0.7.1
kablam! DEBUG: true
kablam! CARGO_CFG_TARGET_ENV: gnu
kablam! CARGO_PKG_NAME: ring
kablam! CARGO_PKG_VERSION_PATCH: 1
kablam! CARGO_PKG_AUTHORS: Brian Smith <brian@briansmith.org>
kablam! CARGO_CFG_TARGET_ENDIAN: little
kablam! 
kablam! --- stderr
kablam! thread 'main' panicked at 'failed to execute make: No such file or directory (os error 2)', /cargo-home/registry/src/github.com-1ecc6299db9ec823/ring-0.7.1/build.rs:230
kablam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
kablam! 
blam! Build failed, waiting for other jobs to finish...
kablam! error[E0425]: cannot find function `intern_and_get_ident` in module `token`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:244:13
kablam!     |
kablam! 244 |             token::intern_and_get_ident(self), ast::StrStyle::Cooked);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam! 
kablam! error[E0425]: cannot find function `intern_and_get_ident` in module `token`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:253:13
kablam!     |
kablam! 253 |             token::intern_and_get_ident(self), ast::StrStyle::Cooked);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam! 
kablam! error[E0412]: cannot find type `Attribute_` in module `ast`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:568:21
kablam!     |
kablam! 568 | impl_wrap_repeat! { ast::Attribute_ }
kablam!     | --------------------^^^^^^^^^^^^^^^--
kablam!     | |                   |
kablam!     | |                   did you mean `ast::Attribute`?
kablam!     | in this macro invocation
kablam! 
kablam! error[E0412]: cannot find type `Attribute_` in module `ast`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:568:21
kablam!     |
kablam! 568 | impl_wrap_repeat! { ast::Attribute_ }
kablam!     | --------------------^^^^^^^^^^^^^^^--
kablam!     | |                   |
kablam!     | |                   did you mean `ast::Attribute`?
kablam!     | in this macro invocation
kablam! 
kablam! error[E0412]: cannot find type `Attribute_` in module `ast`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:568:21
kablam!     |
kablam! 568 | impl_wrap_repeat! { ast::Attribute_ }
kablam!     | --------------------^^^^^^^^^^^^^^^--
kablam!     | |                   |
kablam!     | |                   did you mean `ast::Attribute`?
kablam!     | in this macro invocation
kablam! 
kablam! error[E0412]: cannot find type `Attribute_` in module `ast`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:568:21
kablam!     |
kablam! 568 | impl_wrap_repeat! { ast::Attribute_ }
kablam!     | --------------------^^^^^^^^^^^^^^^--
kablam!     | |                   |
kablam!     | |                   did you mean `ast::Attribute`?
kablam!     | in this macro invocation
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:96:75
kablam!    |
kablam! 96 |         vec![TokenTree::Token(DUMMY_SP, token::Interpolated(token::NtPath(Box::new(self.clone()))))]
kablam!    |                                                                           ^^^^^^^^^^^^^^^^^^^^^^ expected struct `syntax::ast::Path`, found struct `std::boxed::Box`
kablam!    |
kablam!    = note: expected type `syntax::ast::Path`
kablam!               found type `std::boxed::Box<syntax::ast::Path>`
kablam!    = help: here are some functions which might fulfill your needs:
kablam!            - .default_to_global()
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:96:61
kablam!    |
kablam! 96 |         vec![TokenTree::Token(DUMMY_SP, token::Interpolated(token::NtPath(Box::new(self.clone()))))]
kablam!    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!    |
kablam!    = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!               found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:102:62
kablam!     |
kablam! 102 |         vec![TokenTree::Token(self.span, token::Interpolated(token::NtTy(P(self.clone()))))]
kablam!     |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!     |
kablam!     = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:108:62
kablam!     |
kablam! 108 |         vec![TokenTree::Token(self.span, token::Interpolated(token::NtTy(self.clone())))]
kablam!     |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!     |
kablam!     = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error[E0432]: unresolved import `syntax::parse::token::keywords`
kablam!  --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/item.rs:8:5
kablam!   |
kablam! 8 | use syntax::parse::token::keywords;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `keywords` in `parse::token`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:114:62
kablam!     |
kablam! 114 |         vec![TokenTree::Token(self.span, token::Interpolated(token::NtBlock(self.clone())))]
kablam!     |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!     |
kablam!     = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:120:62
kablam!     |
kablam! 120 |         vec![TokenTree::Token(self.span, token::Interpolated(token::NtItem(self.clone())))]
kablam!     |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!     |
kablam!     = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:126:80
kablam!     |
kablam! 126 |         vec![TokenTree::Token(self.span, token::Interpolated(token::NtImplItem(self.clone())))]
kablam!     |                                                                                ^^^^^^^^^^^^ expected struct `syntax::ast::ImplItem`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `syntax::ast::ImplItem`
kablam!                found type `syntax::ptr::P<syntax::ast::ImplItem>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:126:62
kablam!     |
kablam! 126 |         vec![TokenTree::Token(self.span, token::Interpolated(token::NtImplItem(self.clone())))]
kablam!     |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!     |
kablam!     = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:132:81
kablam!     |
kablam! 132 |         vec![TokenTree::Token(self.span, token::Interpolated(token::NtTraitItem(self.clone())))]
kablam!     |                                                                                 ^^^^^^^^^^^^ expected struct `syntax::ast::TraitItem`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `syntax::ast::TraitItem`
kablam!                found type `syntax::ptr::P<syntax::ast::TraitItem>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:132:62
kablam!     |
kablam! 132 |         vec![TokenTree::Token(self.span, token::Interpolated(token::NtTraitItem(self.clone())))]
kablam!     |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!     |
kablam!     = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error[E0061]: this function takes 3 parameters but 4 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:144:45
kablam!     |
kablam! 144 |         panictry!(parse_tts_from_source_str("<quote expansion>".to_string(), s, cx.cfg(), cx.parse_sess()))
kablam!     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 3 parameters
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:144:9
kablam!     |
kablam! 144 |         panictry!(parse_tts_from_source_str("<quote expansion>".to_string(), s, cx.cfg(), cx.parse_sess()))
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::result::Result`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::tokenstream::TokenTree>`
kablam!                found type `std::result::Result<_, _>`
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:144:9
kablam!     |
kablam! 144 |         panictry!(parse_tts_from_source_str("<quote expansion>".to_string(), s, cx.cfg(), cx.parse_sess()))
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::result::Result`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::tokenstream::TokenTree>`
kablam!                found type `std::result::Result<_, _>`
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error[E0061]: this function takes 3 parameters but 4 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:159:45
kablam!     |
kablam! 159 |         panictry!(parse_tts_from_source_str("<quote expansion>".to_string(), s, cx.cfg(), cx.parse_sess()))
kablam!     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 3 parameters
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:159:9
kablam!     |
kablam! 159 |         panictry!(parse_tts_from_source_str("<quote expansion>".to_string(), s, cx.cfg(), cx.parse_sess()))
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::result::Result`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::tokenstream::TokenTree>`
kablam!                found type `std::result::Result<_, _>`
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:159:9
kablam!     |
kablam! 159 |         panictry!(parse_tts_from_source_str("<quote expansion>".to_string(), s, cx.cfg(), cx.parse_sess()))
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::result::Result`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::tokenstream::TokenTree>`
kablam!                found type `std::result::Result<_, _>`
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:166:75
kablam!     |
kablam! 166 |             TokenTree::Token(self.span, token::Interpolated(token::NtStmt(P(self.clone()))))
kablam!     |                                                                           ^^^^^^^^^^^^^^^ expected struct `syntax::ast::Stmt`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `syntax::ast::Stmt`
kablam!                found type `syntax::ptr::P<syntax::ast::Stmt>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .add_trailing_semicolon()
kablam!             - .unwrap()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:166:61
kablam!     |
kablam! 166 |             TokenTree::Token(self.span, token::Interpolated(token::NtStmt(P(self.clone()))))
kablam!     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!     |
kablam!     = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error[E0422]: cannot find struct, variant or union type `Attribute_` in module `ast`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:51:38
kablam!    |
kablam! 51 |         let attr = respan(self.span, ast::Attribute_ {
kablam!    |                                      ^^^^^^^^^^^^^^^ did you mean `ast::Attribute`?
kablam! 
kablam! error[E0412]error[E0308]: cannot find type `InternedString` in module `token`
kablam! : mismatched types   
kablam! -->    /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:171:11--> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:180:62
kablam! 
kablam!         ||
kablam! 
kablam! 180171  |         vec![TokenTree::Token(self.span, token::Interpolated(token::NtExpr(self.clone())))]| 
kablam!     name: token::InternedString,    
kablam! |                                                                  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^           expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`^^^^^^^^^^^^^^^^^^^^^
kablam!  not found in `token`
kablam!     |
kablam!     |
kablam!     = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                found type `syntax::parse::token::Nonterminal`
kablam! 
kablam!     = help: possible candidate is found in another module, you can import it into scope:
kablam!               `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:186:62
kablam!     |
kablam! 186 |         vec![TokenTree::Token(self.span, token::Interpolated(token::NtPat(self.clone())))]
kablam!     |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!     error[E0412]|
kablam! : cannot find type `InternedString` in module `token`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:281:11
kablam!     |
kablam! 281 |     name: token::InternedString,
kablam!     |           ^^^^^^^^^^^^^^^^^^^^^ not found in `token`    
kablam! = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                    found type `|syntax::parse::token::Nonterminal
kablam! `
kablam! 
kablam!     = help: possible candidate is found in another module, you can import it into scope:
kablam!               `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:192:61
kablam!     |
kablam! 192 |         vec![TokenTree::Token(DUMMY_SP, token::Interpolated(token::NtArm(self.clone())))]
kablam!     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!     |
kablam!     = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error[E0423]: expected function, found struct `ast::Name`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/item.rs:734:38
kablam!     |
kablam! 734 |         self.builder.build_item_kind(ast::Name(0).to_ident(), item_mac)
kablam!     |                                      ^^^^^^^^^
kablam!     |                                      |
kablam!     |                                      did you mean `ast::Name { /* fields */ }`?
kablam!     |                                      constructor is not visible here due to private fields
kablam! 
kablam! error[E0425]: cannot find function `intern` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/name.rs:18:9
kablam!    |
kablam! 18 |         token::intern(*self)
kablam!    |         ^^^^^^^^^^^^^ not found in `token`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/str.rs:12:37
kablam!    |
kablam! 12 |     fn to_interned_string(&self) -> token::InternedString;
kablam!    |                                     ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/str.rs:15:27
kablam!    |
kablam! 15 | impl ToInternedString for token::InternedString {
kablam!    |                           ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/str.rs:16:37
kablam!    |
kablam! 16 |     fn to_interned_string(&self) -> token::InternedString {
kablam!    |                                     ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/str.rs:22:37
kablam!    |
kablam! 22 |     fn to_interned_string(&self) -> token::InternedString {
kablam!    |                                     ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0425]: cannot find function `intern_and_get_ident` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/str.rs:23:9
kablam!    |
kablam! 23 |         token::intern_and_get_ident(self)
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/str.rs:28:37
kablam!    |
kablam! 28 |     fn to_interned_string(&self) -> token::InternedString {
kablam!    |                                     ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/str.rs:34:37
kablam!    |
kablam! 34 |     fn to_interned_string(&self) -> token::InternedString {
kablam!    |                                     ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/str.rs:40:37
kablam!    |
kablam! 40 |     fn to_interned_string(&self) -> token::InternedString {
kablam!    |                                     ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:218:75
kablam!     |
kablam! 218 |         vec![TokenTree::Token(DUMMY_SP, token::Interpolated(token::NtMeta(self.clone())))]
kablam!     |                                                                           ^^^^^^^^^^^^ expected struct `syntax::ast::MetaItem`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `syntax::ast::MetaItem`
kablam!                found type `syntax::ptr::P<syntax::ast::MetaItem>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:218:61
kablam!     |
kablam! 218 |         vec![TokenTree::Token(DUMMY_SP, token::Interpolated(token::NtMeta(self.clone())))]
kablam!     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `syntax::parse::token::Nonterminal`
kablam!     |
kablam!     = note: expected type `std::rc::Rc<syntax::parse::token::Nonterminal>`
kablam!                found type `syntax::parse::token::Nonterminal`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/lib.rs:63:47
kablam!    |
kablam! 63 |     pub fn interned_string<S>(&self, s: S) -> token::InternedString
kablam!    |                                               ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error: no field `node` on type `&syntax::ast::Attribute`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:227:17
kablam!     |
kablam! 227 |         if self.node.style == ast::AttrStyle::Inner {
kablam!     |                 ^^^^
kablam! 
kablam! error[E0560]: struct `syntax::tokenstream::Delimited` has no field named `open_span`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:232:13
kablam!     |
kablam! 232 |             open_span: self.span,
kablam!     |             ^^^^^^^^^^ `syntax::tokenstream::Delimited` does not have this field
kablam! 
kablam! error: no field `node` on type `&syntax::ast::Attribute`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:233:23
kablam!     |
kablam! 233 |             tts: self.node.value.to_tokens(cx),
kablam!     |                       ^^^^
kablam! 
kablam! error[E0560]: struct `syntax::tokenstream::Delimited` has no field named `close_span`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:234:13
kablam!     |
kablam! 234 |             close_span: self.span,
kablam!     |             ^^^^^^^^^^^ `syntax::tokenstream::Delimited` does not have this field
kablam! 
kablam! error[E0560]: struct `syntax::tokenstream::Delimited` has no field named `open_span`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:262:13
kablam!     |
kablam! 262 |             open_span: DUMMY_SP,
kablam!     |             ^^^^^^^^^^ `syntax::tokenstream::Delimited` does not have this field
kablam! 
kablam! error[E0560]: struct `syntax::tokenstream::Delimited` has no field named `close_span`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:264:13
kablam!     |
kablam! 264 |             close_span: DUMMY_SP,
kablam!     |             ^^^^^^^^^^^ `syntax::tokenstream::Delimited` does not have this field
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:315:45
kablam!     |
kablam! 315 |                 let lit = ast::LitKind::Int(val as u64, ast::LitIntType::Signed($tag));
kablam!     |                                             ^^^^^^^^^^ expected u128, found u64
kablam! ...
kablam! 331 | impl_to_tokens_int! { signed, isize, ast::IntTy::Is }
kablam!     | ----------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:315:45
kablam!     |
kablam! 315 |                 let lit = ast::LitKind::Int(val as u64, ast::LitIntType::Signed($tag));
kablam!     |                                             ^^^^^^^^^^ expected u128, found u64
kablam! ...
kablam! 332 | impl_to_tokens_int! { signed, i8,  ast::IntTy::I8 }
kablam!     | --------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:315:45
kablam!     |
kablam! 315 |                 let lit = ast::LitKind::Int(val as u64, ast::LitIntType::Signed($tag));
kablam!     |                                             ^^^^^^^^^^ expected u128, found u64
kablam! ...
kablam! 333 | impl_to_tokens_int! { signed, i16, ast::IntTy::I16 }
kablam!     | ---------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:315:45
kablam!     |
kablam! 315 |                 let lit = ast::LitKind::Int(val as u64, ast::LitIntType::Signed($tag));
kablam!     |                                             ^^^^^^^^^^ expected u128, found u64
kablam! ...
kablam! 334 | impl_to_tokens_int! { signed, i32, ast::IntTy::I32 }
kablam!     | ---------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:315:45
kablam!     |
kablam! 315 |                 let lit = ast::LitKind::Int(val as u64, ast::LitIntType::Signed($tag));
kablam!     |                                             ^^^^^^^^^^ expected u128, found u64
kablam! ...
kablam! 335 | impl_to_tokens_int! { signed, i64, ast::IntTy::I64 }
kablam!     | ---------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:324:45
kablam!     |
kablam! 324 |                 let lit = ast::LitKind::Int(*self as u64, ast::LitIntType::Unsigned($tag));
kablam!     |                                             ^^^^^^^^^^^^ expected u128, found u64
kablam! ...
kablam! 337 | impl_to_tokens_int! { unsigned, usize, ast::UintTy::Us }
kablam!     | -------------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:324:45
kablam!     |
kablam! 324 |                 let lit = ast::LitKind::Int(*self as u64, ast::LitIntType::Unsigned($tag));
kablam!     |                                             ^^^^^^^^^^^^ expected u128, found u64
kablam! ...
kablam! 338 | impl_to_tokens_int! { unsigned, u8,   ast::UintTy::U8 }
kablam!     | ------------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:324:45
kablam!     |
kablam! 324 |                 let lit = ast::LitKind::Int(*self as u64, ast::LitIntType::Unsigned($tag));
kablam!     |                                             ^^^^^^^^^^^^ expected u128, found u64
kablam! ...
kablam! 339 | impl_to_tokens_int! { unsigned, u16,  ast::UintTy::U16 }
kablam!     | -------------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:324:45
kablam!     |
kablam! 324 |                 let lit = ast::LitKind::Int(*self as u64, ast::LitIntType::Unsigned($tag));
kablam!     |                                             ^^^^^^^^^^^^ expected u128, found u64
kablam! ...
kablam! 340 | impl_to_tokens_int! { unsigned, u32,  ast::UintTy::U32 }
kablam!     | -------------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:324:45
kablam!     |
kablam! 324 |                 let lit = ast::LitKind::Int(*self as u64, ast::LitIntType::Unsigned($tag));
kablam!     |                                             ^^^^^^^^^^^^ expected u128, found u64
kablam! ...
kablam! 341 | impl_to_tokens_int! { unsigned, u64,  ast::UintTy::U64 }
kablam!     | -------------------------------------------------------- in this macro invocation
kablam! 
kablam! error[E0061]: this function takes 3 parameters but 4 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:354:13
kablam!     |
kablam! 354 |             "<quote expansion>".to_string(),
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 3 parameters
kablam! 
kablam! error[E0061]: this function takes 3 parameters but 4 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:362:13
kablam!     |
kablam! 362 |             "<quote expansion>".to_string(),
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 3 parameters
kablam! 
kablam! error[E0061]: this function takes 3 parameters but 4 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:370:13
kablam!     |
kablam! 370 |             "<quote expansion>".to_string(),
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 3 parameters
kablam! 
kablam! error[E0061]: this function takes 3 parameters but 4 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:378:13
kablam!     |
kablam! 378 |             "<quote expansion>".to_string(),
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 3 parameters
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:377:9
kablam!     |
kablam! 377 |           panictry!(parse::parse_tts_from_source_str(
kablam!     |  _________^ starting here...
kablam! 378 | |             "<quote expansion>".to_string(),
kablam! 379 | |             s,
kablam! 380 | |             self.cfg(),
kablam! 381 | |             self.parse_sess()))
kablam!     | |_______________________________^ ...ending here: expected struct `std::vec::Vec`, found enum `std::result::Result`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::tokenstream::TokenTree>`
kablam!                found type `std::result::Result<_, _>`
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi-0.20.1/src/lib.rs:377:9
kablam!     |
kablam! 377 |           panictry!(parse::parse_tts_from_source_str(
kablam!     |  _________^ starting here...
kablam! 378 | |             "<quote expansion>".to_string(),
kablam! 379 | |             s,
kablam! 380 | |             self.cfg(),
kablam! 381 | |             self.parse_sess()))
kablam!     | |_______________________________^ ...ending here: expected struct `std::vec::Vec`, found enum `std::result::Result`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::tokenstream::TokenTree>`
kablam!                found type `std::result::Result<_, _>`
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error: aborting due to 45 previous errors
kablam! 
blam! Build failed, waiting for other jobs to finish...
kablam! error: Could not compile `quasi`.
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:57:30
kablam!    |
kablam! 57 |         self.callback.invoke(attr)
kablam!    |                              ^^^^ expected struct `syntax::ast::Attribute`, found struct `syntax::codemap::Spanned`
kablam!    |
kablam!    = note: expected type `syntax::ast::Attribute`
kablam!               found type `syntax::codemap::Spanned<_>`
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:62:30
kablam!    |
kablam! 62 |         self.build_meta_item(item)
kablam!    |                              ^^^^ expected struct `syntax::ast::MetaItem`, found struct `syntax::codemap::Spanned`
kablam!    |
kablam!    = note: expected type `syntax::ptr::P<syntax::ast::MetaItem>`
kablam!               found type `syntax::ptr::P<syntax::codemap::Spanned<syntax::ast::MetaItemKind>>`
kablam!    = help: here are some functions which might fulfill your needs:
kablam!            - .unwrap()
kablam! 
kablam! error: `ast::MetaItemKind::Word` is being called, but it is not a function
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:68:31
kablam!    |
kablam! 68 |         self.build_meta_item_(ast::MetaItemKind::Word(word.to_interned_string()))
kablam!    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: did you mean to write `ast::MetaItemKind::Word`?
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:199:60
kablam!     |
kablam! 199 |             respan(span, ast::NestedMetaItemKind::MetaItem(meta_item))
kablam!     |                                                            ^^^^^^^^^ expected struct `syntax::ast::MetaItem`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `syntax::ast::MetaItem`
kablam!                found type `syntax::ptr::P<syntax::ast::MetaItem>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam! 
kablam! error[E0271]: type mismatch resolving `<[closure@/cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:209:39: 209:67 span:_] as std::ops::FnOnce<(syntax::ast::MetaItemKind,)>>::Output == syntax::ptr::P<syntax::ast::MetaItem>`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:209:14
kablam!     |
kablam! 209 |         self.with_meta_items(iter.map(|item| P(respan(span, item))))
kablam!     |              ^^^^^^^^^^^^^^^ expected struct `syntax::codemap::Spanned`, found struct `syntax::ast::MetaItem`
kablam!     |
kablam!     = note: expected type `syntax::ptr::P<syntax::codemap::Spanned<syntax::ast::MetaItemKind>>`
kablam!                found type `syntax::ptr::P<syntax::ast::MetaItem>`
kablam!     = note: required because of the requirements on the impl of `std::iter::Iterator` for `std::iter::Map<<I as std::iter::IntoIterator>::IntoIter, [closure@/cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:209:39: 209:67 span:_]>`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:213:77
kablam!     |
kablam! 213 |         self.items.push(respan(self.span, ast::NestedMetaItemKind::MetaItem(item)));
kablam!     |                                                                             ^^^^ expected struct `syntax::ast::MetaItem`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `syntax::ast::MetaItem`
kablam!                found type `syntax::ptr::P<syntax::ast::MetaItem>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:219:31
kablam!     |
kablam! 219 |         self.with_meta_item(P(respan(span, item)))
kablam!     |                               ^^^^^^^^^^^^^^^^^^ expected struct `syntax::ast::MetaItem`, found struct `syntax::codemap::Spanned`
kablam!     |
kablam!     = note: expected type `syntax::ast::MetaItem`
kablam!                found type `syntax::codemap::Spanned<syntax::ast::MetaItemKind>`
kablam! 
kablam! error: `ast::MetaItemKind::Word` is being called, but it is not a function
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:227:47
kablam!     |
kablam! 227 |         self.with_meta_items_(iter.map(|word| ast::MetaItemKind::Word(word.to_interned_string())))
kablam!     |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: did you mean to write `ast::MetaItemKind::Word`?
kablam! 
kablam! error: `ast::MetaItemKind::Word` is being called, but it is not a function
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:233:34
kablam!     |
kablam! 233 |         self.with_meta_item_kind(ast::MetaItemKind::Word(word.to_interned_string()))
kablam!     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: did you mean to write `ast::MetaItemKind::Word`?
kablam! 
kablam! error[E0061]: this function takes 1 parameter but 2 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:252:62
kablam!     |
kablam! 252 |         let item = respan(self.span, ast::MetaItemKind::List(self.name, self.items));
kablam!     |                                                              ^^^^^^^^^^^^^^^^^^^^^ expected 1 parameter
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:253:32
kablam!     |
kablam! 253 |         self.callback.invoke(P(item))
kablam!     |                                ^^^^ expected struct `syntax::ast::MetaItem`, found struct `syntax::codemap::Spanned`
kablam!     |
kablam!     = note: expected type `syntax::ast::MetaItem`
kablam!                found type `syntax::codemap::Spanned<syntax::ast::MetaItemKind>`
kablam! 
kablam! error[E0061]: this function takes 1 parameter but 2 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:288:49
kablam!     |
kablam! 288 |         let item = ast::MetaItemKind::NameValue(self.name, (*value).clone());
kablam!     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 parameter
kablam! 
kablam! error[E0061]: this function takes 2 parameters but 1 parameter was supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/expr.rs:422:51
kablam!     |
kablam! 422 |         self.build_expr_kind(ast::ExprKind::Break(None))
kablam!     |                                                   ^^^^ expected 2 parameters
kablam! 
kablam! error[E0061]: this function takes 2 parameters but 1 parameter was supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/expr.rs:429:51
kablam!     |
kablam! 429 |         self.build_expr_kind(ast::ExprKind::Break(Some(label)))
kablam!     |                                                   ^^^^^^^^^^^ expected 2 parameters
kablam! 
kablam! error[E0063]: missing fields `attrs`, `is_shorthand` in initializer of `syntax::ast::Field`
kablam!     --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/expr.rs:1078:21
kablam!      |
kablam! 1078 |         let field = ast::Field {
kablam!      |                     ^^^^^^^^^^ missing `attrs`, `is_shorthand`
kablam! 
kablam! error: no associated item named `Vec` found for type `syntax::ast::ExprKind` in the current scope
kablam!     --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/expr.rs:1782:38
kablam!      |
kablam! 1782 |         self.builder.build_expr_kind(ast::ExprKind::Vec(self.exprs))
kablam!      |                                      ^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error[E0308]: mismatched types
kablam!     --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/expr.rs:1942:92
kablam!      |
kablam! 1942 |         self.builder.build_expr_kind(ast::ExprKind::Closure(self.capture_by, self.fn_decl, block, self.span))
kablam!      |                                                                                            ^^^^^ expected struct `syntax::ast::Expr`, found struct `syntax::ast::Block`
kablam!      |
kablam!      = note: expected type `syntax::ptr::P<syntax::ast::Expr>`
kablam!                 found type `syntax::ptr::P<syntax::ast::Block>`
kablam!      = help: here are some functions which might fulfill your needs:
kablam!              - .unwrap()
kablam! 
kablam! error: no method named `into_vec` found for type `std::vec::Vec<syntax::ast::TyParam>` in the current scope
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/generics.rs:53:43
kablam!    |
kablam! 53 |             ty_params: generics.ty_params.into_vec(),
kablam!    |                                           ^^^^^^^^
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/generics.rs:203:31
kablam!     |
kablam! 203 |             ty_param.bounds = P::new();
kablam!     |                               ^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                found type `syntax::ptr::P<[_]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/generics.rs:216:24
kablam!     |
kablam! 216 |             ty_params: P::from_vec(self.ty_params),
kablam!     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParam>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TyParam]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/item.rs:889:13
kablam!     |
kablam! 889 |             P::from_vec(self.bounds),
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TyParamBound]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!     --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/item.rs:1103:45
kablam!      |
kablam! 1103 |         let node = ast::TraitItemKind::Type(bounds, ty);
kablam!      |                                             ^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!      |
kablam!      = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                 found type `syntax::ptr::P<[syntax::ast::TyParamBound]>`
kablam!      = help: here are some functions which might fulfill your needs:
kablam!              - .into_vec()
kablam!              - .to_vec()
kablam! 
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::LifetimeDef`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/lifetime.rs:43:9
kablam!    |
kablam! 43 |         ast::LifetimeDef {
kablam!    |         ^^^^^^^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::LifetimeDef`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/lifetime.rs:111:30
kablam!     |
kablam! 111 |         self.callback.invoke(ast::LifetimeDef {
kablam!     |                              ^^^^^^^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/lit.rs:61:42
kablam!    |
kablam! 61 |         self.build_lit(ast::LitKind::Int(value as u64, ast::LitIntType::Unsuffixed))
kablam!    |                                          ^^^^^^^^^^^^ expected u128, found u64
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/lit.rs:66:42
kablam!    |
kablam! 66 |         self.build_lit(ast::LitKind::Int(value as u64, ast::LitIntType::Signed(ty)))
kablam!    |                                          ^^^^^^^^^^^^ expected u128, found u64
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/lit.rs:94:42
kablam!    |
kablam! 94 |         self.build_lit(ast::LitKind::Int(value, ast::LitIntType::Unsuffixed))
kablam!    |                                          ^^^^^ expected u128, found u64
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/lit.rs:98:42
kablam!    |
kablam! 98 |         self.build_lit(ast::LitKind::Int(value, ast::LitIntType::Unsigned(ty)))
kablam!    |                                          ^^^^^ expected u128, found u64
kablam! 
kablam! error[E0061]: this function takes 3 parameters but 4 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/mac.rs:110:31
kablam!     |
kablam! 110 |     let mut cx = ExtCtxt::new(sess, cfg, ecfg, macro_loader);
kablam!     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 3 parameters
kablam! 
kablam! error[E0061]: this function takes 3 parameters but 2 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/pat.rs:124:49
kablam!     |
kablam! 124 |         self.build_pat_kind(ast::PatKind::Range(lhs, rhs))
kablam!     |                                                 ^^^^^^^^ expected 3 parameters
kablam! 
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::FieldPat`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/pat.rs:353:29
kablam!     |
kablam! 353 |         self.with_field_pat(ast::FieldPat {
kablam!     |                             ^^^^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::FieldPat`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/pat.rs:367:29
kablam!     |
kablam! 367 |         self.with_field_pat(ast::FieldPat {
kablam!     |                             ^^^^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::FieldPat`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/pat.rs:396:37
kablam!     |
kablam! 396 |         self.builder.with_field_pat(ast::FieldPat {
kablam!     |                                     ^^^^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error[E0560]: struct `syntax::ast::Path` has no field named `global`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/path.rs:159:13
kablam!     |
kablam! 159 |             global: self.global,
kablam!     |             ^^^^^^^ `syntax::ast::Path` does not have this field
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/path.rs:298:25
kablam!     |
kablam! 298 |             parameters: parameters,
kablam!     |                         ^^^^^^^^^^ expected enum `std::option::Option`, found enum `syntax::ast::PathParameters`
kablam!     |
kablam!     = note: expected type `std::option::Option<syntax::ptr::P<syntax::ast::PathParameters>>`
kablam!                found type `syntax::ast::PathParameters`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/path.rs:305:20
kablam!     |
kablam! 305 |             types: P::from_vec(self.tys),
kablam!     |                    ^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ptr::P<syntax::ast::Ty>>`
kablam!                found type `syntax::ptr::P<[syntax::ptr::P<syntax::ast::Ty>]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/path.rs:306:23
kablam!     |
kablam! 306 |             bindings: P::from_vec(self.bindings),
kablam!     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TypeBinding>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TypeBinding]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/path.rs:313:25
kablam!     |
kablam! 313 |             parameters: parameters,
kablam!     |                         ^^^^^^^^^^ expected enum `std::option::Option`, found enum `syntax::ast::PathParameters`
kablam!     |
kablam!     = note: expected type `std::option::Option<syntax::ptr::P<syntax::ast::PathParameters>>`
kablam!                found type `syntax::ast::PathParameters`
kablam! 
kablam! error[E0560]: struct `syntax::ast::Path` has no field named `global`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/qpath.rs:95:13
kablam!    |
kablam! 95 |             global: false,
kablam!    |             ^^^^^^^ `syntax::ast::Path` does not have this field
kablam! 
kablam! error[E0560]: struct `syntax::ast::Path` has no field named `global`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/qpath.rs:106:13
kablam!     |
kablam! 106 |             global: false,
kablam!     |             ^^^^^^^ `syntax::ast::Path` does not have this field
kablam! 
kablam! error: no associated item named `Vec` found for type `syntax::ast::TyKind` in the current scope
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/ty.rs:142:28
kablam!     |
kablam! 142 |         self.build_ty_kind(ast::TyKind::Vec(ty))
kablam!     |                            ^^^^^^^^^^^^^^^^
kablam! 
kablam! error: no associated item named `ObjectSum` found for type `syntax::ast::TyKind` in the current scope
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/ty.rs:501:36
kablam!     |
kablam! 501 |         self.builder.build_ty_kind(ast::TyKind::ObjectSum(self.ty, bounds))
kablam!     |                                    ^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/ty.rs:567:59
kablam!     |
kablam! 567 |         self.builder.build_ty_kind(ast::TyKind::ImplTrait(bounds))
kablam!     |                                                           ^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TyParamBound]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error: no method named `into_vec` found for type `std::vec::Vec<syntax::ast::TyParamBound>` in the current scope
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/ty_param.rs:54:37
kablam!    |
kablam! 54 |             bounds: ty_param.bounds.into_vec(),
kablam!    |                                     ^^^^^^^^
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/ty_param.rs:106:21
kablam!     |
kablam! 106 |             bounds: P::from_vec(self.bounds),
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TyParamBound]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::TyParam`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/ty_param.rs:103:30
kablam!     |
kablam! 103 |         self.callback.invoke(ast::TyParam {
kablam!     |                              ^^^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/where_predicate.rs:243:21
kablam!     |
kablam! 243 |             bounds: P::from_vec(self.bounds),
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TyParamBound]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0560]: struct `syntax::ast::WhereEqPredicate` has no field named `path`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/where_predicate.rs:322:13
kablam!     |
kablam! 322 |             path: path,
kablam!     |             ^^^^^ `syntax::ast::WhereEqPredicate` does not have this field
kablam! 
kablam! error[E0560]: struct `syntax::ast::WhereEqPredicate` has no field named `ty`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/where_predicate.rs:323:13
kablam!     |
kablam! 323 |             ty: ty,
kablam!     |             ^^^ `syntax::ast::WhereEqPredicate` does not have this field
kablam! 
kablam! error: aborting due to 49 previous errors
kablam! 
kablam! error: build failed
boom! running `docker rm -f 380f998a6b72ed3f3fe21741434d782259e0b9abb3541e23e2dd85ede4833741`
blam! 380f998a6b72ed3f3fe21741434d782259e0b9abb3541e23e2dd85ede4833741
