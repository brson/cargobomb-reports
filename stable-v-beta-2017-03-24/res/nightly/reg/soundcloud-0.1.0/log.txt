boom! testing soundcloud-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 56198a8cbb37b82b6e807b6e10000570c677d2a52e7468309d46902370b49e1e
boom! running `docker start -a 56198a8cbb37b82b6e807b6e10000570c677d2a52e7468309d46902370b49e1e`
kablam!    Compiling aster v0.22.1
kablam!    Compiling serde_codegen_internals v0.4.0
kablam!    Compiling openssl v0.7.14
kablam!    Compiling openssl-sys-extras v0.7.14
kablam! error: failed to run custom build command for `openssl-sys-extras v0.7.14`
kablam! process didn't exit successfully: `/target/debug/build/openssl-sys-extras-f9e8037051c16bfa/build-script-build` (exit code: 101)
kablam! --- stdout
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! OPT_LEVEL = Some("0")
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! HOST = Some("x86_64-unknown-linux-gnu")
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! HOST = Some("x86_64-unknown-linux-gnu")
kablam! CC_x86_64-unknown-linux-gnu = None
kablam! CC_x86_64_unknown_linux_gnu = None
kablam! HOST_CC = None
kablam! CC = None
kablam! HOST = Some("x86_64-unknown-linux-gnu")
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! HOST = Some("x86_64-unknown-linux-gnu")
kablam! CFLAGS_x86_64-unknown-linux-gnu = None
kablam! CFLAGS_x86_64_unknown_linux_gnu = None
kablam! HOST_CFLAGS = None
kablam! CFLAGS = None
kablam! PROFILE = Some("debug")
kablam! running: "cc" "-O0" "-ffunction-sections" "-fdata-sections" "-fPIC" "-g" "-m64" "-o" "/target/debug/build/openssl-sys-extras-8e2dc543f8892677/out/src/openssl_shim.o" "-c" "src/openssl_shim.c"
kablam! cargo:warning=src/openssl_shim.c:1:26: fatal error: openssl/hmac.h: No such file or directory
kablam! cargo:warning=compilation terminated.
kablam! ExitStatus(ExitStatus(256))
kablam! 
kablam! 
kablam! command did not execute successfully, got: exit code: 1
kablam! 
kablam! 
kablam! 
kablam! --- stderr
kablam! thread 'main' panicked at 'explicit panic', /cargo-home/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.43/src/lib.rs:1127
kablam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
kablam! 
kablam! error: failed to run custom build command for `openssl v0.7.14`
kablam! process didn't exit successfully: `/target/debug/build/openssl-f2d87cfdc2e2aa2f/build-script-build` (exit code: 101)
kablam! --- stdout
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! OPT_LEVEL = Some("0")
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! HOST = Some("x86_64-unknown-linux-gnu")
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! HOST = Some("x86_64-unknown-linux-gnu")
kablam! CC_x86_64-unknown-linux-gnu = None
kablam! CC_x86_64_unknown_linux_gnu = None
kablam! HOST_CC = None
kablam! CC = None
kablam! HOST = Some("x86_64-unknown-linux-gnu")
kablam! TARGET = Some("x86_64-unknown-linux-gnu")
kablam! HOST = Some("x86_64-unknown-linux-gnu")
kablam! CFLAGS_x86_64-unknown-linux-gnu = None
kablam! CFLAGS_x86_64_unknown_linux_gnu = None
kablam! HOST_CFLAGS = None
kablam! CFLAGS = None
kablam! PROFILE = Some("debug")
kablam! running: "cc" "-O0" "-ffunction-sections" "-fdata-sections" "-fPIC" "-g" "-m64" "-o" "/target/debug/build/openssl-1d3ea894fa03cc5a/out/src/c_helpers.o" "-c" "src/c_helpers.c"
kablam! cargo:warning=src/c_helpers.c:1:25: fatal error: openssl/ssl.h: No such file or directory
kablam! cargo:warning=compilation terminated.
kablam! ExitStatus(ExitStatus(256))
kablam! 
kablam! 
kablam! command did not execute successfully, got: exit code: 1
kablam! 
kablam! 
kablam! 
kablam! --- stderr
kablam! thread 'main' panicked at 'explicit panic', /cargo-home/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.43/src/lib.rs:1127
kablam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
kablam! 
blam! Build failed, waiting for other jobs to finish...
blam! Build failed, waiting for other jobs to finish...
kablam! error[E0432]: unresolved import `syntax::parse::token::InternedString`
kablam!  --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:9:34
kablam!   |
kablam! 9 | use syntax::parse::token::{self, InternedString};
kablam!   |                                  ^^^^^^^^^^^^^^ no `InternedString` in `parse::token`
kablam! 
kablam! error[E0532]: expected tuple struct/variant, found unit variant `ast::MetaItemKind::Word`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:144:21
kablam!     |
kablam! 144 |                     ast::MetaItemKind::Word(ref name) if name == &"deny_unknown_fields" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^ not a tuple struct/variant
kablam! 
kablam! error[E0425]: cannot find function `intern_and_get_ident` in module `token`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:301:21
kablam!     |
kablam! 301 |             None => token::intern_and_get_ident(&index.to_string()),
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam! 
kablam! error[E0532]: expected tuple struct/variant, found unit variant `ast::MetaItemKind::Word`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:325:21
kablam!     |
kablam! 325 |                     ast::MetaItemKind::Word(ref name) if name == &"default" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^ not a tuple struct/variant
kablam! 
kablam! error[E0532]: expected tuple struct/variant, found unit variant `ast::MetaItemKind::Word`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:337:21
kablam!     |
kablam! 337 |                     ast::MetaItemKind::Word(ref name) if name == &"skip_serializing" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^ not a tuple struct/variant
kablam! 
kablam! error[E0532]: expected tuple struct/variant, found unit variant `ast::MetaItemKind::Word`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:342:21
kablam!     |
kablam! 342 |                     ast::MetaItemKind::Word(ref name) if name == &"skip_deserializing" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^ not a tuple struct/variant
kablam! 
kablam! error[E0422]: cannot find struct, variant or union type `SequenceRepetition` in module `tokenstream`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:544:29
kablam!     |
kablam! 544 |                     Rc::new(tokenstream::SequenceRepetition {
kablam!     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `tokenstream`
kablam!     |
kablam!     = help: possible candidate is found in another module, you can import it into scope:
kablam!               `use syntax::ext::tt::quoted::SequenceRepetition;`
kablam! 
kablam! error[E0432]: unresolved import `syntax::parse::token::keywords`
kablam!  --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/item.rs:8:5
kablam!   |
kablam! 8 | use syntax::parse::token::keywords;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `keywords` in `parse::token`
kablam! 
kablam! error[E0432]: unresolved import `syntax::ext::base::DummyMacroLoader`
kablam!  --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/mac.rs:3:25
kablam!   |
kablam! 3 | use syntax::ext::base::{DummyMacroLoader, ExtCtxt};
kablam!   |                         ^^^^^^^^^^^^^^^^ no `DummyMacroLoader` in `ext::base`
kablam! 
kablam! error[E0422]: cannot find struct, variant or union type `Attribute_` in module `ast`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/attr.rs:51:38
kablam!    |
kablam! 51 |         let attr = respan(self.span, ast::Attribute_ {
kablam!    |                                      ^^^^^^^^^^^^^^^ did you mean `ast::Attribute`?
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/attr.rs:171:11
kablam!     |
kablam! 171 |     name: token::InternedString,
kablam!     |           ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!     |
kablam!     = help: possible candidate is found in another module, you can import it into scope:
kablam!               `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/attr.rs:278:11
kablam!     |
kablam! 278 |     name: token::InternedString,
kablam!     |           ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!     |
kablam!     = help: possible candidate is found in another module, you can import it into scope:
kablam!               `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0433]: failed to resolve. Could not find `PathListItemKind` in `ast`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/item.rs:426:44
kablam!     |
kablam! 426 |         self.idents.push(respan(self.span, ast::PathListItemKind::Mod {
kablam!     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^ Could not find `PathListItemKind` in `ast`
kablam! 
kablam! error[E0433]: failed to resolve. Could not find `PathListItemKind` in `ast`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/item.rs:436:44
kablam!     |
kablam! 436 |         self.idents.push(respan(self.span, ast::PathListItemKind::Ident {
kablam!     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Could not find `PathListItemKind` in `ast`
kablam! 
kablam! error[E0423]: expected function, found struct `ast::Name`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/item.rs:728:38
kablam!     |
kablam! 728 |         self.builder.build_item_kind(ast::Name(0).to_ident(), item_mac)
kablam!     |                                      ^^^^^^^^^
kablam!     |                                      |
kablam!     |                                      did you mean `ast::Name { /* fields */ }`?
kablam!     |                                      constructor is not visible here due to private fields
kablam! 
kablam! error[E0425]: cannot find function `intern` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/name.rs:18:9
kablam!    |
kablam! 18 |         token::intern(*self)
kablam!    |         ^^^^^^^^^^^^^ not found in `token`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/str.rs:12:37
kablam!    |
kablam! 12 |     fn to_interned_string(&self) -> token::InternedString;
kablam!    |                                     ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/str.rs:15:27
kablam!    |
kablam! 15 | impl ToInternedString for token::InternedString {
kablam!    |                           ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/str.rs:16:37
kablam!    |
kablam! 16 |     fn to_interned_string(&self) -> token::InternedString {
kablam!    |                                     ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/str.rs:22:37
kablam!    |
kablam! 22 |     fn to_interned_string(&self) -> token::InternedString {
kablam!    |                                     ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0425]: cannot find function `intern_and_get_ident` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/str.rs:23:9
kablam!    |
kablam! 23 |         token::intern_and_get_ident(self)
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/str.rs:28:37
kablam!    |
kablam! 28 |     fn to_interned_string(&self) -> token::InternedString {
kablam!    |                                     ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/str.rs:34:37
kablam!    |
kablam! 34 |     fn to_interned_string(&self) -> token::InternedString {
kablam!    |                                     ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/str.rs:40:37
kablam!    |
kablam! 40 |     fn to_interned_string(&self) -> token::InternedString {
kablam!    |                                     ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/lib.rs:63:47
kablam!    |
kablam! 63 |     pub fn interned_string<S>(&self, s: S) -> token::InternedString
kablam!    |                                               ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:128:21
kablam!     |
kablam! 128 |                     ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"rename" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:136:21
kablam!     |
kablam! 136 |                     ast::MetaItemKind::List(ref name, ref meta_items) if name == &"rename" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:149:21
kablam!     |
kablam! 149 |                     ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"bound" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:157:21
kablam!     |
kablam! 157 |                     ast::MetaItemKind::List(ref name, ref meta_items) if name == &"bound" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:220:21
kablam!     |
kablam! 220 |                     ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"rename" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:228:21
kablam!     |
kablam! 228 |                     ast::MetaItemKind::List(ref name, ref meta_items) if name == &"rename" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:309:21
kablam!     |
kablam! 309 |                     ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"rename" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:317:21
kablam!     |
kablam! 317 |                     ast::MetaItemKind::List(ref name, ref meta_items) if name == &"rename" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:330:21
kablam!     |
kablam! 330 |                     ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"default" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:347:21
kablam!     |
kablam! 347 |                     ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"skip_serializing_if" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:354:21
kablam!     |
kablam! 354 |                     ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"serialize_with" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:361:21
kablam!     |
kablam! 361 |                     ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"deserialize_with" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:368:21
kablam!     |
kablam! 368 |                     ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"bound" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:376:21
kablam!     |
kablam! 376 |                     ast::MetaItemKind::List(ref name, ref meta_items) if name == &"bound" => {
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:465:13
kablam!     |
kablam! 465 |             ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"serialize" => {
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:471:13
kablam!     |
kablam! 471 |             ast::MetaItemKind::NameValue(ref name, ref lit) if name == &"deserialize" => {
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error: no field `node` on type `&syntax::ast::Attribute`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:507:16
kablam!     |
kablam! 507 |     match attr.node.value.node {
kablam!     |                ^^^^
kablam! 
kablam! error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:508:9
kablam!     |
kablam! 508 |         ast::MetaItemKind::List(ref name, ref items) if name == &"serde" => {
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2
kablam! 
kablam! error: no associated item named `Sequence` found for type `syntax::tokenstream::TokenTree` in the current scope
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:541:13
kablam!     |
kablam! 541 |             TokenTree::Sequence(span, ref seq) => {
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error[E0560]: struct `syntax::tokenstream::Delimited` has no field named `open_span`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:535:25
kablam!     |
kablam! 535 |                         open_span: delimed.open_span,
kablam!     |                         ^^^^^^^^^^ `syntax::tokenstream::Delimited` does not have this field
kablam! 
kablam! error: no field `open_span` on type `&std::rc::Rc<syntax::tokenstream::Delimited>`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:535:44
kablam!     |
kablam! 535 |                         open_span: delimed.open_span,
kablam!     |                                            ^^^^^^^^^
kablam! 
kablam! error[E0560]: struct `syntax::tokenstream::Delimited` has no field named `close_span`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:537:25
kablam!     |
kablam! 537 |                         close_span: delimed.close_span,
kablam!     |                         ^^^^^^^^^^^ `syntax::tokenstream::Delimited` does not have this field
kablam! 
kablam! error: no field `close_span` on type `&std::rc::Rc<syntax::tokenstream::Delimited>`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:537:45
kablam!     |
kablam! 537 |                         close_span: delimed.close_span,
kablam!     |                                             ^^^^^^^^^^
kablam! 
kablam! error: no associated item named `Sequence` found for type `syntax::tokenstream::TokenTree` in the current scope
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:542:17
kablam!     |
kablam! 542 |                 TokenTree::Sequence(
kablam!     |                 ^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error[E0061]: this function takes 3 parameters but 4 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:587:15
kablam!     |
kablam! 587 |       let tts = panictry!(parse::parse_tts_from_source_str(
kablam!     |  _______________^ starting here...
kablam! 588 | |         format!("<serde {} expansion>", name),
kablam! 589 | |         string,
kablam! 590 | |         cx.cfg(),
kablam! 591 | |         cx.parse_sess()));
kablam!     | |_________________________^ ...ending here: expected 3 parameters
kablam!     |
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:587:15
kablam!     |
kablam! 587 |       let tts = panictry!(parse::parse_tts_from_source_str(
kablam!     |  _______________^ starting here...
kablam! 588 | |         format!("<serde {} expansion>", name),
kablam! 589 | |         string,
kablam! 590 | |         cx.cfg(),
kablam! 591 | |         cx.parse_sess()));
kablam!     | |_________________________^ ...ending here: expected struct `std::vec::Vec`, found enum `std::result::Result`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::tokenstream::TokenTree>`
kablam!                found type `std::result::Result<_, _>`
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:587:15
kablam!     |
kablam! 587 |       let tts = panictry!(parse::parse_tts_from_source_str(
kablam!     |  _______________^ starting here...
kablam! 588 | |         format!("<serde {} expansion>", name),
kablam! 589 | |         string,
kablam! 590 | |         cx.cfg(),
kablam! 591 | |         cx.parse_sess()));
kablam!     | |_________________________^ ...ending here: expected struct `std::vec::Vec`, found enum `std::result::Result`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::tokenstream::TokenTree>`
kablam!                found type `std::result::Result<_, _>`
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error[E0277]: the trait bound `[syntax::tokenstream::TokenTree]: std::marker::Sized` is not satisfied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:587:9
kablam!     |
kablam! 587 |     let tts = panictry!(parse::parse_tts_from_source_str(
kablam!     |         ^^^ the trait `std::marker::Sized` is not implemented for `[syntax::tokenstream::TokenTree]`
kablam!     |
kablam!     = note: `[syntax::tokenstream::TokenTree]` does not have a constant size known at compile-time
kablam!     = note: all local variables must have a statically known size
kablam! 
kablam! error[E0061]: this function takes 2 parameters but 3 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/serde_codegen_internals-0.4.0/src/attr.rs:596:49
kablam!     |
kablam! 596 |     let mut parser = parse::new_parser_from_tts(cx.parse_sess(), cx.cfg(), tts);
kablam!     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 2 parameters
kablam! 
kablam! error: aborting due to 29 previous errors
kablam! 
kablam! error: Could not compile `serde_codegen_internals`.
blam! Build failed, waiting for other jobs to finish...
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/attr.rs:57:30
kablam!    |
kablam! 57 |         self.callback.invoke(attr)
kablam!    |                              ^^^^ expected struct `syntax::ast::Attribute`, found struct `syntax::codemap::Spanned`
kablam!    |
kablam!    = note: expected type `syntax::ast::Attribute`
kablam!               found type `syntax::codemap::Spanned<_>`
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/attr.rs:62:30
kablam!    |
kablam! 62 |         self.build_meta_item(item)
kablam!    |                              ^^^^ expected struct `syntax::ast::MetaItem`, found struct `syntax::codemap::Spanned`
kablam!    |
kablam!    = note: expected type `syntax::ptr::P<syntax::ast::MetaItem>`
kablam!               found type `syntax::ptr::P<syntax::codemap::Spanned<syntax::ast::MetaItemKind>>`
kablam!    = help: here are some functions which might fulfill your needs:
kablam!            - .unwrap()
kablam! 
kablam! error: `ast::MetaItemKind::Word` is being called, but it is not a function
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/attr.rs:68:31
kablam!    |
kablam! 68 |         self.build_meta_item_(ast::MetaItemKind::Word(word.to_interned_string()))
kablam!    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: did you mean to write `ast::MetaItemKind::Word`?
kablam! 
kablam! error[E0271]: type mismatch resolving `<[closure@/cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/attr.rs:206:39: 206:67 span:_] as std::ops::FnOnce<(syntax::ast::MetaItemKind,)>>::Output == syntax::ptr::P<syntax::ast::MetaItem>`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/attr.rs:206:14
kablam!     |
kablam! 206 |         self.with_meta_items(iter.map(|item| P(respan(span, item))))
kablam!     |              ^^^^^^^^^^^^^^^ expected struct `syntax::codemap::Spanned`, found struct `syntax::ast::MetaItem`
kablam!     |
kablam!     = note: expected type `syntax::ptr::P<syntax::codemap::Spanned<syntax::ast::MetaItemKind>>`
kablam!                found type `syntax::ptr::P<syntax::ast::MetaItem>`
kablam!     = note: required because of the requirements on the impl of `std::iter::Iterator` for `std::iter::Map<<I as std::iter::IntoIterator>::IntoIter, [closure@/cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/attr.rs:206:39: 206:67 span:_]>`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/attr.rs:216:31
kablam!     |
kablam! 216 |         self.with_meta_item(P(respan(span, item)))
kablam!     |                               ^^^^^^^^^^^^^^^^^^ expected struct `syntax::ast::MetaItem`, found struct `syntax::codemap::Spanned`
kablam!     |
kablam!     = note: expected type `syntax::ast::MetaItem`
kablam!                found type `syntax::codemap::Spanned<syntax::ast::MetaItemKind>`
kablam! 
kablam! error: `ast::MetaItemKind::Word` is being called, but it is not a function
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/attr.rs:224:47
kablam!     |
kablam! 224 |         self.with_meta_items_(iter.map(|word| ast::MetaItemKind::Word(word.to_interned_string())))
kablam!     |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: did you mean to write `ast::MetaItemKind::Word`?
kablam! 
kablam! error: `ast::MetaItemKind::Word` is being called, but it is not a function
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/attr.rs:230:34
kablam!     |
kablam! 230 |         self.with_meta_item_kind(ast::MetaItemKind::Word(word.to_interned_string()))
kablam!     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: did you mean to write `ast::MetaItemKind::Word`?
kablam! 
kablam! error[E0061]: this function takes 1 parameter but 2 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/attr.rs:249:62
kablam!     |
kablam! 249 |         let item = respan(self.span, ast::MetaItemKind::List(self.name, self.items));
kablam!     |                                                              ^^^^^^^^^^^^^^^^^^^^^ expected 1 parameter
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/attr.rs:250:32
kablam!     |
kablam! 250 |         self.callback.invoke(P(item))
kablam!     |                                ^^^^ expected struct `syntax::ast::MetaItem`, found struct `syntax::codemap::Spanned`
kablam!     |
kablam!     = note: expected type `syntax::ast::MetaItem`
kablam!                found type `syntax::codemap::Spanned<syntax::ast::MetaItemKind>`
kablam! 
kablam! error[E0061]: this function takes 1 parameter but 2 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/attr.rs:285:49
kablam!     |
kablam! 285 |         let item = ast::MetaItemKind::NameValue(self.name, (*value).clone());
kablam!     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 parameter
kablam! 
kablam! error[E0061]: this function takes 2 parameters but 1 parameter was supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/expr.rs:421:51
kablam!     |
kablam! 421 |         self.build_expr_kind(ast::ExprKind::Break(None))
kablam!     |                                                   ^^^^ expected 2 parameters
kablam! 
kablam! error[E0061]: this function takes 2 parameters but 1 parameter was supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/expr.rs:428:51
kablam!     |
kablam! 428 |         self.build_expr_kind(ast::ExprKind::Break(Some(label)))
kablam!     |                                                   ^^^^^^^^^^^ expected 2 parameters
kablam! 
kablam! error[E0063]: missing fields `attrs`, `is_shorthand` in initializer of `syntax::ast::Field`
kablam!     --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/expr.rs:1057:21
kablam!      |
kablam! 1057 |         let field = ast::Field {
kablam!      |                     ^^^^^^^^^^ missing `attrs`, `is_shorthand`
kablam! 
kablam! error: no associated item named `Vec` found for type `syntax::ast::ExprKind` in the current scope
kablam!     --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/expr.rs:1761:38
kablam!      |
kablam! 1761 |         self.builder.build_expr_kind(ast::ExprKind::Vec(self.exprs))
kablam!      |                                      ^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error: no associated item named `None` found for type `syntax::ast::FunctionRetTy` in the current scope
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/fn_decl.rs:98:22
kablam!    |
kablam! 98 |         let ret_ty = ast::FunctionRetTy::None(self.span);
kablam!    |                      ^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error: no method named `into_vec` found for type `std::vec::Vec<syntax::ast::TyParam>` in the current scope
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/generics.rs:53:43
kablam!    |
kablam! 53 |             ty_params: generics.ty_params.into_vec(),
kablam!    |                                           ^^^^^^^^
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/generics.rs:203:31
kablam!     |
kablam! 203 |             ty_param.bounds = P::new();
kablam!     |                               ^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                found type `syntax::ptr::P<[_]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/generics.rs:216:24
kablam!     |
kablam! 216 |             ty_params: P::from_vec(self.ty_params),
kablam!     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParam>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TyParam]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0063]: missing field `span` in initializer of `syntax::ast::Generics`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/generics.rs:214:30
kablam!     |
kablam! 214 |         self.callback.invoke(ast::Generics {
kablam!     |                              ^^^^^^^^^^^^^ missing `span`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/item.rs:317:13
kablam!     |
kablam! 317 |             self.constness,
kablam!     |             ^^^^^^^^^^^^^^ expected struct `syntax::codemap::Spanned`, found enum `syntax::ast::Constness`
kablam!     |
kablam!     = note: expected type `syntax::codemap::Spanned<syntax::ast::Constness>`
kablam!                found type `syntax::ast::Constness`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/item.rs:883:13
kablam!     |
kablam! 883 |             P::from_vec(self.bounds),
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TyParamBound]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!     --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/item.rs:1097:45
kablam!      |
kablam! 1097 |         let node = ast::TraitItemKind::Type(bounds, ty);
kablam!      |                                             ^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!      |
kablam!      = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                 found type `syntax::ptr::P<[syntax::ast::TyParamBound]>`
kablam!      = help: here are some functions which might fulfill your needs:
kablam!              - .into_vec()
kablam!              - .to_vec()
kablam! 
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::LifetimeDef`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/lifetime.rs:43:9
kablam!    |
kablam! 43 |         ast::LifetimeDef {
kablam!    |         ^^^^^^^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::LifetimeDef`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/lifetime.rs:111:30
kablam!     |
kablam! 111 |         self.callback.invoke(ast::LifetimeDef {
kablam!     |                              ^^^^^^^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/lit.rs:61:42
kablam!    |
kablam! 61 |         self.build_lit(ast::LitKind::Int(value as u64, ast::LitIntType::Unsuffixed))
kablam!    |                                          ^^^^^^^^^^^^ expected u128, found u64
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/lit.rs:66:42
kablam!    |
kablam! 66 |         self.build_lit(ast::LitKind::Int(value as u64, ast::LitIntType::Signed(ty)))
kablam!    |                                          ^^^^^^^^^^^^ expected u128, found u64
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/lit.rs:94:42
kablam!    |
kablam! 94 |         self.build_lit(ast::LitKind::Int(value, ast::LitIntType::Unsuffixed))
kablam!    |                                          ^^^^^ expected u128, found u64
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/lit.rs:98:42
kablam!    |
kablam! 98 |         self.build_lit(ast::LitKind::Int(value, ast::LitIntType::Unsigned(ty)))
kablam!    |                                          ^^^^^ expected u128, found u64
kablam! 
kablam! error[E0061]: this function takes 3 parameters but 4 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/mac.rs:110:31
kablam!     |
kablam! 110 |     let mut cx = ExtCtxt::new(sess, cfg, ecfg, macro_loader);
kablam!     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 3 parameters
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/method.rs:73:24
kablam!    |
kablam! 73 |             constness: self.constness,
kablam!    |                        ^^^^^^^^^^^^^^ expected struct `syntax::codemap::Spanned`, found enum `syntax::ast::Constness`
kablam!    |
kablam!    = note: expected type `syntax::codemap::Spanned<syntax::ast::Constness>`
kablam!               found type `syntax::ast::Constness`
kablam! 
kablam! error[E0061]: this function takes 3 parameters but 2 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/pat.rs:124:49
kablam!     |
kablam! 124 |         self.build_pat_kind(ast::PatKind::Range(lhs, rhs))
kablam!     |                                                 ^^^^^^^^ expected 3 parameters
kablam! 
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::FieldPat`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/pat.rs:339:29
kablam!     |
kablam! 339 |         self.with_field_pat(ast::FieldPat {
kablam!     |                             ^^^^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::FieldPat`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/pat.rs:353:29
kablam!     |
kablam! 353 |         self.with_field_pat(ast::FieldPat {
kablam!     |                             ^^^^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::FieldPat`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/pat.rs:382:37
kablam!     |
kablam! 382 |         self.builder.with_field_pat(ast::FieldPat {
kablam!     |                                     ^^^^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error[E0560]: struct `syntax::ast::Path` has no field named `global`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/path.rs:159:13
kablam!     |
kablam! 159 |             global: self.global,
kablam!     |             ^^^^^^^ `syntax::ast::Path` does not have this field
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/path.rs:282:20
kablam!     |
kablam! 282 |             types: P::from_vec(self.tys),
kablam!     |                    ^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ptr::P<syntax::ast::Ty>>`
kablam!                found type `syntax::ptr::P<[syntax::ptr::P<syntax::ast::Ty>]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/path.rs:283:23
kablam!     |
kablam! 283 |             bindings: P::from_vec(self.bindings),
kablam!     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TypeBinding>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TypeBinding]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/path.rs:290:25
kablam!     |
kablam! 290 |             parameters: parameters,
kablam!     |                         ^^^^^^^^^^ expected enum `std::option::Option`, found enum `syntax::ast::PathParameters`
kablam!     |
kablam!     = note: expected type `std::option::Option<syntax::ptr::P<syntax::ast::PathParameters>>`
kablam!                found type `syntax::ast::PathParameters`
kablam! 
kablam! error[E0560]: struct `syntax::ast::Path` has no field named `global`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/qpath.rs:95:13
kablam!    |
kablam! 95 |             global: false,
kablam!    |             ^^^^^^^ `syntax::ast::Path` does not have this field
kablam! 
kablam! error[E0560]: struct `syntax::ast::Path` has no field named `global`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/qpath.rs:106:13
kablam!     |
kablam! 106 |             global: false,
kablam!     |             ^^^^^^^ `syntax::ast::Path` does not have this field
kablam! 
kablam! error: no associated item named `Vec` found for type `syntax::ast::TyKind` in the current scope
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/ty.rs:142:28
kablam!     |
kablam! 142 |         self.build_ty_kind(ast::TyKind::Vec(ty))
kablam!     |                            ^^^^^^^^^^^^^^^^
kablam! 
kablam! error: no associated item named `ObjectSum` found for type `syntax::ast::TyKind` in the current scope
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/ty.rs:493:36
kablam!     |
kablam! 493 |         self.builder.build_ty_kind(ast::TyKind::ObjectSum(self.ty, bounds))
kablam!     |                                    ^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error: no method named `into_vec` found for type `std::vec::Vec<syntax::ast::TyParamBound>` in the current scope
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/ty_param.rs:54:37
kablam!    |
kablam! 54 |             bounds: ty_param.bounds.into_vec(),
kablam!    |                                     ^^^^^^^^
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/ty_param.rs:106:21
kablam!     |
kablam! 106 |             bounds: P::from_vec(self.bounds),
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TyParamBound]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::TyParam`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/ty_param.rs:103:30
kablam!     |
kablam! 103 |         self.callback.invoke(ast::TyParam {
kablam!     |                              ^^^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/where_predicate.rs:243:21
kablam!     |
kablam! 243 |             bounds: P::from_vec(self.bounds),
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TyParamBound]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0560]: struct `syntax::ast::WhereEqPredicate` has no field named `path`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/where_predicate.rs:322:13
kablam!     |
kablam! 322 |             path: path,
kablam!     |             ^^^^^ `syntax::ast::WhereEqPredicate` does not have this field
kablam! 
kablam! error[E0560]: struct `syntax::ast::WhereEqPredicate` has no field named `ty`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.22.1/src/where_predicate.rs:323:13
kablam!     |
kablam! 323 |             ty: ty,
kablam!     |             ^^^ `syntax::ast::WhereEqPredicate` does not have this field
kablam! 
kablam! error: aborting due to 48 previous errors
kablam! 
kablam! error: build failed
boom! running `docker rm -f 56198a8cbb37b82b6e807b6e10000570c677d2a52e7468309d46902370b49e1e`
blam! 56198a8cbb37b82b6e807b6e10000570c677d2a52e7468309d46902370b49e1e
