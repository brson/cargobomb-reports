boom! testing mqtt-protocol-0.1.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! f0f6d786d6e75a7390ae544b412fae65324ee32342948e3fc5ab8c1234506027
boom! running `docker start -a f0f6d786d6e75a7390ae544b412fae65324ee32342948e3fc5ab8c1234506027`
kablam!    Compiling mqtt-protocol v0.1.1 (file:///source)
kablam! warning: unused `#[macro_use]` import
kablam!  --> src/lib.rs:2:1
kablam!   |
kablam! 2 | #[macro_use]
kablam!   | ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Write`
kablam!  --> src/control/variable_header/mod.rs:3:21
kablam!   |
kablam! 3 | use std::io::{self, Write};
kablam!   |                     ^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable `Cond` should have a snake case name such as `cond`
kablam!   --> src/encodable.rs:25:45
kablam!    |
kablam! 25 |     fn decode_with<R: Read>(reader: &mut R, Cond: Option<Self::Cond>) -> Result<Self, Self::Err>;
kablam!    |                                             ^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.60 secs
boom! running `docker rm -f f0f6d786d6e75a7390ae544b412fae65324ee32342948e3fc5ab8c1234506027`
blam! f0f6d786d6e75a7390ae544b412fae65324ee32342948e3fc5ab8c1234506027
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! ca8d08f6745e2a34e00a55801cb42567d1d81c2678b3225199b2eabe0cbdc154
boom! running `docker start -a ca8d08f6745e2a34e00a55801cb42567d1d81c2678b3225199b2eabe0cbdc154`
kablam!    Compiling mqtt-protocol v0.1.1 (file:///source)
kablam! warning: unused `#[macro_use]` import
kablam!  --> src/lib.rs:2:1
kablam!   |
kablam! 2 | #[macro_use]
kablam!   | ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Write`
kablam!  --> src/control/variable_header/mod.rs:3:21
kablam!   |
kablam! 3 | use std::io::{self, Write};
kablam!   |                     ^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable `Cond` should have a snake case name such as `cond`
kablam!   --> src/encodable.rs:25:45
kablam!    |
kablam! 25 |     fn decode_with<R: Read>(reader: &mut R, Cond: Option<Self::Cond>) -> Result<Self, Self::Err>;
kablam!    |                                             ^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 8.67 secs
boom! running `docker rm -f ca8d08f6745e2a34e00a55801cb42567d1d81c2678b3225199b2eabe0cbdc154`
blam! ca8d08f6745e2a34e00a55801cb42567d1d81c2678b3225199b2eabe0cbdc154
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! c6e5d7136464e012a6b622a2ba5221632fdd51af2c442b698a875669ed28d663
boom! running `docker start -a c6e5d7136464e012a6b622a2ba5221632fdd51af2c442b698a875669ed28d663`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/mqtt-4c47c63da4e6c96a
blam! 
blam! running 11 tests
blam! test control::fixed_header::test::test_encode_fixed_header ... ok
blam! test packet::connack::test::test_connack_packet_basic ... ok
blam! test control::fixed_header::test::test_decode_fixed_header ... ok
blam! test packet::connect::test::test_connect_packet_decode_basic ... ok
blam! test packet::connect::test::test_connect_packet_encode_basic ... ok
blam! test control::fixed_header::test::test_decode_too_long_fixed_header ... ok
blam! test packet::connect::test::test_connect_packet_user_name ... ok
blam! test packet::test::test_variable_packet_basic ... ok
blam! test packet::publish::test::test_publish_packet_basic ... ok
blam! test topic_name::test::test_topic_name_basic ... ok
blam! test topic_filter::test::test_topic_filter_validate ... ok
blam! 
blam! test result: ok. 11 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests mqtt
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f c6e5d7136464e012a6b622a2ba5221632fdd51af2c442b698a875669ed28d663`
blam! c6e5d7136464e012a6b622a2ba5221632fdd51af2c442b698a875669ed28d663
