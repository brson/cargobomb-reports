boom! testing memory-pool-0.1.0 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! f793cd48a060f03c261f7cdbf3e0f42204d09bfb989eb11ad0c44af3a66c2f55
boom! running `docker start -a f793cd48a060f03c261f7cdbf3e0f42204d09bfb989eb11ad0c44af3a66c2f55`
kablam!    Compiling memory-pool v0.1.0 (file:///source)
kablam! warning: unnecessary `unsafe` block, #[warn(unused_unsafe)] on by default
kablam!   --> src/memory_pool.rs:29:9
kablam!    |
kablam! 29 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 30 | |             let (ptr, capacity) = value.get_buffer();
kablam! 31 | |             if capacity != 0 {
kablam! 32 | |                 mem::forget( value );
kablam! 33 | |                 self.buffers.push( (ptr, capacity) );
kablam! 34 | |             }
kablam! 35 | |         }
kablam!    | |_________^ ...ending here
kablam! 
kablam! warning: unnecessary `unsafe` block, #[warn(unused_unsafe)] on by default
kablam!   --> src/memory_pool.rs:70:9
kablam!    |
kablam! 70 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 71 | |             mem::forget( tmp );
kablam! 72 | |         }
kablam!    | |_________^ ...ending here
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.38 secs
boom! running `docker rm -f f793cd48a060f03c261f7cdbf3e0f42204d09bfb989eb11ad0c44af3a66c2f55`
blam! f793cd48a060f03c261f7cdbf3e0f42204d09bfb989eb11ad0c44af3a66c2f55
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 58ca046c79853601c76d9e5be5ed2a64fc45d3466ee604179366c57ff52a3a42
boom! running `docker start -a 58ca046c79853601c76d9e5be5ed2a64fc45d3466ee604179366c57ff52a3a42`
kablam!    Compiling memory-pool v0.1.0 (file:///source)
kablam! warning: unnecessary `unsafe` block, #[warn(unused_unsafe)] on by default
kablam!   --> src/memory_pool.rs:29:9
kablam!    |
kablam! 29 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 30 | |             let (ptr, capacity) = value.get_buffer();
kablam! 31 | |             if capacity != 0 {
kablam! 32 | |                 mem::forget( value );
kablam! 33 | |                 self.buffers.push( (ptr, capacity) );
kablam! 34 | |             }
kablam! 35 | |         }
kablam!    | |_________^ ...ending here
kablam! 
kablam! warning: unnecessary `unsafe` block, #[warn(unused_unsafe)] on by default
kablam!   --> src/memory_pool.rs:70:9
kablam!    |
kablam! 70 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 71 | |             mem::forget( tmp );
kablam! 72 | |         }
kablam!    | |_________^ ...ending here
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.90 secs
boom! running `docker rm -f 58ca046c79853601c76d9e5be5ed2a64fc45d3466ee604179366c57ff52a3a42`
blam! 58ca046c79853601c76d9e5be5ed2a64fc45d3466ee604179366c57ff52a3a42
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! f962d9a4d6f7365b842dfd8df9f0a769c898f7ddda1c740cc53fb3102d273004
boom! running `docker start -a f962d9a4d6f7365b842dfd8df9f0a769c898f7ddda1c740cc53fb3102d273004`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/memory_pool-7dc405235fa4fcf3
blam! 
blam! running 3 tests
blam! test memory_pool::tests::borrow_string ... ok
blam! test memory_pool::tests::acquire_and_release_string ... ok
blam! test memory_pool::tests::borrow_string_and_vector ... ok
blam! 
blam! test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests memory_pool
blam! 
blam! running 3 tests
blam! test _2 ... FAILED
blam! test _0 ... ok
blam! test _1 ... ok
blam! 
blam! failures:
blam! 
blam! ---- _2 stdout ----
blam! 	error: cannot borrow immutable local variable `buffer` as mutable
blam!  --> <anon>:4:1
blam!   |
blam! 3 | let buffer: String = memory_pool::acquire();
blam!   |     ------ use `mut buffer` here to make mutable
blam! 4 | buffer.push_str( "I like cupcakes!" );
blam!   | ^^^^^^ cannot borrow mutably
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread '_2' panicked at 'Box<Any>', /buildslave/rust-buildbot/slave/stable-dist-rustc-linux/build/src/librustc/session/mod.rs:201
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! 
blam! failures:
blam!     _2
blam! 
blam! test result: FAILED. 2 passed; 1 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f f962d9a4d6f7365b842dfd8df9f0a769c898f7ddda1c740cc53fb3102d273004`
blam! f962d9a4d6f7365b842dfd8df9f0a769c898f7ddda1c740cc53fb3102d273004
