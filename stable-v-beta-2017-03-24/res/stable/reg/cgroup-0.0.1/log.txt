boom! testing cgroup-0.0.1 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! d7529148d47e8413da3c6cfa31065562e694da583722c81770231edc5ce83075
boom! running `docker start -a d7529148d47e8413da3c6cfa31065562e694da583722c81770231edc5ce83075`
kablam!    Compiling cgroup v0.0.1 (file:///source)
kablam! error[E0432]: unresolved import `std::io::File`
kablam!   --> src/lib.rs:19:15
kablam!    |
kablam! 19 | use std::io::{File, IoResult};
kablam!    |               ^^^^ no `File` in `io`
kablam! 
kablam! error[E0432]: unresolved import `std::io::IoResult`
kablam!   --> src/lib.rs:19:21
kablam!    |
kablam! 19 | use std::io::{File, IoResult};
kablam!    |                     ^^^^^^^^ no `IoResult` in `io`. Did you mean to use `Result`?
kablam! 
kablam! error[E0432]: unresolved import `std::io::fs::PathExtensions`
kablam!   --> src/lib.rs:20:5
kablam!    |
kablam! 20 | use std::io::fs::PathExtensions;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Could not find `fs` in `io`
kablam! 
kablam! error[E0412]: type name `Path` is undefined or not in scope
kablam!   --> src/lib.rs:24:15
kablam!    |
kablam! 24 |     basepath: Path,
kablam!    |               ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: you can import it into scope: `use std::path::Path;`.
kablam! 
kablam! error[E0412]: type name `Path` is undefined or not in scope
kablam!   --> src/lib.rs:27:35
kablam!    |
kablam! 27 |     controllers: HashMap<Vec<u8>, Path>,
kablam!    |                                   ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: you can import it into scope: `use std::path::Path;`.
kablam! 
kablam! error[E0412]: type name `Path` is undefined or not in scope
kablam!   --> src/lib.rs:31:11
kablam!    |
kablam! 31 |     path: Path,
kablam!    |           ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: you can import it into scope: `use std::path::Path;`.
kablam! 
kablam! error[E0412]: type name `Path` is undefined or not in scope
kablam!   --> src/lib.rs:32:37
kablam!    |
kablam! 32 |     cache: RefCell<HashMap<Vec<u8>, Path>>,
kablam!    |                                     ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: you can import it into scope: `use std::path::Path;`.
kablam! 
kablam! error[E0412]: type name `Path` is undefined or not in scope
kablam!   --> src/lib.rs:36:71
kablam!    |
kablam! 36 | pub fn get_controllers(pid: libc::pid_t) -> IoResult<HashMap<Vec<u8>, Path>> {
kablam!    |                                                                       ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: you can import it into scope: `use std::path::Path;`.
kablam! 
kablam! error[E0433]: failed to resolve. Use of undeclared type or module `Path`
kablam!   --> src/lib.rs:37:37
kablam!    |
kablam! 37 |     let contents = try!(File::open(&Path::new(format!("/proc/{}/cgroup", pid))).read_to_string());
kablam!    |                                     ^^^^^^^^^ Use of undeclared type or module `Path`
kablam! 
kablam! error[E0433]: failed to resolve. Use of undeclared type or module `Path`
kablam!   --> src/lib.rs:46:20
kablam!    |
kablam! 46 |         let path = Path::new(columns.next().expect("No controller path!"));
kablam!    |                    ^^^^^^^^^ Use of undeclared type or module `Path`
kablam! 
kablam! error[E0412]: type name `Path` is undefined or not in scope
kablam!   --> src/lib.rs:52:22
kablam!    |
kablam! 52 | fn path_cache(path: &Path) -> IoResult<HashMap<Vec<u8>, Path>> {
kablam!    |                      ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: you can import it into scope: `use std::path::Path;`.
kablam! 
kablam! error[E0412]: type name `Path` is undefined or not in scope
kablam!   --> src/lib.rs:52:57
kablam!    |
kablam! 52 | fn path_cache(path: &Path) -> IoResult<HashMap<Vec<u8>, Path>> {
kablam!    |                                                         ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: you can import it into scope: `use std::path::Path;`.
kablam! 
kablam! error[E0433]: failed to resolve. Could not find `fs` in `io`
kablam!   --> src/lib.rs:54:22
kablam!    |
kablam! 54 |     for path in try!(std::io::fs::readdir(path)).into_iter() {
kablam!    |                      ^^^^^^^^^^^^^^^^^^^^ Could not find `fs` in `io`
kablam! 
kablam! error[E0433]: failed to resolve. Use of undeclared type or module `Path`
kablam!   --> src/lib.rs:65:35
kablam!    |
kablam! 65 |         CGroup::from_base_and_pid(Path::new("/sys/fs/cgroup"), unsafe { libc::getpid() })
kablam!    |                                   ^^^^^^^^^ Use of undeclared type or module `Path`
kablam! 
kablam! error[E0412]: type name `Path` is undefined or not in scope
kablam!   --> src/lib.rs:69:36
kablam!    |
kablam! 69 |     pub fn from_base_and_pid(base: Path, pid: libc::pid_t) -> IoResult<CGroup> {
kablam!    |                                    ^^^^ undefined or not in scope
kablam!    |
kablam!    = help: you can import it into scope: `use std::path::Path;`.
kablam! 
kablam! error[E0433]: failed to resolve. Use of undeclared type or module `Path`
kablam!   --> src/lib.rs:83:53
kablam!    |
kablam! 83 |             Some(c) => p.push(c.path_relative_from(&Path::new("/")).expect("path_relative_from is bork?")),
kablam!    |                                                     ^^^^^^^^^ Use of undeclared type or module `Path`
kablam! 
kablam! error: use of unstable library feature 'libc': use `libc` from crates.io (see issue #27783)
kablam!   --> src/lib.rs:15:1
kablam!    |
kablam! 15 | extern crate libc;
kablam!    | ^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error: use of unstable library feature 'libc': use `libc` from crates.io (see issue #27783)
kablam!   --> src/lib.rs:36:29
kablam!    |
kablam! 36 | pub fn get_controllers(pid: libc::pid_t) -> IoResult<HashMap<Vec<u8>, Path>> {
kablam!    |                             ^^^^^^^^^^^
kablam! 
kablam! error: use of unstable library feature 'libc': use `libc` from crates.io (see issue #27783)
kablam!   --> src/lib.rs:65:73
kablam!    |
kablam! 65 |         CGroup::from_base_and_pid(Path::new("/sys/fs/cgroup"), unsafe { libc::getpid() })
kablam!    |                                                                         ^^^^^^^^^^^^
kablam! 
kablam! error: use of unstable library feature 'libc': use `libc` from crates.io (see issue #27783)
kablam!   --> src/lib.rs:69:47
kablam!    |
kablam! 69 |     pub fn from_base_and_pid(base: Path, pid: libc::pid_t) -> IoResult<CGroup> {
kablam!    |                                               ^^^^^^^^^^^
kablam! 
kablam! error: aborting due to 20 previous errors
kablam! 
kablam! error: Could not compile `cgroup`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f d7529148d47e8413da3c6cfa31065562e694da583722c81770231edc5ce83075`
blam! d7529148d47e8413da3c6cfa31065562e694da583722c81770231edc5ce83075
