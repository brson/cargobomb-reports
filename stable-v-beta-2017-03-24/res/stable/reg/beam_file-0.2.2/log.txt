boom! testing beam_file-0.2.2 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! de4a823047afeb1d624a32a7a6edae76c75c5e56768ee3279c1554c43ebd3d72
boom! running `docker start -a de4a823047afeb1d624a32a7a6edae76c75c5e56768ee3279c1554c43ebd3d72`
kablam!    Compiling libflate v0.1.3
kablam!    Compiling beam_file v0.2.2 (file:///source)
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 4.3 secs
boom! running `docker rm -f de4a823047afeb1d624a32a7a6edae76c75c5e56768ee3279c1554c43ebd3d72`
blam! de4a823047afeb1d624a32a7a6edae76c75c5e56768ee3279c1554c43ebd3d72
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 115a4c5398715402e3bceb3b54d3c745d5041dc7ffcd27613ad91f7a39417325
boom! running `docker start -a 115a4c5398715402e3bceb3b54d3c745d5041dc7ffcd27613ad91f7a39417325`
kablam!    Compiling beam_file v0.2.2 (file:///source)
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 3.95 secs
boom! running `docker rm -f 115a4c5398715402e3bceb3b54d3c745d5041dc7ffcd27613ad91f7a39417325`
blam! 115a4c5398715402e3bceb3b54d3c745d5041dc7ffcd27613ad91f7a39417325
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 96278f080620910af4a0fe54d7748918e3d6e3e27f7ee55ed3c647167d3ab101
boom! running `docker start -a 96278f080620910af4a0fe54d7748918e3d6e3e27f7ee55ed3c647167d3ab101`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/beam_file-92f877f2e107f2e9
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/lib-88cd95d425f92df7
blam! 
blam! running 3 tests
blam! test raw_chunks ... ok
blam! test standard_chunks ... ok
blam! test encode_chunks ... ok
blam! 
blam! test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests beam_file
blam! 
blam! running 4 tests
blam! test _1 ... FAILED
blam! test beam_file::BeamFile_0 ... ok
blam! test _0 ... ok
blam! test chunk::StandardChunk_0 ... ok
blam! 
blam! failures:
blam! 
blam! ---- _1 stdout ----
blam! 	warning: unused import: `Chunk`, #[warn(unused_imports)] on by default
blam!  --> <anon>:4:24
blam!   |
blam! 4 | use beam_file::chunk::{Chunk, RawChunk};
blam!   |                        ^^^^^
blam! 
blam! thread '_1' panicked at 'test executable failed:
blam! 
blam! thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Io(Error { repr: Os { code: 30, message: "Read-only file system" } })', /buildslave/rust-buildbot/slave/stable-dist-rustc-linux/build/src/libcore/result.rs:837
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! ', /buildslave/rust-buildbot/slave/stable-dist-rustc-linux/build/src/librustdoc/test.rs:301
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! 
blam! failures:
blam!     _1
blam! 
blam! test result: FAILED. 3 passed; 1 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f 96278f080620910af4a0fe54d7748918e3d6e3e27f7ee55ed3c647167d3ab101`
blam! 96278f080620910af4a0fe54d7748918e3d6e3e27f7ee55ed3c647167d3ab101
