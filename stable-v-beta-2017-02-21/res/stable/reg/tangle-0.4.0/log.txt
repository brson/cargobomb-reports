boom! testing tangle-0.4.0 against stable for beta
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 81ea97bf11d91c5c1548476760c24321ee939f19b2775a7e710770631cf89006
boom! running `docker start -a 81ea97bf11d91c5c1548476760c24321ee939f19b2775a7e710770631cf89006`
kablam!    Compiling tangle v0.4.0 (file:///source)
kablam! warning: unused import: `std::thread`, #[warn(unused_imports)] on by default
kablam!  --> src/lib.rs:7:5
kablam!   |
kablam! 7 | use std::thread;
kablam!   |     ^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `std::convert`, #[warn(unused_imports)] on by default
kablam!   --> src/lib.rs:10:5
kablam!    |
kablam! 10 | use std::convert;
kablam!    |     ^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `cont`, #[warn(unused_variables)] on by default
kablam!   --> src/lib.rs:46:29
kablam!    |
kablam! 46 |             Async::Continue(cont) => panic!("Cannot map on `Async::Continue`. Use `map_future` for that.")
kablam!    |                             ^^^^
kablam! 
kablam! warning: unused variable: `cont`, #[warn(unused_variables)] on by default
kablam!   --> src/lib.rs:54:29
kablam!    |
kablam! 54 |             Async::Continue(cont) => panic!("Cannot map on `Async::Continue`. Use `map_future` for that.")
kablam!    |                             ^^^^
kablam! 
kablam! error: defaults for type parameters are only allowed in `struct`, `enum`, `type`, or `trait` definitions., #[deny(invalid_type_param_default)] on by default
kablam!    --> src/lib.rs:178:9
kablam!     |
kablam! 178 | impl<T, E=()> Future<T, E>
kablam!     |         ^
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #36887 <https://github.com/rust-lang/rust/issues/36887>
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:192:48
kablam!     |
kablam! 192 |         POOL.lock().unwrap().execute(move || { tx.send(f()); });
kablam!     |                                                ^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:274:30
kablam!     |
kablam! 274 |                 Ok(val) => { tx.send(f(val)); },
kablam!     |                              ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:275:31
kablam!     |
kablam! 275 |                 Err(err) => { tx.send(Async::Err(err)); }
kablam!     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:305:30
kablam!     |
kablam! 305 |                 Ok(val) => { tx.send(Async::Ok(f(val))); },
kablam!     |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:306:31
kablam!     |
kablam! 306 |                 Err(err) => { tx.send(Async::Err(err)); }
kablam!     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:338:9
kablam!     |
kablam! 338 |         tx.send(Async::Ok(val));
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:354:9
kablam!     |
kablam! 354 |         tx.send(Async::Err(err));
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error: aborting due to previous error
kablam! 
kablam! error: Could not compile `tangle`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 81ea97bf11d91c5c1548476760c24321ee939f19b2775a7e710770631cf89006`
blam! 81ea97bf11d91c5c1548476760c24321ee939f19b2775a7e710770631cf89006
