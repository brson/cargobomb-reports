boom! testing ber-0.0.6 against stable for beta
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! aadaf7f0d4b3c36ce4aeaf543471453493fe34a7968590260b47e90cd4270663
boom! running `docker start -a aadaf7f0d4b3c36ce4aeaf543471453493fe34a7968590260b47e90cd4270663`
kablam!    Compiling ber v0.0.6 (file:///source)
kablam! error[E0412]: type name `byteorder::Error` is undefined or not in scope
kablam!   --> src/err.rs:13:15
kablam!    |
kablam! 13 |     Byteorder(byteorder::Error),
kablam!    |               ^^^^^^^^^^^^^^^^ undefined or not in scope
kablam!    |
kablam!    = help: you can import several candidates into scope (`use ...;`):
kablam!    = help:   `err::Error`
kablam!    = help:   `std::error::Error`
kablam!    = help:   `std::fmt::Error`
kablam!    = help:   `std::io::Error`
kablam! 
kablam! error[E0412]: type name `byteorder::Error` is undefined or not in scope
kablam!   --> src/err.rs:76:11
kablam!    |
kablam! 76 | impl From<byteorder::Error> for Error {
kablam!    |           ^^^^^^^^^^^^^^^^ undefined or not in scope
kablam!    |
kablam!    = help: you can import several candidates into scope (`use ...;`):
kablam!    = help:   `err::Error`
kablam!    = help:   `std::error::Error`
kablam!    = help:   `std::fmt::Error`
kablam!    = help:   `std::io::Error`
kablam! 
kablam! error[E0412]: type name `byteorder::Error` is undefined or not in scope
kablam!   --> src/err.rs:77:19
kablam!    |
kablam! 77 |     fn from (err: byteorder::Error) -> Error {
kablam!    |                   ^^^^^^^^^^^^^^^^ undefined or not in scope
kablam!    |
kablam!    = help: you can import several candidates into scope (`use ...;`):
kablam!    = help:   `err::Error`
kablam!    = help:   `std::error::Error`
kablam!    = help:   `std::fmt::Error`
kablam!    = help:   `std::io::Error`
kablam! 
kablam! error[E0412]: type name `byteorder::Result` is undefined or not in scope
kablam!    --> src/tag.rs:311:57
kablam!     |
kablam! 311 | fn write_length (mut w: &mut Write, length: &Length) -> byteorder::Result<()> {
kablam!     |                                                         ^^^^^^^^^^^^^^^^^^^^^ undefined or not in scope
kablam!     |
kablam!     = help: you can import several candidates into scope (`use ...;`):
kablam!     = help:   `std::fmt::Result`
kablam!     = help:   `std::io::Result`
kablam!     = help:   `std::prelude::v1::Result`
kablam!     = help:   `std::result::Result`
kablam!     = help:   `std::thread::Result`
kablam! 
kablam! error: aborting due to 4 previous errors
kablam! 
kablam! error: Could not compile `ber`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f aadaf7f0d4b3c36ce4aeaf543471453493fe34a7968590260b47e90cd4270663`
blam! aadaf7f0d4b3c36ce4aeaf543471453493fe34a7968590260b47e90cd4270663
