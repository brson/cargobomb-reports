boom! testing hdf5-sys-0.4.1 against stable for beta
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! b26e852ac2cb13210f50f2a923279c2b55b9305410a6b718dc24373185e78f4f
boom! running `docker start -a b26e852ac2cb13210f50f2a923279c2b55b9305410a6b718dc24373185e78f4f`
kablam!    Compiling hdf5-sys v0.4.1 (file:///source)
kablam! error: failed to run custom build command for `hdf5-sys v0.4.1 (file:///source)`
kablam! process didn't exit successfully: `/target/debug/build/hdf5-sys-3b23b8a789cdfe38/build-script-build` (exit code: 101)
kablam! --- stdout
kablam! checking for a BSD-compatible install... /usr/bin/install -c
kablam! checking whether build environment is sane... yes
kablam! checking for a thread-safe mkdir -p... /bin/mkdir -p
kablam! checking for gawk... no
kablam! checking for mawk... mawk
kablam! checking whether make sets $(MAKE)... no
kablam! checking whether make supports nested variables... no
kablam! checking whether make supports nested variables... (cached) no
kablam! checking whether to enable maintainer-specific portions of Makefiles... no
kablam! checking build system type... x86_64-unknown-linux-gnu
kablam! checking host system type... x86_64-unknown-linux-gnu
kablam! checking shell variables initial values... done
kablam! checking if basename works... yes
kablam! checking if xargs works... yes
kablam! checking for cached host... none
kablam! checking for config x86_64-unknown-linux-gnu... no
kablam! checking for config x86_64-unknown-linux-gnu... no
kablam! checking for config unknown-linux-gnu... no
kablam! checking for config unknown-linux-gnu... no
kablam! checking for config x86_64-linux-gnu... no
kablam! checking for config x86_64-linux-gnu... no
kablam! checking for config x86_64-unknown... no
kablam! checking for config linux-gnu... found
kablam! compiler 'gcc' is GNU gcc-5.2.1
kablam! checking for config /source/source/config/site-specific/host-b26e852ac2cb... no
kablam! checking for gcc... gcc
kablam! checking whether the C compiler works... yes
kablam! checking for C compiler default output file name... a.out
kablam! checking for suffix of executables... 
kablam! checking whether we are cross compiling... no
kablam! checking for suffix of object files... o
kablam! checking whether we are using the GNU C compiler... yes
kablam! checking whether gcc accepts -g... yes
kablam! checking for gcc option to accept ISO C89... none needed
kablam! checking whether gcc understands -c and -o together... yes
kablam! checking for style of include used by make... none
kablam! checking dependency style of gcc... none
kablam! checking if unsupported combinations of configure options are allowed... no
kablam! checking if Fortran interface enabled... no
kablam! checking if Fortran 2003 interface enabled... no
kablam! checking whether we are using the GNU C++ compiler... no
kablam! checking whether g++ accepts -g... no
kablam! checking dependency style of g++... none
kablam! checking how to run the C++ preprocessor... /lib/cpp
kablam! 
kablam! --- stderr
kablam! configure: error: in `/target/debug/build/hdf5-sys-8af87144c30a2689/out/build':
kablam! configure: error: C++ preprocessor "/lib/cpp" fails sanity check
kablam! See `config.log' for more details
kablam! thread 'main' panicked at 'assertion failed: cmd!(source . join ( "configure"
kablam!      )).current_dir(&build).arg("--disable-hl").arg("--enable-debug=no").arg("--enable-production").arg("--enable-threadsafe").arg(&format!("--prefix={}"
kablam!                                                                                                                                             ,
kablam!                                                                                                                                             install
kablam!                                                                                                                                             .
kablam!                                                                                                                                             display
kablam!                                                                                                                                             (
kablam! 
kablam!                                                                                                                                             ))).stdout(process::Stdio::inherit()).stderr(process::Stdio::inherit()).status().unwrap().success()', build.rs:39
kablam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
kablam! 
boom! running `docker rm -f b26e852ac2cb13210f50f2a923279c2b55b9305410a6b718dc24373185e78f4f`
blam! b26e852ac2cb13210f50f2a923279c2b55b9305410a6b718dc24373185e78f4f
