boom! testing droom-ui-0.0.1 against stable for beta
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! af6ad40eeed4006a8f9f26d1678a525fba88cea505e12a6f200157199253d23d
boom! running `docker start -a af6ad40eeed4006a8f9f26d1678a525fba88cea505e12a6f200157199253d23d`
kablam!    Compiling droom-ui v0.0.1 (file:///source)
kablam! error: `extern "C" fn() -> i32 {callback::callbacks::set_close_cb::listener}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!   --> src/callback/macros.rs:30:54
kablam!    |
kablam! 30 |               iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!    |                                                        ^^^^^^^^^
kablam!    | 
kablam!   ::: src/callback/callbacks.rs
kablam!    |
kablam! 13 |   impl_callback! {
kablam!    |  _- starting here...
kablam! 14 | |     let name = "_IUPRUST_CLOSE_CB";
kablam! 15 | |     extern fn listener() -> CallbackReturn;
kablam! 16 | |     #[doc="Action generated when IUP closes (i.e. at the end of `with_iup`)."]
kablam! 17 | |     pub fn set_close_cb<F: Callback()>(cb: F);
kablam! 18 | |     #[doc="Removes a previosly set up close callback."]
kablam! 19 | |     pub fn remove_close_cb() -> Option<Box<_>>;
kablam! 20 | | }
kablam!    | |_- ...ending here: in this macro invocation
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn() -> i32 {callback::callbacks::set_close_cb::listener}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!   --> src/callback/macros.rs:32:58
kablam!    |
kablam! 32 |               iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!    |                                                            ^^^^^^^^^
kablam!    | 
kablam!   ::: src/callback/callbacks.rs
kablam!    |
kablam! 13 |   impl_callback! {
kablam!    |  _- starting here...
kablam! 14 | |     let name = "_IUPRUST_CLOSE_CB";
kablam! 15 | |     extern fn listener() -> CallbackReturn;
kablam! 16 | |     #[doc="Action generated when IUP closes (i.e. at the end of `with_iup`)."]
kablam! 17 | |     pub fn set_close_cb<F: Callback()>(cb: F);
kablam! 18 | |     #[doc="Removes a previosly set up close callback."]
kablam! 19 | |     pub fn remove_close_cb() -> Option<Box<_>>;
kablam! 20 | | }
kablam!    | |_- ...ending here: in this macro invocation
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn() -> i32 {callback::callbacks::set_idle::listener}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!   --> src/callback/macros.rs:30:54
kablam!    |
kablam! 30 |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!    |                                                      ^^^^^^^^^
kablam!    | 
kablam!   ::: src/callback/callbacks.rs
kablam!    |
kablam! 22 | impl_callback! {
kablam!    | - in this macro invocation
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn() -> i32 {callback::callbacks::set_idle::listener}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!   --> src/callback/macros.rs:32:58
kablam!    |
kablam! 32 |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!    |                                                          ^^^^^^^^^
kablam!    | 
kablam!   ::: src/callback/callbacks.rs
kablam!    |
kablam! 22 | impl_callback! {
kablam!    | - in this macro invocation
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::Action::set_action::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!   --> src/callback/macros.rs:30:54
kablam!    |
kablam! 30 |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!    |                                                      ^^^^^^^^^
kablam!    | 
kablam!   ::: src/callback/callbacks.rs
kablam!    |
kablam! 38 | impl_callback! {
kablam!    | - in this macro invocation
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::Action::set_action::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!   --> src/callback/macros.rs:32:58
kablam!    |
kablam! 32 |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!    |                                                          ^^^^^^^^^
kablam!    | 
kablam!   ::: src/callback/callbacks.rs
kablam!    |
kablam! 38 | impl_callback! {
kablam!    | - in this macro invocation
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::ActionCb::set_action_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!   --> src/callback/macros.rs:30:54
kablam!    |
kablam! 30 |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!    |                                                      ^^^^^^^^^
kablam!    | 
kablam!   ::: src/callback/callbacks.rs
kablam!    |
kablam! 50 | impl_callback! {
kablam!    | - in this macro invocation
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::ActionCb::set_action_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!   --> src/callback/macros.rs:32:58
kablam!    |
kablam! 32 |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!    |                                                          ^^^^^^^^^
kablam!    | 
kablam!   ::: src/callback/callbacks.rs
kablam!    |
kablam! 50 | impl_callback! {
kablam!    | - in this macro invocation
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::DestroyCb::set_destroy_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!   --> src/callback/macros.rs:30:54
kablam!    |
kablam! 30 |               iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!    |                                                        ^^^^^^^^^
kablam!    | 
kablam!   ::: src/callback/callbacks.rs
kablam!    |
kablam! 71 |   impl_callback! {
kablam!    |  _- starting here...
kablam! 72 | |     #[doc="Called right before an element is destroyed."]
kablam! 73 | |     pub trait DestroyCb where Self: Element {
kablam! 74 | |         let name = "LDESTROY_CB";   // See comments above for reason behind LDESTROY_CB.
kablam! 75 | |         extern fn listener(ih: *mut iup_sys::Ihandle) -> CallbackReturn;
kablam! 76 | |         fn set_destroy_cb<F: Callback(Self)>(&mut self, cb: F) -> Self;
kablam! 77 | |         fn remove_destroy_cb(&mut self) -> Option<Box<_>>;
kablam! 78 | |     }
kablam! 79 | | }
kablam!    | |_- ...ending here: in this macro invocation
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::DestroyCb::set_destroy_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!   --> src/callback/macros.rs:32:58
kablam!    |
kablam! 32 |               iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!    |                                                            ^^^^^^^^^
kablam!    | 
kablam!   ::: src/callback/callbacks.rs
kablam!    |
kablam! 71 |   impl_callback! {
kablam!    |  _- starting here...
kablam! 72 | |     #[doc="Called right before an element is destroyed."]
kablam! 73 | |     pub trait DestroyCb where Self: Element {
kablam! 74 | |         let name = "LDESTROY_CB";   // See comments above for reason behind LDESTROY_CB.
kablam! 75 | |         extern fn listener(ih: *mut iup_sys::Ihandle) -> CallbackReturn;
kablam! 76 | |         fn set_destroy_cb<F: Callback(Self)>(&mut self, cb: F) -> Self;
kablam! 77 | |         fn remove_destroy_cb(&mut self) -> Option<Box<_>>;
kablam! 78 | |     }
kablam! 79 | | }
kablam!    | |_- ...ending here: in this macro invocation
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::MapCb::set_map_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!   --> src/callback/macros.rs:30:54
kablam!    |
kablam! 30 |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!    |                                                      ^^^^^^^^^
kablam!    | 
kablam!   ::: src/callback/callbacks.rs
kablam!    |
kablam! 81 | impl_callback! {
kablam!    | - in this macro invocation
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::MapCb::set_map_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!   --> src/callback/macros.rs:32:58
kablam!    |
kablam! 32 |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!    |                                                          ^^^^^^^^^
kablam!    | 
kablam!   ::: src/callback/callbacks.rs
kablam!    |
kablam! 81 | impl_callback! {
kablam!    | - in this macro invocation
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::UnmapCb::set_unmap_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:30:54
kablam!     |
kablam! 30  |               iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!     |                                                        ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 95  |   impl_callback! {
kablam!     |  _- starting here...
kablam! 96  | |     #[doc="Called right before an element is unmapped."]
kablam! 97  | |     pub trait UnmapCb where Self: Element {
kablam! 98  | |         let name = "UNMAP_CB";
kablam! 99  | |         extern fn listener(ih: *mut iup_sys::Ihandle) -> CallbackReturn;
kablam! 100 | |         fn set_unmap_cb<F: Callback(Self)>(&mut self, cb: F) -> Self;
kablam! 101 | |         fn remove_unmap_cb(&mut self) -> Option<Box<_>>;
kablam! 102 | |     }
kablam! 103 | | }
kablam!     | |_- ...ending here: in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::UnmapCb::set_unmap_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:32:58
kablam!     |
kablam! 32  |               iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!     |                                                            ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 95  |   impl_callback! {
kablam!     |  _- starting here...
kablam! 96  | |     #[doc="Called right before an element is unmapped."]
kablam! 97  | |     pub trait UnmapCb where Self: Element {
kablam! 98  | |         let name = "UNMAP_CB";
kablam! 99  | |         extern fn listener(ih: *mut iup_sys::Ihandle) -> CallbackReturn;
kablam! 100 | |         fn set_unmap_cb<F: Callback(Self)>(&mut self, cb: F) -> Self;
kablam! 101 | |         fn remove_unmap_cb(&mut self) -> Option<Box<_>>;
kablam! 102 | |     }
kablam! 103 | | }
kablam!     | |_- ...ending here: in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::GetFocusCb::set_getfocus_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:30:54
kablam!     |
kablam! 30  |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!     |                                                      ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 105 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::GetFocusCb::set_getfocus_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:32:58
kablam!     |
kablam! 32  |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!     |                                                          ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 105 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::KillFocusCb::set_killfocus_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:30:54
kablam!     |
kablam! 30  |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!     |                                                      ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 118 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::KillFocusCb::set_killfocus_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:32:58
kablam!     |
kablam! 32  |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!     |                                                          ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 118 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::EnterWindowCb::set_enterwindow_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:30:54
kablam!     |
kablam! 30  |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!     |                                                      ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 134 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::EnterWindowCb::set_enterwindow_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:32:58
kablam!     |
kablam! 32  |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!     |                                                          ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 134 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::LeaveWindowCb::set_leavewindow_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:30:54
kablam!     |
kablam! 30  |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!     |                                                      ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 148 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::LeaveWindowCb::set_leavewindow_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:32:58
kablam!     |
kablam! 32  |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!     |                                                          ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 148 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::HelpCb::set_help_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:30:54
kablam!     |
kablam! 30  |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!     |                                                      ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 162 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::HelpCb::set_help_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:32:58
kablam!     |
kablam! 32  |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!     |                                                          ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 162 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, i32, i32, i32) -> i32 {callback::callbacks::CaretCb::set_caret_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:30:54
kablam!     |
kablam! 30  |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!     |                                                      ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 177 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, i32, i32, i32) -> i32 {callback::callbacks::CaretCb::set_caret_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:32:58
kablam!     |
kablam! 32  |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!     |                                                          ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 177 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, i32) -> i32 {callback::callbacks::SpinCb::set_spin_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:30:54
kablam!     |
kablam! 30  |               iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!     |                                                        ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 190 |   impl_callback! {
kablam!     |  _- starting here...
kablam! 191 | |     #[doc="Action generated when a spin button is pressed."]
kablam! 192 | |     pub trait SpinCb where Self: Element {
kablam! 193 | |         let name = "SPIN_CB";
kablam! 194 | |         extern fn listener(ih: *mut iup_sys::Ihandle, i: c_int) -> CallbackReturn;
kablam! 195 | |         fn set_spin_cb<F: Callback(Self, i32)>(&mut self, cb: F) -> Self;
kablam! 196 | |         fn remove_spin_cb(&mut self) -> Option<Box<_>>;
kablam! 197 | |     }
kablam! 198 | | }
kablam!     | |_- ...ending here: in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, i32) -> i32 {callback::callbacks::SpinCb::set_spin_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:32:58
kablam!     |
kablam! 32  |               iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!     |                                                            ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 190 |   impl_callback! {
kablam!     |  _- starting here...
kablam! 191 | |     #[doc="Action generated when a spin button is pressed."]
kablam! 192 | |     pub trait SpinCb where Self: Element {
kablam! 193 | |         let name = "SPIN_CB";
kablam! 194 | |         extern fn listener(ih: *mut iup_sys::Ihandle, i: c_int) -> CallbackReturn;
kablam! 195 | |         fn set_spin_cb<F: Callback(Self, i32)>(&mut self, cb: F) -> Self;
kablam! 196 | |         fn remove_spin_cb(&mut self) -> Option<Box<_>>;
kablam! 197 | |     }
kablam! 198 | | }
kablam!     | |_- ...ending here: in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::ValueChangedCb::set_valuechanged_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:30:54
kablam!     |
kablam! 30  |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!     |                                                      ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 200 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::ValueChangedCb::set_valuechanged_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:32:58
kablam!     |
kablam! 32  |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!     |                                                          ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 200 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, *const i8, i32, i32, i32) -> i32 {callback::callbacks::DropFilesCb::set_dropfiles_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:30:54
kablam!     |
kablam! 30  |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!     |                                                      ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 213 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, *const i8, i32, i32, i32) -> i32 {callback::callbacks::DropFilesCb::set_dropfiles_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:32:58
kablam!     |
kablam! 32  |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!     |                                                          ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 213 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::CloseCb::set_move_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:30:54
kablam!     |
kablam! 30  |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!     |                                                      ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 241 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {callback::callbacks::CloseCb::set_move_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:32:58
kablam!     |
kablam! 32  |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!     |                                                          ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 241 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, i32, i32) -> i32 {callback::callbacks::MoveCb::set_move_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:30:54
kablam!     |
kablam! 30  |               iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!     |                                                        ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 256 |   impl_callback! {
kablam!     |  _- starting here...
kablam! 257 | |     #[doc="Called after the widget is moved, see it's documentation for more details."]
kablam! 258 | |     pub trait MoveCb where Self: Element {
kablam! 259 | |         let name = "MOVE_CB";
kablam! 260 | |         extern fn listener(ih: *mut iup_sys::Ihandle, x: c_int, y: c_int) -> CallbackReturn;
kablam! 261 | |         fn set_move_cb<F: Callback(Self, i32, i32)>(&mut self, cb: F) -> Self;
kablam! 262 | |         fn remove_move_cb(&mut self) -> Option<Box<_>>;
kablam! 263 | |     }
kablam! 264 | | }
kablam!     | |_- ...ending here: in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, i32, i32) -> i32 {callback::callbacks::MoveCb::set_move_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:32:58
kablam!     |
kablam! 32  |               iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!     |                                                            ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 256 |   impl_callback! {
kablam!     |  _- starting here...
kablam! 257 | |     #[doc="Called after the widget is moved, see it's documentation for more details."]
kablam! 258 | |     pub trait MoveCb where Self: Element {
kablam! 259 | |         let name = "MOVE_CB";
kablam! 260 | |         extern fn listener(ih: *mut iup_sys::Ihandle, x: c_int, y: c_int) -> CallbackReturn;
kablam! 261 | |         fn set_move_cb<F: Callback(Self, i32, i32)>(&mut self, cb: F) -> Self;
kablam! 262 | |         fn remove_move_cb(&mut self) -> Option<Box<_>>;
kablam! 263 | |     }
kablam! 264 | | }
kablam!     | |_- ...ending here: in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, i32, i32) -> i32 {callback::callbacks::ResizeCb::set_move_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:30:54
kablam!     |
kablam! 30  |               iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!     |                                                        ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 267 |   impl_callback! {
kablam!     |  _- starting here...
kablam! 268 | |     #[doc="Action generated when the canvas or dialog size is changed."]
kablam! 269 | |     pub trait ResizeCb where Self: Element {
kablam! 270 | |         let name = "RESIZE_CB";
kablam! 271 | |         extern fn listener(ih: *mut iup_sys::Ihandle, w: c_int, h: c_int) -> CallbackReturn;
kablam! 272 | |         fn set_move_cb<F: Callback(Self, i32, i32)>(&mut self, cb: F) -> Self;
kablam! 273 | |         fn remove_move_cb(&mut self) -> Option<Box<_>>;
kablam! 274 | |     }
kablam! 275 | | }
kablam!     | |_- ...ending here: in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, i32, i32) -> i32 {callback::callbacks::ResizeCb::set_move_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:32:58
kablam!     |
kablam! 32  |               iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!     |                                                            ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/callbacks.rs
kablam!     |
kablam! 267 |   impl_callback! {
kablam!     |  _- starting here...
kablam! 268 | |     #[doc="Action generated when the canvas or dialog size is changed."]
kablam! 269 | |     pub trait ResizeCb where Self: Element {
kablam! 270 | |         let name = "RESIZE_CB";
kablam! 271 | |         extern fn listener(ih: *mut iup_sys::Ihandle, w: c_int, h: c_int) -> CallbackReturn;
kablam! 272 | |         fn set_move_cb<F: Callback(Self, i32, i32)>(&mut self, cb: F) -> Self;
kablam! 273 | |         fn remove_move_cb(&mut self) -> Option<Box<_>>;
kablam! 274 | |     }
kablam! 275 | | }
kablam!     | |_- ...ending here: in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, i32, i32, i32, i32, *mut i8) -> i32 {callback::button::ButtonCb::set_button_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:30:54
kablam!     |
kablam! 30  |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!     |                                                      ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/button.rs
kablam!     |
kablam! 140 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, i32, i32, i32, i32, *mut i8) -> i32 {callback::button::ButtonCb::set_button_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:32:58
kablam!     |
kablam! 32  |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!     |                                                          ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/button.rs
kablam!     |
kablam! 140 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, i32, i32, *mut i8) -> i32 {callback::button::MotionCb::set_motion_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:30:54
kablam!     |
kablam! 30  |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!     |                                                      ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/button.rs
kablam!     |
kablam! 167 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, i32, i32, *mut i8) -> i32 {callback::button::MotionCb::set_motion_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:32:58
kablam!     |
kablam! 32  |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!     |                                                          ^^^^^^^^^
kablam!     | 
kablam!    ::: src/callback/button.rs
kablam!     |
kablam! 167 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, *const i8, i32) -> i32 {dialog::dialog::CopyDataCb::set_copydata_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!   --> src/callback/macros.rs:30:54
kablam!    |
kablam! 30 |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!    |                                                      ^^^^^^^^^
kablam!    | 
kablam!   ::: src/dialog/dialog.rs
kablam!    |
kablam! 71 | impl_callback! {
kablam!    | - in this macro invocation
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, *const i8, i32) -> i32 {dialog::dialog::CopyDataCb::set_copydata_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!   --> src/callback/macros.rs:32:58
kablam!    |
kablam! 32 |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!    |                                                          ^^^^^^^^^
kablam!    | 
kablam!   ::: src/dialog/dialog.rs
kablam!    |
kablam! 71 | impl_callback! {
kablam!    | - in this macro invocation
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {dialog::dialog::MdiActivateCb::set_mdiactivate_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:30:54
kablam!     |
kablam! 30  |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!     |                                                      ^^^^^^^^^
kablam!     | 
kablam!    ::: src/dialog/dialog.rs
kablam!     |
kablam! 89  | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle) -> i32 {dialog::dialog::MdiActivateCb::set_mdiactivate_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:32:58
kablam!     |
kablam! 32  |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!     |                                                          ^^^^^^^^^
kablam!     | 
kablam!    ::: src/dialog/dialog.rs
kablam!     |
kablam! 89  | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, i32) -> i32 {dialog::dialog::ShowCb::set_move_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:30:54
kablam!     |
kablam! 30  |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!     |                                                      ^^^^^^^^^
kablam!     | 
kablam!    ::: src/dialog/dialog.rs
kablam!     |
kablam! 105 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, i32) -> i32 {dialog::dialog::ShowCb::set_move_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:32:58
kablam!     |
kablam! 32  |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!     |                                                          ^^^^^^^^^
kablam!     | 
kablam!    ::: src/dialog/dialog.rs
kablam!     |
kablam! 105 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, i32, i32, i32) -> i32 {dialog::dialog::TrayClickCb::set_trayclick_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:30:54
kablam!     |
kablam! 30  |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!     |                                                      ^^^^^^^^^
kablam!     | 
kablam!    ::: src/dialog/dialog.rs
kablam!     |
kablam! 121 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, i32, i32, i32) -> i32 {dialog::dialog::TrayClickCb::set_trayclick_cb::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:32:58
kablam!     |
kablam! 32  |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!     |                                                          ^^^^^^^^^
kablam!     | 
kablam!    ::: src/dialog/dialog.rs
kablam!     |
kablam! 121 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, i32, *const i8) -> i32 {control::text::TextAction::set_action::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:30:54
kablam!     |
kablam! 30  |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!     |                                                      ^^^^^^^^^
kablam!     | 
kablam!    ::: src/control/text.rs
kablam!     |
kablam! 98  | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, i32, *const i8) -> i32 {control::text::TextAction::set_action::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:32:58
kablam!     |
kablam! 32  |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!     |                                                          ^^^^^^^^^
kablam!     | 
kablam!    ::: src/control/text.rs
kablam!     |
kablam! 98  | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, i32) -> i32 {control::toggle::ToggleAction::set_action::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!   --> src/callback/macros.rs:30:54
kablam!    |
kablam! 30 |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!    |                                                      ^^^^^^^^^
kablam!    | 
kablam!   ::: src/control/toggle.rs
kablam!    |
kablam! 41 | impl_callback! {
kablam!    | - in this macro invocation
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, i32) -> i32 {control::toggle::ToggleAction::set_action::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!   --> src/callback/macros.rs:32:58
kablam!    |
kablam! 32 |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!    |                                                          ^^^^^^^^^
kablam!    | 
kablam!   ::: src/control/toggle.rs
kablam!    |
kablam! 41 | impl_callback! {
kablam!    | - in this macro invocation
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, *const i8, i32, i32) -> i32 {control::list::ListAction::set_action::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:30:54
kablam!     |
kablam! 30  |             iup_sys::IupSetFunction(cstr!($cb_name), transmute($clistener));
kablam!     |                                                      ^^^^^^^^^
kablam!     | 
kablam!    ::: src/control/list.rs
kablam!     |
kablam! 107 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: `extern "C" fn(*mut iup_sys::Ihandle, *const i8, i32, i32) -> i32 {control::list::ListAction::set_action::listener::<Self>}` is now zero-sized and has to be cast to a pointer before transmuting to `extern "C" fn(*mut iup_sys::Ihandle) -> i32`, #[deny(transmute_from_fn_item_types)] on by default
kablam!    --> src/callback/macros.rs:32:58
kablam!     |
kablam! 32  |             iup_sys::IupSetCallback(ih, cstr!($cb_name), transmute($clistener));
kablam!     |                                                          ^^^^^^^^^
kablam!     | 
kablam!    ::: src/control/list.rs
kablam!     |
kablam! 107 | impl_callback! {
kablam!     | - in this macro invocation
kablam!     |
kablam!     = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!     = note: for more information, see issue #19925 <https://github.com/rust-lang/rust/issues/19925>
kablam! 
kablam! error: aborting due to 56 previous errors
kablam! 
kablam! error: Could not compile `droom-ui`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f af6ad40eeed4006a8f9f26d1678a525fba88cea505e12a6f200157199253d23d`
blam! af6ad40eeed4006a8f9f26d1678a525fba88cea505e12a6f200157199253d23d
