boom! testing typedopts-1.1.2 against stable for beta
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 3fa9acdb684d2c44b1b0ab8b9665505ada320babfcfef512af02315159670a60
boom! running `docker start -a 3fa9acdb684d2c44b1b0ab8b9665505ada320babfcfef512af02315159670a60`
kablam!    Compiling typedopts v1.1.2 (file:///source)
kablam! warning: method is never used: `get_field`, #[warn(dead_code)] on by default
kablam!   --> src/lib.rs:67:3
kablam!    |
kablam! 67 |     fn get_field<T:FromStr>(&self, field: &str) -> Option<T> {
kablam!    |  ___^ starting here...
kablam! 68 | |     match self.matches.opt_str(&self.cur) {
kablam! 69 | |       None    => None,
kablam! 70 | |       Some(s) => FromStr::from_str(&s).ok()
kablam! 71 | |     }
kablam! 72 | |   }
kablam!    | |___^ ...ending here
kablam! 
kablam! warning: unused variable: `field`, #[warn(unused_variables)] on by default
kablam!   --> src/lib.rs:67:34
kablam!    |
kablam! 67 |   fn get_field<T:FromStr>(&self, field: &str) -> Option<T> {
kablam!    |                                  ^^^^^
kablam! 
kablam! warning: unused variable: `a_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:163:45
kablam!     |
kablam! 163 |   fn read_enum_variant_arg<T, F>(&mut self, a_idx: usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                             ^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:165:5
kablam!     |
kablam! 165 |     f(self);
kablam!     |     ^^^^^^^^
kablam! 
kablam! warning: unused variable: `names`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:169:48
kablam!     |
kablam! 169 |   fn read_enum_struct_variant<T, F>(&mut self, names: &[&str], f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder, usize) -> DecodeResult<T> {
kablam!     |                                                ^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:171:5
kablam!     |
kablam! 171 |     f(self, 0);
kablam!     |     ^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `f_name`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:175:54
kablam!     |
kablam! 175 |   fn read_enum_struct_variant_field<T, F>(&mut self, f_name: &str, f_idx: usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                                      ^^^^^^
kablam! 
kablam! warning: unused variable: `f_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:175:68
kablam!     |
kablam! 175 |   fn read_enum_struct_variant_field<T, F>(&mut self, f_name: &str, f_idx: usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                                                    ^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:177:5
kablam!     |
kablam! 177 |     f(self);
kablam!     |     ^^^^^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:181:49
kablam!     |
kablam! 181 |   fn read_struct<T, F>(&mut self, s_name: &str, len: usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                                 ^^^
kablam! 
kablam! warning: unused variable: `f_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:187:55
kablam!     |
kablam! 187 |   fn read_struct_field<T, F>(&mut self, f_name: &str, f_idx: usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                                       ^^^^^
kablam! 
kablam! warning: unused variable: `tuple_len`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:210:35
kablam!     |
kablam! 210 |   fn read_tuple<T, F>(&mut self,  tuple_len: usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                   ^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:211:5
kablam!     |
kablam! 211 |     f(self);
kablam!     |     ^^^^^^^^
kablam! 
kablam! warning: unused variable: `a_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:215:38
kablam!     |
kablam! 215 |   fn read_tuple_arg<T, F>(&mut self, a_idx: usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                      ^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:216:5
kablam!     |
kablam! 216 |     f(self);
kablam!     |     ^^^^^^^^
kablam! 
kablam! warning: unused variable: `s_name`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:220:41
kablam!     |
kablam! 220 |   fn read_tuple_struct<T, F>(&mut self, s_name: &str, len:usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                         ^^^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:220:55
kablam!     |
kablam! 220 |   fn read_tuple_struct<T, F>(&mut self, s_name: &str, len:usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                                       ^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:221:5
kablam!     |
kablam! 221 |     f(self);
kablam!     |     ^^^^^^^^
kablam! 
kablam! warning: unused variable: `a_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:225:45
kablam!     |
kablam! 225 |   fn read_tuple_struct_arg<T, F>(&mut self, a_idx: usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                             ^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:226:5
kablam!     |
kablam! 226 |     f(self);
kablam!     |     ^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:232:5
kablam!     |
kablam! 232 |     f(self, 0);
kablam!     |     ^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:236:36
kablam!     |
kablam! 236 |   fn read_seq_elt<T, F>(&mut self, idx: usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                    ^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:237:5
kablam!     |
kablam! 237 |     f(self);
kablam!     |     ^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:242:5
kablam!     |
kablam! 242 |     f(self, 0);
kablam!     |     ^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:246:40
kablam!     |
kablam! 246 |   fn read_map_elt_key<T, F>(&mut self, idx: usize, f: F) -> DecodeResult<T> where F:FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                        ^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:247:5
kablam!     |
kablam! 247 |     f(self);
kablam!     |     ^^^^^^^^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:251:40
kablam!     |
kablam! 251 |   fn read_map_elt_val<T, F>(&mut self, idx: usize, f: F) -> DecodeResult<T> where F:FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                        ^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:252:5
kablam!     |
kablam! 252 |     f(self);
kablam!     |     ^^^^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 1.23 secs
boom! running `docker rm -f 3fa9acdb684d2c44b1b0ab8b9665505ada320babfcfef512af02315159670a60`
blam! 3fa9acdb684d2c44b1b0ab8b9665505ada320babfcfef512af02315159670a60
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 15fa7a4eea415c23f0a0d4a443bcee347abe5898ab91e173696962cd3bcae750
boom! running `docker start -a 15fa7a4eea415c23f0a0d4a443bcee347abe5898ab91e173696962cd3bcae750`
kablam!    Compiling typedopts v1.1.2 (file:///source)
kablam! warning: unused import: `DecodeResult`, #[warn(unused_imports)] on by default
kablam!  --> examples/getopt.rs:7:17
kablam!   |
kablam! 7 | use typedopts::{DecodeResult,ErrorType};
kablam!   |                 ^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!   --> examples/getopt.rs:48:3
kablam!    |
kablam! 48 |     help_opts.parse(args).map(|m| {
kablam!    |  ___^ starting here...
kablam! 49 | |     if m.opt_present("h") {
kablam! 50 | |       print_usage(&program, generate_options());
kablam! 51 | |       return;
kablam! 52 | |     }
kablam! 53 | |   });
kablam!    | |_____^ ...ending here
kablam! 
kablam! warning: method is never used: `get_field`, #[warn(dead_code)] on by default
kablam!   --> src/lib.rs:67:3
kablam!    |
kablam! 67 |     fn get_field<T:FromStr>(&self, field: &str) -> Option<T> {
kablam!    |  ___^ starting here...
kablam! 68 | |     match self.matches.opt_str(&self.cur) {
kablam! 69 | |       None    => None,
kablam! 70 | |       Some(s) => FromStr::from_str(&s).ok()
kablam! 71 | |     }
kablam! 72 | |   }
kablam!    | |___^ ...ending here
kablam! 
kablam! warning: unused variable: `field`, #[warn(unused_variables)] on by default
kablam!   --> src/lib.rs:67:34
kablam!    |
kablam! 67 |   fn get_field<T:FromStr>(&self, field: &str) -> Option<T> {
kablam!    |                                  ^^^^^
kablam! 
kablam! warning: unused variable: `a_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:163:45
kablam!     |
kablam! 163 |   fn read_enum_variant_arg<T, F>(&mut self, a_idx: usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                             ^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:165:5
kablam!     |
kablam! 165 |     f(self);
kablam!     |     ^^^^^^^^
kablam! 
kablam! warning: unused variable: `names`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:169:48
kablam!     |
kablam! 169 |   fn read_enum_struct_variant<T, F>(&mut self, names: &[&str], f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder, usize) -> DecodeResult<T> {
kablam!     |                                                ^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:171:5
kablam!     |
kablam! 171 |     f(self, 0);
kablam!     |     ^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `f_name`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:175:54
kablam!     |
kablam! 175 |   fn read_enum_struct_variant_field<T, F>(&mut self, f_name: &str, f_idx: usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                                      ^^^^^^
kablam! 
kablam! warning: unused variable: `f_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:175:68
kablam!     |
kablam! 175 |   fn read_enum_struct_variant_field<T, F>(&mut self, f_name: &str, f_idx: usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                                                    ^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:177:5
kablam!     |
kablam! 177 |     f(self);
kablam!     |     ^^^^^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:181:49
kablam!     |
kablam! 181 |   fn read_struct<T, F>(&mut self, s_name: &str, len: usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                                 ^^^
kablam! 
kablam! warning: unused variable: `f_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:187:55
kablam!     |
kablam! 187 |   fn read_struct_field<T, F>(&mut self, f_name: &str, f_idx: usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                                       ^^^^^
kablam! 
kablam! warning: unused variable: `tuple_len`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:210:35
kablam!     |
kablam! 210 |   fn read_tuple<T, F>(&mut self,  tuple_len: usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                   ^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:211:5
kablam!     |
kablam! 211 |     f(self);
kablam!     |     ^^^^^^^^
kablam! 
kablam! warning: unused variable: `a_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:215:38
kablam!     |
kablam! 215 |   fn read_tuple_arg<T, F>(&mut self, a_idx: usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                      ^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:216:5
kablam!     |
kablam! 216 |     f(self);
kablam!     |     ^^^^^^^^
kablam! 
kablam! warning: unused variable: `s_name`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:220:41
kablam!     |
kablam! 220 |   fn read_tuple_struct<T, F>(&mut self, s_name: &str, len:usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                         ^^^^^^
kablam! 
kablam! warning: unused variable: `len`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:220:55
kablam!     |
kablam! 220 |   fn read_tuple_struct<T, F>(&mut self, s_name: &str, len:usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                                       ^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:221:5
kablam!     |
kablam! 221 |     f(self);
kablam!     |     ^^^^^^^^
kablam! 
kablam! warning: unused variable: `a_idx`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:225:45
kablam!     |
kablam! 225 |   fn read_tuple_struct_arg<T, F>(&mut self, a_idx: usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                             ^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:226:5
kablam!     |
kablam! 226 |     f(self);
kablam!     |     ^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:232:5
kablam!     |
kablam! 232 |     f(self, 0);
kablam!     |     ^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:236:36
kablam!     |
kablam! 236 |   fn read_seq_elt<T, F>(&mut self, idx: usize, f: F) -> DecodeResult<T> where F: FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                    ^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:237:5
kablam!     |
kablam! 237 |     f(self);
kablam!     |     ^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:242:5
kablam!     |
kablam! 242 |     f(self, 0);
kablam!     |     ^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:246:40
kablam!     |
kablam! 246 |   fn read_map_elt_key<T, F>(&mut self, idx: usize, f: F) -> DecodeResult<T> where F:FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                        ^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:247:5
kablam!     |
kablam! 247 |     f(self);
kablam!     |     ^^^^^^^^
kablam! 
kablam! warning: unused variable: `idx`, #[warn(unused_variables)] on by default
kablam!    --> src/lib.rs:251:40
kablam!     |
kablam! 251 |   fn read_map_elt_val<T, F>(&mut self, idx: usize, f: F) -> DecodeResult<T> where F:FnOnce(&mut Decoder) -> DecodeResult<T> {
kablam!     |                                        ^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:252:5
kablam!     |
kablam! 252 |     f(self);
kablam!     |     ^^^^^^^^
kablam! 
kablam! warning: unused import: `Error`, #[warn(unused_imports)] on by default
kablam!  --> tests/test.rs:7:17
kablam!   |
kablam! 7 | use typedopts::{Error,ErrorType,DecodeResult};
kablam!   |                 ^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 2.98 secs
boom! running `docker rm -f 15fa7a4eea415c23f0a0d4a443bcee347abe5898ab91e173696962cd3bcae750`
blam! 15fa7a4eea415c23f0a0d4a443bcee347abe5898ab91e173696962cd3bcae750
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 64ea47dbb7989b3079a9dbebf063bc0a7a62f9a90890ba76b5547f5865e78e78
boom! running `docker start -a 64ea47dbb7989b3079a9dbebf063bc0a7a62f9a90890ba76b5547f5865e78e78`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/test-e9d34ce147260116
blam! 
blam! running 13 tests
blam! test decode_task_ok ... ok
blam! test parse_char ... ok
blam! test decode_task_err ... ok
blam! test parse_bool ... ok
blam! test parse_none_option ... ok
blam! test parse_enum ... ok
blam! test parse_int ... ok
blam! test parse_float ... ok
blam! test parse_not_int ... ok
blam! test parse_option ... ok
blam! test parse_string ... ok
blam! test parse_struct_noopt ... ok
blam! test parse_struct_optenum ... ok
blam! 
blam! test result: ok. 13 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!      Running /target/debug/deps/typedopts-614007bda5e21d2d
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests typedopts
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 64ea47dbb7989b3079a9dbebf063bc0a7a62f9a90890ba76b5547f5865e78e78`
blam! 64ea47dbb7989b3079a9dbebf063bc0a7a62f9a90890ba76b5547f5865e78e78
