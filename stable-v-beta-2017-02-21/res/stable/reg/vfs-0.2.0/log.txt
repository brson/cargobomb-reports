boom! testing vfs-0.2.0 against stable for beta
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 0a04fb8ad4531333459f46a76438611f656dda8aaf78e153d208f52a52d8133f
boom! running `docker start -a 0a04fb8ad4531333459f46a76438611f656dda8aaf78e153d208f52a52d8133f`
kablam!    Compiling vfs v0.2.0 (file:///source)
kablam! warning: variable `openOptions` should have a snake case name such as `open_options`, #[warn(non_snake_case)] on by default
kablam!   --> src/lib.rs:65:33
kablam!    |
kablam! 65 |     fn open_with_options(&self, openOptions: &OpenOptions) -> Result<Box<VFile>>;
kablam!    |                                 ^^^^^^^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 2.42 secs
boom! running `docker rm -f 0a04fb8ad4531333459f46a76438611f656dda8aaf78e153d208f52a52d8133f`
blam! 0a04fb8ad4531333459f46a76438611f656dda8aaf78e153d208f52a52d8133f
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! d37bc2b5e104006d76a660de0fce5540ad29b8a9e64a09472e28b790566bc627
boom! running `docker start -a d37bc2b5e104006d76a660de0fce5540ad29b8a9e64a09472e28b790566bc627`
kablam!    Compiling vfs v0.2.0 (file:///source)
kablam! warning: variable `openOptions` should have a snake case name such as `open_options`, #[warn(non_snake_case)] on by default
kablam!   --> src/lib.rs:65:33
kablam!    |
kablam! 65 |     fn open_with_options(&self, openOptions: &OpenOptions) -> Result<Box<VFile>>;
kablam!    |                                 ^^^^^^^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 3.13 secs
boom! running `docker rm -f d37bc2b5e104006d76a660de0fce5540ad29b8a9e64a09472e28b790566bc627`
blam! d37bc2b5e104006d76a660de0fce5540ad29b8a9e64a09472e28b790566bc627
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! e10aba3d0336e40c54980407c1485e0d6ac81bd74ffbf513ca78e85ae4d4e936
boom! running `docker start -a e10aba3d0336e40c54980407c1485e0d6ac81bd74ffbf513ca78e85ae4d4e936`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/vfs-abe4c66ff02ccc2e
blam! 
blam! running 20 tests
blam! test memory::tests::access_directory_as_file ... ok
blam! test memory::tests::append ... ok
blam! test memory::tests::mkdir ... ok
blam! test memory::tests::file_name ... ok
blam! test memory::tests::mkdir_fails_for_file ... ok
blam! test memory::tests::parent ... ok
blam! test memory::tests::path_buf ... ok
blam! test memory::tests::resolve ... ok
blam! test memory::tests::read_empty_file ... ok
blam! test memory::tests::rm ... ok
blam! test memory::tests::rmdir ... ok
blam! test memory::tests::rmrf ... ok
blam! test physical::tests::file_name ... ok
blam! test physical::tests::parent ... ok
blam! test memory::tests::write_and_read_file ... ok
blam! test physical::tests::read_dir ... ok
blam! test physical::tests::read_file ... ok
blam! test physical::tests::to_path_buf ... ok
blam! test util::tests::mkdir ... ok
blam! test memory::tests::read_dir ... ok
kablam!    Doc-tests vfs
blam! 
blam! test result: ok. 20 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f e10aba3d0336e40c54980407c1485e0d6ac81bd74ffbf513ca78e85ae4d4e936`
blam! e10aba3d0336e40c54980407c1485e0d6ac81bd74ffbf513ca78e85ae4d4e936
