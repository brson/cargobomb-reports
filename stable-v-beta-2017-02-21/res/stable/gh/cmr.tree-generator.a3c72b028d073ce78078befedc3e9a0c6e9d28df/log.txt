boom! testing https://github.com/cmr/tree-generator#a3c72b028d073ce78078befedc3e9a0c6e9d28df against stable for beta
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 6c4b06967320cb3b79a5aa489160a65a810f8ad2f9de30991aa85f87bb5511e8
boom! running `docker start -a 6c4b06967320cb3b79a5aa489160a65a810f8ad2f9de30991aa85f87bb5511e8`
kablam!    Compiling treegen v0.0.1 (file:///source)
kablam! error: invalid suffix `i` for numeric literal
kablam!  --> src/main.rs:8:24
kablam!   |
kablam! 8 |         for _ in range(0i, padding) {
kablam!   |                        ^^
kablam!   |
kablam!   = help: the suffix must be one of the integral types (`u32`, `isize`, etc)
kablam! 
kablam! error: invalid suffix `i` for numeric literal
kablam!   --> src/main.rs:11:24
kablam!    |
kablam! 11 |         for _ in range(0i, width - (padding * 2)) {
kablam!    |                        ^^
kablam!    |
kablam!    = help: the suffix must be one of the integral types (`u32`, `isize`, etc)
kablam! 
kablam! error: invalid suffix `i` for numeric literal
kablam!   --> src/main.rs:17:26
kablam!    |
kablam! 17 |     for padding in range(0i, (width - 3) / 2) {
kablam!    |                          ^^
kablam!    |
kablam!    = help: the suffix must be one of the integral types (`u32`, `isize`, etc)
kablam! 
kablam! error: invalid suffix `i` for numeric literal
kablam!   --> src/main.rs:21:20
kablam!    |
kablam! 21 |     for _ in range(0i, 3) {
kablam!    |                    ^^
kablam!    |
kablam!    = help: the suffix must be one of the integral types (`u32`, `isize`, etc)
kablam! 
kablam! error[E0425]: unresolved name `std::os::args`
kablam!  --> src/main.rs:2:16
kablam!   |
kablam! 2 |     let args = std::os::args();
kablam!   |                ^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0412]: type name `int` is undefined or not in scope
kablam!  --> src/main.rs:3:16
kablam!   |
kablam! 3 |     let width: int = from_str(args[1].as_slice().trim()).unwrap();
kablam!   |                ^^^ undefined or not in scope
kablam!   |
kablam!   = help: no candidates by the name of `int` found in your project; maybe you misspelled the name or forgot to import an external crate?
kablam! 
kablam! error[E0425]: unresolved name `from_str`
kablam!  --> src/main.rs:3:22
kablam!   |
kablam! 3 |     let width: int = from_str(args[1].as_slice().trim()).unwrap();
kablam!   |                      ^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `std::iter::range_inclusive`
kablam!  --> src/main.rs:7:20
kablam!   |
kablam! 7 |     for padding in std::iter::range_inclusive(0, (width - 1) / 2).rev() {
kablam!   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `range`
kablam!  --> src/main.rs:8:18
kablam!   |
kablam! 8 |         for _ in range(0i, padding) {
kablam!   |                  ^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `range`
kablam!   --> src/main.rs:11:18
kablam!    |
kablam! 11 |         for _ in range(0i, width - (padding * 2)) {
kablam!    |                  ^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `range`
kablam!   --> src/main.rs:17:20
kablam!    |
kablam! 17 |     for padding in range(0i, (width - 3) / 2) {
kablam!    |                    ^^^^^ unresolved name
kablam! 
kablam! error[E0425]: unresolved name `range`
kablam!   --> src/main.rs:21:14
kablam!    |
kablam! 21 |     for _ in range(0i, 3) {
kablam!    |              ^^^^^ unresolved name
kablam! 
kablam! error: aborting due to 12 previous errors
kablam! 
kablam! error: Could not compile `treegen`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 6c4b06967320cb3b79a5aa489160a65a810f8ad2f9de30991aa85f87bb5511e8`
blam! 6c4b06967320cb3b79a5aa489160a65a810f8ad2f9de30991aa85f87bb5511e8
