boom! testing meterproxy-0.1.1 against beta for beta
boom! running: cargo +beta build --frozen
boom! creating container for: cargo +beta build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta build --frozen cargobomb`
blam! 9bce37f1b8f6d672b470317d7982e6507848895a7ccde845fe46ee2b54c18a3d
boom! running `docker start -a 9bce37f1b8f6d672b470317d7982e6507848895a7ccde845fe46ee2b54c18a3d`
kablam!    Compiling meterproxy v0.1.1 (file:///source)
kablam! warning: module `MeterProxy` should have a snake case name such as `meter_proxy`, #[warn(non_snake_case)] on by default
kablam!   --> src/lib.rs:18:1
kablam!    |
kablam! 18 | pub mod MeterProxy;
kablam!    | ^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `Yellow`, #[warn(unused_imports)] on by default
kablam!   --> src/MeterProxy/mod.rs:14:30
kablam!    |
kablam! 14 | use ansi_term::Colour::{Red, Yellow};
kablam!    |                              ^^^^^^
kablam! 
kablam! warning: unused import: `SocketAddr`, #[warn(unused_imports)] on by default
kablam!   --> src/MeterProxy/mod.rs:15:50
kablam!    |
kablam! 15 | use std::net::{TcpListener, TcpStream, Shutdown, SocketAddr,IpAddr};
kablam!    |                                                  ^^^^^^^^^^
kablam! 
kablam! warning: unused import: `libc::setrlimit`, #[warn(unused_imports)] on by default
kablam!   --> src/MeterProxy/mod.rs:21:5
kablam!    |
kablam! 21 | use libc::setrlimit;
kablam!    |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `std::collections::HashMap`, #[warn(unused_imports)] on by default
kablam!   --> src/MeterProxy/mod.rs:22:5
kablam!    |
kablam! 22 | use std::collections::HashMap;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> src/MeterProxy/mod.rs:75:13
kablam!    |
kablam! 75 |         let mut time_vec = self.0.lock().unwrap();
kablam!    |             ^^^^^^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/MeterProxy/mod.rs:154:26
kablam!     |
kablam! 154 | 	                    let mut stream_c = stream.try_clone().unwrap();
kablam!     | 	                        ^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:156:22
kablam!     |
kablam! 156 | 	                    stream_c2.set_read_timeout(Some(Duration::new(3, 0)));
kablam!     | 	                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:187:6
kablam!     |
kablam! 187 | 	    TcpStream::connect((targ_addr, self.front_port));
kablam!     | 	    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/MeterProxy/mod.rs:203:10
kablam!     |
kablam! 203 | 	    let mut back = match TcpStream::connect((targ_addr, target_port)) {
kablam!     | 	        ^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:214:14
kablam!     |
kablam! 214 | 	            front.shutdown(Shutdown::Both);
kablam!     | 	            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: variable `timedOut` should have a snake case name such as `timed_out`, #[warn(non_snake_case)] on by default
kablam!    --> src/MeterProxy/mod.rs:226:10
kablam!     |
kablam! 226 | 	    let timedOut = Arc::new(AtomicBool::new(false));
kablam!     | 	        ^^^^^^^^
kablam! 
kablam! warning: variable `timedOut_c` should have a snake case name such as `timed_out_c`, #[warn(non_snake_case)] on by default
kablam!    --> src/MeterProxy/mod.rs:227:10
kablam!     |
kablam! 227 | 	    let timedOut_c = timedOut.clone();
kablam!     | 	        ^^^^^^^^^^
kablam! 
kablam! warning: variable `timedOut` should have a snake case name such as `timed_out`, #[warn(non_snake_case)] on by default
kablam!    --> src/MeterProxy/mod.rs:251:31
kablam!     |
kablam! 251 | 	                             timedOut: Arc<AtomicBool>,
kablam!     | 	                             ^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:254:6
kablam!     |
kablam! 254 | 	    front.set_read_timeout(Some(Duration::new(1000, 0)));
kablam!     | 	    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `err`, #[warn(unused_variables)] on by default
kablam!    --> src/MeterProxy/mod.rs:261:18
kablam!     |
kablam! 261 | 	            Err(ref err) => {
kablam!     | 	                ^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:270:18
kablam!     |
kablam! 270 | 	                front.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:271:18
kablam!     |
kablam! 271 | 	                back.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:289:18
kablam!     |
kablam! 289 | 	                front.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:290:18
kablam!     |
kablam! 290 | 	                back.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: variable `timedOut` should have a snake case name such as `timed_out`, #[warn(non_snake_case)] on by default
kablam!    --> src/MeterProxy/mod.rs:308:31
kablam!     |
kablam! 308 | 	                             timedOut: Arc<AtomicBool>,
kablam!     | 	                             ^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:311:6
kablam!     |
kablam! 311 | 	    back.set_read_timeout(Some(Duration::new(1000, 0)));
kablam!     | 	    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/MeterProxy/mod.rs:315:10
kablam!     |
kablam! 315 | 	    let mut seq_number = 0;
kablam!     | 	        ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `seq_number`, #[warn(unused_variables)] on by default
kablam!    --> src/MeterProxy/mod.rs:315:10
kablam!     |
kablam! 315 | 	    let mut seq_number = 0;
kablam!     | 	        ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `err`, #[warn(unused_variables)] on by default
kablam!    --> src/MeterProxy/mod.rs:320:18
kablam!     |
kablam! 320 | 	            Err(ref err) => {
kablam!     | 	                ^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:329:18
kablam!     |
kablam! 329 | 	                front.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:330:18
kablam!     |
kablam! 330 | 	                back.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `r`, #[warn(unused_variables)] on by default
kablam!    --> src/MeterProxy/mod.rs:340:8
kablam!     |
kablam! 340 | 				Ok(r) => {
kablam!     | 				   ^
kablam! 
kablam! warning: variable `RecvError` should have a snake case name such as `recv_error`, #[warn(non_snake_case)] on by default
kablam!    --> src/MeterProxy/mod.rs:344:5
kablam!     |
kablam! 344 | 				RecvError => {},
kablam!     | 				^^^^^^^^^
kablam! 
kablam! warning: unused variable: `RecvError`, #[warn(unused_variables)] on by default
kablam!    --> src/MeterProxy/mod.rs:344:5
kablam!     |
kablam! 344 | 				RecvError => {},
kablam!     | 				^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:356:22
kablam!     |
kablam! 356 | 	                    front.shutdown(Shutdown::Both);
kablam!     | 	                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:357:22
kablam!     |
kablam! 357 | 	                    back.shutdown(Shutdown::Both);
kablam!     | 	                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unreachable statement, #[warn(unreachable_code)] on by default
kablam!    --> src/MeterProxy/mod.rs:368:10
kablam!     |
kablam! 368 | 	        drop(back);
kablam!     | 	        ^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.70 secs
boom! running `docker rm -f 9bce37f1b8f6d672b470317d7982e6507848895a7ccde845fe46ee2b54c18a3d`
blam! 9bce37f1b8f6d672b470317d7982e6507848895a7ccde845fe46ee2b54c18a3d
boom! running: cargo +beta test --frozen --no-run
boom! creating container for: cargo +beta test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta test --frozen --no-run cargobomb`
blam! 8f080ba9872a6f5429ad8ea11675b823e080b5c60f128d506e99f61e598d3767
boom! running `docker start -a 8f080ba9872a6f5429ad8ea11675b823e080b5c60f128d506e99f61e598d3767`
kablam!    Compiling meterproxy v0.1.1 (file:///source)
kablam! error[E0308]: mismatched types
kablam!  --> tests/syncproxy.rs:3:58
kablam!   |
kablam! 3 |   fn start(_argc: isize, _argv: *const *const u8) -> isize {
kablam!   |  __________________________________________________________^ starting here...
kablam! 4 | | 	
kablam! 5 | | }
kablam!   | |_^ ...ending here: expected isize, found ()
kablam!   |
kablam!   = note: expected type `isize`
kablam!              found type `()`
kablam! 
kablam! error: aborting due to previous error
kablam! 
blam! Build failed, waiting for other jobs to finish...
kablam! error: Could not compile `meterproxy`.
kablam! warning: module `MeterProxy` should have a snake case name such as `meter_proxy`, #[warn(non_snake_case)] on by default
kablam!   --> src/lib.rs:18:1
kablam!    |
kablam! 18 | pub mod MeterProxy;
kablam!    | ^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `Yellow`, #[warn(unused_imports)] on by default
kablam!   --> src/MeterProxy/mod.rs:14:30
kablam!    |
kablam! 14 | use ansi_term::Colour::{Red, Yellow};
kablam!    |                              ^^^^^^
kablam! 
kablam! warning: unused import: `SocketAddr`, #[warn(unused_imports)] on by default
kablam!   --> src/MeterProxy/mod.rs:15:50
kablam!    |
kablam! 15 | use std::net::{TcpListener, TcpStream, Shutdown, SocketAddr,IpAddr};
kablam!    |                                                  ^^^^^^^^^^
kablam! 
kablam! warning: unused import: `libc::setrlimit`, #[warn(unused_imports)] on by default
kablam!   --> src/MeterProxy/mod.rs:21:5
kablam!    |
kablam! 21 | use libc::setrlimit;
kablam!    |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `std::collections::HashMap`, #[warn(unused_imports)] on by default
kablam!   --> src/MeterProxy/mod.rs:22:5
kablam!    |
kablam! 22 | use std::collections::HashMap;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> src/MeterProxy/mod.rs:75:13
kablam!    |
kablam! 75 |         let mut time_vec = self.0.lock().unwrap();
kablam!    |             ^^^^^^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/MeterProxy/mod.rs:154:26
kablam!     |
kablam! 154 | 	                    let mut stream_c = stream.try_clone().unwrap();
kablam!     | 	                        ^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:156:22
kablam!     |
kablam! 156 | 	                    stream_c2.set_read_timeout(Some(Duration::new(3, 0)));
kablam!     | 	                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:187:6
kablam!     |
kablam! 187 | 	    TcpStream::connect((targ_addr, self.front_port));
kablam!     | 	    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/MeterProxy/mod.rs:203:10
kablam!     |
kablam! 203 | 	    let mut back = match TcpStream::connect((targ_addr, target_port)) {
kablam!     | 	        ^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:214:14
kablam!     |
kablam! 214 | 	            front.shutdown(Shutdown::Both);
kablam!     | 	            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: variable `timedOut` should have a snake case name such as `timed_out`, #[warn(non_snake_case)] on by default
kablam!    --> src/MeterProxy/mod.rs:226:10
kablam!     |
kablam! 226 | 	    let timedOut = Arc::new(AtomicBool::new(false));
kablam!     | 	        ^^^^^^^^
kablam! 
kablam! warning: variable `timedOut_c` should have a snake case name such as `timed_out_c`, #[warn(non_snake_case)] on by default
kablam!    --> src/MeterProxy/mod.rs:227:10
kablam!     |
kablam! 227 | 	    let timedOut_c = timedOut.clone();
kablam!     | 	        ^^^^^^^^^^
kablam! 
kablam! warning: variable `timedOut` should have a snake case name such as `timed_out`, #[warn(non_snake_case)] on by default
kablam!    --> src/MeterProxy/mod.rs:251:31
kablam!     |
kablam! 251 | 	                             timedOut: Arc<AtomicBool>,
kablam!     | 	                             ^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:254:6
kablam!     |
kablam! 254 | 	    front.set_read_timeout(Some(Duration::new(1000, 0)));
kablam!     | 	    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `err`, #[warn(unused_variables)] on by default
kablam!    --> src/MeterProxy/mod.rs:261:18
kablam!     |
kablam! 261 | 	            Err(ref err) => {
kablam!     | 	                ^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:270:18
kablam!     |
kablam! 270 | 	                front.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:271:18
kablam!     |
kablam! 271 | 	                back.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:289:18
kablam!     |
kablam! 289 | 	                front.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:290:18
kablam!     |
kablam! 290 | 	                back.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: variable `timedOut` should have a snake case name such as `timed_out`, #[warn(non_snake_case)] on by default
kablam!    --> src/MeterProxy/mod.rs:308:31
kablam!     |
kablam! 308 | 	                             timedOut: Arc<AtomicBool>,
kablam!     | 	                             ^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:311:6
kablam!     |
kablam! 311 | 	    back.set_read_timeout(Some(Duration::new(1000, 0)));
kablam!     | 	    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!    --> src/MeterProxy/mod.rs:315:10
kablam!     |
kablam! 315 | 	    let mut seq_number = 0;
kablam!     | 	        ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `seq_number`, #[warn(unused_variables)] on by default
kablam!    --> src/MeterProxy/mod.rs:315:10
kablam!     |
kablam! 315 | 	    let mut seq_number = 0;
kablam!     | 	        ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `err`, #[warn(unused_variables)] on by default
kablam!    --> src/MeterProxy/mod.rs:320:18
kablam!     |
kablam! 320 | 	            Err(ref err) => {
kablam!     | 	                ^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:329:18
kablam!     |
kablam! 329 | 	                front.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:330:18
kablam!     |
kablam! 330 | 	                back.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused variable: `r`, #[warn(unused_variables)] on by default
kablam!    --> src/MeterProxy/mod.rs:340:8
kablam!     |
kablam! 340 | 				Ok(r) => {
kablam!     | 				   ^
kablam! 
kablam! warning: variable `RecvError` should have a snake case name such as `recv_error`, #[warn(non_snake_case)] on by default
kablam!    --> src/MeterProxy/mod.rs:344:5
kablam!     |
kablam! 344 | 				RecvError => {},
kablam!     | 				^^^^^^^^^
kablam! 
kablam! warning: unused variable: `RecvError`, #[warn(unused_variables)] on by default
kablam!    --> src/MeterProxy/mod.rs:344:5
kablam!     |
kablam! 344 | 				RecvError => {},
kablam!     | 				^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:356:22
kablam!     |
kablam! 356 | 	                    front.shutdown(Shutdown::Both);
kablam!     | 	                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/MeterProxy/mod.rs:357:22
kablam!     |
kablam! 357 | 	                    back.shutdown(Shutdown::Both);
kablam!     | 	                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unreachable statement, #[warn(unreachable_code)] on by default
kablam!    --> src/MeterProxy/mod.rs:368:10
kablam!     |
kablam! 368 | 	        drop(back);
kablam!     | 	        ^^^^^^^^^^^
kablam! 
kablam! error: build failed
boom! running `docker rm -f 8f080ba9872a6f5429ad8ea11675b823e080b5c60f128d506e99f61e598d3767`
blam! 8f080ba9872a6f5429ad8ea11675b823e080b5c60f128d506e99f61e598d3767
boom! running: cargo +beta test --frozen
boom! creating container for: cargo +beta test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta test --frozen cargobomb`
blam! f0efbd75a75d2610db88880744f6fc26c775ce5611d68a3841cc534719af650c
boom! running `docker start -a f0efbd75a75d2610db88880744f6fc26c775ce5611d68a3841cc534719af650c`
kablam!    Compiling meterproxy v0.1.1 (file:///source)
kablam! error[E0308]: mismatched types
kablam!  --> tests/syncproxy.rs:3:58
kablam!   |
kablam! 3 |   fn start(_argc: isize, _argv: *const *const u8) -> isize {
kablam!   |  __________________________________________________________^ starting here...
kablam! 4 | | 	
kablam! 5 | | }
kablam!   | |_^ ...ending here: expected isize, found ()
kablam!   |
kablam!   = note: expected type `isize`
kablam!              found type `()`
kablam! 
kablam! error: aborting due to previous error
kablam! 
kablam! error: Could not compile `meterproxy`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f f0efbd75a75d2610db88880744f6fc26c775ce5611d68a3841cc534719af650c`
blam! f0efbd75a75d2610db88880744f6fc26c775ce5611d68a3841cc534719af650c
