boom! testing systemd-parser-0.1.3 against beta for beta
boom! running: cargo +beta build --frozen
boom! creating container for: cargo +beta build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta build --frozen cargobomb`
blam! cc8d839eedfc7e236525ecb01297d25840e5e1df1ea1692c23fd866159b55415
boom! running `docker start -a cc8d839eedfc7e236525ecb01297d25840e5e1df1ea1692c23fd866159b55415`
kablam!    Compiling systemd-parser v0.1.3 (file:///source)
kablam! warning: method is never used: `is_comment`, #[warn(dead_code)] on by default
kablam!   --> src/items.rs:12:5
kablam!    |
kablam! 12 |     fn is_comment(&self) -> bool { match *self { SystemdItem::Comment(_) => true, _ => false } }
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: method is never used: `is_category`, #[warn(dead_code)] on by default
kablam!   --> src/items.rs:13:5
kablam!    |
kablam! 13 |     fn is_category(&self) -> bool { match *self { SystemdItem::Category(_) => true, _ => false } }
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.64 secs
boom! running `docker rm -f cc8d839eedfc7e236525ecb01297d25840e5e1df1ea1692c23fd866159b55415`
blam! cc8d839eedfc7e236525ecb01297d25840e5e1df1ea1692c23fd866159b55415
boom! running: cargo +beta test --frozen --no-run
boom! creating container for: cargo +beta test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta test --frozen --no-run cargobomb`
blam! ab9fbb21e4d5b94896431805ac88582e62efe48b5b84892330e3cd3201a4985b
boom! running `docker start -a ab9fbb21e4d5b94896431805ac88582e62efe48b5b84892330e3cd3201a4985b`
kablam!    Compiling systemd-parser v0.1.3 (file:///source)
kablam! warning: method is never used: `is_comment`, #[warn(dead_code)] on by default
kablam!   --> src/items.rs:12:5
kablam!    |
kablam! 12 |     fn is_comment(&self) -> bool { match *self { SystemdItem::Comment(_) => true, _ => false } }
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: method is never used: `is_category`, #[warn(dead_code)] on by default
kablam!   --> src/items.rs:13:5
kablam!    |
kablam! 13 |     fn is_category(&self) -> bool { match *self { SystemdItem::Category(_) => true, _ => false } }
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 4.21 secs
boom! running `docker rm -f ab9fbb21e4d5b94896431805ac88582e62efe48b5b84892330e3cd3201a4985b`
blam! ab9fbb21e4d5b94896431805ac88582e62efe48b5b84892330e3cd3201a4985b
boom! running: cargo +beta test --frozen
boom! creating container for: cargo +beta test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta test --frozen cargobomb`
blam! b37042c23d1d3c63825e6310c8713b57ba3bd6d37dbb784fc40e7ffa2077a916
boom! running `docker start -a b37042c23d1d3c63825e6310c8713b57ba3bd6d37dbb784fc40e7ffa2077a916`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/systemd_parser-f7b9bb3d8494a543
blam! 
blam! running 42 tests
blam! test items_test::systemd_unit::lookup_by_category::it_should_return_an_empty_vec_the_category_doesnt_exists ... ok
blam! test items_test::systemd_unit::categories::it_should_return_categories ... ok
blam! test items_test::systemd_unit::lookup_by_category::it_should_exists ... ok
blam! test items_test::systemd_unit::categories::it_should_skip_doubles_and_return_categories_once ... ok
blam! test items_test::systemd_unit::new::it_should_err_when_many_directives_of_same_key_are_in_different_categories ... ok
blam! test items_test::systemd_unit::lookup_by_key::it_should_return_a_vec_of_all_the_keys_when_multiple_keys ... ok
blam! test items_test::systemd_unit::lookup_by_key::it_should_return_none_when_inexistent ... ok
blam! test items_test::systemd_unit::new::it_should_err_when_many_directives_of_same_key_are_in_different_categories2 ... ok
blam! test items_test::systemd_unit::lookup_by_key::it_should_return_the_unit_directive_pointed_by_key ... ok
blam! test items_test::systemd_unit::new::it_should_instantiate ... ok
blam! test items_test::systemd_unit::new::it_should_err_when_not_starting_with_a_category ... ok
blam! test items_test::unit_directive::item_list_to_unit_directive_list::it_should_err_if_the_first_item_is_not_a_category ... ok
blam! test items_test::unit_directive::item_list_to_unit_directive_list::it_should_instantiate_a_unit_directive_from_category_and_directive_items ... ok
blam! test items_test::unit_directive::item_list_to_unit_directive_list::it_should_work_with_full_dummy_unit ... ok
blam! test items_test::unit_directive::item_list_to_unit_directive_list::it_should_err_for_empty_vecs ... ok
blam! test parser_test::parse_category::it_should_be_done ... ok
blam! test items_test::unit_directive::item_list_to_unit_directive_list::it_should_change_the_category_if_a_category_item_is_seen ... ok
blam! test items_test::unit_directive::item_list_to_unit_directive_list::the_second_directive_should_keep_the_category ... ok
blam! test parser_test::parse_comment::it_should_fail_when_not_starting_with_hash_char ... ok
blam! test parser_test::parse_category::it_should_consume_the_category ... ok
blam! test parser_test::parse_category::it_should_reject_more_than_one_word ... ok
blam! test parser_test::parse_comment::it_should_be_done_when_starting_with_hash_char ... ok
blam! test parser_test::parse_directive::it_doesnt_consume_comment_at_end_of_line ... ok
blam! test parser_test::parse_directive::it_should_accept_directives_with_no_values ... ok
blam! test parser_test::parse_comment::it_should_trim_whitespaces ... ok
blam! test parser_test::parse_directive::it_should_accept_exotic_output ... ok
blam! test parser_test::parse_directive::it_should_consume_the_directive_key_and_value ... ok
blam! test parser_test::parse_directive::it_should_consume_path_in_values ... ok
blam! test parser_test::parse_line::it_can_parse_comment ... ok
blam! test parser_test::parse_line::it_can_parse_category ... ok
blam! test parser_test::parse_directive::it_should_reject_the_directive_with_no_key ... ok
blam! test parser_test::parse_directive::it_should_be_done ... ok
blam! test parser_test::parse_line::it_is_present ... ok
blam! test parser_test::parse_unit::it_keep_line_numbers_in_errors ... ok
blam! test parser_test::parse_line::it_can_parse_directive ... ok
blam! test parser_test::parse_unit::it_keep_line_numbers_in_errors2 ... ok
blam! test parser_test::parse_unit::it_trim_whitespaces_at_beginning_and_end_of_line ... ok
blam! test parser_test::parse_unit::it_returns_a_vec_of_parsed_lines ... ok
blam! test parser_test::parse_unit::it_returns_an_error_in_case_of_parse_error ... ok
blam! test parser_test::parse_unit::it_skip_empty_lines ... ok
blam! test parser_test::parse_unit::it_works_with_the_dummy ... ok
blam! test parser_test::take_whole_line::it_returns_whole_line ... ok
blam! 
blam! test result: ok. 42 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests systemd-parser
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f b37042c23d1d3c63825e6310c8713b57ba3bd6d37dbb784fc40e7ffa2077a916`
blam! b37042c23d1d3c63825e6310c8713b57ba3bd6d37dbb784fc40e7ffa2077a916
