boom! testing timely-0.1.15 against beta for beta
boom! running: cargo +beta build --frozen
boom! creating container for: cargo +beta build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta build --frozen cargobomb`
blam! fa5bfa5ade4b05274cf83c639f686e32faf356c1dd9c8101654a75493a17cd3c
boom! running `docker start -a fa5bfa5ade4b05274cf83c639f686e32faf356c1dd9c8101654a75493a17cd3c`
kablam!    Compiling timely v0.1.15 (file:///source)
kablam! warning: unused import: `MutableAntichain`, #[warn(unused_imports)] on by default
kablam!  --> src/dataflow/operators/input.rs:7:26
kablam!   |
kablam! 7 | use progress::frontier::{MutableAntichain, Antichain};
kablam!   |                          ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `timely_communication::Allocate`, #[warn(unused_imports)] on by default
kablam!   --> src/dataflow/operators/unordered_input.rs:12:5
kablam!    |
kablam! 12 | use timely_communication::Allocate;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: patterns aren't allowed in methods without bodies, #[warn(patterns_in_fns_without_body)] on by default
kablam!   --> src/dataflow/operators/inspect.rs:33:68
kablam!    |
kablam! 33 |     fn inspect_batch<F: FnMut(&G::Timestamp, &[D])+'static>(&self, mut func: F) -> Self;
kablam!    |                                                                    ^^^^^^^^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #35203 <https://github.com/rust-lang/rust/issues/35203>
kablam! 
kablam! warning: unused import: `Allocate`, #[warn(unused_imports)] on by default
kablam!   --> src/dataflow/operators/broadcast.rs:14:28
kablam!    |
kablam! 14 | use timely_communication::{Allocate};
kablam!    |                            ^^^^^^^^
kablam! 
kablam! warning: unused import: `timely_communication::Allocate`, #[warn(unused_imports)] on by default
kablam!   --> src/dataflow/operators/to_stream.rs:12:5
kablam!    |
kablam! 12 | use timely_communication::Allocate;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `Read`, #[warn(unused_imports)] on by default
kablam!   --> src/dataflow/operators/capture.rs:72:15
kablam!    |
kablam! 72 | use std::io::{Read, Write};
kablam!    |               ^^^^
kablam! 
kablam! warning: field is never used: `capability`, #[warn(dead_code)] on by default
kablam!    --> src/dataflow/channels/pushers/buffer.rs:134:5
kablam!     |
kablam! 134 |     capability: Capability<T>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `dataflow::Scope`, #[warn(unused_imports)] on by default
kablam!   --> src/logging.rs:16:5
kablam!    |
kablam! 16 | use dataflow::Scope;
kablam!    |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: static variable `precise_time_ns_delta` should have an upper case name such as `PRECISE_TIME_NS_DELTA`, #[warn(non_upper_case_globals)] on by default
kablam!   --> src/logging.rs:21:1
kablam!    |
kablam! 21 | static mut precise_time_ns_delta: Option<i64> = None;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 7.96 secs
boom! running `docker rm -f fa5bfa5ade4b05274cf83c639f686e32faf356c1dd9c8101654a75493a17cd3c`
blam! fa5bfa5ade4b05274cf83c639f686e32faf356c1dd9c8101654a75493a17cd3c
boom! running: cargo +beta test --frozen --no-run
boom! creating container for: cargo +beta test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta test --frozen --no-run cargobomb`
blam! f8f83d0fd6487420231ebe435f1d5f3e99fd1361aae3b365119a68ef1b6b7969
boom! running `docker start -a f8f83d0fd6487420231ebe435f1d5f3e99fd1361aae3b365119a68ef1b6b7969`
kablam!    Compiling timely v0.1.15 (file:///source)
kablam! warning: unused import: `MutableAntichain`, #[warn(unused_imports)] on by default
kablam!  --> src/dataflow/operators/input.rs:7:26
kablam!   |
kablam! 7 | use progress::frontier::{MutableAntichain, Antichain};
kablam!   |                          ^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `timely_communication::Allocate`, #[warn(unused_imports)] on by default
kablam!   --> src/dataflow/operators/unordered_input.rs:12:5
kablam!    |
kablam! 12 | use timely_communication::Allocate;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: patterns aren't allowed in methods without bodies, #[warn(patterns_in_fns_without_body)] on by default
kablam!   --> src/dataflow/operators/inspect.rs:33:68
kablam!    |
kablam! 33 |     fn inspect_batch<F: FnMut(&G::Timestamp, &[D])+'static>(&self, mut func: F) -> Self;
kablam!    |                                                                    ^^^^^^^^
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #35203 <https://github.com/rust-lang/rust/issues/35203>
kablam! 
kablam! warning: unused import: `Allocate`, #[warn(unused_imports)] on by default
kablam!   --> src/dataflow/operators/broadcast.rs:14:28
kablam!    |
kablam! 14 | use timely_communication::{Allocate};
kablam!    |                            ^^^^^^^^
kablam! 
kablam! warning: unused import: `timely_communication::Allocate`, #[warn(unused_imports)] on by default
kablam!   --> src/dataflow/operators/to_stream.rs:12:5
kablam!    |
kablam! 12 | use timely_communication::Allocate;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `Read`, #[warn(unused_imports)] on by default
kablam!   --> src/dataflow/operators/capture.rs:72:15
kablam!    |
kablam! 72 | use std::io::{Read, Write};
kablam!    |               ^^^^
kablam! 
kablam! warning: field is never used: `capability`, #[warn(dead_code)] on by default
kablam!    --> src/dataflow/channels/pushers/buffer.rs:134:5
kablam!     |
kablam! 134 |     capability: Capability<T>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `dataflow::Scope`, #[warn(unused_imports)] on by default
kablam!   --> src/logging.rs:16:5
kablam!    |
kablam! 16 | use dataflow::Scope;
kablam!    |     ^^^^^^^^^^^^^^^
kablam! 
kablam! warning: static variable `precise_time_ns_delta` should have an upper case name such as `PRECISE_TIME_NS_DELTA`, #[warn(non_upper_case_globals)] on by default
kablam!   --> src/logging.rs:21:1
kablam!    |
kablam! 21 | static mut precise_time_ns_delta: Option<i64> = None;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `timely_communication::allocator::Allocate`, #[warn(unused_imports)] on by default
kablam!  --> examples/broadcast.rs:6:5
kablam!   |
kablam! 6 | use timely_communication::allocator::Allocate;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused import: `Stream`, #[warn(unused_imports)] on by default
kablam!  --> examples/unordered_input.rs:6:24
kablam!   |
kablam! 6 | use timely::dataflow::{Stream, Scope};
kablam!   |                        ^^^^^^
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 58.88 secs
boom! running `docker rm -f f8f83d0fd6487420231ebe435f1d5f3e99fd1361aae3b365119a68ef1b6b7969`
blam! f8f83d0fd6487420231ebe435f1d5f3e99fd1361aae3b365119a68ef1b6b7969
boom! running: cargo +beta test --frozen
boom! creating container for: cargo +beta test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta test --frozen cargobomb`
blam! c4d3e5fc591e0a6cdfe8ed559292020fca32d2d7457cd349195490d44217651d
boom! running `docker start -a c4d3e5fc591e0a6cdfe8ed559292020fca32d2d7457cd349195490d44217651d`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/timely-75cae180670db1cc
blam! 
blam! running 4 tests
blam! test dataflow::operators::notificator::drain_into_if_behaves_correctly ... ok
blam! test logging::start_stop_abomonation_roundtrip ... ok
blam! test dataflow::operators::notificator::notificator_delivers_notifications_in_topo_order ... ok
blam! test dataflow::operators::probe::tests::probe ... ok
blam! 
blam! test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests timely
blam! 
blam! running 51 tests
blam! test _0 ... ok
blam! test dataflow::operators::aggregation::aggregate::Aggregate::aggregate_0 ... ok
blam! test dataflow::operators::aggregation::state_machine::StateMachine::state_machine_0 ... ok
blam! test dataflow::operators::aggregation::aggregate::Aggregate::aggregate_1 ... ok
blam! test dataflow::operators::binary::Binary::binary_notify_0 ... ok
blam! test dataflow::operators::binary::Binary::binary_stream_0 ... ok
blam! test dataflow::operators::capture::Capture::capture_into_0 ... ok
blam! test dataflow::operators::broadcast::Broadcast::broadcast_0 ... ok
blam! test dataflow::operators::capture::Capture::capture_into_1 ... ok
blam! test dataflow::operators::capture_0 ... ok
blam! test dataflow::operators::capture_1 ... ok
blam! test dataflow::operators::capture::Extract::extract_0 ... ok
blam! test dataflow::operators::concat::Concat::concat_0 ... ok
blam! test dataflow::operators::concat::Concatenate::concatenate_0 ... ok
blam! test dataflow::operators::count::Accumulate::accumulate_0 ... ok
blam! test dataflow::operators::count::Accumulate::count_0 ... ok
blam! test dataflow::operators::delay::Delay::delay_0 ... ok
blam! test dataflow::operators::delay::Delay::delay_batch_0 ... ok
blam! test dataflow::operators::enterleave::Enter::enter_0 ... ok
blam! test dataflow::operators::enterleave::EnterAt::enter_at_0 ... ok
blam! test dataflow::operators::enterleave::Leave::leave_0 ... ok
blam! test dataflow::operators::enterleave_0 ... ok
blam! test dataflow::operators::exchange::Exchange::exchange_0 ... ok
blam! test dataflow::operators::feedback::ConnectLoop::connect_loop_0 ... ok
blam! test dataflow::operators::feedback::LoopVariable::loop_variable_0 ... ok
blam! test dataflow::operators::filter::Filter::filter_0 ... ok
blam! test dataflow::operators::handles::InputHandle<'a, T, D>::for_each_0 ... ok
blam! test dataflow::operators::handles::OutputHandle<'a, T, D, P>::session_0 ... ok
blam! test dataflow::operators::input::Input::new_input_0 ... ok
blam! test dataflow::operators::inspect::Inspect::inspect_0 ... ok
blam! test dataflow::operators::inspect::Inspect::inspect_batch_0 ... ok
blam! test dataflow::operators::map::Map::flat_map_0 ... ok
blam! test dataflow::operators::map::Map::map_0 ... ok
blam! test dataflow::operators::map::Map::map_in_place_0 ... ok
blam! test dataflow::operators::notificator::Notificator<T>::notify_at_0 ... ok
blam! test dataflow::operators::partition::Partition::partition_0 ... ok
blam! test dataflow::operators::probe::Probe::probe_0 ... ok
blam! test dataflow::operators::to_stream::ToStream::to_stream_0 ... ok
blam! test dataflow::operators::reclock::Reclock::reclock_0 ... ok
blam! test dataflow::operators::unary::Unary::unary_notify_0 ... ok
blam! test dataflow::operators::unary::Unary::unary_stream_0 ... ok
blam! test dataflow::operators::unordered_input::UnorderedInput::new_unordered_input_0 ... ok
blam! test dataflow_0 ... ok
blam! test dataflow::scopes::Scope::scoped_0 ... ok
blam! test execute::example_0 ... ok
blam! test execute::execute_0 ... ok
blam! test execute::execute_from_args_1 ... ignored
blam! test execute::execute_from_args_2 ... ignored
blam! test execute::example_1 ... ok
blam! test execute::execute_1 ... ok
blam! test execute::execute_from_args_0 ... ok
blam! 
blam! test result: ok. 49 passed; 0 failed; 2 ignored; 0 measured
blam! 
boom! running `docker rm -f c4d3e5fc591e0a6cdfe8ed559292020fca32d2d7457cd349195490d44217651d`
blam! c4d3e5fc591e0a6cdfe8ed559292020fca32d2d7457cd349195490d44217651d
