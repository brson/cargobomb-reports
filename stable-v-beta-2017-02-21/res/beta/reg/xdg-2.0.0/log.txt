boom! testing xdg-2.0.0 against beta for beta
boom! running: cargo +beta build --frozen
boom! creating container for: cargo +beta build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta build --frozen cargobomb`
blam! 4e5ffca6013ded7ef434c00172c26c016875329384f2953669852c2b67a80f2a
boom! running `docker start -a 4e5ffca6013ded7ef434c00172c26c016875329384f2953669852c2b67a80f2a`
kablam!    Compiling xdg v2.0.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.25 secs
boom! running `docker rm -f 4e5ffca6013ded7ef434c00172c26c016875329384f2953669852c2b67a80f2a`
blam! 4e5ffca6013ded7ef434c00172c26c016875329384f2953669852c2b67a80f2a
boom! running: cargo +beta test --frozen --no-run
boom! creating container for: cargo +beta test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta test --frozen --no-run cargobomb`
blam! 79aeed951ce7de5236b693f0acf48339c64675e43d3a63095ceff6c7e8eaa55e
boom! running `docker start -a 79aeed951ce7de5236b693f0acf48339c64675e43d3a63095ceff6c7e8eaa55e`
kablam!    Compiling xdg v2.0.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.32 secs
boom! running `docker rm -f 79aeed951ce7de5236b693f0acf48339c64675e43d3a63095ceff6c7e8eaa55e`
blam! 79aeed951ce7de5236b693f0acf48339c64675e43d3a63095ceff6c7e8eaa55e
boom! running: cargo +beta test --frozen
boom! creating container for: cargo +beta test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta test --frozen cargobomb`
blam! 6a1d90b27a4d1c47cce7ad1f46ef3337d7ddbd42a0b8280ea2c4e5512e529a3d
boom! running `docker start -a 6a1d90b27a4d1c47cce7ad1f46ef3337d7ddbd42a0b8280ea2c4e5512e529a3d`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/xdg-8af4153f7d142a25
blam! 
blam! running 8 tests
blam! test test_files_exists ... ok
blam! test test_bad_environment ... ok
blam! test test_good_environment ... ok
blam! test test_profile ... ok
blam! test test_lists ... ok
blam! test test_prefix ... FAILED
blam! test test_runtime_good ... FAILED
blam! test test_runtime_bad ... ok
blam! 
kablam! thread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: XdgRuntimeDirInsecure("/source/test_files/runtime-bad", 0o775)', /buildslave/rust-buildbot/slave/beta-dist-rustc-linux/build/src/libcore/result.rs:868
blam! failures:
blam! 
blam! ---- test_prefix stdout ----
blam! 	thread 'test_prefix' panicked at 'called `Result::unwrap()` on an `Err` value: Error { repr: Os { code: 30, message: "Read-only file system" } }', /buildslave/rust-buildbot/slave/beta-dist-rustc-linux/build/src/libcore/result.rs:868
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! ---- test_runtime_good stdout ----
blam! 	thread 'test_runtime_good' panicked at 'called `Result::unwrap()` on an `Err` value: Error { repr: Os { code: 30, message: "Read-only file system" } }', /buildslave/rust-buildbot/slave/beta-dist-rustc-linux/build/src/libcore/result.rs:868
blam! 
blam! 
blam! failures:
blam!     test_prefix
blam!     test_runtime_good
blam! 
blam! test result: FAILED. 6 passed; 2 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f 6a1d90b27a4d1c47cce7ad1f46ef3337d7ddbd42a0b8280ea2c4e5512e529a3d`
blam! 6a1d90b27a4d1c47cce7ad1f46ef3337d7ddbd42a0b8280ea2c4e5512e529a3d
