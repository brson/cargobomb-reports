boom! testing https://github.com/KeepCalmAndLearnRust/object-factory-pattern#0087c6f772021426bc90f91b8cd49f814392fe05 against beta for beta
boom! running: cargo +beta build --frozen
boom! creating container for: cargo +beta build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta build --frozen cargobomb`
blam! 9b6112562d5ec460ec8a2c3c9e323b09e82f72ca0b8f8f129b4e41ed77c44f68
boom! running `docker start -a 9b6112562d5ec460ec8a2c3c9e323b09e82f72ca0b8f8f129b4e41ed77c44f68`
kablam!    Compiling object-factory-pattern v0.1.0 (file:///source)
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> src/main.rs:13:13
kablam!    |
kablam! 13 |         let mut pool = vec![];
kablam!    |             ^^^^^^^^
kablam! 
kablam! warning: method is never used: `return_conn`, #[warn(dead_code)] on by default
kablam!   --> src/main.rs:24:5
kablam!    |
kablam! 24 |       fn return_conn(&mut self, conn: T) {
kablam!    |  _____^ starting here...
kablam! 25 | |         self.pool.push(conn);
kablam! 26 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.95 secs
boom! running `docker rm -f 9b6112562d5ec460ec8a2c3c9e323b09e82f72ca0b8f8f129b4e41ed77c44f68`
blam! 9b6112562d5ec460ec8a2c3c9e323b09e82f72ca0b8f8f129b4e41ed77c44f68
boom! running: cargo +beta test --frozen --no-run
boom! creating container for: cargo +beta test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta test --frozen --no-run cargobomb`
blam! 8b5ff751be8b5022f305adff2791d65998a7b0f72be7575ab2673e63ee4d9e33
boom! running `docker start -a 8b5ff751be8b5022f305adff2791d65998a7b0f72be7575ab2673e63ee4d9e33`
kablam!    Compiling object-factory-pattern v0.1.0 (file:///source)
kablam! warning: variable does not need to be mutable, #[warn(unused_mut)] on by default
kablam!   --> src/main.rs:13:13
kablam!    |
kablam! 13 |         let mut pool = vec![];
kablam!    |             ^^^^^^^^
kablam! 
kablam! warning: method is never used: `return_conn`, #[warn(dead_code)] on by default
kablam!   --> src/main.rs:24:5
kablam!    |
kablam! 24 |       fn return_conn(&mut self, conn: T) {
kablam!    |  _____^ starting here...
kablam! 25 | |         self.pool.push(conn);
kablam! 26 | |     }
kablam!    | |_____^ ...ending here
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.2 secs
boom! running `docker rm -f 8b5ff751be8b5022f305adff2791d65998a7b0f72be7575ab2673e63ee4d9e33`
blam! 8b5ff751be8b5022f305adff2791d65998a7b0f72be7575ab2673e63ee4d9e33
boom! running: cargo +beta test --frozen
boom! creating container for: cargo +beta test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/beta/beta:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/beta/beta:/target:rw -e USER_ID=500 -e CMD=cargo +beta test --frozen cargobomb`
blam! c9e2f4707991cd6b0be857a86572816553453249b3971822ebcdda8e3343376c
boom! running `docker start -a c9e2f4707991cd6b0be857a86572816553453249b3971822ebcdda8e3343376c`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/object_factory_pattern-c76b316ba5c84fc9
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f c9e2f4707991cd6b0be857a86572816553453249b3971822ebcdda8e3343376c`
blam! c9e2f4707991cd6b0be857a86572816553453249b3971822ebcdda8e3343376c
