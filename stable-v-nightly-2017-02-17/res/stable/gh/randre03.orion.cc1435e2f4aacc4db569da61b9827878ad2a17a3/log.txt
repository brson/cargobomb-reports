boom! testing https://github.com/randre03/orion#cc1435e2f4aacc4db569da61b9827878ad2a17a3 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 8bdd54134eccdd77ffa201e4ddf6d63194c778817ca9ae3d5d100d970d325136
boom! running `docker start -a 8bdd54134eccdd77ffa201e4ddf6d63194c778817ca9ae3d5d100d970d325136`
kablam!    Compiling memchr v0.1.11
kablam!    Compiling thread-id v2.0.0
kablam!    Compiling thread_local v0.2.7
kablam!    Compiling aho-corasick v0.5.3
kablam!    Compiling regex v0.1.77
kablam!    Compiling orion v0.1.0 (file:///source)
kablam! error: an inner attribute is not permitted in this context
kablam!  --> src/parser.rs:8:3
kablam!   |
kablam! 8 | #![feature(box_syntax, box_pattern)]
kablam!   |   ^
kablam!   |
kablam!   = note: inner attributes and doc comments, like `#![no_std]` or `//! My crate`, annotate the item enclosing them, and are usually found at the beginning of source files. Outer attributes and doc comments, like `#[test]` and
kablam!                                    `/// My function`, annotate the item following them.
kablam! 
kablam! warning: `#[derive]` for custom traits is deprecated and will be removed in v1.15. Prefer using procedural macro custom derive
kablam!  --> src/abs.rs:3:10
kablam!   |
kablam! 3 | #[derive(Show, Clone)]
kablam!   |          ^^^^
kablam! 
kablam! warning: `#[derive]` for custom traits is deprecated and will be removed in v1.15. Prefer using procedural macro custom derive
kablam!  --> src/abs.rs:6:10
kablam!   |
kablam! 6 | #[derive(Show, Clone)]
kablam!   |          ^^^^
kablam! 
kablam! warning: `#[derive]` for custom traits is deprecated and will be removed in v1.15. Prefer using procedural macro custom derive
kablam!   --> src/abs.rs:12:10
kablam!    |
kablam! 12 | #[derive(Show, Clone)]
kablam!    |          ^^^^
kablam! 
kablam! warning: `#[derive]` for custom traits is deprecated and will be removed in v1.15. Prefer using procedural macro custom derive
kablam!   --> src/parser.rs:10:10
kablam!    |
kablam! 10 | #[derive(Show)]
kablam!    |          ^^^^
kablam! 
kablam! warning: `#[derive]` for custom traits is deprecated and will be removed in v1.15. Prefer using procedural macro custom derive
kablam!  --> src/eval.rs:9:10
kablam!   |
kablam! 9 | #[derive(Show)]
kablam!   |          ^^^^
kablam! 
kablam! error[E0554]: #[feature] may not be used on the stable release channel
kablam!  --> src/main.rs:1:1
kablam!   |
kablam! 1 | #![feature(custom_derive)]
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error[E0554]: #[feature] may not be used on the stable release channel
kablam!  --> src/main.rs:2:1
kablam!   |
kablam! 2 | #![feature(box_patterns)]
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error: box expression syntax is experimental; you can call `Box::new` instead. (see issue #27779)
kablam!    --> src/parser.rs:126:20
kablam!     |
kablam! 126 |         return Neg(box e);
kablam!     |                    ^^^^^
kablam! 
kablam! error: box expression syntax is experimental; you can call `Box::new` instead. (see issue #27779)
kablam!    --> src/parser.rs:132:21
kablam!     |
kablam! 132 |         return Plus(box e1, box e2);
kablam!     |                     ^^^^^^
kablam! 
kablam! error: box expression syntax is experimental; you can call `Box::new` instead. (see issue #27779)
kablam!    --> src/parser.rs:132:29
kablam!     |
kablam! 132 |         return Plus(box e1, box e2);
kablam!     |                             ^^^^^^
kablam! 
kablam! error: box expression syntax is experimental; you can call `Box::new` instead. (see issue #27779)
kablam!    --> src/parser.rs:138:21
kablam!     |
kablam! 138 |         return Plus(box e1, box e2);
kablam!     |                     ^^^^^^
kablam! 
kablam! error: box expression syntax is experimental; you can call `Box::new` instead. (see issue #27779)
kablam!    --> src/parser.rs:138:29
kablam!     |
kablam! 138 |         return Plus(box e1, box e2);
kablam!     |                             ^^^^^^
kablam! 
kablam! error: aborting due to 7 previous errors
kablam! 
kablam! error: Could not compile `orion`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 8bdd54134eccdd77ffa201e4ddf6d63194c778817ca9ae3d5d100d970d325136`
blam! 8bdd54134eccdd77ffa201e4ddf6d63194c778817ca9ae3d5d100d970d325136
