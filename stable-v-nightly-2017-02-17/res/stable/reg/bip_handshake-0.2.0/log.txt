boom! testing bip_handshake-0.2.0 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 63f3b4718d5b457dd2555d3f0b0c5b52a5e919e05781ee64f240542f27f8370a
boom! running `docker start -a 63f3b4718d5b457dd2555d3f0b0c5b52a5e919e05781ee64f240542f27f8370a`
kablam!    Compiling bip_handshake v0.2.0 (file:///source)
kablam! warning[E0276]: impl has stricter requirements than trait, #[warn(extra_requirement_in_impl)] on by default
kablam!   --> src/bittorrent/mod.rs:88:5
kablam!    |
kablam! 88 |       fn filter<F>(&mut self, process: Box<F>) where F: Fn(&SocketAddr) -> bool + Send + 'static {
kablam!    |  _____^ starting here...
kablam! 89 | |         if self.inner.send.send(HandlerTask::RegisterFilter(process)).is_err() {
kablam! 90 | |             error!("bip_handshake: Error sending a filter peer message to event loop...");
kablam! 91 | |         }
kablam! 92 | |     }
kablam!    | |_____^ ...ending here: impl has extra requirement `F: 'static`
kablam!    | 
kablam!   ::: src/handshaker.rs
kablam!    |
kablam! 23 |       fn filter<F>(&mut self, process: Box<F>) where F: Fn(&SocketAddr) -> bool + Send;
kablam!    |       --------------------------------------------------------------------------------- definition of `filter` from trait
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #37166 <https://github.com/rust-lang/rust/issues/37166>
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 1.28 secs
boom! running `docker rm -f 63f3b4718d5b457dd2555d3f0b0c5b52a5e919e05781ee64f240542f27f8370a`
blam! 63f3b4718d5b457dd2555d3f0b0c5b52a5e919e05781ee64f240542f27f8370a
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 3106922ab8cece29904de8883e267d0ccf7dae31d96ec9794c4105965a082331
boom! running `docker start -a 3106922ab8cece29904de8883e267d0ccf7dae31d96ec9794c4105965a082331`
kablam!    Compiling bip_handshake v0.2.0 (file:///source)
kablam! warning[E0276]: impl has stricter requirements than trait, #[warn(extra_requirement_in_impl)] on by default
kablam!   --> src/bittorrent/mod.rs:88:5
kablam!    |
kablam! 88 |       fn filter<F>(&mut self, process: Box<F>) where F: Fn(&SocketAddr) -> bool + Send + 'static {
kablam!    |  _____^ starting here...
kablam! 89 | |         if self.inner.send.send(HandlerTask::RegisterFilter(process)).is_err() {
kablam! 90 | |             error!("bip_handshake: Error sending a filter peer message to event loop...");
kablam! 91 | |         }
kablam! 92 | |     }
kablam!    | |_____^ ...ending here: impl has extra requirement `F: 'static`
kablam!    | 
kablam!   ::: src/handshaker.rs
kablam!    |
kablam! 23 |       fn filter<F>(&mut self, process: Box<F>) where F: Fn(&SocketAddr) -> bool + Send;
kablam!    |       --------------------------------------------------------------------------------- definition of `filter` from trait
kablam!    |
kablam!    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
kablam!    = note: for more information, see issue #37166 <https://github.com/rust-lang/rust/issues/37166>
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 3.0 secs
boom! running `docker rm -f 3106922ab8cece29904de8883e267d0ccf7dae31d96ec9794c4105965a082331`
blam! 3106922ab8cece29904de8883e267d0ccf7dae31d96ec9794c4105965a082331
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 6b3a9df90bc42f4da3b003b917219c36dc96becd5bacd113eb806142463c7a70
boom! running `docker start -a 6b3a9df90bc42f4da3b003b917219c36dc96becd5bacd113eb806142463c7a70`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/bip_handshake-aa4028221754224f
blam! 
blam! running 2 tests
blam! test bittorrent::tests::positive_make_conenction ... ok
blam! test bittorrent::tests::positive_shutdown_on_drop ... ok
blam! 
blam! test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests bip_handshake
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 6b3a9df90bc42f4da3b003b917219c36dc96becd5bacd113eb806142463c7a70`
blam! 6b3a9df90bc42f4da3b003b917219c36dc96becd5bacd113eb806142463c7a70
