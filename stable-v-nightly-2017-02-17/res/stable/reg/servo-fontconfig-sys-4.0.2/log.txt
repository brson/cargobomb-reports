boom! testing servo-fontconfig-sys-4.0.2 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 0a7359123986196fc9cf09cb223d0f08706c9d4f7535ea1eea4aa484bbad6808
boom! running `docker start -a 0a7359123986196fc9cf09cb223d0f08706c9d4f7535ea1eea4aa484bbad6808`
kablam!    Compiling servo-fontconfig-sys v4.0.2 (file:///source)
kablam!    Compiling servo-freetype-sys v4.0.3
kablam!    Compiling expat-sys v2.1.4
blam! Build failed, waiting for other jobs to finish...
blam! Build failed, waiting for other jobs to finish...
kablam! error: failed to run custom build command for `servo-freetype-sys v4.0.3`
kablam! process didn't exit successfully: `/target/debug/build/servo-freetype-sys-fcdbfb592ca33e81/build-script-build` (exit code: 101)
kablam! --- stdout
kablam! running: "cmake" "/cargo-home/registry/src/github.com-1ecc6299db9ec823/servo-freetype-sys-4.0.3/freetype2" "-DWITH_BZip2=OFF" "-DWITH_HarfBuzz=OFF" "-DWITH_PNG=OFF" "-DWITH_ZLIB=OFF" "-DCMAKE_INSTALL_PREFIX=/target/debug/build/servo-freetype-sys-28eb503339d71bb6/out" "-DCMAKE_C_FLAGS= -ffunction-sections -fdata-sections -fPIC -m64" "-DCMAKE_C_COMPILER=/usr/bin/cc" "-DCMAKE_CXX_FLAGS= -ffunction-sections -fdata-sections -fPIC -m64" "-DCMAKE_CXX_COMPILER=c++" "-DCMAKE_BUILD_TYPE=Release"
kablam! 
kablam! --- stderr
kablam! thread 'main' panicked at '
kablam! failed to execute command: No such file or directory (os error 2)
kablam! is `cmake` not installed?
kablam! 
kablam! build script failed, must exit now', /cargo-home/registry/src/github.com-1ecc6299db9ec823/cmake-0.1.20/src/lib.rs:573
kablam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
kablam! 
boom! running `docker rm -f 0a7359123986196fc9cf09cb223d0f08706c9d4f7535ea1eea4aa484bbad6808`
blam! 0a7359123986196fc9cf09cb223d0f08706c9d4f7535ea1eea4aa484bbad6808
