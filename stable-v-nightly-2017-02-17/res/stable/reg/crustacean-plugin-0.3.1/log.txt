boom! testing crustacean-plugin-0.3.1 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 5d11029f8d2cbf5c0cc0c0648f1b00488bc3b3fb64d1353f803334aef2912d34
boom! running `docker start -a 5d11029f8d2cbf5c0cc0c0648f1b00488bc3b3fb64d1353f803334aef2912d34`
kablam!    Compiling synthax v0.3.6
kablam!    Compiling easy-plugin-parsers v0.11.8
kablam!    Compiling clang-sys v0.13.0
kablam!    Compiling clang-sys v0.11.1
blam! Build failed, waiting for other jobs to finish...
blam! Build failed, waiting for other jobs to finish...
kablam! error[E0554]: #[feature] may not be used on the stable release channel
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/synthax-0.3.6/src/lib.rs:70:36
kablam!    |
kablam! 70 | #![cfg_attr(not(feature="syntex"), feature(plugin, plugin_registrar, rustc_private, quote))]
kablam!    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error: aborting due to previous error
kablam! 
blam! Build failed, waiting for other jobs to finish...
kablam! error: failed to run custom build command for `clang-sys v0.11.1`
kablam! process didn't exit successfully: `/target/debug/build/clang-sys-b217cde4b7ecdc2d/build-script-build` (exit code: 101)
kablam! --- stderr
kablam! thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: "couldn\'t find any of \'libclang.so\', set the LIBCLANG_PATH environment variable to a path where one of these files can be found"', /buildslave/rust-buildbot/slave/stable-dist-rustc-linux/build/src/libcore/result.rs:837
kablam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
kablam! 
boom! running `docker rm -f 5d11029f8d2cbf5c0cc0c0648f1b00488bc3b3fb64d1353f803334aef2912d34`
blam! 5d11029f8d2cbf5c0cc0c0648f1b00488bc3b3fb64d1353f803334aef2912d34
