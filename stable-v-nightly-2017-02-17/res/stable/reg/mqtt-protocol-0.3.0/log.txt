boom! testing mqtt-protocol-0.3.0 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 0add85b6406ae270b7e50cbfa2687979df22e265719c8223b1d3fb6ea2075d73
boom! running `docker start -a 0add85b6406ae270b7e50cbfa2687979df22e265719c8223b1d3fb6ea2075d73`
kablam!    Compiling mqtt-protocol v0.3.0 (file:///source)
kablam! warning: variable `Cond` should have a snake case name such as `cond`, #[warn(non_snake_case)] on by default
kablam!   --> src/encodable.rs:25:45
kablam!    |
kablam! 25 |     fn decode_with<R: Read>(reader: &mut R, Cond: Option<Self::Cond>) -> Result<Self, Self::Err>;
kablam!    |                                             ^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 3.10 secs
boom! running `docker rm -f 0add85b6406ae270b7e50cbfa2687979df22e265719c8223b1d3fb6ea2075d73`
blam! 0add85b6406ae270b7e50cbfa2687979df22e265719c8223b1d3fb6ea2075d73
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 2c12b2a700179730b77b81ff755ea6277f6825317aaf3a07ba8e39556a6e8854
boom! running `docker start -a 2c12b2a700179730b77b81ff755ea6277f6825317aaf3a07ba8e39556a6e8854`
kablam!    Compiling mqtt-protocol v0.3.0 (file:///source)
kablam! warning: variable `Cond` should have a snake case name such as `cond`, #[warn(non_snake_case)] on by default
kablam!   --> src/encodable.rs:25:45
kablam!    |
kablam! 25 |     fn decode_with<R: Read>(reader: &mut R, Cond: Option<Self::Cond>) -> Result<Self, Self::Err>;
kablam!    |                                             ^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 7.71 secs
boom! running `docker rm -f 2c12b2a700179730b77b81ff755ea6277f6825317aaf3a07ba8e39556a6e8854`
blam! 2c12b2a700179730b77b81ff755ea6277f6825317aaf3a07ba8e39556a6e8854
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 2c484d80b642b1022dd7069765704778232acfc6504a8a5cdcf91b152cf35a66
boom! running `docker start -a 2c484d80b642b1022dd7069765704778232acfc6504a8a5cdcf91b152cf35a66`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/mqtt-efae0c127eb07657
blam! 
blam! running 11 tests
blam! test packet::connack::test::test_connack_packet_basic ... ok
blam! test control::fixed_header::test::test_encode_fixed_header ... ok
blam! test control::fixed_header::test::test_decode_fixed_header ... ok
blam! test control::fixed_header::test::test_decode_too_long_fixed_header ... ok
blam! test packet::connect::test::test_connect_packet_decode_basic ... ok
blam! test packet::connect::test::test_connect_packet_encode_basic ... ok
blam! test packet::connect::test::test_connect_packet_user_name ... ok
blam! test packet::test::test_variable_packet_basic ... ok
blam! test packet::publish::test::test_publish_packet_basic ... ok
blam! test topic_name::test::test_topic_name_basic ... ok
blam! test topic_filter::test::test_topic_filter_validate ... ok
blam! 
blam! test result: ok. 11 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests mqtt
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 2c484d80b642b1022dd7069765704778232acfc6504a8a5cdcf91b152cf35a66`
blam! 2c484d80b642b1022dd7069765704778232acfc6504a8a5cdcf91b152cf35a66
