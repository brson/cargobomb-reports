boom! testing socket-0.0.7 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 2df2d078b34335460fff027033f3fa23281a6727056c127e3a956796ae680175
boom! running `docker start -a 2df2d078b34335460fff027033f3fa23281a6727056c127e3a956796ae680175`
kablam!    Compiling socket v0.0.7 (file:///source)
kablam! warning: found Rust slice type in foreign module, consider using a raw pointer instead, #[warn(improper_ctypes)] on by default
kablam!   --> src/lib.rs:49:71
kablam!    |
kablam! 49 |     fn c_socketpair(domain: c_int, type_: c_int, protocol: c_int, sv: *mut [c_int]) -> c_int;
kablam!    |                                                                       ^^^^^^^^^^^^
kablam! 
kablam! warning: unnecessary `unsafe` block, #[warn(unused_unsafe)] on by default
kablam!   --> src/lib.rs:39:21
kablam!    |
kablam! 39 |         let value = unsafe { $fun($($x,)*) };
kablam!    |                     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 83 |         _try!(c_socketpair, domain as c_int, type_ as c_int, protocol as c_int, &mut fds as *mut [c_int]);
kablam!    |         -------------------------------------------------------------------------------------------------- in this macro invocation
kablam! 
kablam! warning: unnecessary `unsafe` block, #[warn(unused_unsafe)] on by default
kablam!    --> src/lib.rs:39:21
kablam!     |
kablam! 39  |           let value = unsafe { $fun($($x,)*) };
kablam!     |                       ^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 131 |               _try!(
kablam!     |  _____________- starting here...
kablam! 132 | |                 setsockopt,
kablam! 133 | |                 self.fd, level, name, value, mem::size_of::<T>() as socklen_t);
kablam!     | |_______________________________________________________________________________- ...ending here: in this macro invocation
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.76 secs
boom! running `docker rm -f 2df2d078b34335460fff027033f3fa23281a6727056c127e3a956796ae680175`
blam! 2df2d078b34335460fff027033f3fa23281a6727056c127e3a956796ae680175
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! aa49722d610dc407b2867ba04f7aa70a5130413c279e1a73c69decac792d5b68
boom! running `docker start -a aa49722d610dc407b2867ba04f7aa70a5130413c279e1a73c69decac792d5b68`
kablam!    Compiling socket v0.0.7 (file:///source)
kablam! warning: found Rust slice type in foreign module, consider using a raw pointer instead, #[warn(improper_ctypes)] on by default
kablam!   --> src/lib.rs:49:71
kablam!    |
kablam! 49 |     fn c_socketpair(domain: c_int, type_: c_int, protocol: c_int, sv: *mut [c_int]) -> c_int;
kablam!    |                                                                       ^^^^^^^^^^^^
kablam! 
kablam! warning: unnecessary `unsafe` block, #[warn(unused_unsafe)] on by default
kablam!   --> src/lib.rs:39:21
kablam!    |
kablam! 39 |         let value = unsafe { $fun($($x,)*) };
kablam!    |                     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 83 |         _try!(c_socketpair, domain as c_int, type_ as c_int, protocol as c_int, &mut fds as *mut [c_int]);
kablam!    |         -------------------------------------------------------------------------------------------------- in this macro invocation
kablam! 
kablam! warning: unnecessary `unsafe` block, #[warn(unused_unsafe)] on by default
kablam!    --> src/lib.rs:39:21
kablam!     |
kablam! 39  |           let value = unsafe { $fun($($x,)*) };
kablam!     |                       ^^^^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 131 |               _try!(
kablam!     |  _____________- starting here...
kablam! 132 | |                 setsockopt,
kablam! 133 | |                 self.fd, level, name, value, mem::size_of::<T>() as socklen_t);
kablam!     | |_______________________________________________________________________________- ...ending here: in this macro invocation
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:370:9
kablam!     |
kablam! 370 |         thread.join();
kablam!     |         ^^^^^^^^^^^^^^
kablam! 
kablam! warning: unused result which must be used, #[warn(unused_must_use)] on by default
kablam!    --> src/lib.rs:384:9
kablam!     |
kablam! 384 |         thread.join();
kablam!     |         ^^^^^^^^^^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 1.57 secs
boom! running `docker rm -f aa49722d610dc407b2867ba04f7aa70a5130413c279e1a73c69decac792d5b68`
blam! aa49722d610dc407b2867ba04f7aa70a5130413c279e1a73c69decac792d5b68
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! d975678733d10c0defcbd2273d924a4f8d0654fcbcfa4227c3807be1aa5ff63e
boom! running `docker start -a d975678733d10c0defcbd2273d924a4f8d0654fcbcfa4227c3807be1aa5ff63e`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/socket-89cfe6085f6519e5
blam! 
blam! running 5 tests
blam! test tests::some_basic_socket_stuff_works ... ok
blam! test tests::getsockname_works ... ok
blam! test tests::socketpair_and_unix_sockets_work ... ok
blam! test tests::udp_communication_works ... ok
blam! test tests::tcp_communication_works ... ok
blam! 
blam! test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests socket
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f d975678733d10c0defcbd2273d924a4f8d0654fcbcfa4227c3807be1aa5ff63e`
blam! d975678733d10c0defcbd2273d924a4f8d0654fcbcfa4227c3807be1aa5ff63e
