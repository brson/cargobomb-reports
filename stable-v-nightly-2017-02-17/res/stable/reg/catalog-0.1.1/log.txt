boom! testing catalog-0.1.1 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 38d93810f6373b57c0d08901f71822564ed6d058cef49a04260d7e9bc4e50002
boom! running `docker start -a 38d93810f6373b57c0d08901f71822564ed6d058cef49a04260d7e9bc4e50002`
kablam!    Compiling catalog v0.1.1 (file:///source)
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead, #[warn(deprecated)] on by default
kablam!  --> src/helpers.rs:3:31
kablam!   |
kablam! 3 | use std::hash::{Hash, Hasher, SipHasher};
kablam!   |                               ^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead, #[warn(deprecated)] on by default
kablam!   --> src/helpers.rs:11:22
kablam!    |
kablam! 11 |     let mut hasher = SipHasher::new();
kablam!    |                      ^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead, #[warn(deprecated)] on by default
kablam!   --> src/helpers.rs:11:22
kablam!    |
kablam! 11 |     let mut hasher = SipHasher::new();
kablam!    |                      ^^^^^^^^^^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.80 secs
boom! running `docker rm -f 38d93810f6373b57c0d08901f71822564ed6d058cef49a04260d7e9bc4e50002`
blam! 38d93810f6373b57c0d08901f71822564ed6d058cef49a04260d7e9bc4e50002
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! d7f092aef49ded61b784a1312c7e530394c00c7684603c528f9787ffdf499616
boom! running `docker start -a d7f092aef49ded61b784a1312c7e530394c00c7684603c528f9787ffdf499616`
kablam!    Compiling catalog v0.1.1 (file:///source)
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead, #[warn(deprecated)] on by default
kablam!  --> src/helpers.rs:3:31
kablam!   |
kablam! 3 | use std::hash::{Hash, Hasher, SipHasher};
kablam!   |                               ^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead, #[warn(deprecated)] on by default
kablam!   --> src/helpers.rs:11:22
kablam!    |
kablam! 11 |     let mut hasher = SipHasher::new();
kablam!    |                      ^^^^^^^^^^^^^^
kablam! 
kablam! warning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead, #[warn(deprecated)] on by default
kablam!   --> src/helpers.rs:11:22
kablam!    |
kablam! 11 |     let mut hasher = SipHasher::new();
kablam!    |                      ^^^^^^^^^^^^^^
kablam! 
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 1.26 secs
boom! running `docker rm -f d7f092aef49ded61b784a1312c7e530394c00c7684603c528f9787ffdf499616`
blam! d7f092aef49ded61b784a1312c7e530394c00c7684603c528f9787ffdf499616
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 6d261a36182b0d64ae95b8124b923f2683834b96e5b11c2709fa92417964c769
boom! running `docker start -a 6d261a36182b0d64ae95b8124b923f2683834b96e5b11c2709fa92417964c769`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/catalog-1ff7c90cb4027c4b
blam! 
kablam!    Doc-tests catalog
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 3 tests
blam! test HashFile_1 ... FAILED
blam! test HashFile_2 ... FAILED
blam! test HashFile_0 ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- HashFile_1 stdout ----
blam! 	error[E0412]: type name `HashFile` is undefined or not in scope
blam!  --> <anon>:3:13
blam!   |
blam! 3 | let mut hf: HashFile<usize, String> = try!(HashFile::new("/tmp/SAMPLE"));
blam!   |             ^^^^^^^^^^^^^^^^^^^^^^^ undefined or not in scope
blam!   |
blam!   = help: no candidates by the name of `HashFile` found in your project; maybe you misspelled the name or forgot to import an external crate?
blam! 
blam! error[E0433]: failed to resolve. Use of undeclared type or module `HashFile`
blam!  --> <anon>:3:44
blam!   |
blam! 3 | let mut hf: HashFile<usize, String> = try!(HashFile::new("/tmp/SAMPLE"));
blam!   |                                            ^^^^^^^^^^^^^ Use of undeclared type or module `HashFile`
blam! 
blam! error[E0308]: mismatched types
blam!  --> <anon>:3:39
blam!   |
blam! 3 | let mut hf: HashFile<usize, String> = try!(HashFile::new("/tmp/SAMPLE"));
blam!   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected (), found enum `std::result::Result`
blam!   |
blam!   = note: expected type `()`
blam!   = note:    found type `std::result::Result<_, _>`
blam!   = note: this error originates in a macro outside of the current crate
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'HashFile_1' panicked at 'Box<Any>', /buildslave/rust-buildbot/slave/stable-dist-rustc-linux/build/src/librustc/session/mod.rs:201
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! ---- HashFile_2 stdout ----
blam! 	error[E0425]: unresolved name `hf`
blam!  --> <anon>:3:18
blam!   |
blam! 3 | let value = try!(hf.get(&0));
blam!   |                  ^^ unresolved name
blam! 
blam! error[E0425]: unresolved name `hf`
blam!  --> <anon>:7:18
blam!   |
blam! 7 | let value = try!(hf.get(&1));
blam!   |                  ^^ unresolved name
blam! 
blam! error[E0308]: mismatched types
blam!  --> <anon>:3:13
blam!   |
blam! 3 | let value = try!(hf.get(&0));
blam!   |             ^^^^^^^^^^^^^^^^ expected (), found enum `std::result::Result`
blam!   |
blam!   = note: expected type `()`
blam!   = note:    found type `std::result::Result<_, _>`
blam!   = note: this error originates in a macro outside of the current crate
blam! 
blam! error[E0308]: mismatched types
blam!  --> <anon>:7:13
blam!   |
blam! 7 | let value = try!(hf.get(&1));
blam!   |             ^^^^^^^^^^^^^^^^ expected (), found enum `std::result::Result`
blam!   |
blam!   = note: expected type `()`
blam!   = note:    found type `std::result::Result<_, _>`
blam!   = note: this error originates in a macro outside of the current crate
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'HashFile_2' panicked at 'Box<Any>', /buildslave/rust-buildbot/slave/stable-dist-rustc-linux/build/src/librustc/session/mod.rs:201
blam! 
blam! ---- HashFile_0 stdout ----
blam! 	error[E0432]: unresolved import `catalog::HashFile`
blam!  --> <anon>:4:5
blam!   |
blam! 4 | use catalog::HashFile;
blam!   |     ^^^^^^^^^^^^^^^^^ Maybe a missing `extern crate catalog;`?
blam! 
blam! error[E0425]: unresolved name `hf`
blam!   --> <anon>:15:10
blam!    |
blam! 15 |     try!(hf.insert(i, format!("{}", (65 + (i % 26)) as u8 as char)));
blam!    |          ^^ unresolved name
blam! 
blam! error[E0425]: unresolved name `hf`
blam!   --> <anon>:23:6
blam!    |
blam! 23 | try!(hf.finish());
blam!    |      ^^ unresolved name
blam! 
blam! error[E0425]: unresolved name `hf`
blam!   --> <anon>:26:18
blam!    |
blam! 26 | let value = try!(hf.get(&0));
blam!    |                  ^^ unresolved name
blam! 
blam! error[E0425]: unresolved name `hf`
blam!   --> <anon>:31:6
blam!    |
blam! 31 | try!(hf.insert(0, format!("Z")));
blam!    |      ^^ unresolved name
blam! 
blam! error[E0425]: unresolved name `hf`
blam!   --> <anon>:33:6
blam!    |
blam! 33 | try!(hf.finish());
blam!    |      ^^ unresolved name
blam! 
blam! error[E0425]: unresolved name `hf`
blam!   --> <anon>:35:18
blam!    |
blam! 35 | let value = try!(hf.get(&0));
blam!    |                  ^^ unresolved name
blam! 
blam! error[E0308]: mismatched types
blam!  --> <anon>:8:5
blam!   |
blam! 8 |     try!(HashFile::new("/tmp/SAMPLE").map(|hf| hf.set_capacity(100)));
blam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected (), found enum `std::result::Result`
blam!   |
blam!   = note: expected type `()`
blam!   = note:    found type `std::result::Result<_, _>`
blam!   = note: this error originates in a macro outside of the current crate
blam! 
blam! error[E0308]: mismatched types
blam!   --> <anon>:15:5
blam!    |
blam! 15 |     try!(hf.insert(i, format!("{}", (65 + (i % 26)) as u8 as char)));
blam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected (), found enum `std::result::Result`
blam!    |
blam!    = note: expected type `()`
blam!    = note:    found type `std::result::Result<_, _>`
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! error[E0308]: mismatched types
blam!   --> <anon>:23:1
blam!    |
blam! 23 | try!(hf.finish());
blam!    | ^^^^^^^^^^^^^^^^^^ expected (), found enum `std::result::Result`
blam!    |
blam!    = note: expected type `()`
blam!    = note:    found type `std::result::Result<_, _>`
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! error[E0308]: mismatched types
blam!   --> <anon>:26:13
blam!    |
blam! 26 | let value = try!(hf.get(&0));
blam!    |             ^^^^^^^^^^^^^^^^ expected (), found enum `std::result::Result`
blam!    |
blam!    = note: expected type `()`
blam!    = note:    found type `std::result::Result<_, _>`
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! error[E0308]: mismatched types
blam!   --> <anon>:31:1
blam!    |
blam! 31 | try!(hf.insert(0, format!("Z")));
blam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected (), found enum `std::result::Result`
blam!    |
blam!    = note: expected type `()`
blam!    = note:    found type `std::result::Result<_, _>`
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! error[E0308]: mismatched types
blam!   --> <anon>:33:1
blam!    |
blam! 33 | try!(hf.finish());
blam!    | ^^^^^^^^^^^^^^^^^^ expected (), found enum `std::result::Result`
blam!    |
blam!    = note: expected type `()`
blam!    = note:    found type `std::result::Result<_, _>`
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! error[E0308]: mismatched types
blam!   --> <anon>:35:13
blam!    |
blam! 35 | let value = try!(hf.get(&0));
blam!    |             ^^^^^^^^^^^^^^^^ expected (), found enum `std::result::Result`
blam!    |
blam!    = note: expected type `()`
kablam! error: test failed
blam!    = note:    found type `std::result::Result<_, _>`
blam!    = note: this error originates in a macro outside of the current crate
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'HashFile_0' panicked at 'Box<Any>', /buildslave/rust-buildbot/slave/stable-dist-rustc-linux/build/src/librustc/session/mod.rs:201
blam! 
blam! 
blam! failures:
blam!     HashFile_0
blam!     HashFile_1
blam!     HashFile_2
blam! 
blam! test result: FAILED. 0 passed; 3 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 6d261a36182b0d64ae95b8124b923f2683834b96e5b11c2709fa92417964c769`
blam! 6d261a36182b0d64ae95b8124b923f2683834b96e5b11c2709fa92417964c769
