boom! testing rosrust-0.4.0 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! ccea4e73dd25023f0c18effb97276a5a41762b1a9d9805049fb867b50d74d02c
boom! running `docker start -a ccea4e73dd25023f0c18effb97276a5a41762b1a9d9805049fb867b50d74d02c`
kablam!    Compiling rosrust v0.4.0 (file:///source)
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 12.28 secs
boom! running `docker rm -f ccea4e73dd25023f0c18effb97276a5a41762b1a9d9805049fb867b50d74d02c`
blam! ccea4e73dd25023f0c18effb97276a5a41762b1a9d9805049fb867b50d74d02c
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! d0d88bcd79180e7aa8c232a9e0a6ce47232860cb852f8e4d73f4563352abfe65
boom! running `docker start -a d0d88bcd79180e7aa8c232a9e0a6ce47232860cb852f8e4d73f4563352abfe65`
kablam!    Compiling rosrust v0.4.0 (file:///source)
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 16.63 secs
boom! running `docker rm -f d0d88bcd79180e7aa8c232a9e0a6ce47232860cb852f8e4d73f4563352abfe65`
blam! d0d88bcd79180e7aa8c232a9e0a6ce47232860cb852f8e4d73f4563352abfe65
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 7e3842f7539fd3283fb89ff4a19769170d30c323c81c72b408cfe18f89a617f1
boom! running `docker start -a 7e3842f7539fd3283fb89ff4a19769170d30c323c81c72b408cfe18f89a617f1`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/rosrust-a85df4cec185670f
blam! 
blam! running 90 tests
blam! test api::naming::mapper::tests::fails_missing_paths ... ok
blam! test api::naming::mapper::tests::matches_existing_paths ... ok
blam! test api::naming::path::tests::addition_works ... ok
blam! test api::naming::path::tests::is_formatted ... ok
blam! test api::naming::mapper::tests::refuses_to_redefine ... ok
blam! test api::naming::path::tests::names_are_legal ... ok
blam! test api::naming::path::tests::names_are_parsed ... ok
blam! test api::naming::path::tests::parents_are_handled ... ok
blam! test api::naming::tests::constructs_from_legal_path ... ok
blam! test api::naming::tests::resolves_relative_names ... ok
blam! test api::naming::tests::rejects_illegal_names ... ok
blam! test api::naming::tests::resolves_absolute_names ... ok
blam! test api::naming::tests::resolves_private_names ... ok
blam! test api::naming::tests::supports_remapping ... ok
blam! test api::naming::tests::translates_strings ... ok
blam! test rosxmlrpc::serde::decoder::tests::decoders_value_field_matches_data ... ok
blam! test rosxmlrpc::serde::decoder::tests::handles_requests ... ok
blam! test rosxmlrpc::serde::decoder::tests::handles_responses ... ok
blam! test rosxmlrpc::serde::decoder::tests::reads_array ... ok
blam! test rosxmlrpc::serde::decoder::tests::reads_bool ... ok
blam! test rosxmlrpc::serde::decoder::tests::reads_float ... ok
blam! test rosxmlrpc::serde::decoder::tests::reads_int ... ok
blam! test rosxmlrpc::serde::decoder::tests::reads_string ... ok
blam! test rosxmlrpc::serde::decoder::tests::reads_struct ... ok
blam! test rosxmlrpc::serde::decoder::tests::reads_tuple ... ok
blam! test rosxmlrpc::serde::encoder::tests::writes_array ... ok
blam! test rosxmlrpc::serde::encoder::tests::writes_bool ... ok
blam! test rosxmlrpc::serde::encoder::tests::writes_int ... ok
blam! test rosxmlrpc::serde::encoder::tests::writes_float ... ok
blam! test rosxmlrpc::serde::encoder::tests::writes_multiple_parameters ... ok
blam! test rosxmlrpc::serde::encoder::tests::writes_request ... ok
blam! test rosxmlrpc::serde::encoder::tests::writes_response ... ok
blam! test rosxmlrpc::serde::encoder::tests::writes_string ... ok
blam! test rosxmlrpc::serde::value::tests::reads_bool ... ok
blam! test rosxmlrpc::serde::encoder::tests::writes_struct ... ok
blam! test rosxmlrpc::serde::encoder::tests::writes_tuple ... ok
blam! test rosxmlrpc::serde::value::tests::reads_array ... ok
blam! test rosxmlrpc::serde::value::tests::reads_float ... ok
blam! test rosxmlrpc::serde::value::tests::reads_int ... ok
blam! test rosxmlrpc::serde::value::tests::reads_request ... ok
blam! test rosxmlrpc::serde::value::tests::writes_array ... ok
blam! test rosxmlrpc::serde::value::tests::writes_bool ... ok
blam! test rosxmlrpc::serde::value::tests::writes_float ... ok
blam! test rosxmlrpc::serde::value::tests::reads_response ... ok
blam! test rosxmlrpc::serde::value::tests::writes_int ... ok
blam! test rosxmlrpc::serde::value::tests::writes_request ... ok
blam! test rosxmlrpc::serde::value::tests::writes_string ... ok
blam! test rosxmlrpc::serde::value::tests::writes_struct ... ok
blam! test tcpros::decoder::tests::pops_length_right ... ok
blam! test tcpros::decoder::tests::reads_array ... ok
blam! test tcpros::decoder::tests::reads_bool ... ok
blam! test rosxmlrpc::serde::value::tests::writes_response ... ok
blam! test tcpros::decoder::tests::reads_complex_struct ... ok
blam! test tcpros::decoder::tests::reads_f64 ... ok
blam! test tcpros::decoder::tests::reads_f32 ... ok
blam! test tcpros::decoder::tests::reads_i16 ... ok
blam! test rosxmlrpc::serde::value::tests::reads_string ... ok
blam! test tcpros::decoder::tests::reads_i32 ... ok
blam! test tcpros::decoder::tests::reads_i8 ... ok
blam! test tcpros::decoder::tests::reads_i64 ... ok
blam! test tcpros::decoder::tests::reads_simple_struct ... ok
blam! test tcpros::decoder::tests::reads_string ... ok
blam! test tcpros::decoder::tests::reads_u16 ... ok
blam! test tcpros::decoder::tests::reads_u64 ... ok
blam! test tcpros::decoder::tests::reads_u32 ... ok
blam! test tcpros::decoder::tests::reads_u8 ... ok
blam! test tcpros::encoder::tests::starts_empty ... ok
blam! test tcpros::encoder::tests::writes_bool ... ok
blam! test tcpros::encoder::tests::writes_array ... ok
blam! test tcpros::encoder::tests::writes_complex_struct ... ok
blam! test tcpros::encoder::tests::writes_f32 ... ok
blam! test tcpros::encoder::tests::writes_f64 ... ok
blam! test tcpros::encoder::tests::writes_i16 ... ok
blam! test tcpros::encoder::tests::writes_i32 ... ok
blam! test tcpros::encoder::tests::writes_i64 ... ok
blam! test tcpros::encoder::tests::writes_i8 ... ok
blam! test tcpros::encoder::tests::writes_simple_struct ... ok
blam! test tcpros::encoder::tests::writes_string ... ok
blam! test tcpros::encoder::tests::writes_tuple ... ok
blam! test tcpros::encoder::tests::writes_u16 ... ok
blam! test tcpros::encoder::tests::writes_u32 ... ok
blam! test tcpros::encoder::tests::writes_u64 ... ok
blam! test tcpros::encoder::tests::writes_u8 ... ok
blam! test tcpros::header::tests::reads_empty_map ... ok
kablam!    Doc-tests rosrust
blam! test tcpros::header::tests::reads_single_element ... ok
blam! test rosxmlrpc::serde::value::tests::reads_struct ... ok
blam! test tcpros::header::tests::reads_typical_header ... ok
blam! test tcpros::header::tests::writes_empty_map ... ok
blam! test tcpros::header::tests::writes_single_item ... ok
blam! test tests::it_works ... ok
blam! 
blam! test result: ok. 90 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 7e3842f7539fd3283fb89ff4a19769170d30c323c81c72b408cfe18f89a617f1`
blam! 7e3842f7539fd3283fb89ff4a19769170d30c323c81c72b408cfe18f89a617f1
