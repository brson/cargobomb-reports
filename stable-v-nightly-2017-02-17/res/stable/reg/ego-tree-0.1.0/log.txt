boom! testing ego-tree-0.1.0 against stable for nightly
boom! running: cargo +stable build --frozen
boom! creating container for: cargo +stable build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable build --frozen cargobomb`
blam! 32aeec889b37f10dce745e589facb85fb1fce2aa6fa09b7998270b9fda6e1a20
boom! running `docker start -a 32aeec889b37f10dce745e589facb85fb1fce2aa6fa09b7998270b9fda6e1a20`
kablam!    Compiling ego-tree v0.1.0 (file:///source)
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.63 secs
boom! running `docker rm -f 32aeec889b37f10dce745e589facb85fb1fce2aa6fa09b7998270b9fda6e1a20`
blam! 32aeec889b37f10dce745e589facb85fb1fce2aa6fa09b7998270b9fda6e1a20
boom! running: cargo +stable test --frozen --no-run
boom! creating container for: cargo +stable test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen --no-run cargobomb`
blam! 72bd5873458cc56af0b20b4f586acb67e6bb2557f423e827072d547731946d7a
boom! running `docker start -a 72bd5873458cc56af0b20b4f586acb67e6bb2557f423e827072d547731946d7a`
kablam!    Compiling ego-tree v0.1.0 (file:///source)
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 3.61 secs
boom! running `docker rm -f 72bd5873458cc56af0b20b4f586acb67e6bb2557f423e827072d547731946d7a`
blam! 72bd5873458cc56af0b20b4f586acb67e6bb2557f423e827072d547731946d7a
boom! running: cargo +stable test --frozen
boom! creating container for: cargo +stable test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/stable:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/stable:/target:rw -e USER_ID=500 -e CMD=cargo +stable test --frozen cargobomb`
blam! 4f86f7ae2a2ed9147eddaa5e48868a6ee05dc02918214726632406b9925b6360
boom! running `docker start -a 4f86f7ae2a2ed9147eddaa5e48868a6ee05dc02918214726632406b9925b6360`
kablam!     Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
blam! 
blam! running 0 tests
kablam!      Running /target/debug/deps/ego_tree-c939999dd98e6edf
kablam!      Running /target/debug/deps/iter-d48f3f176242f32b
kablam!      Running /target/debug/deps/macro-6824f54d115b8209
kablam!      Running /target/debug/deps/node_id-84a1cf34a273a445
kablam!      Running /target/debug/deps/node_mut-7960a1d4bfb2b524
kablam!      Running /target/debug/deps/node_ref-529db309378d9dc1
kablam!      Running /target/debug/deps/tree-f7e0bcbc716b8eaf
kablam!    Doc-tests ego-tree
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 12 tests
blam! test ancestors ... ok
blam! test children_rev ... ok
blam! test children ... ok
blam! test last_children ... ok
blam! test first_children ... ok
blam! test into_values ... ok
blam! test next_siblings ... ok
blam! test nodes ... ok
blam! test prev_siblings ... ok
blam! test values ... ok
blam! test values_mut ... ok
blam! test traverse ... ok
blam! 
blam! test result: ok. 12 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 12 tests
blam! test leaves ... ok
blam! test leaves_comma ... ok
blam! test empty ... ok
blam! test nested_leaves ... ok
blam! test nested_leaves_comma ... ok
blam! test nested_nested ... ok
blam! test mixed ... ok
blam! test nested_single_child ... ok
blam! test nested_single_child_comma ... ok
blam! test root ... ok
blam! test single_child ... ok
blam! test single_child_comma ... ok
blam! 
blam! test result: ok. 12 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 6 tests
blam! test eq ... ok
blam! test clone ... ok
blam! test cloned_tree ... ok
blam! test neq ... ok
blam! test neq_tree ... ok
blam! test other_tree ... ok
blam! 
blam! test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 23 tests
blam! test append_1 ... ok
blam! test detach ... ok
blam! test append_3 ... ok
blam! test first_child ... ok
blam! test append_2 ... ok
blam! test has_children ... ok
blam! test insert_after_first ... ok
blam! test has_siblings ... ok
blam! test id ... ok
blam! test insert_before ... ok
blam! test into ... ok
blam! test insert_after ... ok
blam! test insert_before_first ... ok
blam! test last_child ... ok
blam! test parent ... ok
blam! test prepend_2 ... ok
blam! test prepend_1 ... ok
blam! test prev_sibling ... ok
blam! test next_sibling ... ok
blam! test prepend_3 ... ok
blam! test value ... ok
blam! test reparent_from_id_append ... ok
blam! test reparent_from_id_prepend ... ok
blam! 
blam! test result: ok. 23 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 13 tests
blam! test clone ... ok
blam! test eq ... ok
blam! test has_children ... ok
blam! test id ... ok
blam! test has_siblings ... ok
blam! test last_child ... ok
blam! test first_child ... ok
blam! test next_sibling ... ok
blam! test neq_tree ... ok
blam! test neq ... ok
blam! test parent ... ok
blam! test prev_sibling ... ok
blam! test value ... ok
blam! 
blam! test result: ok. 13 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 10 tests
blam! test default ... ok
blam! test clone ... ok
blam! test eq ... ok
blam! test get_mut ... ok
blam! test get ... ok
blam! test orphan ... ok
blam! test new ... ok
blam! test root_mut ... ok
blam! test root ... ok
blam! test neq ... ok
blam! 
blam! test result: ok. 10 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 7 tests
blam! test NodeId_0 ... ok
blam! test NodeId_1 ... ok
blam! test _0 ... ok
blam! test _1 ... ok
blam! test tree_0 ... ok
blam! test tree_1 ... ok
blam! test tree_2 ... ok
blam! 
blam! test result: ok. 7 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 4f86f7ae2a2ed9147eddaa5e48868a6ee05dc02918214726632406b9925b6360`
blam! 4f86f7ae2a2ed9147eddaa5e48868a6ee05dc02918214726632406b9925b6360
