boom! testing jsonrpc-core-5.0.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 1360376ae534ad6fbcfa1dea49c57c04986c7ea705567b0c2af15fcc778f120c
boom! running `docker start -a 1360376ae534ad6fbcfa1dea49c57c04986c7ea705567b0c2af15fcc778f120c`
kablam!    Compiling jsonrpc-core v5.0.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 8.84 secs
boom! running `docker rm -f 1360376ae534ad6fbcfa1dea49c57c04986c7ea705567b0c2af15fcc778f120c`
blam! 1360376ae534ad6fbcfa1dea49c57c04986c7ea705567b0c2af15fcc778f120c
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! b5468a7c72522b785e54fc496614cc7c017271265116420615684f96fe236f1c
boom! running `docker start -a b5468a7c72522b785e54fc496614cc7c017271265116420615684f96fe236f1c`
kablam!    Compiling jsonrpc-core v5.0.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 13.15 secs
boom! running `docker rm -f b5468a7c72522b785e54fc496614cc7c017271265116420615684f96fe236f1c`
blam! b5468a7c72522b785e54fc496614cc7c017271265116420615684f96fe236f1c
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 2ffd0828ce966c60349a1e4afe4e2440bc66a5ccf40cb93686c3d2330ac3ee19
boom! running `docker start -a 2ffd0828ce966c60349a1e4afe4e2440bc66a5ccf40cb93686c3d2330ac3ee19`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/jsonrpc_core-352f55a38a862ea4
blam! 
blam! running 22 tests
blam! test io::tests::test_io_handler ... ok
blam! test io::tests::test_async_io_handler ... ok
blam! test io::tests::test_method_not_found ... ok
blam! test io::tests::test_notification ... ok
blam! test types::id::tests::id_serialization ... ok
blam! test types::id::tests::id_deserialization ... ok
blam! test io::tests::test_send_sync ... ok
blam! test types::request::method_call_serialize ... ok
blam! test types::params::params_deserialization ... ok
blam! test types::request::call_deserialize ... ok
blam! test types::request::call_serialize ... ok
blam! test types::request::notification_deserialize ... ok
blam! test types::request::notification_serialize ... ok
blam! test types::request::request_serialize_batch ... ok
blam! test types::request::request_deserialize_batch ... ok
blam! test types::response::failure_output_serialize ... ok
blam! test types::request::request_invalid_returns_id ... ok
blam! test types::response::batch_response_deserialize ... ok
kablam!    Doc-tests jsonrpc-core
blam! test types::response::failure_output_deserialize ... ok
blam! test types::response::single_response_deserialize ... ok
blam! test types::response::success_output_deserialize ... ok
blam! test types::response::success_output_serialize ... ok
blam! 
blam! test result: ok. 22 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 1 test
blam! test /source/src/lib.rs -  (line 5) ... ok
blam! 
blam! test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 2ffd0828ce966c60349a1e4afe4e2440bc66a5ccf40cb93686c3d2330ac3ee19`
blam! 2ffd0828ce966c60349a1e4afe4e2440bc66a5ccf40cb93686c3d2330ac3ee19
