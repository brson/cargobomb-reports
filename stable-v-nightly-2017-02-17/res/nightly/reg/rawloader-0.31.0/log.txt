boom! testing rawloader-0.31.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! d7f6a9d7f360621e8580236489d0821aaf3ec98631accc6dc26f976ee38eb004
boom! running `docker start -a d7f6a9d7f360621e8580236489d0821aaf3ec98631accc6dc26f976ee38eb004`
kablam!    Compiling lazy_static v0.2.2
kablam!    Compiling glob v0.2.11
kablam!    Compiling num-traits v0.1.36
kablam!    Compiling libc v0.2.20
kablam!    Compiling either v1.0.3
kablam!    Compiling itertools v0.5.9
kablam!    Compiling num_cpus v1.2.1
kablam!    Compiling enum_primitive v0.1.1
kablam!    Compiling num-integer v0.1.32
kablam!    Compiling time v0.1.36
kablam!    Compiling num-iter v0.1.32
kablam!    Compiling rustc-serialize v0.3.22
kablam!    Compiling byteorder v1.0.0
kablam!    Compiling rand v0.3.15
kablam!    Compiling deque v0.3.1
kablam!    Compiling rayon v0.6.0
kablam!    Compiling num-bigint v0.1.35
kablam!    Compiling num-complex v0.1.35
kablam!    Compiling toml v0.2.1
kablam!    Compiling num-rational v0.1.35
kablam!    Compiling num v0.1.36
kablam!    Compiling rawloader v0.31.0 (file:///source)
kablam! error: failed to run custom build command for `rawloader v0.31.0 (file:///source)`
kablam! process didn't exit successfully: `/target/debug/build/rawloader-46baa2f40baf4d3a/build-script-join` (exit code: 101)
kablam! --- stderr
kablam! thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Error { repr: Os { code: 30, message: "Read-only file system" } }', /buildslave/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/libcore/result.rs:860
kablam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
kablam! 
boom! running `docker rm -f d7f6a9d7f360621e8580236489d0821aaf3ec98631accc6dc26f976ee38eb004`
blam! d7f6a9d7f360621e8580236489d0821aaf3ec98631accc6dc26f976ee38eb004
