boom! testing rotor-dns-0.4.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 7d7c599029c6aa4fa6a8ff527210592236e3d485a6783a55f66188a1ca94873d
boom! running `docker start -a 7d7c599029c6aa4fa6a8ff527210592236e3d485a6783a55f66188a1ca94873d`
kablam!    Compiling dns-parser v0.3.5
kablam!    Compiling resolv-conf v0.4.0
kablam!    Compiling rotor-dns v0.4.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 4.38 secs
boom! running `docker rm -f 7d7c599029c6aa4fa6a8ff527210592236e3d485a6783a55f66188a1ca94873d`
blam! 7d7c599029c6aa4fa6a8ff527210592236e3d485a6783a55f66188a1ca94873d
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! ddaa080dee020014786f3f403c6a927f08ee749b664cf01200ad643fc46ce260
boom! running `docker start -a ddaa080dee020014786f3f403c6a927f08ee749b664cf01200ad643fc46ce260`
kablam!    Compiling rotor-dns v0.4.0 (file:///source)
kablam! warning: unreachable pattern
kablam!   --> examples/srv.rs:15:30
kablam!    |
kablam! 15 |   rotor_compose!(enum Composed/CSeed <Context> {
kablam!    |  ______________________________^ starting here...
kablam! 16 | |     Shut(Shutter),
kablam! 17 | |     Dns(rotor_dns::Fsm<Context>),
kablam! 18 | | });
kablam! 19 | |
kablam! 20 | | impl Machine for Shutter {
kablam! 21 | |     type Seed = Void;
kablam!    | |________________________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unreachable_patterns)] on by default
kablam! 
kablam! warning: unreachable pattern
kablam!   --> examples/srv.rs:15:30
kablam!    |
kablam! 15 |   rotor_compose!(enum Composed/CSeed <Context> {
kablam!    |  ______________________________^ starting here...
kablam! 16 | |     Shut(Shutter),
kablam! 17 | |     Dns(rotor_dns::Fsm<Context>),
kablam! 18 | | });
kablam! 19 | |
kablam! 20 | | impl Machine for Shutter {
kablam! 21 | |     type Seed = Void;
kablam!    | |________________________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unreachable_patterns)] on by default
kablam! 
kablam! warning: unreachable pattern
kablam!   --> examples/host.rs:18:30
kablam!    |
kablam! 18 |   rotor_compose!(enum Composed/CSeed <Context> {
kablam!    |  ______________________________^ starting here...
kablam! 19 | |     Shut(Shutter),
kablam! 20 | |     Dns(rotor_dns::Fsm<Context>),
kablam! 21 | | });
kablam!    | |________________________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unreachable_patterns)] on by default
kablam! 
kablam! warning: unreachable pattern
kablam!   --> examples/host.rs:18:30
kablam!    |
kablam! 18 |   rotor_compose!(enum Composed/CSeed <Context> {
kablam!    |  ______________________________^ starting here...
kablam! 19 | |     Shut(Shutter),
kablam! 20 | |     Dns(rotor_dns::Fsm<Context>),
kablam! 21 | | });
kablam!    | |________________________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unreachable_patterns)] on by default
kablam! 
kablam! warning: unreachable pattern
kablam!   --> examples/mx.rs:15:30
kablam!    |
kablam! 15 |   rotor_compose!(enum Composed/CSeed <Context> {
kablam!    |  ______________________________^ starting here...
kablam! 16 | |     Shut(Shutter),
kablam! 17 | |     Dns(rotor_dns::Fsm<Context>),
kablam! 18 | | });
kablam! 19 | |
kablam! 20 | | impl Machine for Shutter {
kablam! 21 | |     type Seed = Void; // Actually void
kablam!    | |________________________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unreachable_patterns)] on by default
kablam! 
kablam! warning: unreachable pattern
kablam!   --> examples/mx.rs:15:30
kablam!    |
kablam! 15 |   rotor_compose!(enum Composed/CSeed <Context> {
kablam!    |  ______________________________^ starting here...
kablam! 16 | |     Shut(Shutter),
kablam! 17 | |     Dns(rotor_dns::Fsm<Context>),
kablam! 18 | | });
kablam! 19 | |
kablam! 20 | | impl Machine for Shutter {
kablam! 21 | |     type Seed = Void; // Actually void
kablam!    | |________________________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unreachable_patterns)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 8.78 secs
boom! running `docker rm -f ddaa080dee020014786f3f403c6a927f08ee749b664cf01200ad643fc46ce260`
blam! ddaa080dee020014786f3f403c6a927f08ee749b664cf01200ad643fc46ce260
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! bf5fb6465c76de06c2f476a35ee91f4e8a79acbb065245282bfbcee347ec2b13
boom! running `docker start -a bf5fb6465c76de06c2f476a35ee91f4e8a79acbb065245282bfbcee347ec2b13`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/rotor_dns-f2d52a4d7b6316c8
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests rotor_dns
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f bf5fb6465c76de06c2f476a35ee91f4e8a79acbb065245282bfbcee347ec2b13`
blam! bf5fb6465c76de06c2f476a35ee91f4e8a79acbb065245282bfbcee347ec2b13
