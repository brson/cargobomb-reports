boom! testing zfs-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 36704124bd37a47e329a4bad255433011c8681ed083db13fbe188993902ba427
boom! running `docker start -a 36704124bd37a47e329a4bad255433011c8681ed083db13fbe188993902ba427`
kablam!    Compiling zfs v0.1.0 (file:///source)
kablam! warning: field is never used: `size`
kablam!   --> src/arcache.rs:55:5
kablam!    |
kablam! 55 |     size: usize, // Max mfu cache size in blocks
kablam!    |     ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `used`
kablam!   --> src/arcache.rs:56:5
kablam!    |
kablam! 56 |     used: usize, // Number of used bytes in mfu cache
kablam!    |     ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `cache_block`
kablam!   --> src/arcache.rs:68:5
kablam!    |
kablam! 68 |     pub fn cache_block(&mut self, dva: &DVAddr, block: Vec<u8>) -> Result<&[u8], &str> {
kablam!    |     ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `free_node`
kablam!    --> src/avl.rs:310:5
kablam!     |
kablam! 310 |       fn free_node(&mut self, index: usize) -> Node<T> {
kablam!     |  _____^ starting here...
kablam! 311 | |         self.free_list.push(index);
kablam! 312 | |
kablam! 313 | |         // NOTE: We unwrap here, because we trust that `id` points to a valid node, because
kablam! 314 | |         // only we can create and free Nodes and their NodeIds
kablam! 315 | |         self.nodes[index].node.take().unwrap()
kablam! 316 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant `DmuOtDslDataset_child_map` should have a camel case name such as `DmuotdsldatasetChildMap`
kablam!   --> src/dmu_objset.rs:33:5
kablam!    |
kablam! 33 |     DmuOtDslDataset_child_map,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `DmuOtJsetSnap_map` should have a camel case name such as `DmuotjsetsnapMap`
kablam!   --> src/dmu_objset.rs:34:5
kablam!    |
kablam! 34 |     DmuOtJsetSnap_map,
kablam!    |     ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `DmuOtPlainFile_contents` should have a camel case name such as `DmuotplainfileContents`
kablam!   --> src/dmu_objset.rs:39:5
kablam!    |
kablam! 39 |     DmuOtPlainFile_contents,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: unused import: `super::zil_header::ZilHeader`
kablam!  --> src/dnode.rs:6:5
kablam!   |
kablam! 6 | use super::zil_header::ZilHeader;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: field is never used: `pad`
kablam!   --> src/dsl_dataset.rs:34:5
kablam!    |
kablam! 34 |     pad: [u64; 5], // pad out to 320 bytes for good measure
kablam!    |     ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `root_dir_obj`
kablam!  --> src/dsl_pool.rs:6:5
kablam!   |
kablam! 6 |     root_dir_obj: u64,
kablam!   |     ^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `spa`
kablam!   --> src/dsl_pool.rs:15:18
kablam!    |
kablam! 15 |     fn open_impl(spa: &mut spa::Spa, txg: u64) -> zfs::Result<Self> {
kablam!    |                  ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `txg`
kablam!   --> src/dsl_pool.rs:15:38
kablam!    |
kablam! 15 |     fn open_impl(spa: &mut spa::Spa, txg: u64) -> zfs::Result<Self> {
kablam!    |                                      ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: method is never used: `new`
kablam!   --> src/lzjb.rs:17:5
kablam!    |
kablam! 17 |       fn new(src: &'a [u8]) -> LzjbEncoder<'a> {
kablam!    |  _____^ starting here...
kablam! 18 | |         LzjbEncoder {
kablam! 19 | |             src: src,
kablam! 20 | |         }
kablam! 21 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `f`
kablam!    --> src/lzjb.rs:140:19
kablam!     |
kablam! 140 |     fn fmt(&self, f: &mut Formatter) -> Result<(), FmtError> {
kablam!     |                   ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused import: `std::cmp`
kablam!  --> src/metaslab.rs:1:5
kablam!   |
kablam! 1 | use std::cmp;
kablam!   |     ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `self`
kablam!  --> src/metaslab.rs:7:20
kablam!   |
kablam! 7 | use super::taskq::{self, Taskq};
kablam!   |                    ^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: field is never used: `aliquot`
kablam!   --> src/metaslab.rs:33:5
kablam!    |
kablam! 33 |     aliquot: u64,
kablam!    |     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `alloc_groups`
kablam!   --> src/metaslab.rs:34:5
kablam!    |
kablam! 34 |     alloc_groups: u64, // # of allocatable groups
kablam!    |     ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `alloc`
kablam!   --> src/metaslab.rs:35:5
kablam!    |
kablam! 35 |     alloc: u64, // total allocated space
kablam!    |     ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `deferred`
kablam!   --> src/metaslab.rs:36:5
kablam!    |
kablam! 36 |     deferred: u64, // total deferred frees
kablam!    |     ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `space`
kablam!   --> src/metaslab.rs:37:5
kablam!    |
kablam! 37 |     space: u64, // total space (alloc + free)
kablam!    |     ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `dspace`
kablam!   --> src/metaslab.rs:38:5
kablam!    |
kablam! 38 |     dspace: u64, /* total deflated space
kablam!    |     ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `aliquot`
kablam!   --> src/metaslab.rs:71:5
kablam!    |
kablam! 71 |     aliquot: u64,
kablam!    |     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `allocatable`
kablam!   --> src/metaslab.rs:72:5
kablam!    |
kablam! 72 |     allocatable: bool, // can we allocate?
kablam!    |     ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `free_capacity`
kablam!   --> src/metaslab.rs:73:5
kablam!    |
kablam! 73 |     free_capacity: u64, // percentage free
kablam!    |     ^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `bias`
kablam!   --> src/metaslab.rs:74:5
kablam!    |
kablam! 74 |     bias: i64,
kablam!    |     ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `activation_count`
kablam!   --> src/metaslab.rs:75:5
kablam!    |
kablam! 75 |     activation_count: i64,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `taskq`
kablam!   --> src/metaslab.rs:78:5
kablam!    |
kablam! 78 |     taskq: Taskq,
kablam!    |     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `fragmentation`
kablam!   --> src/metaslab.rs:81:5
kablam!    |
kablam! 81 |     fragmentation: u64, // histogram: [u64; RANGE_TREE_HISTOGRAM_SIZE],
kablam!    |     ^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `ops`
kablam!    --> src/metaslab.rs:213:5
kablam!     |
kablam! 213 |     ops: Rc<MetaslabOps>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `id`
kablam!    --> src/metaslab.rs:214:5
kablam!     |
kablam! 214 |     id: u64,
kablam!     |     ^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `fragmentation`
kablam!    --> src/metaslab.rs:217:5
kablam!     |
kablam! 217 |     fragmentation: u64,
kablam!     |     ^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `alloc_tree`
kablam!    --> src/metaslab.rs:220:5
kablam!     |
kablam! 220 |     alloc_tree: Vec<avl::Tree<space_map::Segment, u64>>, // txg::TXG_SIZE
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `free_tree`
kablam!    --> src/metaslab.rs:221:5
kablam!     |
kablam! 221 |     free_tree: Vec<avl::Tree<space_map::Segment, u64>>, // txg::TXG_SIZE
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `defer_tree`
kablam!    --> src/metaslab.rs:222:5
kablam!     |
kablam! 222 |     defer_tree: Vec<avl::Tree<space_map::Segment, u64>>, // txg::DEFER_SIZE
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `condensing`
kablam!    --> src/metaslab.rs:225:5
kablam!     |
kablam! 225 |     condensing: bool,
kablam!     |     ^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `condense_wanted`
kablam!    --> src/metaslab.rs:226:5
kablam!     |
kablam! 226 |     condense_wanted: bool,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `defer_space`
kablam!    --> src/metaslab.rs:230:5
kablam!     |
kablam! 230 |     defer_space: i64, // sum of defermap[] space
kablam!     |     ^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `access_txg`
kablam!    --> src/metaslab.rs:232:5
kablam!     |
kablam! 232 |     access_txg: u64,
kablam!     |     ^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `size_tree`
kablam!    --> src/metaslab.rs:239:5
kablam!     |
kablam! 239 |     size_tree: avl::Tree<space_map::Segment, u64>, // Sorted by size
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `x`
kablam!    --> src/metaslab.rs:265:49
kablam!     |
kablam! 265 |             alloc_tree: (0..txg::TXG_SIZE).map(|x| avl::Tree::new(seg_key_start.clone())).collect(),
kablam!     |                                                 ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `x`
kablam!    --> src/metaslab.rs:266:48
kablam!     |
kablam! 266 |             free_tree: (0..txg::TXG_SIZE).map(|x| avl::Tree::new(seg_key_start.clone())).collect(),
kablam!     |                                                ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `x`
kablam!    --> src/metaslab.rs:268:35
kablam!     |
kablam! 268 |                             .map(|x| avl::Tree::new(seg_key_start.clone()))
kablam!     |                                   ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/metaslab.rs:314:13
kablam!     |
kablam! 314 |         let mut metaslab = Self::new(vdev_top.ms_group.ms_class.ops.clone(),
kablam!     |             ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/metaslab.rs:349:13
kablam!     |
kablam! 349 |         let mut result = Ok(());
kablam!     |             ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `space_map`
kablam!    --> src/metaslab.rs:359:21
kablam!     |
kablam! 359 |         if let Some(ref mut space_map) = self.space_map {
kablam!     |                     ^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `t`
kablam!    --> src/metaslab.rs:372:17
kablam!     |
kablam! 372 |             for t in 0..txg::DEFER_SIZE {
kablam!     |                 ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: method is never used: `activate`
kablam!    --> src/metaslab.rs:387:5
kablam!     |
kablam! 387 |     fn activate(&mut self, activation_weight: u64) -> zfs::Result<()> {
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `activation_weight`
kablam!    --> src/metaslab.rs:387:28
kablam!     |
kablam! 387 |     fn activate(&mut self, activation_weight: u64) -> zfs::Result<()> {
kablam!     |                            ^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `cursor`
kablam!    --> src/metaslab.rs:426:9
kablam!     |
kablam! 426 |     let ref mut cursor = ms.lbas[(util::highbit64(align) - 1) as usize];
kablam!     |         ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `tree`
kablam!    --> src/metaslab.rs:427:9
kablam!     |
kablam! 427 |     let ref mut tree = ms.tree;
kablam!     |         ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: field is never used: `index`
kablam!    --> src/metaslab.rs:471:5
kablam!     |
kablam! 471 |     index: usize,
kablam!     |     ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `METASLAB_WEIGHT_PRIMARY`
kablam!    --> src/metaslab.rs:489:1
kablam!     |
kablam! 489 | const METASLAB_WEIGHT_PRIMARY: u64 = 1 << 63;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `METASLAB_WEIGHT_SECONDARY`
kablam!    --> src/metaslab.rs:490:1
kablam!     |
kablam! 490 | const METASLAB_WEIGHT_SECONDARY: u64 = 1 << 62;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `METASLAB_ACTIVE_MASK`
kablam!    --> src/metaslab.rs:491:1
kablam!     |
kablam! 491 | const METASLAB_ACTIVE_MASK: u64 = METASLAB_WEIGHT_PRIMARY | METASLAB_WEIGHT_SECONDARY;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: static variable `metaslab_aliquot` should have an upper case name such as `METASLAB_ALIQUOT`
kablam!    --> src/metaslab.rs:497:1
kablam!     |
kablam! 497 | static metaslab_aliquot: usize = 512 << 10;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_upper_case_globals)] on by default
kablam! 
kablam! warning: static item is never used: `metaslab_aliquot`
kablam!    --> src/metaslab.rs:497:1
kablam!     |
kablam! 497 | static metaslab_aliquot: usize = 512 << 10;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: static variable `zfs_condense_pct` should have an upper case name such as `ZFS_CONDENSE_PCT`
kablam!    --> src/metaslab.rs:505:1
kablam!     |
kablam! 505 | static zfs_condense_pct: isize = 200;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_upper_case_globals)] on by default
kablam! 
kablam! warning: static item is never used: `zfs_condense_pct`
kablam!    --> src/metaslab.rs:505:1
kablam!     |
kablam! 505 | static zfs_condense_pct: isize = 200;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: static variable `zfs_metaslab_condense_block_threshold` should have an upper case name such as `ZFS_METASLAB_CONDENSE_BLOCK_THRESHOLD`
kablam!    --> src/metaslab.rs:518:1
kablam!     |
kablam! 518 | static zfs_metaslab_condense_block_threshold: isize = 4;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_upper_case_globals)] on by default
kablam! 
kablam! warning: static item is never used: `zfs_metaslab_condense_block_threshold`
kablam!    --> src/metaslab.rs:518:1
kablam!     |
kablam! 518 | static zfs_metaslab_condense_block_threshold: isize = 4;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: static variable `zfs_mg_noalloc_threshold` should have an upper case name such as `ZFS_MG_NOALLOC_THRESHOLD`
kablam!    --> src/metaslab.rs:531:1
kablam!     |
kablam! 531 | static zfs_mg_noalloc_threshold: isize = 0;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_upper_case_globals)] on by default
kablam! 
kablam! warning: static item is never used: `zfs_mg_noalloc_threshold`
kablam!    --> src/metaslab.rs:531:1
kablam!     |
kablam! 531 | static zfs_mg_noalloc_threshold: isize = 0;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: static variable `zfs_mg_fragmentation_threshold` should have an upper case name such as `ZFS_MG_FRAGMENTATION_THRESHOLD`
kablam!    --> src/metaslab.rs:538:1
kablam!     |
kablam! 538 | static zfs_mg_fragmentation_threshold: isize = 85;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_upper_case_globals)] on by default
kablam! 
kablam! warning: static item is never used: `zfs_mg_fragmentation_threshold`
kablam!    --> src/metaslab.rs:538:1
kablam!     |
kablam! 538 | static zfs_mg_fragmentation_threshold: isize = 85;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: static variable `zfs_metaslab_fragmentation_threshold` should have an upper case name such as `ZFS_METASLAB_FRAGMENTATION_THRESHOLD`
kablam!    --> src/metaslab.rs:544:1
kablam!     |
kablam! 544 | static zfs_metaslab_fragmentation_threshold: isize = 70;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_upper_case_globals)] on by default
kablam! 
kablam! warning: static item is never used: `zfs_metaslab_fragmentation_threshold`
kablam!    --> src/metaslab.rs:544:1
kablam!     |
kablam! 544 | static zfs_metaslab_fragmentation_threshold: isize = 70;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: static variable `metaslab_debug_load` should have an upper case name such as `METASLAB_DEBUG_LOAD`
kablam!    --> src/metaslab.rs:547:1
kablam!     |
kablam! 547 | static metaslab_debug_load: isize = 0;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_upper_case_globals)] on by default
kablam! 
kablam! warning: static item is never used: `metaslab_debug_load`
kablam!    --> src/metaslab.rs:547:1
kablam!     |
kablam! 547 | static metaslab_debug_load: isize = 0;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: static variable `metaslab_debug_unload` should have an upper case name such as `METASLAB_DEBUG_UNLOAD`
kablam!    --> src/metaslab.rs:550:1
kablam!     |
kablam! 550 | static metaslab_debug_unload: isize = 0;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_upper_case_globals)] on by default
kablam! 
kablam! warning: static item is never used: `metaslab_debug_unload`
kablam!    --> src/metaslab.rs:550:1
kablam!     |
kablam! 550 | static metaslab_debug_unload: isize = 0;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: static variable `metaslab_df_free_pct` should have an upper case name such as `METASLAB_DF_FREE_PCT`
kablam!    --> src/metaslab.rs:562:1
kablam!     |
kablam! 562 | static metaslab_df_free_pct: isize = 4;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_upper_case_globals)] on by default
kablam! 
kablam! warning: static item is never used: `metaslab_df_free_pct`
kablam!    --> src/metaslab.rs:562:1
kablam!     |
kablam! 562 | static metaslab_df_free_pct: isize = 4;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: static variable `metaslab_load_pct` should have an upper case name such as `METASLAB_LOAD_PCT`
kablam!    --> src/metaslab.rs:565:1
kablam!     |
kablam! 565 | static metaslab_load_pct: isize = 50;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_upper_case_globals)] on by default
kablam! 
kablam! warning: static item is never used: `metaslab_load_pct`
kablam!    --> src/metaslab.rs:565:1
kablam!     |
kablam! 565 | static metaslab_load_pct: isize = 50;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: static variable `metaslab_unload_delay` should have an upper case name such as `METASLAB_UNLOAD_DELAY`
kablam!    --> src/metaslab.rs:570:1
kablam!     |
kablam! 570 | static metaslab_unload_delay: usize = txg::TXG_SIZE * 2;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_upper_case_globals)] on by default
kablam! 
kablam! warning: static item is never used: `metaslab_unload_delay`
kablam!    --> src/metaslab.rs:570:1
kablam!     |
kablam! 570 | static metaslab_unload_delay: usize = txg::TXG_SIZE * 2;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: static variable `metaslab_preload_enabled` should have an upper case name such as `METASLAB_PRELOAD_ENABLED`
kablam!    --> src/metaslab.rs:576:1
kablam!     |
kablam! 576 | static metaslab_preload_enabled: bool = true;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_upper_case_globals)] on by default
kablam! 
kablam! warning: static item is never used: `metaslab_preload_enabled`
kablam!    --> src/metaslab.rs:576:1
kablam!     |
kablam! 576 | static metaslab_preload_enabled: bool = true;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: static variable `metaslab_fragmentation_factor_enabled` should have an upper case name such as `METASLAB_FRAGMENTATION_FACTOR_ENABLED`
kablam!    --> src/metaslab.rs:579:1
kablam!     |
kablam! 579 | static metaslab_fragmentation_factor_enabled: bool = true;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_upper_case_globals)] on by default
kablam! 
kablam! warning: static item is never used: `metaslab_fragmentation_factor_enabled`
kablam!    --> src/metaslab.rs:579:1
kablam!     |
kablam! 579 | static metaslab_fragmentation_factor_enabled: bool = true;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: static variable `metaslab_lba_weighting_enabled` should have an upper case name such as `METASLAB_LBA_WEIGHTING_ENABLED`
kablam!    --> src/metaslab.rs:582:1
kablam!     |
kablam! 582 | static metaslab_lba_weighting_enabled: bool = true;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_upper_case_globals)] on by default
kablam! 
kablam! warning: static item is never used: `metaslab_lba_weighting_enabled`
kablam!    --> src/metaslab.rs:582:1
kablam!     |
kablam! 582 | static metaslab_lba_weighting_enabled: bool = true;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: static variable `metaslab_bias_enabled` should have an upper case name such as `METASLAB_BIAS_ENABLED`
kablam!    --> src/metaslab.rs:585:1
kablam!     |
kablam! 585 | static metaslab_bias_enabled: bool = true;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_upper_case_globals)] on by default
kablam! 
kablam! warning: static item is never used: `metaslab_bias_enabled`
kablam!    --> src/metaslab.rs:585:1
kablam!     |
kablam! 585 | static metaslab_bias_enabled: bool = true;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `NV_ENCODE_NATIVE`
kablam!  --> src/nvstream.rs:7:1
kablam!   |
kablam! 7 | const NV_ENCODE_NATIVE: u8 = 0;
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `NV_BIG_ENDIAN`
kablam!   --> src/nvstream.rs:11:1
kablam!    |
kablam! 11 | const NV_BIG_ENDIAN: u8 = 0;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `NV_UNIQUE_NAME`
kablam!   --> src/nvstream.rs:15:1
kablam!    |
kablam! 15 | const NV_UNIQUE_NAME: u32 = 0x1;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `NV_UNIQUE_NAME_TYPE`
kablam!   --> src/nvstream.rs:16:1
kablam!    |
kablam! 16 | const NV_UNIQUE_NAME_TYPE: u32 = 0x2;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `NV_FLAG_NOENTOK`
kablam!   --> src/nvstream.rs:19:1
kablam!    |
kablam! 19 | const NV_FLAG_NOENTOK: isize = 0x1;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `VDEV_SYNC_READ_MIN_ACTIVE`
kablam!  --> src/spa.rs:1:1
kablam!   |
kablam! 1 | const VDEV_SYNC_READ_MIN_ACTIVE: u32 = 10;
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `VDEV_SYNC_WRITE_MIN_ACTIVE`
kablam!  --> src/spa.rs:3:1
kablam!   |
kablam! 3 | const VDEV_SYNC_WRITE_MIN_ACTIVE: u32 = 10;
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `VDEV_ASYNC_READ_MIN_ACTIVE`
kablam!  --> src/spa.rs:5:1
kablam!   |
kablam! 5 | const VDEV_ASYNC_READ_MIN_ACTIVE: u32 = 1;
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `VDEV_SCRUB_MIN_ACTIVE`
kablam!  --> src/spa.rs:9:1
kablam!   |
kablam! 9 | const VDEV_SCRUB_MIN_ACTIVE: u32 = 1;
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `std::cmp`
kablam!   --> src/spa.rs:15:5
kablam!    |
kablam! 15 | use std::cmp;
kablam!    |     ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `super::dsl_pool`
kablam!   --> src/spa.rs:20:5
kablam!    |
kablam! 20 | use super::dsl_pool;
kablam!    |     ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `super::txg`
kablam!   --> src/spa.rs:24:5
kablam!    |
kablam! 24 | use super::txg;
kablam!    |     ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `super::uberblock::Uberblock`
kablam!   --> src/spa.rs:25:5
kablam!    |
kablam! 25 | use super::uberblock::Uberblock;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: field is never used: `config`
kablam!   --> src/spa.rs:39:5
kablam!    |
kablam! 39 |     config: NvList,
kablam!    |     ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `zio_taskq`
kablam!   --> src/spa.rs:42:5
kablam!    |
kablam! 42 |     zio_taskq: Vec<Vec<SpaTaskqs>>,
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `normal_class`
kablam!   --> src/spa.rs:44:5
kablam!    |
kablam! 44 |     normal_class: Rc<MetaslabClass>, // normal data class
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `log_class`
kablam!   --> src/spa.rs:45:5
kablam!    |
kablam! 45 |     log_class: Rc<MetaslabClass>, // intent log data class
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `first_txg`
kablam!   --> src/spa.rs:46:5
kablam!    |
kablam! 46 |     first_txg: u64,
kablam!    |     ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/spa.rs:58:13
kablam!    |
kablam! 58 |         let mut writes;
kablam!    |             ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unreachable expression
kablam!   --> src/spa.rs:92:17
kablam!    |
kablam! 92 |                 0
kablam!    |                 ^
kablam!    |
kablam!    = note: #[warn(unreachable_code)] on by default
kablam! 
kablam! warning: unused variable: `nvroot`
kablam!   --> src/spa.rs:97:33
kablam!    |
kablam! 97 |     pub fn create(name: String, nvroot: &NvList) -> zfs::Result<Self> {
kablam!    |                                 ^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `pool_guid`
kablam!    --> src/spa.rs:176:18
kablam!     |
kablam! 176 |                  pool_guid: u64,
kablam!     |                  ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `mos_config`
kablam!    --> src/spa.rs:180:18
kablam!     |
kablam! 180 |                  mos_config: bool)
kablam!     |                  ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `t`
kablam!    --> src/spa.rs:321:13
kablam!     |
kablam! 321 |         for t in 0..zio::NUM_TYPES {
kablam!     |             ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `q`
kablam!    --> src/spa.rs:322:17
kablam!     |
kablam! 322 |             for q in 0..zio::NUM_TASKQ_TYPES {
kablam!     |                 ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: method is never used: `last_synced_txg`
kablam!    --> src/spa.rs:328:5
kablam!     |
kablam! 328 |       fn last_synced_txg(&self) -> u64 {
kablam!     |  _____^ starting here...
kablam! 329 | |         // TODO
kablam! 330 | |         // self.ubsync.ub_txg
kablam! 331 | |         0
kablam! 332 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `first_txg`
kablam!    --> src/spa.rs:334:5
kablam!     |
kablam! 334 |       fn first_txg(&self) -> u64 {
kablam!     |  _____^ starting here...
kablam! 335 | |         self.first_txg
kablam! 336 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `ZioTaskqInfo`
kablam!    --> src/spa.rs:341:1
kablam!     |
kablam! 341 |   struct ZioTaskqInfo {
kablam!     |  _^ starting here...
kablam! 342 | |     // mode: zti_modes_t,
kablam! 343 | |     value: usize,
kablam! 344 | |     count: usize,
kablam! 345 | | }
kablam!     | |_^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `count`
kablam!    --> src/spa.rs:348:5
kablam!     |
kablam! 348 |     count: usize,
kablam!     |     ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `taskq`
kablam!    --> src/spa.rs:349:5
kablam!     |
kablam! 349 |     taskq: Vec<Vec<Taskq>>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `SPACE_MAP_HISTOGRAM_SIZE`
kablam!  --> src/space_map.rs:8:1
kablam!   |
kablam! 8 | const SPACE_MAP_HISTOGRAM_SIZE: usize = 32;
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `start`
kablam!   --> src/space_map.rs:33:5
kablam!    |
kablam! 33 |     start: u64, // start of map
kablam!    |     ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `shift`
kablam!   --> src/space_map.rs:35:5
kablam!    |
kablam! 35 |     shift: u8, // unit shift
kablam!    |     ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `length`
kablam!   --> src/space_map.rs:36:5
kablam!    |
kablam! 36 |     length: u64, // synced length
kablam!    |     ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `alloc`
kablam!   --> src/space_map.rs:37:5
kablam!    |
kablam! 37 |     alloc: u64, // synced space allocated
kablam!    |     ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `object`
kablam!   --> src/space_map.rs:39:5
kablam!    |
kablam! 39 |     object: u64, // object id for this map
kablam!    |     ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `blksz`
kablam!   --> src/space_map.rs:40:5
kablam!    |
kablam! 40 |     blksz: u32, // block size for space map
kablam!    |     ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `phys`
kablam!   --> src/space_map.rs:42:5
kablam!    |
kablam! 42 |     phys: SpaceMapPhys, // on-disk space map
kablam!    |     ^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `os`
kablam!   --> src/space_map.rs:58:17
kablam!    |
kablam! 58 |     pub fn open(os: &mut ObjectSet,
kablam!    |                 ^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/space_map.rs:75:13
kablam!    |
kablam! 75 |         let mut space_map = SpaceMap {
kablam!    |             ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused import: `std::cmp`
kablam!  --> src/taskq.rs:1:5
kablam!   |
kablam! 1 | use std::cmp;
kablam!   |     ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::thread`
kablam!  --> src/taskq.rs:4:5
kablam!   |
kablam! 4 | use std::thread;
kablam!   |     ^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: constant item is never used: `TQENT_FLAG_PREALLOC`
kablam!  --> src/taskq.rs:8:1
kablam!   |
kablam! 8 | const TQENT_FLAG_PREALLOC: u64 = 0x1; // taskq_dispatch_ent used
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `TASKQ_PREPOPULATE`
kablam!   --> src/taskq.rs:10:1
kablam!    |
kablam! 10 | const TASKQ_PREPOPULATE: u64 = 0x0001;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `TASKQ_CPR_SAFE`
kablam!   --> src/taskq.rs:11:1
kablam!    |
kablam! 11 | const TASKQ_CPR_SAFE: u64 = 0x0002; // Use CPR safe protocol
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `TASKQ_DYNAMIC`
kablam!   --> src/taskq.rs:12:1
kablam!    |
kablam! 12 | const TASKQ_DYNAMIC: u64 = 0x0004; // Use dynamic thread scheduling
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `TASKQ_THREADS_CPU_PCT`
kablam!   --> src/taskq.rs:13:1
kablam!    |
kablam! 13 | const TASKQ_THREADS_CPU_PCT: u64 = 0x0008; // Scale # threads by # cpus
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `TASKQ_DC_BATCH`
kablam!   --> src/taskq.rs:14:1
kablam!    |
kablam! 14 | const TASKQ_DC_BATCH: u64 = 0x0010; // Mark threads as batch
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `TQ_NOQUEUE`
kablam!   --> src/taskq.rs:18:1
kablam!    |
kablam! 18 | const TQ_NOQUEUE: u64 = 0x02; // Do not enqueue if can't dispatch
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `TQ_FRONT`
kablam!   --> src/taskq.rs:19:1
kablam!    |
kablam! 19 | const TQ_FRONT: u64 = 0x08; // Queue in front
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `name`
kablam!   --> src/taskq.rs:26:5
kablam!    |
kablam! 26 |     name: String,
kablam!    |     ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `flags`
kablam!   --> src/taskq.rs:32:5
kablam!    |
kablam! 32 |     flags: u64,
kablam!    |     ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `active`
kablam!   --> src/taskq.rs:33:5
kablam!    |
kablam! 33 |     active: u16,
kablam!    |     ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `num_threads`
kablam!   --> src/taskq.rs:34:5
kablam!    |
kablam! 34 |     num_threads: u16,
kablam!    |     ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `num_alloc`
kablam!   --> src/taskq.rs:35:5
kablam!    |
kablam! 35 |     num_alloc: u64,
kablam!    |     ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `min_alloc`
kablam!   --> src/taskq.rs:36:5
kablam!    |
kablam! 36 |     min_alloc: u64,
kablam!    |     ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `max_alloc`
kablam!   --> src/taskq.rs:37:5
kablam!    |
kablam! 37 |     max_alloc: u64,
kablam!    |     ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `next_task_id`
kablam!   --> src/taskq.rs:38:5
kablam!    |
kablam! 38 |     next_task_id: usize,
kablam!    |     ^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `max_alloc_wait`
kablam!   --> src/taskq.rs:40:5
kablam!    |
kablam! 40 |     max_alloc_wait: i64, /* taskq_ent_t *freelist,
kablam!    |     ^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/taskq.rs:46:16
kablam!    |
kablam! 46 |                mut num_threads: u16,
kablam!    |                ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: method is never used: `taskq_dispatch`
kablam!    --> src/taskq.rs:166:5
kablam!     |
kablam! 166 |       fn taskq_dispatch(&mut self, func: TaskFn, flags: u64) -> TaskId {
kablam!     |  _____^ starting here...
kablam! 167 | |         // self.threads[0].send(Task { func: func, flags: flags });
kablam! 168 | |         let index = self.next_task_id;
kablam! 169 | |         self.next_task_id += 1;
kablam! 170 | |         TaskId(index)
kablam! 171 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `func`
kablam!    --> src/taskq.rs:166:34
kablam!     |
kablam! 166 |     fn taskq_dispatch(&mut self, func: TaskFn, flags: u64) -> TaskId {
kablam!     |                                  ^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `flags`
kablam!    --> src/taskq.rs:166:48
kablam!     |
kablam! 166 |     fn taskq_dispatch(&mut self, func: TaskFn, flags: u64) -> TaskId {
kablam!     |                                                ^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `id`
kablam!    --> src/taskq.rs:303:33
kablam!     |
kablam! 303 |     pub fn cancel_id(&mut self, id: TaskId) -> zfs::Result<()> {
kablam!     |                                 ^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: struct is never used: `Task`
kablam!    --> src/taskq.rs:322:1
kablam!     |
kablam! 322 |   struct Task {
kablam!     |  _^ starting here...
kablam! 323 | |     // taskq_ent *next;
kablam! 324 | |     // taskq_ent *prev;
kablam! 325 | |     func: Box<FnMut()>,
kablam! 326 | |     flags: u64,
kablam! 327 | | }
kablam!     | |_^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `p2_cross`
kablam!  --> src/util.rs:7:1
kablam!   |
kablam! 7 |   fn p2_cross(x: u64, y: u64, align: u64) -> bool {
kablam!   |  _^ starting here...
kablam! 8 | |     x ^ y > align - 1
kablam! 9 | | }
kablam!   | |_^ ...ending here
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `p2_round_up`
kablam!   --> src/util.rs:11:1
kablam!    |
kablam! 11 |   fn p2_round_up(x: u64, align: u64) -> u64 {
kablam!    |  _^ starting here...
kablam! 12 | |     ((x - 1) | (align - 1)) + 1
kablam! 13 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `p2_boundary`
kablam!   --> src/util.rs:15:1
kablam!    |
kablam! 15 |   fn p2_boundary(off: u64, len: u64, align: u64) -> bool {
kablam!    |  _^ starting here...
kablam! 16 | |     (off ^ (off + len - 1)) > (align - 1)
kablam! 17 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `p2_phase`
kablam!   --> src/util.rs:19:1
kablam!    |
kablam! 19 |   fn p2_phase(x: u64, align: u64) -> u64 {
kablam!    |  _^ starting here...
kablam! 20 | |     x & (align - 1)
kablam! 21 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `p2_nphase`
kablam!   --> src/util.rs:23:1
kablam!    |
kablam! 23 |   fn p2_nphase(x: u64, align: u64) -> u64 {
kablam!    |  _^ starting here...
kablam! 24 | |     -(x as i64) as u64 & (align - 1)
kablam! 25 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `p2_nphase_typed`
kablam!   --> src/util.rs:27:1
kablam!    |
kablam! 27 |   fn p2_nphase_typed(x: u64, align: u64) -> u64 {
kablam!    |  _^ starting here...
kablam! 28 | |     -(x as i64) as u64 & (align - 1)
kablam! 29 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `is_p2`
kablam!   --> src/util.rs:31:1
kablam!    |
kablam! 31 |   fn is_p2(x: u64) -> bool {
kablam!    |  _^ starting here...
kablam! 32 | |     x & (x - 1) == 0
kablam! 33 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `is_p2_aligned`
kablam!   --> src/util.rs:35:1
kablam!    |
kablam! 35 |   fn is_p2_aligned(v: u64, a: u64) -> bool {
kablam!    |  _^ starting here...
kablam! 36 | |     v & (a - 1) == 0
kablam! 37 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `mem`
kablam!  --> src/vdev.rs:1:16
kablam!   |
kablam! 1 | use std::{cmp, mem};
kablam!   |                ^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `NvValue`
kablam!  --> src/vdev.rs:7:29
kablam!   |
kablam! 7 | use super::nvpair::{NvList, NvValue};
kablam!   |                             ^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `super::util`
kablam!  --> src/vdev.rs:9:5
kablam!   |
kablam! 9 | use super::util;
kablam!   |     ^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: field is never used: `whole_disk`
kablam!    --> src/vdev.rs:153:5
kablam!     |
kablam! 153 |     whole_disk: u64,
kablam!     |     ^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `id`
kablam!    --> src/vdev.rs:166:5
kablam!     |
kablam! 166 |     id: u64, // child number in vdev parent
kablam!     |     ^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `orig_guid`
kablam!    --> src/vdev.rs:169:5
kablam!     |
kablam! 169 |     orig_guid: u64, // orig. guid prior to remove
kablam!     |     ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `min_asize`
kablam!    --> src/vdev.rs:171:5
kablam!     |
kablam! 171 |     min_asize: u64, // min acceptable asize
kablam!     |     ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `max_asize`
kablam!    --> src/vdev.rs:172:5
kablam!     |
kablam! 172 |     max_asize: u64, // max acceptable asize
kablam!     |     ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `state`
kablam!    --> src/vdev.rs:174:5
kablam!     |
kablam! 174 |     state: State,
kablam!     |     ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `prev_state`
kablam!    --> src/vdev.rs:175:5
kablam!     |
kablam! 175 |     prev_state: State,
kablam!     |     ^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `create_txg`
kablam!    --> src/vdev.rs:180:5
kablam!     |
kablam! 180 |     create_txg: u64, // txg when top-level was added
kablam!     |     ^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `open`
kablam!    --> src/vdev.rs:286:5
kablam!     |
kablam! 286 |       fn open(&mut self) -> zfs::Result<()> {
kablam!     |  _____^ starting here...
kablam! 287 | |         Ok(())
kablam! 288 | |     }
kablam!     | |_____^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `mos`
kablam!    --> src/vdev.rs:290:33
kablam!     |
kablam! 290 |     fn metaslab_init(&mut self, mos: &mut ObjectSet, txg: u64) -> zfs::Result<()> {
kablam!     |                                 ^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `m`
kablam!    --> src/vdev.rs:313:13
kablam!     |
kablam! 313 |         for m in old_count..new_count {
kablam!     |             ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `object`
kablam!    --> src/vdev.rs:314:17
kablam!     |
kablam! 314 |             let object: u64 = 0;
kablam!     |                 ^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/vdev.rs:483:13
kablam!     |
kablam! 483 |             self.parse(normal_class, child, Some(index), alloc_type);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: constant item is never used: `DIRTY_METASLAB`
kablam!    --> src/vdev.rs:518:1
kablam!     |
kablam! 518 | const DIRTY_METASLAB: u64 = 0x01;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `DIRTY_DTL`
kablam!    --> src/vdev.rs:519:1
kablam!     |
kablam! 519 | const DIRTY_DTL: u64 = 0x02;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `RAIDZ_MAXPARITY`
kablam!    --> src/vdev.rs:521:1
kablam!     |
kablam! 521 | const RAIDZ_MAXPARITY: usize = 3;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `PAD_SIZE`
kablam!    --> src/vdev.rs:523:1
kablam!     |
kablam! 523 | const PAD_SIZE: u64 = 8 << 10;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `SKIP_SIZE`
kablam!    --> src/vdev.rs:525:1
kablam!     |
kablam! 525 | const SKIP_SIZE: u64 = PAD_SIZE * 2;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `PHYS_SIZE`
kablam!    --> src/vdev.rs:526:1
kablam!     |
kablam! 526 | const PHYS_SIZE: u64 = 112 << 10;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `path`
kablam!  --> src/vdev_file.rs:5:5
kablam!   |
kablam! 5 |     path: String,
kablam!   |     ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `vdev`
kablam!   --> src/vdev_file.rs:21:24
kablam!    |
kablam! 21 |     fn open(&mut self, vdev: &mut vdev::Vdev) -> zfs::Result<(u64, u64, u64)> {
kablam!    |                        ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `vdev`
kablam!   --> src/vdev_file.rs:25:25
kablam!    |
kablam! 25 |     fn close(&mut self, vdev: &mut vdev::Vdev) {}
kablam!    |                         ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `vdev`
kablam!   --> src/vdev_file.rs:27:25
kablam!    |
kablam! 27 |     fn asize(&mut self, vdev: &mut vdev::Vdev, psize: u64) -> u64 {
kablam!    |                         ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `psize`
kablam!   --> src/vdev_file.rs:27:48
kablam!    |
kablam! 27 |     fn asize(&mut self, vdev: &mut vdev::Vdev, psize: u64) -> u64 {
kablam!    |                                                ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `vdev`
kablam!   --> src/vdev_file.rs:31:24
kablam!    |
kablam! 31 |     fn hold(&mut self, vdev: &mut vdev::Vdev) {}
kablam!    |                        ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `vdev`
kablam!   --> src/vdev_file.rs:33:27
kablam!    |
kablam! 33 |     fn release(&mut self, vdev: &mut vdev::Vdev) {}
kablam!    |                           ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused import: `std::io::Seek`
kablam!  --> src/zap.rs:2:5
kablam!   |
kablam! 2 | use std::io::Seek;
kablam!   |     ^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: field is never used: `pad`
kablam!   --> src/zap.rs:23:5
kablam!    |
kablam! 23 |     pad: [u64; 5],
kablam!    |     ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `ZAP_LEAF_MAGIC`
kablam!    --> src/zap.rs:134:1
kablam!     |
kablam! 134 | const ZAP_LEAF_MAGIC: u32 = 0x2AB1EAF;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `ZAP_LEAF_CHUNKSIZE`
kablam!    --> src/zap.rs:135:1
kablam!     |
kablam! 135 | const ZAP_LEAF_CHUNKSIZE: usize = 24;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `ZAP_LEAF_ARRAY_BYTES`
kablam!    --> src/zap.rs:139:1
kablam!     |
kablam! 139 | const ZAP_LEAF_ARRAY_BYTES: usize = ZAP_LEAF_CHUNKSIZE - 3;
kablam!     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `pad2`
kablam!    --> src/zap.rs:161:5
kablam!     |
kablam! 161 |     pad2: [u8; 12],
kablam!     |     ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `ZapLeafEntry`
kablam!    --> src/zap.rs:165:1
kablam!     |
kablam! 165 | struct ZapLeafEntry {
kablam!     | ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `ZapLeafArray`
kablam!    --> src/zap.rs:179:1
kablam!     |
kablam! 179 |   struct ZapLeafArray {
kablam!     |  _^ starting here...
kablam! 180 | |     leaf_type: u8,
kablam! 181 | |     array: [u8; ZAP_LEAF_ARRAY_BYTES],
kablam! 182 | |     next: u16,
kablam! 183 | | }
kablam!     | |_^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `ZapLeafFree`
kablam!    --> src/zap.rs:186:1
kablam!     |
kablam! 186 |   struct ZapLeafFree {
kablam!     |  _^ starting here...
kablam! 187 | |     free_type: u8,
kablam! 188 | |     pad: [u8; ZAP_LEAF_ARRAY_BYTES],
kablam! 189 | |     next: u16,
kablam! 190 | | }
kablam!     | |_^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `claim_txg`
kablam!  --> src/zil_header.rs:5:5
kablam!   |
kablam! 5 |     claim_txg: u64,
kablam!   |     ^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `replay_seq`
kablam!  --> src/zil_header.rs:6:5
kablam!   |
kablam! 6 |     replay_seq: u64,
kablam!   |     ^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `log`
kablam!  --> src/zil_header.rs:7:5
kablam!   |
kablam! 7 |     log: BlockPtr,
kablam!   |     ^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `ptr`
kablam!  --> src/zio.rs:1:16
kablam!   |
kablam! 1 | use std::{mem, ptr};
kablam!   |                ^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `super::avl`
kablam!  --> src/zio.rs:5:5
kablam!   |
kablam! 5 | use super::avl;
kablam!   |     ^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `super::zfs`
kablam!   --> src/zio.rs:11:5
kablam!    |
kablam! 11 | use super::zfs;
kablam!    |     ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/zio.rs:25:9
kablam!    |
kablam! 25 |         self.disk.seek(SeekFrom::Start(start as u64 * 512));
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/zio.rs:26:9
kablam!    |
kablam! 26 |         self.disk.read(&mut ret);
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/zio.rs:32:9
kablam!    |
kablam! 32 |         self.disk.seek(SeekFrom::Start(block as u64 * 512));
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/zio.rs:33:9
kablam!    |
kablam! 33 |         self.disk.write(data);
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/zio.rs:50:17
kablam!    |
kablam! 50 |                 lzjb::LzjbDecoder::new(&data).read(&mut decompressed);
kablam!    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: enum is never used: `Stage`
kablam!    --> src/zio.rs:143:1
kablam!     |
kablam! 143 | enum Stage {
kablam!     | ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Continue`
kablam!    --> src/zio.rs:204:5
kablam!     |
kablam! 204 |     Continue = 0x100,
kablam!     |     ^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Stop`
kablam!    --> src/zio.rs:205:5
kablam!     |
kablam! 205 |     Stop = 0x101,
kablam!     |     ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `DontAggregate`
kablam!    --> src/zio.rs:211:5
kablam!     |
kablam! 211 |     DontAggregate  = 1 << 0,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `IoRepair`
kablam!    --> src/zio.rs:212:5
kablam!     |
kablam! 212 |     IoRepair       = 1 << 1,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `SelfHeal`
kablam!    --> src/zio.rs:213:5
kablam!     |
kablam! 213 |     SelfHeal       = 1 << 2,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Resilver`
kablam!    --> src/zio.rs:214:5
kablam!     |
kablam! 214 |     Resilver       = 1 << 3,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Scrub`
kablam!    --> src/zio.rs:215:5
kablam!     |
kablam! 215 |     Scrub          = 1 << 4,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ScanThread`
kablam!    --> src/zio.rs:216:5
kablam!     |
kablam! 216 |     ScanThread     = 1 << 5,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Physical`
kablam!    --> src/zio.rs:217:5
kablam!     |
kablam! 217 |     Physical       = 1 << 6,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `CanFail`
kablam!    --> src/zio.rs:220:5
kablam!     |
kablam! 220 |     CanFail        = 1 << 7,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Speculative`
kablam!    --> src/zio.rs:221:5
kablam!     |
kablam! 221 |     Speculative    = 1 << 8,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ConfigWriter`
kablam!    --> src/zio.rs:222:5
kablam!     |
kablam! 222 |     ConfigWriter   = 1 << 9,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `DontRetry`
kablam!    --> src/zio.rs:223:5
kablam!     |
kablam! 223 |     DontRetry      = 1 << 10,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `DontCache`
kablam!    --> src/zio.rs:224:5
kablam!     |
kablam! 224 |     DontCache      = 1 << 11,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `NoData`
kablam!    --> src/zio.rs:225:5
kablam!     |
kablam! 225 |     NoData         = 1 << 12,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `InduceDamage`
kablam!    --> src/zio.rs:226:5
kablam!     |
kablam! 226 |     InduceDamage   = 1 << 13,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `IoRetry`
kablam!    --> src/zio.rs:229:5
kablam!     |
kablam! 229 |     IoRetry        = 1 << 14,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Probe`
kablam!    --> src/zio.rs:230:5
kablam!     |
kablam! 230 |     Probe          = 1 << 15,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `TryHard`
kablam!    --> src/zio.rs:231:5
kablam!     |
kablam! 231 |     TryHard        = 1 << 16,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Optional`
kablam!    --> src/zio.rs:232:5
kablam!     |
kablam! 232 |     Optional       = 1 << 17,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `DontQueue`
kablam!    --> src/zio.rs:235:5
kablam!     |
kablam! 235 |     DontQueue      = 1 << 18,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `DontPropagate`
kablam!    --> src/zio.rs:236:5
kablam!     |
kablam! 236 |     DontPropagate  = 1 << 19,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `IoBypass`
kablam!    --> src/zio.rs:237:5
kablam!     |
kablam! 237 |     IoBypass       = 1 << 20,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `IoRewrite`
kablam!    --> src/zio.rs:238:5
kablam!     |
kablam! 238 |     IoRewrite      = 1 << 21,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Raw`
kablam!    --> src/zio.rs:239:5
kablam!     |
kablam! 239 |     Raw            = 1 << 22,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `GangChild`
kablam!    --> src/zio.rs:240:5
kablam!     |
kablam! 240 |     GangChild      = 1 << 23,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `DdtChild`
kablam!    --> src/zio.rs:241:5
kablam!     |
kablam! 241 |     DdtChild       = 1 << 24,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `GodFather`
kablam!    --> src/zio.rs:242:5
kablam!     |
kablam! 242 |     GodFather      = 1 << 25,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `NopWrite`
kablam!    --> src/zio.rs:243:5
kablam!     |
kablam! 243 |     NopWrite       = 1 << 26,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `ReExecuted`
kablam!    --> src/zio.rs:244:5
kablam!     |
kablam! 244 |     ReExecuted     = 1 << 27,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Delegated`
kablam!    --> src/zio.rs:245:5
kablam!     |
kablam! 245 |     Delegated      = 1 << 28,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `FastWrite`
kablam!    --> src/zio.rs:246:5
kablam!     |
kablam! 246 |     FastWrite      = 1 << 29,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Vdev`
kablam!    --> src/zio.rs:251:5
kablam!     |
kablam! 251 |     Vdev = 0,
kablam!     |     ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Gang`
kablam!    --> src/zio.rs:252:5
kablam!     |
kablam! 252 |     Gang,
kablam!     |     ^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Ddt`
kablam!    --> src/zio.rs:253:5
kablam!     |
kablam! 253 |     Ddt,
kablam!     |     ^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Logical`
kablam!    --> src/zio.rs:254:5
kablam!     |
kablam! 254 |     Logical,
kablam!     |     ^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: enum is never used: `WaitType`
kablam!    --> src/zio.rs:258:1
kablam!     |
kablam! 258 |   enum WaitType {
kablam!     |  _^ starting here...
kablam! 259 | |     Ready = 0,
kablam! 260 | |     Done,
kablam! 261 | | }
kablam!     | |_^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/main.rs:74:17
kablam!    |
kablam! 74 |                   lzjb::LzjbDecoder::new(&match data {
kablam!    |  _________________^ starting here...
kablam! 75 | |                                      Ok(data) => data,
kablam! 76 | |                                      Err(e) => return Err(e),
kablam! 77 | |                                  }).read(&mut decompressed);
kablam!    | |____________________________________________________________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused variable: `u`
kablam!   --> src/main.rs:80:13
kablam!    |
kablam! 80 |             u => Err("Error: Unknown compression type"),
kablam!    |             ^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: field is never used: `master_node`
kablam!    --> src/main.rs:140:5
kablam!     |
kablam! 140 |     master_node: DNodePhys,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:409:5
kablam!     |
kablam! 409 |     stdout.write(b"Type open zfs.img to open the image file\n");
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:414:9
kablam!     |
kablam! 414 |         stdout.write(b"# ");
kablam!     |         ^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:415:9
kablam!     |
kablam! 415 |         stdout.flush();
kablam!     |         ^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:427:29
kablam!     |
kablam! 427 |                             writeln!(stdout, "Newest Uberblock {:X}", zfs.uberblock.magic);
kablam!     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:428:29
kablam!     |
kablam! 428 |                             writeln!(stdout, "Version {}", uberblock.version);
kablam!     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:429:29
kablam!     |
kablam! 429 |                             writeln!(stdout, "TXG {}", uberblock.txg);
kablam!     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:430:29
kablam!     |
kablam! 430 |                             writeln!(stdout, "GUID {:X}", uberblock.guid_sum);
kablam!     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:431:29
kablam!     |
kablam! 431 |                             writeln!(stdout, "Timestamp {}", uberblock.timestamp);
kablam!     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:432:29
kablam!     |
kablam! 432 |                             writeln!(stdout, "ROOTBP[0] {:?}", uberblock.rootbp.dvas[0]);
kablam!     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:433:29
kablam!     |
kablam! 433 |                             writeln!(stdout, "ROOTBP[1] {:?}", uberblock.rootbp.dvas[1]);
kablam!     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:434:29
kablam!     |
kablam! 434 |                             writeln!(stdout, "ROOTBP[2] {:?}", uberblock.rootbp.dvas[2]);
kablam!     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused variable: `spa`
kablam!    --> src/main.rs:440:33
kablam!     |
kablam! 440 |                             let spa = spa::Spa::import(name, nv_list).unwrap();
kablam!     |                                 ^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:446:37
kablam!     |
kablam! 446 |                                     writeln!(stdout, "Got nv_list:\n{:?}", nv_list);
kablam!     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:449:45
kablam!     |
kablam! 449 |                                             writeln!(stdout, "Got vdev_tree");
kablam!     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:460:53
kablam!     |
kablam! 460 |                                                     writeln!(stdout, "Got metaslab_array");
kablam!     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused variable: `space_map`
kablam!    --> src/main.rs:485:61
kablam!     |
kablam! 485 |                                                         let space_map: Result<Vec<u8>, _> =
kablam!     |                                                             ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:489:57
kablam!     |
kablam! 489 |                                                         writeln!(stdout, "got space map id: {:?}", sm_id);
kablam!     |                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:490:57
kablam!     |
kablam! 490 |                                                         writeln!(stdout, "got space map dnode: {:?}", sm_dnode);
kablam!     |                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:491:57
kablam!     |
kablam! 491 |                                                           writeln!(stdout, "got space map phys: {:?}",
kablam!     |  _________________________________________________________^ starting here...
kablam! 492 | |                                                                  space_map_phys);
kablam!     | |_________________________________________________________________________________^ ...ending here
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/main.rs:495:61
kablam!     |
kablam! 495 |                                                         let mut range_tree: avl::Tree<space_map::Entry,
kablam!     |                                                             ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `range_tree`
kablam!    --> src/main.rs:495:61
kablam!     |
kablam! 495 |                                                         let mut range_tree: avl::Tree<space_map::Entry,
kablam!     |                                                             ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:503:57
kablam!     |
kablam! 503 |                                                           writeln!(stdout, "Invalid metaslab_array NvValue \
kablam!     |  _________________________________________________________^ starting here...
kablam! 504 | |                                                                   type. Expected Uint64.");
kablam!     | |___________________________________________________________________________________________^ ...ending here
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:508:53
kablam!     |
kablam! 508 |                                                     writeln!(stdout, "No `metaslab_array` in vdev_tree");
kablam!     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:513:45
kablam!     |
kablam! 513 |                                             writeln!(stdout, "No `vdev_tree` in vdev_label nvpairs");
kablam!     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:518:37
kablam!     |
kablam! 518 |                                     writeln!(stdout, "Couldn't read vdev_label: {}", e);
kablam!     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:527:45
kablam!     |
kablam! 527 |                                               writeln!(stdout, "File contents: {}",
kablam!     |  _____________________________________________^ starting here...
kablam! 528 | |                                                      str::from_utf8(&file).unwrap());
kablam!     | |_____________________________________________________________________________________^ ...ending here
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:531:45
kablam!     |
kablam! 531 |                                             writeln!(stdout, "Failed to read file");
kablam!     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:536:37
kablam!     |
kablam! 536 |                                     writeln!(stdout, "Usage: file <path>");
kablam!     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:546:49
kablam!     |
kablam! 546 |                                                 write!(stdout, "{}\t", item);
kablam!     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:550:45
kablam!     |
kablam! 550 |                                             writeln!(stdout, "Failed to read directory");
kablam!     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:555:37
kablam!     |
kablam! 555 |                                     writeln!(stdout, "Usage: ls <path>");
kablam!     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:562:41
kablam!     |
kablam! 562 |                                         writeln!(stdout, "Dump sector: {}", sector);
kablam!     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:567:49
kablam!     |
kablam! 567 |                                                 write!(stdout, "\n{:X}:", i);
kablam!     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:570:49
kablam!     |
kablam! 570 |                                                 write!(stdout, " {:X}", *byte);
kablam!     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:572:49
kablam!     |
kablam! 572 |                                                 writeln!(stdout, " !");
kablam!     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:575:41
kablam!     |
kablam! 575 |                                         write!(stdout, "\n");
kablam!     |                                         ^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:577:41
kablam!     |
kablam! 577 |                                         writeln!(stdout, "Sector not a number");
kablam!     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:581:37
kablam!     |
kablam! 581 |                                     writeln!(stdout, "No sector specified!");
kablam!     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:585:29
kablam!     |
kablam! 585 |                             writeln!(stdout, "Closing");
kablam!     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:590:29
kablam!     |
kablam! 590 |                             writeln!(stdout, "Commands: uber vdev_label file ls dump close exit");
kablam!     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:601:49
kablam!     |
kablam! 601 |                                                 writeln!(stdout, "Error: {:?}", e);
kablam!     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:603:49
kablam!     |
kablam! 603 |                                                 writeln!(stdout, "Open: {}", arg);
kablam!     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:608:45
kablam!     |
kablam! 608 |                                             writeln!(stdout, "Failed to open {}: {}", arg, err);
kablam!     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:613:37
kablam!     |
kablam! 613 |                                     writeln!(stdout, "No file specified!");
kablam!     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/main.rs:619:29
kablam!     |
kablam! 619 |                             writeln!(stdout, "Commands: open exit");
kablam!     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 7.30 secs
boom! running `docker rm -f 36704124bd37a47e329a4bad255433011c8681ed083db13fbe188993902ba427`
blam! 36704124bd37a47e329a4bad255433011c8681ed083db13fbe188993902ba427
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! b39f9ab4dbff8d2d2f9cdb176edc391e2f1698e147f19944ae2952b8e0f02d04
boom! running `docker start -a b39f9ab4dbff8d2d2f9cdb176edc391e2f1698e147f19944ae2952b8e0f02d04`
kablam!    Compiling zfs v0.1.0 (file:///source)
kablam! error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<i32, xdr::xdr::XdrError>`
kablam!    --> src/xdr/mem_ops.rs:122:13
kablam!     |
kablam! 122 |     assert!(mem_ops.get_i32() == 257);
kablam!     |             ^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: an implementation of `std::cmp::PartialEq` might be missing for `std::result::Result<i32, xdr::xdr::XdrError>`
kablam! 
kablam! error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<i64, xdr::xdr::XdrError>`
kablam!    --> src/xdr/mem_ops.rs:130:13
kablam!     |
kablam! 130 |     assert!(mem_ops.get_i64() == 424242);
kablam!     |             ^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: an implementation of `std::cmp::PartialEq` might be missing for `std::result::Result<i64, xdr::xdr::XdrError>`
kablam! 
kablam! error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<i32, xdr::xdr::XdrError>`
kablam!    --> src/xdr/mem_ops.rs:136:13
kablam!     |
kablam! 136 |     assert!(mem_ops.get_i32() == 257);
kablam!     |             ^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: an implementation of `std::cmp::PartialEq` might be missing for `std::result::Result<i32, xdr::xdr::XdrError>`
kablam! 
kablam! error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<i32, xdr::xdr::XdrError>`
kablam!    --> src/xdr/mem_ops.rs:144:13
kablam!     |
kablam! 144 |     assert!(mem_ops.get_i32() == 424242);
kablam!     |             ^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: an implementation of `std::cmp::PartialEq` might be missing for `std::result::Result<i32, xdr::xdr::XdrError>`
kablam! 
kablam! error: aborting due to 4 previous errors
kablam! 
kablam! error: Could not compile `zfs`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f b39f9ab4dbff8d2d2f9cdb176edc391e2f1698e147f19944ae2952b8e0f02d04`
blam! b39f9ab4dbff8d2d2f9cdb176edc391e2f1698e147f19944ae2952b8e0f02d04
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 23cb9777fc1531228f5d20df46038b26ab7653623205ce036fde6d0f7db2cb27
boom! running `docker start -a 23cb9777fc1531228f5d20df46038b26ab7653623205ce036fde6d0f7db2cb27`
kablam!    Compiling zfs v0.1.0 (file:///source)
kablam! error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<i32, xdr::xdr::XdrError>`
kablam!    --> src/xdr/mem_ops.rs:122:13
kablam!     |
kablam! 122 |     assert!(mem_ops.get_i32() == 257);
kablam!     |             ^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: an implementation of `std::cmp::PartialEq` might be missing for `std::result::Result<i32, xdr::xdr::XdrError>`
kablam! 
kablam! error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<i64, xdr::xdr::XdrError>`
kablam!    --> src/xdr/mem_ops.rs:130:13
kablam!     |
kablam! 130 |     assert!(mem_ops.get_i64() == 424242);
kablam!     |             ^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: an implementation of `std::cmp::PartialEq` might be missing for `std::result::Result<i64, xdr::xdr::XdrError>`
kablam! 
kablam! error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<i32, xdr::xdr::XdrError>`
kablam!    --> src/xdr/mem_ops.rs:136:13
kablam!     |
kablam! 136 |     assert!(mem_ops.get_i32() == 257);
kablam!     |             ^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: an implementation of `std::cmp::PartialEq` might be missing for `std::result::Result<i32, xdr::xdr::XdrError>`
kablam! 
kablam! error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<i32, xdr::xdr::XdrError>`
kablam!    --> src/xdr/mem_ops.rs:144:13
kablam!     |
kablam! 144 |     assert!(mem_ops.get_i32() == 424242);
kablam!     |             ^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: an implementation of `std::cmp::PartialEq` might be missing for `std::result::Result<i32, xdr::xdr::XdrError>`
kablam! 
kablam! error: aborting due to 4 previous errors
kablam! 
kablam! error: Could not compile `zfs`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 23cb9777fc1531228f5d20df46038b26ab7653623205ce036fde6d0f7db2cb27`
blam! 23cb9777fc1531228f5d20df46038b26ab7653623205ce036fde6d0f7db2cb27
