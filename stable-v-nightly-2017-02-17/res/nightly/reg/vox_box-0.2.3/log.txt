boom! testing vox_box-0.2.3 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 7df8e956517e3e30d65cbf5c7a431d474940768803a1d868a7798fbe89dc8842
boom! running `docker start -a 7df8e956517e3e30d65cbf5c7a431d474940768803a1d868a7798fbe89dc8842`
kablam!    Compiling vox_box v0.2.3 (file:///source)
kablam! warning: field is never used: `voiced_unvoiced_cost`
kablam!    --> src/periodic.rs:305:5
kablam!     |
kablam! 305 |     voiced_unvoiced_cost: T,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `voicing_threshold`
kablam!    --> src/periodic.rs:306:5
kablam!     |
kablam! 306 |     voicing_threshold: T,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `octave_cost`
kablam!    --> src/periodic.rs:383:116
kablam!     |
kablam! 383 |     fn pitch<W: LagType>(&self, sample_rate: T, threshold: T, silence_threshold: S, local_peak: S, global_peak: S, octave_cost: T, min: T, max: T) -> Vec<Pitch<T>> {
kablam!     |                                                                                                                    ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `voiceless`
kablam!    --> src/periodic.rs:397:13
kablam!     |
kablam! 397 |         let voiceless = (T::zero(), threshold + T::zero().max(T::one() + T::one() - (T::from(local_peak.to_float_sample()).unwrap() / T::from(global_peak.to_float_sample()).unwrap()) / (T::from(silence_threshold.to_float_sample()).unwrap() / T::one() + threshold)));
kablam!     |             ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused import: `std::f32`
kablam!  --> src/polynomial.rs:3:5
kablam!   |
kablam! 3 | use std::f32;
kablam!   |     ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Num`
kablam!  --> src/polynomial.rs:7:18
kablam!   |
kablam! 7 | use num::{Float, Num, Zero, One, FromPrimitive, Complex};
kablam!   |                  ^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused variable: `iteration`
kablam!   --> src/polynomial.rs:37:13
kablam!    |
kablam! 37 |         for iteration in 0..20 {
kablam!    |             ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/polynomial.rs:82:13
kablam!    |
kablam! 82 |             other.find_roots_mut(&mut work[..]); 
kablam!    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/polynomial.rs:108:26
kablam!     |
kablam! 108 |         let (mut coeffs, mut work) = work.split_at_mut(coeff_high - coeff_low + 1);
kablam!     |                          ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `work`
kablam!    --> src/polynomial.rs:108:26
kablam!     |
kablam! 108 |         let (mut coeffs, mut work) = work.split_at_mut(coeff_high - coeff_low + 1);
kablam!     |                          ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `i`
kablam!    --> src/polynomial.rs:115:13
kablam!     |
kablam! 115 |         for i in (3..(m+1)).rev() {
kablam!     |             ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/polynomial.rs:200:13
kablam!     |
kablam! 200 |             self.div_polynomial_mut(other, &mut rem[..]);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused imports: `IndexMut`, `Index`
kablam!  --> src/spectrum.rs:5:16
kablam!   |
kablam! 5 | use std::ops::{Index, IndexMut};
kablam!   |                ^^^^^  ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::iter::IntoIterator`
kablam!   --> src/spectrum.rs:12:5
kablam!    |
kablam! 12 | use std::iter::IntoIterator;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused variable: `samp_interval`
kablam!    --> src/spectrum.rs:159:13
kablam!     |
kablam! 159 |         let samp_interval: T = T::from(1.).unwrap() / sample_rate;
kablam!     |             ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: field is never used: `frequency`
kablam!    --> src/spectrum.rs:205:5
kablam!     |
kablam! 205 |     frequency: T,
kablam!     |     ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `num_formants`
kablam!    --> src/spectrum.rs:330:5
kablam!     |
kablam! 330 |     num_formants: usize,
kablam!     |     ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `std::ops::*;`
kablam!  --> src/waves.rs:6:5
kablam!   |
kablam! 6 | use std::ops::*;
kablam!   |     ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `sample::rate::Converter`
kablam!   --> src/lib.rs:17:5
kablam!    |
kablam! 17 | use sample::rate::Converter;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `sample::slice::to_frame_slice`
kablam!   --> src/lib.rs:18:5
kablam!    |
kablam! 18 | use sample::slice::to_frame_slice;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `LPCSolver`
kablam!   --> src/lib.rs:21:21
kablam!    |
kablam! 21 | use spectrum::{LPC, LPCSolver, Resonance, EstimateFormants};
kablam!    |                     ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Normalize`
kablam!   --> src/lib.rs:23:13
kablam!    |
kablam! 23 | use waves::{Normalize, Filter};
kablam!    |             ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `periodic::Autocorrelate`
kablam!   --> src/lib.rs:24:5
kablam!    |
kablam! 24 | use periodic::Autocorrelate;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::error::Error`
kablam!   --> src/lib.rs:26:5
kablam!    |
kablam! 26 | use std::error::Error;
kablam!    |     ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/lib.rs:53:10
kablam!    |
kablam! 53 |     let (mut lpc_coeffs, mut work) = work.split_at_mut(n_coeffs);
kablam!    |          ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `lpc_coeffs`
kablam!   --> src/lib.rs:53:10
kablam!    |
kablam! 53 |     let (mut lpc_coeffs, mut work) = work.split_at_mut(n_coeffs);
kablam!    |          ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/lib.rs:54:27
kablam!    |
kablam! 54 |     let (mut auto_coeffs, mut work) = work.split_at_mut(n_coeffs + 2);
kablam!    |                           ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/lib.rs:54:10
kablam!    |
kablam! 54 |     let (mut auto_coeffs, mut work) = work.split_at_mut(n_coeffs + 2);
kablam!    |          ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `auto_coeffs`
kablam!   --> src/lib.rs:54:10
kablam!    |
kablam! 54 |     let (mut auto_coeffs, mut work) = work.split_at_mut(n_coeffs + 2);
kablam!    |          ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `work`
kablam!   --> src/lib.rs:54:27
kablam!    |
kablam! 54 |     let (mut auto_coeffs, mut work) = work.split_at_mut(n_coeffs + 2);
kablam!    |                           ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.68 secs
boom! running `docker rm -f 7df8e956517e3e30d65cbf5c7a431d474940768803a1d868a7798fbe89dc8842`
blam! 7df8e956517e3e30d65cbf5c7a431d474940768803a1d868a7798fbe89dc8842
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 46282178df55fc1f16496487673f733b8d6acab7216c9145b36e2af382085644
boom! running `docker start -a 46282178df55fc1f16496487673f733b8d6acab7216c9145b36e2af382085644`
kablam!    Compiling vox_box v0.2.3 (file:///source)
kablam! warning: field is never used: `voiced_unvoiced_cost`
kablam!    --> src/periodic.rs:305:5
kablam!     |
kablam! 305 |     voiced_unvoiced_cost: T,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `voicing_threshold`
kablam!    --> src/periodic.rs:306:5
kablam!     |
kablam! 306 |     voicing_threshold: T,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused variable: `octave_cost`
kablam!    --> src/periodic.rs:383:116
kablam!     |
kablam! 383 |     fn pitch<W: LagType>(&self, sample_rate: T, threshold: T, silence_threshold: S, local_peak: S, global_peak: S, octave_cost: T, min: T, max: T) -> Vec<Pitch<T>> {
kablam!     |                                                                                                                    ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `voiceless`
kablam!    --> src/periodic.rs:397:13
kablam!     |
kablam! 397 |         let voiceless = (T::zero(), threshold + T::zero().max(T::one() + T::one() - (T::from(local_peak.to_float_sample()).unwrap() / T::from(global_peak.to_float_sample()).unwrap()) / (T::from(silence_threshold.to_float_sample()).unwrap() / T::one() + threshold)));
kablam!     |             ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused import: `sample::signal::Sine`
kablam!    --> src/periodic.rs:451:9
kablam!     |
kablam! 451 |     use sample::signal::Sine;
kablam!     |         ^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::cmp::Ordering`
kablam!    --> src/periodic.rs:452:9
kablam!     |
kablam! 452 |     use std::cmp::Ordering;
kablam!     |         ^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::f64::consts::PI`
kablam!    --> src/periodic.rs:453:9
kablam!     |
kablam! 453 |     use std::f64::consts::PI;
kablam!     |         ^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/periodic.rs:472:13
kablam!     |
kablam! 472 |         let mut signal = sample::signal::rate(44100.).const_hz(exp_freq).sine();
kablam!     |             ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/periodic.rs:474:13
kablam!     |
kablam! 474 |         let mut maxima: f64 = vector.to_sample_slice().max_amplitude();
kablam!     |             ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused import: `Num`
kablam!  --> src/polynomial.rs:7:18
kablam!   |
kablam! 7 | use num::{Float, Num, Zero, One, FromPrimitive, Complex};
kablam!   |                  ^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused variable: `iteration`
kablam!   --> src/polynomial.rs:37:13
kablam!    |
kablam! 37 |         for iteration in 0..20 {
kablam!    |             ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!   --> src/polynomial.rs:82:13
kablam!    |
kablam! 82 |             other.find_roots_mut(&mut work[..]); 
kablam!    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/polynomial.rs:108:26
kablam!     |
kablam! 108 |         let (mut coeffs, mut work) = work.split_at_mut(coeff_high - coeff_low + 1);
kablam!     |                          ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `work`
kablam!    --> src/polynomial.rs:108:26
kablam!     |
kablam! 108 |         let (mut coeffs, mut work) = work.split_at_mut(coeff_high - coeff_low + 1);
kablam!     |                          ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `i`
kablam!    --> src/polynomial.rs:115:13
kablam!     |
kablam! 115 |         for i in (3..(m+1)).rev() {
kablam!     |             ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/polynomial.rs:200:13
kablam!     |
kablam! 200 |             self.div_polynomial_mut(other, &mut rem[..]);
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused imports: `IndexMut`, `Index`
kablam!  --> src/spectrum.rs:5:16
kablam!   |
kablam! 5 | use std::ops::{Index, IndexMut};
kablam!   |                ^^^^^  ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::iter::IntoIterator`
kablam!   --> src/spectrum.rs:12:5
kablam!    |
kablam! 12 | use std::iter::IntoIterator;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused variable: `samp_interval`
kablam!    --> src/spectrum.rs:159:13
kablam!     |
kablam! 159 |         let samp_interval: T = T::from(1.).unwrap() / sample_rate;
kablam!     |             ^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: field is never used: `frequency`
kablam!    --> src/spectrum.rs:205:5
kablam!     |
kablam! 205 |     frequency: T,
kablam!     |     ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `num_formants`
kablam!    --> src/spectrum.rs:330:5
kablam!     |
kablam! 330 |     num_formants: usize,
kablam!     |     ^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `std::ops::*;`
kablam!  --> src/waves.rs:6:5
kablam!   |
kablam! 6 | use std::ops::*;
kablam!   |     ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `super::super`
kablam!    --> src/waves.rs:104:9
kablam!     |
kablam! 104 |     use super::super::*;
kablam!     |         ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/waves.rs:128:17
kablam!     |
kablam! 128 |             let mut d: Vec<[f64; 1]> = window.take(16).collect();
kablam!     |                 ^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused import: `sample::rate::Converter`
kablam!   --> src/lib.rs:17:5
kablam!    |
kablam! 17 | use sample::rate::Converter;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `sample::slice::to_frame_slice`
kablam!   --> src/lib.rs:18:5
kablam!    |
kablam! 18 | use sample::slice::to_frame_slice;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `LPCSolver`
kablam!   --> src/lib.rs:21:21
kablam!    |
kablam! 21 | use spectrum::{LPC, LPCSolver, Resonance, EstimateFormants};
kablam!    |                     ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Normalize`
kablam!   --> src/lib.rs:23:13
kablam!    |
kablam! 23 | use waves::{Normalize, Filter};
kablam!    |             ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `periodic::Autocorrelate`
kablam!   --> src/lib.rs:24:5
kablam!    |
kablam! 24 | use periodic::Autocorrelate;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::error::Error`
kablam!   --> src/lib.rs:26:5
kablam!    |
kablam! 26 | use std::error::Error;
kablam!    |     ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/lib.rs:53:10
kablam!    |
kablam! 53 |     let (mut lpc_coeffs, mut work) = work.split_at_mut(n_coeffs);
kablam!    |          ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `lpc_coeffs`
kablam!   --> src/lib.rs:53:10
kablam!    |
kablam! 53 |     let (mut lpc_coeffs, mut work) = work.split_at_mut(n_coeffs);
kablam!    |          ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/lib.rs:54:27
kablam!    |
kablam! 54 |     let (mut auto_coeffs, mut work) = work.split_at_mut(n_coeffs + 2);
kablam!    |                           ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/lib.rs:54:10
kablam!    |
kablam! 54 |     let (mut auto_coeffs, mut work) = work.split_at_mut(n_coeffs + 2);
kablam!    |          ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `auto_coeffs`
kablam!   --> src/lib.rs:54:10
kablam!    |
kablam! 54 |     let (mut auto_coeffs, mut work) = work.split_at_mut(n_coeffs + 2);
kablam!    |          ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `work`
kablam!   --> src/lib.rs:54:27
kablam!    |
kablam! 54 |     let (mut auto_coeffs, mut work) = work.split_at_mut(n_coeffs + 2);
kablam!    |                           ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 6.45 secs
boom! running `docker rm -f 46282178df55fc1f16496487673f733b8d6acab7216c9145b36e2af382085644`
blam! 46282178df55fc1f16496487673f733b8d6acab7216c9145b36e2af382085644
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 0540d391de6b12038ca0f05e8954f07e5b354712568f11030f3079b2c43cc21e
boom! running `docker start -a 0540d391de6b12038ca0f05e8954f07e5b354712568f11030f3079b2c43cc21e`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/vox_box-fb35b896d2d0efc1
blam! 
blam! running 30 tests
blam! test complex::tests::test_to_complex ... ok
blam! test complex::tests::test_to_complex_vec ... ok
blam! test complex::tests::test_square_root ... ok
blam! test complex::tests::test_negative_complex_roots ... ok
blam! test periodic::tests::test_ac ... ok
blam! test polynomial::tests::test_1d_roots ... ok
blam! test polynomial::tests::test_2d_complex_roots ... ok
blam! test polynomial::tests::test_2d_complex_roots_f32 ... ok
blam! test polynomial::tests::test_2d_roots ... ok
blam! test polynomial::tests::test_degree ... ok
blam! test polynomial::tests::test_f32_roots ... ok
blam! test polynomial::tests::test_hi_d_roots ... ok
blam! test polynomial::tests::test_hi_d_roots_f32 ... ok
blam! test polynomial::tests::test_off_low ... ok
blam! test polynomial::tests::test_laguerre ... ok
blam! test spectrum::test::test_dct ... ok
blam! test spectrum::test::test_hz_to_mel ... ok
blam! test spectrum::test::test_formant_extractor ... ok
blam! test spectrum::test::test_lpc ... ok
blam! test spectrum::test::test_lpc_praat ... ok
blam! test spectrum::test::test_mel_to_hz ... ok
blam! test spectrum::test::test_resonances ... ok
blam! test spectrum::test::test_resonances_from_coeffs ... ok
blam! test spectrum::test::test_mfcc ... ok
blam! test spectrum::test::test_sine_resonances_praat ... ok
blam! test spectrum::test::test_mfcc_not_nan ... ok
blam! test waves::tests::test_pe ... ok
blam! test waves::tests::test_rms ... ok
blam! test waves::tests::test_window_autocorr ... ok
blam! test periodic::tests::test_pitch ... ok
blam! 
blam! test result: ok. 30 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 0540d391de6b12038ca0f05e8954f07e5b354712568f11030f3079b2c43cc21e`
blam! 0540d391de6b12038ca0f05e8954f07e5b354712568f11030f3079b2c43cc21e
