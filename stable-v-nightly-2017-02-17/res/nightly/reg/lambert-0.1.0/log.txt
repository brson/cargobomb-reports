boom! testing lambert-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! b2d2633503e87c618095b5a977fe043bde96dc8ea97d5112b6135b2b66b0e621
boom! running `docker start -a b2d2633503e87c618095b5a977fe043bde96dc8ea97d5112b6135b2b66b0e621`
kablam!    Compiling lambert v0.1.0 (file:///source)
kablam! warning: variant is never used: `Radian`
kablam!   --> src/point.rs:27:4
kablam!    |
kablam! 27 |    Radian,
kablam!    |    ^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Degree`
kablam!   --> src/point.rs:28:4
kablam!    |
kablam! 28 |    Degree,
kablam!    |    ^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Grad`
kablam!   --> src/point.rs:29:4
kablam!    |
kablam! 29 |    Grad,
kablam!    |    ^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Meter`
kablam!   --> src/point.rs:30:4
kablam!    |
kablam! 30 |    Meter,
kablam!    |    ^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `factor`
kablam!   --> src/point.rs:36:1
kablam!    |
kablam! 36 | fn factor(from:AngleUnit, to:AngleUnit) -> f32 {
kablam!    | ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `new`
kablam!   --> src/point.rs:68:5
kablam!    |
kablam! 68 |       pub fn new(x: f32, y: f32, z: f32, unit: AngleUnit) -> Point {
kablam!    |  _____^ starting here...
kablam! 69 | |         Point { x: x, y: y, z: z, unit: unit}
kablam! 70 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `convert_unit`
kablam!   --> src/point.rs:73:5
kablam!    |
kablam! 73 |       pub fn convert_unit(&mut self, unit:AngleUnit) {
kablam!    |  _____^ starting here...
kablam! 74 | |         let point_unit = self.unit;
kablam! 75 | |         self.scale(factor(point_unit, unit));
kablam! 76 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `scale`
kablam!   --> src/point.rs:80:5
kablam!    |
kablam! 80 |       fn scale(&mut self, factor:f32) {
kablam!    |  _____^ starting here...
kablam! 81 | |         self.x = self.x * factor;
kablam! 82 | |         self.y = self.y * factor;
kablam! 83 | |         self.z = self.z * factor;
kablam! 84 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: method is never used: `convert_wgs84`
kablam!    --> src/point.rs:87:5
kablam!     |
kablam! 87  |     pub fn convert_wgs84(&mut self, zone: zone::Zone){
kablam!     |     ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `LambertI`
kablam!  --> src/zone.rs:3:5
kablam!   |
kablam! 3 |     LambertI,
kablam!   |     ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `LambertII`
kablam!  --> src/zone.rs:4:5
kablam!   |
kablam! 4 |     LambertII,
kablam!   |     ^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `LambertIII`
kablam!  --> src/zone.rs:5:5
kablam!   |
kablam! 5 |     LambertIII,
kablam!   |     ^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `LambertIV`
kablam!  --> src/zone.rs:6:5
kablam!   |
kablam! 6 |     LambertIV,
kablam!   |     ^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `LambertIIe`
kablam!  --> src/zone.rs:7:5
kablam!   |
kablam! 7 |     LambertIIe,
kablam!   |     ^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `Lambert93`
kablam!  --> src/zone.rs:8:5
kablam!   |
kablam! 8 |     Lambert93
kablam!   |     ^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `n`
kablam!   --> src/zone.rs:11:1
kablam!    |
kablam! 11 | pub fn n(zone:Zone) -> f32 {
kablam!    | ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `c`
kablam!   --> src/zone.rs:22:1
kablam!    |
kablam! 22 | pub fn c(zone:Zone) -> f32 {
kablam!    | ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `xs`
kablam!   --> src/zone.rs:33:1
kablam!    |
kablam! 33 | pub fn xs(zone:Zone) -> f32 {
kablam!    | ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `ys`
kablam!   --> src/zone.rs:44:1
kablam!    |
kablam! 44 | pub fn ys(zone:Zone) -> f32 {
kablam!    | ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `DEFAULT_EPS`
kablam!  --> src/consts.rs:3:1
kablam!   |
kablam! 3 | pub const DEFAULT_EPS: f32 =  1e-15;
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `E_CLARK_IGN`
kablam!  --> src/consts.rs:4:1
kablam!   |
kablam! 4 | pub const E_CLARK_IGN: f32 = 0.08248325676;
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `E_WGS84`
kablam!  --> src/consts.rs:5:1
kablam!   |
kablam! 5 | pub const E_WGS84: f32 = 0.08181919106;
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `A_CLARK_IGN`
kablam!  --> src/consts.rs:7:1
kablam!   |
kablam! 7 | pub const A_CLARK_IGN: f32 = 6378249.2;
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `A_WGS84`
kablam!  --> src/consts.rs:8:1
kablam!   |
kablam! 8 | pub const A_WGS84: f32 = 6378137.0;
kablam!   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `LON_MERID_PARIS`
kablam!   --> src/consts.rs:10:1
kablam!    |
kablam! 10 | pub const LON_MERID_PARIS: f32 = 0.0;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `LON_MERID_GREENWICH`
kablam!   --> src/consts.rs:11:1
kablam!    |
kablam! 11 | pub const LON_MERID_GREENWICH: f32 = 0.04079234433;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `LON_MERID_IERS`
kablam!   --> src/consts.rs:12:1
kablam!    |
kablam! 12 | pub const LON_MERID_IERS: f32 = (3.0*std::f32::consts::PI/180.0);
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `AUTOCOMEIQUE_FIRST`
kablam!   --> src/consts.rs:13:1
kablam!    |
kablam! 13 | pub const AUTOCOMEIQUE_FIRST: f32 = 44.0*std::f32::consts::PI/180.0;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `AUTOCOMEIQUE_SECOND`
kablam!   --> src/consts.rs:14:1
kablam!    |
kablam! 14 | pub const AUTOCOMEIQUE_SECOND: f32 = 49.0*std::f32::consts::PI/180.0;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `LAT_ORIG`
kablam!   --> src/consts.rs:15:1
kablam!    |
kablam! 15 | pub const LAT_ORIG: f32 = 46.5*std::f32::consts::PI/180.0;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `CT_X0`
kablam!   --> src/consts.rs:16:1
kablam!    |
kablam! 16 | pub const CT_X0: f32 = 700000.0;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `CT_Y0`
kablam!   --> src/consts.rs:17:1
kablam!    |
kablam! 17 | pub const CT_Y0: f32 = 6600000.0;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `::consts`
kablam!  --> src/algo.rs:3:5
kablam!   |
kablam! 3 | use ::consts;
kablam!   |     ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: function is never used: `latitude_iso_from_latitude`
kablam!   --> src/algo.rs:8:1
kablam!    |
kablam! 8  |   pub fn latitude_iso_from_latitude(lat: f32, e: f32) -> f32 {
kablam!    |  _^ starting here...
kablam! 9  | |     return f32::log(f32::tan(f32::consts::FRAC_PI_4+lat/2.0)*f32::powf((1.0-e*f32::sin(lat))/(1.0+e*f32::sin(lat)),e/2.0), f32::consts::E);
kablam! 10 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `latitude_from_latitude_iso`
kablam!   --> src/algo.rs:12:1
kablam!    |
kablam! 12 | pub fn latitude_from_latitude_iso(lat_iso: f32, e: f32, eps: f32) -> f32 {
kablam!    | ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: value assigned to `delta` is never read
kablam!   --> src/algo.rs:16:9
kablam!    |
kablam! 16 |     let mut delta = 0.0;
kablam!    |         ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: function is never used: `lambert_to_geographic`
kablam!   --> src/algo.rs:47:1
kablam!    |
kablam! 47 | pub fn lambert_to_geographic(org: point::Point, zone: zone::Zone, lon_merid: f32, e: f32, eps: f32) -> point::Point {
kablam!    | ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variable `C` should have a snake case name such as `c`
kablam!   --> src/algo.rs:50:9
kablam!    |
kablam! 50 |     let C = zone::c(zone);
kablam!    |         ^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/algo.rs:54:9
kablam!    |
kablam! 54 |     let mut x = org.x;
kablam!    |         ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/algo.rs:55:9
kablam!    |
kablam! 55 |     let mut y = org.y;
kablam!    |         ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: value assigned to `lon` is never read
kablam!   --> src/algo.rs:57:9
kablam!    |
kablam! 57 |     let mut lon: f32 = 0.0;
kablam!    |         ^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: value assigned to `gamma` is never read
kablam!   --> src/algo.rs:58:9
kablam!    |
kablam! 58 |     let mut gamma: f32 = 0.0;
kablam!    |         ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: variable `R` should have a snake case name such as `r`
kablam!   --> src/algo.rs:59:9
kablam!    |
kablam! 59 |     let mut R: f32 = 0.0;
kablam!    |         ^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: value assigned to `R` is never read
kablam!   --> src/algo.rs:59:9
kablam!    |
kablam! 59 |     let mut R: f32 = 0.0;
kablam!    |         ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: value assigned to `lat_iso` is never read
kablam!   --> src/algo.rs:60:9
kablam!    |
kablam! 60 |     let mut lat_iso: f32 = 0.0;
kablam!    |         ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: function is never used: `lambert_normal`
kablam!   --> src/algo.rs:88:1
kablam!    |
kablam! 88 |   pub fn lambert_normal(lat: f32, a: f32, e: f32) -> f32 {
kablam!    |  _^ starting here...
kablam! 89 | |     return a/f32::sqrt(1.0-e*e*f32::sin(lat)*f32::sin(lat));
kablam! 90 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `geographic_to_cartesian`
kablam!    --> src/algo.rs:103:1
kablam!     |
kablam! 103 | pub fn geographic_to_cartesian(lon: f32, lat: f32, he: f32, a: f32, e: f32) -> point::Point {
kablam!     | ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variable `N` should have a snake case name such as `n`
kablam!    --> src/algo.rs:105:9
kablam!     |
kablam! 105 |     let N = lambert_normal(lat, a, e);
kablam!     |         ^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: function is never used: `cartesian_to_geographic`
kablam!    --> src/algo.rs:140:1
kablam!     |
kablam! 140 | pub fn cartesian_to_geographic(point: point::Point, meridien: f32, a: f32, e: f32, eps: f32) -> point::Point{
kablam!     | ^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: value assigned to `delta` is never read
kablam!    --> src/algo.rs:149:7
kablam!     |
kablam! 149 |  	let mut delta = 0.0;
kablam!     |  	    ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_assignments)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.80 secs
boom! running `docker rm -f b2d2633503e87c618095b5a977fe043bde96dc8ea97d5112b6135b2b66b0e621`
blam! b2d2633503e87c618095b5a977fe043bde96dc8ea97d5112b6135b2b66b0e621
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! e41a84d1f2d25d5c9e7a24d404a7fc30c8e64115cc7d560b741cdabd139a815b
boom! running `docker start -a e41a84d1f2d25d5c9e7a24d404a7fc30c8e64115cc7d560b741cdabd139a815b`
kablam!    Compiling lambert v0.1.0 (file:///source)
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:10:15
kablam!     |
kablam! 10  |             if($left > $right){
kablam!     |               ^^^^^^^^^^^^^^^^
kablam! ...
kablam! 154 |     assert_delta!(point.x, expected_point.x, delta);
kablam!     |     ------------------------------------------------ in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:11:19
kablam!     |
kablam! 11  |                 if($left - $right > $d){
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 154 |     assert_delta!(point.x, expected_point.x, delta);
kablam!     |     ------------------------------------------------ in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:15:19
kablam!     |
kablam! 15  |                 if($right - $left > $d) {
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 154 |     assert_delta!(point.x, expected_point.x, delta);
kablam!     |     ------------------------------------------------ in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:10:15
kablam!     |
kablam! 10  |             if($left > $right){
kablam!     |               ^^^^^^^^^^^^^^^^
kablam! ...
kablam! 155 |     assert_delta!(point.y, expected_point.y, delta);
kablam!     |     ------------------------------------------------ in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:11:19
kablam!     |
kablam! 11  |                 if($left - $right > $d){
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 155 |     assert_delta!(point.y, expected_point.y, delta);
kablam!     |     ------------------------------------------------ in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:15:19
kablam!     |
kablam! 15  |                 if($right - $left > $d) {
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 155 |     assert_delta!(point.y, expected_point.y, delta);
kablam!     |     ------------------------------------------------ in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:10:15
kablam!     |
kablam! 10  |             if($left > $right){
kablam!     |               ^^^^^^^^^^^^^^^^
kablam! ...
kablam! 167 |     assert_delta!(point.x, expected_point.x, delta);
kablam!     |     ------------------------------------------------ in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:11:19
kablam!     |
kablam! 11  |                 if($left - $right > $d){
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 167 |     assert_delta!(point.x, expected_point.x, delta);
kablam!     |     ------------------------------------------------ in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:15:19
kablam!     |
kablam! 15  |                 if($right - $left > $d) {
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 167 |     assert_delta!(point.x, expected_point.x, delta);
kablam!     |     ------------------------------------------------ in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:10:15
kablam!     |
kablam! 10  |             if($left > $right){
kablam!     |               ^^^^^^^^^^^^^^^^
kablam! ...
kablam! 168 |     assert_delta!(point.y, expected_point.y, delta);
kablam!     |     ------------------------------------------------ in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:11:19
kablam!     |
kablam! 11  |                 if($left - $right > $d){
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 168 |     assert_delta!(point.y, expected_point.y, delta);
kablam!     |     ------------------------------------------------ in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:15:19
kablam!     |
kablam! 15  |                 if($right - $left > $d) {
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 168 |     assert_delta!(point.y, expected_point.y, delta);
kablam!     |     ------------------------------------------------ in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:10:15
kablam!     |
kablam! 10  |             if($left > $right){
kablam!     |               ^^^^^^^^^^^^^^^^
kablam! ...
kablam! 179 |     assert_delta!(point.x, expected_point.x, delta);
kablam!     |     ------------------------------------------------ in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:11:19
kablam!     |
kablam! 11  |                 if($left - $right > $d){
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 179 |     assert_delta!(point.x, expected_point.x, delta);
kablam!     |     ------------------------------------------------ in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:15:19
kablam!     |
kablam! 15  |                 if($right - $left > $d) {
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 179 |     assert_delta!(point.x, expected_point.x, delta);
kablam!     |     ------------------------------------------------ in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:10:15
kablam!     |
kablam! 10  |             if($left > $right){
kablam!     |               ^^^^^^^^^^^^^^^^
kablam! ...
kablam! 180 |     assert_delta!(point.y, expected_point.y, delta);
kablam!     |     ------------------------------------------------ in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:11:19
kablam!     |
kablam! 11  |                 if($left - $right > $d){
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 180 |     assert_delta!(point.y, expected_point.y, delta);
kablam!     |     ------------------------------------------------ in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:15:19
kablam!     |
kablam! 15  |                 if($right - $left > $d) {
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam! ...
kablam! 180 |     assert_delta!(point.y, expected_point.y, delta);
kablam!     |     ------------------------------------------------ in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!   --> src/point.rs:10:15
kablam!    |
kablam! 10 |             if($left > $right){
kablam!    |               ^^^^^^^^^^^^^^^^
kablam!    | 
kablam!   ::: src/algo.rs
kablam!    |
kablam! 42 | 			assert_delta!(result, phi[index], 1e-7);
kablam!    |    ---------------------------------------- in this macro invocation
kablam!    |
kablam!    = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!   --> src/point.rs:11:19
kablam!    |
kablam! 11 |                 if($left - $right > $d){
kablam!    |                   ^^^^^^^^^^^^^^^^^^^^^
kablam!    | 
kablam!   ::: src/algo.rs
kablam!    |
kablam! 42 | 			assert_delta!(result, phi[index], 1e-7);
kablam!    |    ---------------------------------------- in this macro invocation
kablam!    |
kablam!    = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!   --> src/point.rs:15:19
kablam!    |
kablam! 15 |                 if($right - $left > $d) {
kablam!    |                   ^^^^^^^^^^^^^^^^^^^^^
kablam!    | 
kablam!   ::: src/algo.rs
kablam!    |
kablam! 42 | 			assert_delta!(result, phi[index], 1e-7);
kablam!    |    ---------------------------------------- in this macro invocation
kablam!    |
kablam!    = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!   --> src/point.rs:10:15
kablam!    |
kablam! 10 |             if($left > $right){
kablam!    |               ^^^^^^^^^^^^^^^^
kablam!    | 
kablam!   ::: src/algo.rs
kablam!    |
kablam! 82 |     assert_delta!(dest.x, expected.x, delta);
kablam!    |     ----------------------------------------- in this macro invocation
kablam!    |
kablam!    = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!   --> src/point.rs:11:19
kablam!    |
kablam! 11 |                 if($left - $right > $d){
kablam!    |                   ^^^^^^^^^^^^^^^^^^^^^
kablam!    | 
kablam!   ::: src/algo.rs
kablam!    |
kablam! 82 |     assert_delta!(dest.x, expected.x, delta);
kablam!    |     ----------------------------------------- in this macro invocation
kablam!    |
kablam!    = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!   --> src/point.rs:15:19
kablam!    |
kablam! 15 |                 if($right - $left > $d) {
kablam!    |                   ^^^^^^^^^^^^^^^^^^^^^
kablam!    | 
kablam!   ::: src/algo.rs
kablam!    |
kablam! 82 |     assert_delta!(dest.x, expected.x, delta);
kablam!    |     ----------------------------------------- in this macro invocation
kablam!    |
kablam!    = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!   --> src/point.rs:10:15
kablam!    |
kablam! 10 |             if($left > $right){
kablam!    |               ^^^^^^^^^^^^^^^^
kablam!    | 
kablam!   ::: src/algo.rs
kablam!    |
kablam! 83 |     assert_delta!(dest.y, expected.y, delta);
kablam!    |     ----------------------------------------- in this macro invocation
kablam!    |
kablam!    = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!   --> src/point.rs:11:19
kablam!    |
kablam! 11 |                 if($left - $right > $d){
kablam!    |                   ^^^^^^^^^^^^^^^^^^^^^
kablam!    | 
kablam!   ::: src/algo.rs
kablam!    |
kablam! 83 |     assert_delta!(dest.y, expected.y, delta);
kablam!    |     ----------------------------------------- in this macro invocation
kablam!    |
kablam!    = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!   --> src/point.rs:15:19
kablam!    |
kablam! 15 |                 if($right - $left > $d) {
kablam!    |                   ^^^^^^^^^^^^^^^^^^^^^
kablam!    | 
kablam!   ::: src/algo.rs
kablam!    |
kablam! 83 |     assert_delta!(dest.y, expected.y, delta);
kablam!    |     ----------------------------------------- in this macro invocation
kablam!    |
kablam!    = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!   --> src/point.rs:10:15
kablam!    |
kablam! 10 |             if($left > $right){
kablam!    |               ^^^^^^^^^^^^^^^^
kablam!    | 
kablam!   ::: src/algo.rs
kablam!    |
kablam! 84 |     assert_delta!(dest.z, expected.z, delta);
kablam!    |     ----------------------------------------- in this macro invocation
kablam!    |
kablam!    = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!   --> src/point.rs:11:19
kablam!    |
kablam! 11 |                 if($left - $right > $d){
kablam!    |                   ^^^^^^^^^^^^^^^^^^^^^
kablam!    | 
kablam!   ::: src/algo.rs
kablam!    |
kablam! 84 |     assert_delta!(dest.z, expected.z, delta);
kablam!    |     ----------------------------------------- in this macro invocation
kablam!    |
kablam!    = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!   --> src/point.rs:15:19
kablam!    |
kablam! 15 |                 if($right - $left > $d) {
kablam!    |                   ^^^^^^^^^^^^^^^^^^^^^
kablam!    | 
kablam!   ::: src/algo.rs
kablam!    |
kablam! 84 |     assert_delta!(dest.z, expected.z, delta);
kablam!    |     ----------------------------------------- in this macro invocation
kablam!    |
kablam!    = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:10:15
kablam!     |
kablam! 10  |             if($left > $right){
kablam!     |               ^^^^^^^^^^^^^^^^
kablam!     | 
kablam!    ::: src/algo.rs
kablam!     |
kablam! 134 |         assert_delta!(pt.x,points[i].x, delta);
kablam!     |         --------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:11:19
kablam!     |
kablam! 11  |                 if($left - $right > $d){
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam!     | 
kablam!    ::: src/algo.rs
kablam!     |
kablam! 134 |         assert_delta!(pt.x,points[i].x, delta);
kablam!     |         --------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:15:19
kablam!     |
kablam! 15  |                 if($right - $left > $d) {
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam!     | 
kablam!    ::: src/algo.rs
kablam!     |
kablam! 134 |         assert_delta!(pt.x,points[i].x, delta);
kablam!     |         --------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:10:15
kablam!     |
kablam! 10  |             if($left > $right){
kablam!     |               ^^^^^^^^^^^^^^^^
kablam!     | 
kablam!    ::: src/algo.rs
kablam!     |
kablam! 135 |         assert_delta!(pt.y,points[i].y, delta);
kablam!     |         --------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:11:19
kablam!     |
kablam! 11  |                 if($left - $right > $d){
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam!     | 
kablam!    ::: src/algo.rs
kablam!     |
kablam! 135 |         assert_delta!(pt.y,points[i].y, delta);
kablam!     |         --------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:15:19
kablam!     |
kablam! 15  |                 if($right - $left > $d) {
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam!     | 
kablam!    ::: src/algo.rs
kablam!     |
kablam! 135 |         assert_delta!(pt.y,points[i].y, delta);
kablam!     |         --------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:10:15
kablam!     |
kablam! 10  |             if($left > $right){
kablam!     |               ^^^^^^^^^^^^^^^^
kablam!     | 
kablam!    ::: src/algo.rs
kablam!     |
kablam! 136 |         assert_delta!(pt.z,points[i].z, delta);
kablam!     |         --------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:11:19
kablam!     |
kablam! 11  |                 if($left - $right > $d){
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam!     | 
kablam!    ::: src/algo.rs
kablam!     |
kablam! 136 |         assert_delta!(pt.z,points[i].z, delta);
kablam!     |         --------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:15:19
kablam!     |
kablam! 15  |                 if($right - $left > $d) {
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam!     | 
kablam!    ::: src/algo.rs
kablam!     |
kablam! 136 |         assert_delta!(pt.z,points[i].z, delta);
kablam!     |         --------------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:10:15
kablam!     |
kablam! 10  |             if($left > $right){
kablam!     |               ^^^^^^^^^^^^^^^^
kablam!     | 
kablam!    ::: src/algo.rs
kablam!     |
kablam! 184 | 		assert_delta!(val.x,lon[i],delta);
kablam!     |   ---------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:11:19
kablam!     |
kablam! 11  |                 if($left - $right > $d){
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam!     | 
kablam!    ::: src/algo.rs
kablam!     |
kablam! 184 | 		assert_delta!(val.x,lon[i],delta);
kablam!     |   ---------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:15:19
kablam!     |
kablam! 15  |                 if($right - $left > $d) {
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam!     | 
kablam!    ::: src/algo.rs
kablam!     |
kablam! 184 | 		assert_delta!(val.x,lon[i],delta);
kablam!     |   ---------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:10:15
kablam!     |
kablam! 10  |             if($left > $right){
kablam!     |               ^^^^^^^^^^^^^^^^
kablam!     | 
kablam!    ::: src/algo.rs
kablam!     |
kablam! 185 | 		assert_delta!(val.y,lat[i],delta);
kablam!     |   ---------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:11:19
kablam!     |
kablam! 11  |                 if($left - $right > $d){
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam!     | 
kablam!    ::: src/algo.rs
kablam!     |
kablam! 185 | 		assert_delta!(val.y,lat[i],delta);
kablam!     |   ---------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:15:19
kablam!     |
kablam! 15  |                 if($right - $left > $d) {
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam!     | 
kablam!    ::: src/algo.rs
kablam!     |
kablam! 185 | 		assert_delta!(val.y,lat[i],delta);
kablam!     |   ---------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:10:15
kablam!     |
kablam! 10  |             if($left > $right){
kablam!     |               ^^^^^^^^^^^^^^^^
kablam!     | 
kablam!    ::: src/algo.rs
kablam!     |
kablam! 186 |         assert_delta!(val.z,he[i],1e-3);
kablam!     |         -------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:11:19
kablam!     |
kablam! 11  |                 if($left - $right > $d){
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam!     | 
kablam!    ::: src/algo.rs
kablam!     |
kablam! 186 |         assert_delta!(val.z,he[i],1e-3);
kablam!     |         -------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: unnecessary parentheses around `if` condition
kablam!    --> src/point.rs:15:19
kablam!     |
kablam! 15  |                 if($right - $left > $d) {
kablam!     |                   ^^^^^^^^^^^^^^^^^^^^^
kablam!     | 
kablam!    ::: src/algo.rs
kablam!     |
kablam! 186 |         assert_delta!(val.z,he[i],1e-3);
kablam!     |         -------------------------------- in this macro invocation
kablam!     |
kablam!     = note: #[warn(unused_parens)] on by default
kablam! 
kablam! warning: variant is never used: `Grad`
kablam!   --> src/point.rs:29:4
kablam!    |
kablam! 29 |    Grad,
kablam!    |    ^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function `test_wgs84_lambertIIE` should have a snake case name such as `test_wgs84_lambert_iie`
kablam!    --> src/point.rs:171:1
kablam!     |
kablam! 171 | fn test_wgs84_lambertIIE(){
kablam!     | ^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variant is never used: `LambertII`
kablam!  --> src/zone.rs:4:5
kablam!   |
kablam! 4 |     LambertII,
kablam!   |     ^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `LambertIII`
kablam!  --> src/zone.rs:5:5
kablam!   |
kablam! 5 |     LambertIII,
kablam!   |     ^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant is never used: `LambertIV`
kablam!  --> src/zone.rs:6:5
kablam!   |
kablam! 6 |     LambertIV,
kablam!   |     ^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `AUTOCOMEIQUE_FIRST`
kablam!   --> src/consts.rs:13:1
kablam!    |
kablam! 13 | pub const AUTOCOMEIQUE_FIRST: f32 = 44.0*std::f32::consts::PI/180.0;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `AUTOCOMEIQUE_SECOND`
kablam!   --> src/consts.rs:14:1
kablam!    |
kablam! 14 | pub const AUTOCOMEIQUE_SECOND: f32 = 49.0*std::f32::consts::PI/180.0;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `LAT_ORIG`
kablam!   --> src/consts.rs:15:1
kablam!    |
kablam! 15 | pub const LAT_ORIG: f32 = 46.5*std::f32::consts::PI/180.0;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `CT_X0`
kablam!   --> src/consts.rs:16:1
kablam!    |
kablam! 16 | pub const CT_X0: f32 = 700000.0;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: constant item is never used: `CT_Y0`
kablam!   --> src/consts.rs:17:1
kablam!    |
kablam! 17 | pub const CT_Y0: f32 = 6600000.0;
kablam!    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unused import: `::consts`
kablam!  --> src/algo.rs:3:5
kablam!   |
kablam! 3 | use ::consts;
kablam!   |     ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: function is never used: `latitude_iso_from_latitude`
kablam!   --> src/algo.rs:8:1
kablam!    |
kablam! 8  |   pub fn latitude_iso_from_latitude(lat: f32, e: f32) -> f32 {
kablam!    |  _^ starting here...
kablam! 9  | |     return f32::log(f32::tan(f32::consts::FRAC_PI_4+lat/2.0)*f32::powf((1.0-e*f32::sin(lat))/(1.0+e*f32::sin(lat)),e/2.0), f32::consts::E);
kablam! 10 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: value assigned to `delta` is never read
kablam!   --> src/algo.rs:16:9
kablam!    |
kablam! 16 |     let mut delta = 0.0;
kablam!    |         ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: variable `C` should have a snake case name such as `c`
kablam!   --> src/algo.rs:50:9
kablam!    |
kablam! 50 |     let C = zone::c(zone);
kablam!    |         ^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/algo.rs:54:9
kablam!    |
kablam! 54 |     let mut x = org.x;
kablam!    |         ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/algo.rs:55:9
kablam!    |
kablam! 55 |     let mut y = org.y;
kablam!    |         ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: value assigned to `lon` is never read
kablam!   --> src/algo.rs:57:9
kablam!    |
kablam! 57 |     let mut lon: f32 = 0.0;
kablam!    |         ^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: value assigned to `gamma` is never read
kablam!   --> src/algo.rs:58:9
kablam!    |
kablam! 58 |     let mut gamma: f32 = 0.0;
kablam!    |         ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: variable `R` should have a snake case name such as `r`
kablam!   --> src/algo.rs:59:9
kablam!    |
kablam! 59 |     let mut R: f32 = 0.0;
kablam!    |         ^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: value assigned to `R` is never read
kablam!   --> src/algo.rs:59:9
kablam!    |
kablam! 59 |     let mut R: f32 = 0.0;
kablam!    |         ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: value assigned to `lat_iso` is never read
kablam!   --> src/algo.rs:60:9
kablam!    |
kablam! 60 |     let mut lat_iso: f32 = 0.0;
kablam!    |         ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_assignments)] on by default
kablam! 
kablam! warning: variable `N` should have a snake case name such as `n`
kablam!    --> src/algo.rs:105:9
kablam!     |
kablam! 105 |     let N = lambert_normal(lat, a, e);
kablam!     |         ^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: value assigned to `delta` is never read
kablam!    --> src/algo.rs:149:7
kablam!     |
kablam! 149 |  	let mut delta = 0.0;
kablam!     |  	    ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_assignments)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.47 secs
boom! running `docker rm -f e41a84d1f2d25d5c9e7a24d404a7fc30c8e64115cc7d560b741cdabd139a815b`
blam! e41a84d1f2d25d5c9e7a24d404a7fc30c8e64115cc7d560b741cdabd139a815b
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! f8b7db87ea02d9725f36eac46c8bd935f440d89eaf02624cd02f18275efc1e2c
boom! running `docker start -a f8b7db87ea02d9725f36eac46c8bd935f440d89eaf02624cd02f18275efc1e2c`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/lambert-d286d5caf7cfd163
blam! 
blam! running 11 tests
blam! test algo::test_geographic_to_cartesian ... ok
blam! test algo::test_cartesian_to_geographic ... ok
blam! test algo::test_lambert_to_geographic ... ok
blam! test algo::test_lambert_normal ... ok
blam! test point::test_convert ... ok
blam! test point::test_wgs84_lambert93 ... ok
blam! test point::test_scale ... ok
blam! test algo::test_latitude_from_latitude_iso ... ok
blam! test point::test_new ... ok
blam! test point::test_wgs84_lambertIIE ... ok
blam! test point::test_wgs84_zone_1 ... ok
blam! 
blam! test result: ok. 11 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests lambert
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f f8b7db87ea02d9725f36eac46c8bd935f440d89eaf02624cd02f18275efc1e2c`
blam! f8b7db87ea02d9725f36eac46c8bd935f440d89eaf02624cd02f18275efc1e2c
