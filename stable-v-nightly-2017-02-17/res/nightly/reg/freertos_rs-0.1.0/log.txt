boom! testing freertos_rs-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 4042393c81e0aa3fbd0a401f0c3e9b7ae797f9a8e3f88968766ab280c5fb9525
boom! running `docker start -a 4042393c81e0aa3fbd0a401f0c3e9b7ae797f9a8e3f88968766ab280c5fb9525`
kablam!    Compiling freertos_rs v0.1.0 (file:///source)
kablam! warning: unused import: `base::*;`
kablam!  --> src/shim.rs:1:5
kablam!   |
kablam! 1 | use base::*;
kablam!   |     ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: function `freertos_rs_vTaskDelayUntil` should have a snake case name such as `freertos_rs_v_task_delay_until`
kablam!   --> src/shim.rs:62:2
kablam!    |
kablam! 62 | 	pub fn freertos_rs_vTaskDelayUntil(pxPreviousWakeTime: *mut FreeRtosTickType, xTimeIncrement: FreeRtosTickType) { }
kablam!    | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `pxPreviousWakeTime` should have a snake case name such as `px_previous_wake_time`
kablam!   --> src/shim.rs:62:37
kablam!    |
kablam! 62 | 	pub fn freertos_rs_vTaskDelayUntil(pxPreviousWakeTime: *mut FreeRtosTickType, xTimeIncrement: FreeRtosTickType) { }
kablam!    | 	                                   ^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `pxPreviousWakeTime`
kablam!   --> src/shim.rs:62:37
kablam!    |
kablam! 62 | 	pub fn freertos_rs_vTaskDelayUntil(pxPreviousWakeTime: *mut FreeRtosTickType, xTimeIncrement: FreeRtosTickType) { }
kablam!    | 	                                   ^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable `xTimeIncrement` should have a snake case name such as `x_time_increment`
kablam!   --> src/shim.rs:62:80
kablam!    |
kablam! 62 | 	pub fn freertos_rs_vTaskDelayUntil(pxPreviousWakeTime: *mut FreeRtosTickType, xTimeIncrement: FreeRtosTickType) { }
kablam!    | 	                                                                              ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `xTimeIncrement`
kablam!   --> src/shim.rs:62:80
kablam!    |
kablam! 62 | 	pub fn freertos_rs_vTaskDelayUntil(pxPreviousWakeTime: *mut FreeRtosTickType, xTimeIncrement: FreeRtosTickType) { }
kablam!    | 	                                                                              ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: function `freertos_rs_vTaskDelay` should have a snake case name such as `freertos_rs_v_task_delay`
kablam!   --> src/shim.rs:63:2
kablam!    |
kablam! 63 | 	pub fn freertos_rs_vTaskDelay(xTicksToDelay: FreeRtosTickType) { }
kablam!    | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `xTicksToDelay` should have a snake case name such as `x_ticks_to_delay`
kablam!   --> src/shim.rs:63:32
kablam!    |
kablam! 63 | 	pub fn freertos_rs_vTaskDelay(xTicksToDelay: FreeRtosTickType) { }
kablam!    | 	                              ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `xTicksToDelay`
kablam!   --> src/shim.rs:63:32
kablam!    |
kablam! 63 | 	pub fn freertos_rs_vTaskDelay(xTicksToDelay: FreeRtosTickType) { }
kablam!    | 	                              ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: function `freertos_rs_get_portTICK_PERIOD_MS` should have a snake case name such as `freertos_rs_get_port_tick_period_ms`
kablam!   --> src/shim.rs:64:2
kablam!    |
kablam! 64 | 	pub fn freertos_rs_get_portTICK_PERIOD_MS() -> FreeRtosTickType { 1 }
kablam!    | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: function `freertos_rs_xTaskGetTickCount` should have a snake case name such as `freertos_rs_x_task_get_tick_count`
kablam!   --> src/shim.rs:66:2
kablam!    |
kablam! 66 | 	pub fn freertos_rs_xTaskGetTickCount() -> FreeRtosTickType { 1 }
kablam!    | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `mutex`
kablam!   --> src/shim.rs:71:42
kablam!    |
kablam! 71 | 	pub fn freertos_rs_take_recursive_mutex(mutex: FreeRtosQueueHandle, max: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                        ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `max`
kablam!   --> src/shim.rs:71:70
kablam!    |
kablam! 71 | 	pub fn freertos_rs_take_recursive_mutex(mutex: FreeRtosQueueHandle, max: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                                    ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `mutex`
kablam!   --> src/shim.rs:72:32
kablam!    |
kablam! 72 | 	pub fn freertos_rs_take_mutex(mutex: FreeRtosQueueHandle, max: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                              ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `max`
kablam!   --> src/shim.rs:72:60
kablam!    |
kablam! 72 | 	pub fn freertos_rs_take_mutex(mutex: FreeRtosQueueHandle, max: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                          ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `mutex`
kablam!   --> src/shim.rs:73:32
kablam!    |
kablam! 73 | 	pub fn freertos_rs_give_mutex(mutex: FreeRtosQueueHandle) -> FreeRtosBaseType { 0 }
kablam!    | 	                              ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `mutex`
kablam!   --> src/shim.rs:74:42
kablam!    |
kablam! 74 | 	pub fn freertos_rs_give_recursive_mutex(mutex: FreeRtosQueueHandle) -> FreeRtosBaseType { 0 }
kablam!    | 	                                        ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `mutex`
kablam!   --> src/shim.rs:76:38
kablam!    |
kablam! 76 | 	pub fn freertos_rs_delete_semaphore(mutex: FreeRtosQueueHandle) { }
kablam!    | 	                                    ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `max`
kablam!   --> src/shim.rs:79:47
kablam!    |
kablam! 79 | 	pub fn freertos_rs_create_counting_semaphore(max: FreeRtosUBaseType, initial: FreeRtosUBaseType) -> FreeRtosQueueHandle { 1 as _ }
kablam!    | 	                                             ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `initial`
kablam!   --> src/shim.rs:79:71
kablam!    |
kablam! 79 | 	pub fn freertos_rs_create_counting_semaphore(max: FreeRtosUBaseType, initial: FreeRtosUBaseType) -> FreeRtosQueueHandle { 1 as _ }
kablam!    | 	                                                                     ^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `length`
kablam!   --> src/shim.rs:86:34
kablam!    |
kablam! 86 | 	pub fn freertos_rs_queue_create(length: FreeRtosUBaseType, item_size: FreeRtosUBaseType) -> FreeRtosQueueHandle { 1 as _ }
kablam!    | 	                                ^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `item_size`
kablam!   --> src/shim.rs:86:61
kablam!    |
kablam! 86 | 	pub fn freertos_rs_queue_create(length: FreeRtosUBaseType, item_size: FreeRtosUBaseType) -> FreeRtosQueueHandle { 1 as _ }
kablam!    | 	                                                           ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `queue`
kablam!   --> src/shim.rs:87:34
kablam!    |
kablam! 87 | 	pub fn freertos_rs_queue_delete(queue: FreeRtosQueueHandle) { }
kablam!    | 	                                ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `queue`
kablam!   --> src/shim.rs:88:32
kablam!    |
kablam! 88 | 	pub fn freertos_rs_queue_send(queue: FreeRtosQueueHandle, item: FreeRtosVoidPtr, max_wait: FreeRtosTickType) -> FreeRtosUBaseType { 0 }
kablam!    | 	                              ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `item`
kablam!   --> src/shim.rs:88:60
kablam!    |
kablam! 88 | 	pub fn freertos_rs_queue_send(queue: FreeRtosQueueHandle, item: FreeRtosVoidPtr, max_wait: FreeRtosTickType) -> FreeRtosUBaseType { 0 }
kablam!    | 	                                                          ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `max_wait`
kablam!   --> src/shim.rs:88:83
kablam!    |
kablam! 88 | 	pub fn freertos_rs_queue_send(queue: FreeRtosQueueHandle, item: FreeRtosVoidPtr, max_wait: FreeRtosTickType) -> FreeRtosUBaseType { 0 }
kablam!    | 	                                                                                 ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `queue`
kablam!   --> src/shim.rs:89:35
kablam!    |
kablam! 89 | 	pub fn freertos_rs_queue_receive(queue: FreeRtosQueueHandle, item: FreeRtosMutVoidPtr, max_wait: FreeRtosTickType) -> FreeRtosUBaseType { 0 }
kablam!    | 	                                 ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `item`
kablam!   --> src/shim.rs:89:63
kablam!    |
kablam! 89 | 	pub fn freertos_rs_queue_receive(queue: FreeRtosQueueHandle, item: FreeRtosMutVoidPtr, max_wait: FreeRtosTickType) -> FreeRtosUBaseType { 0 }
kablam!    | 	                                                             ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `max_wait`
kablam!   --> src/shim.rs:89:89
kablam!    |
kablam! 89 | 	pub fn freertos_rs_queue_receive(queue: FreeRtosQueueHandle, item: FreeRtosMutVoidPtr, max_wait: FreeRtosTickType) -> FreeRtosUBaseType { 0 }
kablam!    | 	                                                                                       ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `queue`
kablam!   --> src/shim.rs:91:36
kablam!    |
kablam! 91 | 	pub fn freertos_rs_queue_send_isr(queue: FreeRtosQueueHandle, item: FreeRtosVoidPtr, xHigherPriorityTaskWoken: FreeRtosBaseTypeMutPtr) -> FreeRtosUBaseType { 0 }
kablam!    | 	                                  ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `item`
kablam!   --> src/shim.rs:91:64
kablam!    |
kablam! 91 | 	pub fn freertos_rs_queue_send_isr(queue: FreeRtosQueueHandle, item: FreeRtosVoidPtr, xHigherPriorityTaskWoken: FreeRtosBaseTypeMutPtr) -> FreeRtosUBaseType { 0 }
kablam!    | 	                                                              ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable `xHigherPriorityTaskWoken` should have a snake case name such as `x_higher_priority_task_woken`
kablam!   --> src/shim.rs:91:87
kablam!    |
kablam! 91 | 	pub fn freertos_rs_queue_send_isr(queue: FreeRtosQueueHandle, item: FreeRtosVoidPtr, xHigherPriorityTaskWoken: FreeRtosBaseTypeMutPtr) -> FreeRtosUBaseType { 0 }
kablam!    | 	                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `xHigherPriorityTaskWoken`
kablam!   --> src/shim.rs:91:87
kablam!    |
kablam! 91 | 	pub fn freertos_rs_queue_send_isr(queue: FreeRtosQueueHandle, item: FreeRtosVoidPtr, xHigherPriorityTaskWoken: FreeRtosBaseTypeMutPtr) -> FreeRtosUBaseType { 0 }
kablam!    | 	                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `clear_count`
kablam!   --> src/shim.rs:94:38
kablam!    |
kablam! 94 | 	pub fn freertos_rs_task_notify_take(clear_count: u8, wait: FreeRtosTickType) -> u32 { 0 }
kablam!    | 	                                    ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `wait`
kablam!   --> src/shim.rs:94:55
kablam!    |
kablam! 94 | 	pub fn freertos_rs_task_notify_take(clear_count: u8, wait: FreeRtosTickType) -> u32 { 0 }
kablam!    | 	                                                     ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable `ulBitsToClearOnEntry` should have a snake case name such as `ul_bits_to_clear_on_entry`
kablam!   --> src/shim.rs:95:38
kablam!    |
kablam! 95 | 	pub fn freertos_rs_task_notify_wait(ulBitsToClearOnEntry: u32, ulBitsToClearOnExit: u32, pulNotificationValue: *mut u32, xTicksToWait: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                    ^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `ulBitsToClearOnEntry`
kablam!   --> src/shim.rs:95:38
kablam!    |
kablam! 95 | 	pub fn freertos_rs_task_notify_wait(ulBitsToClearOnEntry: u32, ulBitsToClearOnExit: u32, pulNotificationValue: *mut u32, xTicksToWait: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                    ^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable `ulBitsToClearOnExit` should have a snake case name such as `ul_bits_to_clear_on_exit`
kablam!   --> src/shim.rs:95:65
kablam!    |
kablam! 95 | 	pub fn freertos_rs_task_notify_wait(ulBitsToClearOnEntry: u32, ulBitsToClearOnExit: u32, pulNotificationValue: *mut u32, xTicksToWait: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                               ^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `ulBitsToClearOnExit`
kablam!   --> src/shim.rs:95:65
kablam!    |
kablam! 95 | 	pub fn freertos_rs_task_notify_wait(ulBitsToClearOnEntry: u32, ulBitsToClearOnExit: u32, pulNotificationValue: *mut u32, xTicksToWait: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                               ^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable `pulNotificationValue` should have a snake case name such as `pul_notification_value`
kablam!   --> src/shim.rs:95:91
kablam!    |
kablam! 95 | 	pub fn freertos_rs_task_notify_wait(ulBitsToClearOnEntry: u32, ulBitsToClearOnExit: u32, pulNotificationValue: *mut u32, xTicksToWait: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                                                         ^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `pulNotificationValue`
kablam!   --> src/shim.rs:95:91
kablam!    |
kablam! 95 | 	pub fn freertos_rs_task_notify_wait(ulBitsToClearOnEntry: u32, ulBitsToClearOnExit: u32, pulNotificationValue: *mut u32, xTicksToWait: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                                                         ^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable `xTicksToWait` should have a snake case name such as `x_ticks_to_wait`
kablam!   --> src/shim.rs:95:123
kablam!    |
kablam! 95 | 	pub fn freertos_rs_task_notify_wait(ulBitsToClearOnEntry: u32, ulBitsToClearOnExit: u32, pulNotificationValue: *mut u32, xTicksToWait: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                                                                                         ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `xTicksToWait`
kablam!   --> src/shim.rs:95:123
kablam!    |
kablam! 95 | 	pub fn freertos_rs_task_notify_wait(ulBitsToClearOnEntry: u32, ulBitsToClearOnExit: u32, pulNotificationValue: *mut u32, xTicksToWait: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                                                                                         ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `task`
kablam!   --> src/shim.rs:97:33
kablam!    |
kablam! 97 | 	pub fn freertos_rs_task_notify(task: FreeRtosTaskHandle, value: u32, action: u8) -> FreeRtosBaseType { 0 }
kablam!    | 	                               ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `value`
kablam!   --> src/shim.rs:97:59
kablam!    |
kablam! 97 | 	pub fn freertos_rs_task_notify(task: FreeRtosTaskHandle, value: u32, action: u8) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                         ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `action`
kablam!   --> src/shim.rs:97:71
kablam!    |
kablam! 97 | 	pub fn freertos_rs_task_notify(task: FreeRtosTaskHandle, value: u32, action: u8) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                                     ^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `task`
kablam!   --> src/shim.rs:98:37
kablam!    |
kablam! 98 | 	pub fn freertos_rs_task_notify_isr(task: FreeRtosTaskHandle, value: u32, action: u8, xHigherPriorityTaskWoken: FreeRtosBaseTypeMutPtr) -> FreeRtosBaseType { 0 }
kablam!    | 	                                   ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `value`
kablam!   --> src/shim.rs:98:63
kablam!    |
kablam! 98 | 	pub fn freertos_rs_task_notify_isr(task: FreeRtosTaskHandle, value: u32, action: u8, xHigherPriorityTaskWoken: FreeRtosBaseTypeMutPtr) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                             ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `action`
kablam!   --> src/shim.rs:98:75
kablam!    |
kablam! 98 | 	pub fn freertos_rs_task_notify_isr(task: FreeRtosTaskHandle, value: u32, action: u8, xHigherPriorityTaskWoken: FreeRtosBaseTypeMutPtr) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                                         ^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable `xHigherPriorityTaskWoken` should have a snake case name such as `x_higher_priority_task_woken`
kablam!   --> src/shim.rs:98:87
kablam!    |
kablam! 98 | 	pub fn freertos_rs_task_notify_isr(task: FreeRtosTaskHandle, value: u32, action: u8, xHigherPriorityTaskWoken: FreeRtosBaseTypeMutPtr) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `xHigherPriorityTaskWoken`
kablam!   --> src/shim.rs:98:87
kablam!    |
kablam! 98 | 	pub fn freertos_rs_task_notify_isr(task: FreeRtosTaskHandle, value: u32, action: u8, xHigherPriorityTaskWoken: FreeRtosBaseTypeMutPtr) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `f`
kablam!    --> src/shim.rs:100:32
kablam!     |
kablam! 100 | 	pub fn freertos_rs_spawn_task(f: extern fn(FreeRtosMutVoidPtr) -> FreeRtosMutVoidPtr, value: FreeRtosMutVoidPtr, name: FreeRtosCharPtr, name_len: u8, stack_size: u16, priority: FreeRtosUBaseType, task_handle: FreeRtosMutTaskHandle) -> FreeRtosUBaseType { 0 }
kablam!     | 	                              ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `value`
kablam!    --> src/shim.rs:100:88
kablam!     |
kablam! 100 | 	pub fn freertos_rs_spawn_task(f: extern fn(FreeRtosMutVoidPtr) -> FreeRtosMutVoidPtr, value: FreeRtosMutVoidPtr, name: FreeRtosCharPtr, name_len: u8, stack_size: u16, priority: FreeRtosUBaseType, task_handle: FreeRtosMutTaskHandle) -> FreeRtosUBaseType { 0 }
kablam!     | 	                                                                                      ^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `name`
kablam!    --> src/shim.rs:100:115
kablam!     |
kablam! 100 | 	pub fn freertos_rs_spawn_task(f: extern fn(FreeRtosMutVoidPtr) -> FreeRtosMutVoidPtr, value: FreeRtosMutVoidPtr, name: FreeRtosCharPtr, name_len: u8, stack_size: u16, priority: FreeRtosUBaseType, task_handle: FreeRtosMutTaskHandle) -> FreeRtosUBaseType { 0 }
kablam!     | 	                                                                                                                 ^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `name_len`
kablam!    --> src/shim.rs:100:138
kablam!     |
kablam! 100 | 	pub fn freertos_rs_spawn_task(f: extern fn(FreeRtosMutVoidPtr) -> FreeRtosMutVoidPtr, value: FreeRtosMutVoidPtr, name: FreeRtosCharPtr, name_len: u8, stack_size: u16, priority: FreeRtosUBaseType, task_handle: FreeRtosMutTaskHandle) -> FreeRtosUBaseType { 0 }
kablam!     | 	                                                                                                                                        ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `stack_size`
kablam!    --> src/shim.rs:100:152
kablam!     |
kablam! 100 | 	pub fn freertos_rs_spawn_task(f: extern fn(FreeRtosMutVoidPtr) -> FreeRtosMutVoidPtr, value: FreeRtosMutVoidPtr, name: FreeRtosCharPtr, name_len: u8, stack_size: u16, priority: FreeRtosUBaseType, task_handle: FreeRtosMutTaskHandle) -> FreeRtosUBaseType { 0 }
kablam!     | 	                                                                                                                                                      ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `priority`
kablam!    --> src/shim.rs:100:169
kablam!     |
kablam! 100 | 	pub fn freertos_rs_spawn_task(f: extern fn(FreeRtosMutVoidPtr) -> FreeRtosMutVoidPtr, value: FreeRtosMutVoidPtr, name: FreeRtosCharPtr, name_len: u8, stack_size: u16, priority: FreeRtosUBaseType, task_handle: FreeRtosMutTaskHandle) -> FreeRtosUBaseType { 0 }
kablam!     | 	                                                                                                                                                                       ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `task_handle`
kablam!    --> src/shim.rs:100:198
kablam!     |
kablam! 100 | 	pub fn freertos_rs_spawn_task(f: extern fn(FreeRtosMutVoidPtr) -> FreeRtosMutVoidPtr, value: FreeRtosMutVoidPtr, name: FreeRtosCharPtr, name_len: u8, stack_size: u16, priority: FreeRtosUBaseType, task_handle: FreeRtosMutTaskHandle) -> FreeRtosUBaseType { 0 }
kablam!     | 	                                                                                                                                                                                                    ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `task`
kablam!    --> src/shim.rs:101:33
kablam!     |
kablam! 101 | 	pub fn freertos_rs_delete_task(task: FreeRtosTaskHandle) { }
kablam!     | 	                               ^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `task`
kablam!    --> src/shim.rs:102:35
kablam!     |
kablam! 102 | 	pub fn freertos_rs_task_get_name(task: FreeRtosTaskHandle) -> FreeRtosCharPtr { 0 as _ }
kablam!     | 	                                 ^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!    --> src/task.rs:194:9
kablam!     |
kablam! 194 |           unsafe {
kablam!     |  _________^ starting here...
kablam! 195 | |             let t = freertos_rs_get_current_task();
kablam! 196 | |             if t != 0 as *const _ {
kablam! 197 | |                 Ok(Task { task_handle: t })
kablam! 198 | |             } else {
kablam! 199 | |                 Err(FreeRtosError::TaskNotFound)
kablam! 200 | |             }
kablam! 201 | |         }
kablam!     | |_________^ ...ending here
kablam!     |
kablam!     = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!    --> src/task.rs:211:9
kablam!     |
kablam! 211 |           unsafe {
kablam!     |  _________^ starting here...
kablam! 212 | |             let n = notification.to_freertos();
kablam! 213 | |             freertos_rs_task_notify(self.task_handle, n.0, n.1);
kablam! 214 | |         }
kablam!     | |_________^ ...ending here
kablam!     |
kablam!     = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!    --> src/task.rs:238:9
kablam!     |
kablam! 238 |         unsafe { freertos_rs_task_notify_take(if clear { 1 } else { 0 }, wait_for.to_ticks()) }
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!    --> src/task.rs:247:9
kablam!     |
kablam! 247 |         unsafe {
kablam!     |         ^
kablam!     |
kablam!     = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!    --> src/task.rs:267:9
kablam!     |
kablam! 267 |         unsafe { freertos_rs_xTaskGetTickCount() }
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!    --> src/task.rs:272:9
kablam!     |
kablam! 272 |           unsafe {
kablam!     |  _________^ starting here...
kablam! 273 | |             freertos_rs_vTaskDelay(delay.to_ticks());
kablam! 274 | |         }
kablam!     | |_________^ ...ending here
kablam!     |
kablam!     = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: variant is never used: `Finished`
kablam!   --> src/compute_task.rs:94:5
kablam!    |
kablam! 94 |     Finished,
kablam!    |     ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/queue.rs:23:22
kablam!    |
kablam! 23 |         let handle = unsafe { freertos_rs_queue_create(max_size as u32, item_size as u32) };
kablam!    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/queue.rs:37:9
kablam!    |
kablam! 37 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 38 | |             if freertos_rs_queue_send(self.queue,
kablam! 39 | |                                       &item as *const _ as FreeRtosVoidPtr,
kablam! 40 | |                                       max_wait.to_ticks()) != 0 {
kablam! 41 | |                 Err(FreeRtosError::QueueFull)
kablam! 42 | |             } else {
kablam! 43 | |                 Ok(())
kablam! 44 | |             }
kablam! 45 | |         }
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/queue.rs:82:9
kablam!    |
kablam! 82 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 83 | |             freertos_rs_queue_delete(self.queue);
kablam! 84 | |         }
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/semaphore.rs:16:9
kablam!    |
kablam! 16 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 17 | |             let s = freertos_rs_create_binary_semaphore();
kablam! 18 | |             if s == 0 as *const _ {
kablam! 19 | |                 return Err(FreeRtosError::OutOfMemory);
kablam! 20 | |             }
kablam! 21 | |             Ok(Semaphore { semaphore: s })
kablam! 22 | |         }
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/semaphore.rs:27:9
kablam!    |
kablam! 27 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 28 | |             let s = freertos_rs_create_counting_semaphore(max, initial);
kablam! 29 | |             if s == 0 as *const _ {
kablam! 30 | |                 return Err(FreeRtosError::OutOfMemory);
kablam! 31 | |             }
kablam! 32 | |             Ok(Semaphore { semaphore: s })
kablam! 33 | |         }
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/semaphore.rs:45:9
kablam!    |
kablam! 45 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 46 | |             let res = freertos_rs_take_mutex(self.semaphore, max_wait.to_ticks());
kablam! 47 | |
kablam! 48 | |             if res != 0 {
kablam! 49 | |                 return Err(FreeRtosError::Timeout);
kablam! 50 | |             }
kablam! 51 | |
kablam! 52 | |             Ok(SemaphoreGuard { __semaphore: self.semaphore })
kablam! 53 | |         }
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/semaphore.rs:59:9
kablam!    |
kablam! 59 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 60 | |             freertos_rs_delete_semaphore(self.semaphore);
kablam! 61 | |         }
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/semaphore.rs:72:9
kablam!    |
kablam! 72 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 73 | |             freertos_rs_give_mutex(self.__semaphore);
kablam! 74 | |         }
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/mutex.rs:28:9
kablam!    |
kablam! 28 |         unsafe {
kablam!    |         ^
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/mutex.rs:60:9
kablam!    |
kablam! 60 |         unsafe {
kablam!    |         ^
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!    --> src/mutex.rs:99:9
kablam!     |
kablam! 99  |           unsafe {
kablam!     |  _________^ starting here...
kablam! 100 | |             freertos_rs_delete_semaphore(self.mutex);
kablam! 101 | |         }
kablam!     | |_________^ ...ending here
kablam!     |
kablam!     = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!    --> src/mutex.rs:128:9
kablam!     |
kablam! 128 |           unsafe {
kablam!     |  _________^ starting here...
kablam! 129 | |             if self.__recursive {
kablam! 130 | |                 freertos_rs_give_recursive_mutex(self.__mutex);
kablam! 131 | |             } else {
kablam! 132 | |                 freertos_rs_give_mutex(self.__mutex);
kablam! 133 | |             }
kablam! 134 | |         }
kablam!     | |_________^ ...ending here
kablam!     |
kablam!     = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/units.rs:26:43
kablam!    |
kablam! 26 |             Duration::Milliseconds(ms) => unsafe { ms / freertos_rs_get_portTICK_PERIOD_MS() },
kablam!    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/units.rs:27:35
kablam!    |
kablam! 27 |             Duration::Infinite => unsafe { freertos_rs_max_wait() },
kablam!    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/utils.rs:22:22
kablam!    |
kablam! 22 |         let c_size = unsafe { freertos_rs_sizeof(check.0) };
kablam!    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/isr.rs:25:9
kablam!    |
kablam! 25 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 26 | |             if self.x_higher_priority_task_woken == 1 {
kablam! 27 | |                 freertos_rs_isr_yield();
kablam! 28 | |             }
kablam! 29 | |         }
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/delays.rs:22:9
kablam!    |
kablam! 22 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 23 | |             freertos_rs_vTaskDelayUntil(&mut self.last_wake_time as *mut FreeRtosTickType,
kablam! 24 | |                                         delay.to_ticks());
kablam! 25 | |         }
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.83 secs
boom! running `docker rm -f 4042393c81e0aa3fbd0a401f0c3e9b7ae797f9a8e3f88968766ab280c5fb9525`
blam! 4042393c81e0aa3fbd0a401f0c3e9b7ae797f9a8e3f88968766ab280c5fb9525
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 85ceadec2f2a5c152e2ba15a281d374e996f96adc5edf67b59f53fcf1c90470d
boom! running `docker start -a 85ceadec2f2a5c152e2ba15a281d374e996f96adc5edf67b59f53fcf1c90470d`
kablam!    Compiling freertos_rs v0.1.0 (file:///source)
kablam! warning: unused import: `base::*;`
kablam!  --> src/shim.rs:1:5
kablam!   |
kablam! 1 | use base::*;
kablam!   |     ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: function `freertos_rs_vTaskDelayUntil` should have a snake case name such as `freertos_rs_v_task_delay_until`
kablam!   --> src/shim.rs:62:2
kablam!    |
kablam! 62 | 	pub fn freertos_rs_vTaskDelayUntil(pxPreviousWakeTime: *mut FreeRtosTickType, xTimeIncrement: FreeRtosTickType) { }
kablam!    | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `pxPreviousWakeTime` should have a snake case name such as `px_previous_wake_time`
kablam!   --> src/shim.rs:62:37
kablam!    |
kablam! 62 | 	pub fn freertos_rs_vTaskDelayUntil(pxPreviousWakeTime: *mut FreeRtosTickType, xTimeIncrement: FreeRtosTickType) { }
kablam!    | 	                                   ^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `pxPreviousWakeTime`
kablam!   --> src/shim.rs:62:37
kablam!    |
kablam! 62 | 	pub fn freertos_rs_vTaskDelayUntil(pxPreviousWakeTime: *mut FreeRtosTickType, xTimeIncrement: FreeRtosTickType) { }
kablam!    | 	                                   ^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable `xTimeIncrement` should have a snake case name such as `x_time_increment`
kablam!   --> src/shim.rs:62:80
kablam!    |
kablam! 62 | 	pub fn freertos_rs_vTaskDelayUntil(pxPreviousWakeTime: *mut FreeRtosTickType, xTimeIncrement: FreeRtosTickType) { }
kablam!    | 	                                                                              ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `xTimeIncrement`
kablam!   --> src/shim.rs:62:80
kablam!    |
kablam! 62 | 	pub fn freertos_rs_vTaskDelayUntil(pxPreviousWakeTime: *mut FreeRtosTickType, xTimeIncrement: FreeRtosTickType) { }
kablam!    | 	                                                                              ^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: function `freertos_rs_vTaskDelay` should have a snake case name such as `freertos_rs_v_task_delay`
kablam!   --> src/shim.rs:63:2
kablam!    |
kablam! 63 | 	pub fn freertos_rs_vTaskDelay(xTicksToDelay: FreeRtosTickType) { }
kablam!    | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `xTicksToDelay` should have a snake case name such as `x_ticks_to_delay`
kablam!   --> src/shim.rs:63:32
kablam!    |
kablam! 63 | 	pub fn freertos_rs_vTaskDelay(xTicksToDelay: FreeRtosTickType) { }
kablam!    | 	                              ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `xTicksToDelay`
kablam!   --> src/shim.rs:63:32
kablam!    |
kablam! 63 | 	pub fn freertos_rs_vTaskDelay(xTicksToDelay: FreeRtosTickType) { }
kablam!    | 	                              ^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: function `freertos_rs_get_portTICK_PERIOD_MS` should have a snake case name such as `freertos_rs_get_port_tick_period_ms`
kablam!   --> src/shim.rs:64:2
kablam!    |
kablam! 64 | 	pub fn freertos_rs_get_portTICK_PERIOD_MS() -> FreeRtosTickType { 1 }
kablam!    | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: function `freertos_rs_xTaskGetTickCount` should have a snake case name such as `freertos_rs_x_task_get_tick_count`
kablam!   --> src/shim.rs:66:2
kablam!    |
kablam! 66 | 	pub fn freertos_rs_xTaskGetTickCount() -> FreeRtosTickType { 1 }
kablam!    | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `mutex`
kablam!   --> src/shim.rs:71:42
kablam!    |
kablam! 71 | 	pub fn freertos_rs_take_recursive_mutex(mutex: FreeRtosQueueHandle, max: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                        ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `max`
kablam!   --> src/shim.rs:71:70
kablam!    |
kablam! 71 | 	pub fn freertos_rs_take_recursive_mutex(mutex: FreeRtosQueueHandle, max: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                                    ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `mutex`
kablam!   --> src/shim.rs:72:32
kablam!    |
kablam! 72 | 	pub fn freertos_rs_take_mutex(mutex: FreeRtosQueueHandle, max: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                              ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `max`
kablam!   --> src/shim.rs:72:60
kablam!    |
kablam! 72 | 	pub fn freertos_rs_take_mutex(mutex: FreeRtosQueueHandle, max: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                          ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `mutex`
kablam!   --> src/shim.rs:73:32
kablam!    |
kablam! 73 | 	pub fn freertos_rs_give_mutex(mutex: FreeRtosQueueHandle) -> FreeRtosBaseType { 0 }
kablam!    | 	                              ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `mutex`
kablam!   --> src/shim.rs:74:42
kablam!    |
kablam! 74 | 	pub fn freertos_rs_give_recursive_mutex(mutex: FreeRtosQueueHandle) -> FreeRtosBaseType { 0 }
kablam!    | 	                                        ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `mutex`
kablam!   --> src/shim.rs:76:38
kablam!    |
kablam! 76 | 	pub fn freertos_rs_delete_semaphore(mutex: FreeRtosQueueHandle) { }
kablam!    | 	                                    ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `max`
kablam!   --> src/shim.rs:79:47
kablam!    |
kablam! 79 | 	pub fn freertos_rs_create_counting_semaphore(max: FreeRtosUBaseType, initial: FreeRtosUBaseType) -> FreeRtosQueueHandle { 1 as _ }
kablam!    | 	                                             ^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `initial`
kablam!   --> src/shim.rs:79:71
kablam!    |
kablam! 79 | 	pub fn freertos_rs_create_counting_semaphore(max: FreeRtosUBaseType, initial: FreeRtosUBaseType) -> FreeRtosQueueHandle { 1 as _ }
kablam!    | 	                                                                     ^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `length`
kablam!   --> src/shim.rs:86:34
kablam!    |
kablam! 86 | 	pub fn freertos_rs_queue_create(length: FreeRtosUBaseType, item_size: FreeRtosUBaseType) -> FreeRtosQueueHandle { 1 as _ }
kablam!    | 	                                ^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `item_size`
kablam!   --> src/shim.rs:86:61
kablam!    |
kablam! 86 | 	pub fn freertos_rs_queue_create(length: FreeRtosUBaseType, item_size: FreeRtosUBaseType) -> FreeRtosQueueHandle { 1 as _ }
kablam!    | 	                                                           ^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `queue`
kablam!   --> src/shim.rs:87:34
kablam!    |
kablam! 87 | 	pub fn freertos_rs_queue_delete(queue: FreeRtosQueueHandle) { }
kablam!    | 	                                ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `queue`
kablam!   --> src/shim.rs:88:32
kablam!    |
kablam! 88 | 	pub fn freertos_rs_queue_send(queue: FreeRtosQueueHandle, item: FreeRtosVoidPtr, max_wait: FreeRtosTickType) -> FreeRtosUBaseType { 0 }
kablam!    | 	                              ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `item`
kablam!   --> src/shim.rs:88:60
kablam!    |
kablam! 88 | 	pub fn freertos_rs_queue_send(queue: FreeRtosQueueHandle, item: FreeRtosVoidPtr, max_wait: FreeRtosTickType) -> FreeRtosUBaseType { 0 }
kablam!    | 	                                                          ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `max_wait`
kablam!   --> src/shim.rs:88:83
kablam!    |
kablam! 88 | 	pub fn freertos_rs_queue_send(queue: FreeRtosQueueHandle, item: FreeRtosVoidPtr, max_wait: FreeRtosTickType) -> FreeRtosUBaseType { 0 }
kablam!    | 	                                                                                 ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `queue`
kablam!   --> src/shim.rs:89:35
kablam!    |
kablam! 89 | 	pub fn freertos_rs_queue_receive(queue: FreeRtosQueueHandle, item: FreeRtosMutVoidPtr, max_wait: FreeRtosTickType) -> FreeRtosUBaseType { 0 }
kablam!    | 	                                 ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `item`
kablam!   --> src/shim.rs:89:63
kablam!    |
kablam! 89 | 	pub fn freertos_rs_queue_receive(queue: FreeRtosQueueHandle, item: FreeRtosMutVoidPtr, max_wait: FreeRtosTickType) -> FreeRtosUBaseType { 0 }
kablam!    | 	                                                             ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `max_wait`
kablam!   --> src/shim.rs:89:89
kablam!    |
kablam! 89 | 	pub fn freertos_rs_queue_receive(queue: FreeRtosQueueHandle, item: FreeRtosMutVoidPtr, max_wait: FreeRtosTickType) -> FreeRtosUBaseType { 0 }
kablam!    | 	                                                                                       ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `queue`
kablam!   --> src/shim.rs:91:36
kablam!    |
kablam! 91 | 	pub fn freertos_rs_queue_send_isr(queue: FreeRtosQueueHandle, item: FreeRtosVoidPtr, xHigherPriorityTaskWoken: FreeRtosBaseTypeMutPtr) -> FreeRtosUBaseType { 0 }
kablam!    | 	                                  ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `item`
kablam!   --> src/shim.rs:91:64
kablam!    |
kablam! 91 | 	pub fn freertos_rs_queue_send_isr(queue: FreeRtosQueueHandle, item: FreeRtosVoidPtr, xHigherPriorityTaskWoken: FreeRtosBaseTypeMutPtr) -> FreeRtosUBaseType { 0 }
kablam!    | 	                                                              ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable `xHigherPriorityTaskWoken` should have a snake case name such as `x_higher_priority_task_woken`
kablam!   --> src/shim.rs:91:87
kablam!    |
kablam! 91 | 	pub fn freertos_rs_queue_send_isr(queue: FreeRtosQueueHandle, item: FreeRtosVoidPtr, xHigherPriorityTaskWoken: FreeRtosBaseTypeMutPtr) -> FreeRtosUBaseType { 0 }
kablam!    | 	                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `xHigherPriorityTaskWoken`
kablam!   --> src/shim.rs:91:87
kablam!    |
kablam! 91 | 	pub fn freertos_rs_queue_send_isr(queue: FreeRtosQueueHandle, item: FreeRtosVoidPtr, xHigherPriorityTaskWoken: FreeRtosBaseTypeMutPtr) -> FreeRtosUBaseType { 0 }
kablam!    | 	                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `clear_count`
kablam!   --> src/shim.rs:94:38
kablam!    |
kablam! 94 | 	pub fn freertos_rs_task_notify_take(clear_count: u8, wait: FreeRtosTickType) -> u32 { 0 }
kablam!    | 	                                    ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `wait`
kablam!   --> src/shim.rs:94:55
kablam!    |
kablam! 94 | 	pub fn freertos_rs_task_notify_take(clear_count: u8, wait: FreeRtosTickType) -> u32 { 0 }
kablam!    | 	                                                     ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable `ulBitsToClearOnEntry` should have a snake case name such as `ul_bits_to_clear_on_entry`
kablam!   --> src/shim.rs:95:38
kablam!    |
kablam! 95 | 	pub fn freertos_rs_task_notify_wait(ulBitsToClearOnEntry: u32, ulBitsToClearOnExit: u32, pulNotificationValue: *mut u32, xTicksToWait: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                    ^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `ulBitsToClearOnEntry`
kablam!   --> src/shim.rs:95:38
kablam!    |
kablam! 95 | 	pub fn freertos_rs_task_notify_wait(ulBitsToClearOnEntry: u32, ulBitsToClearOnExit: u32, pulNotificationValue: *mut u32, xTicksToWait: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                    ^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable `ulBitsToClearOnExit` should have a snake case name such as `ul_bits_to_clear_on_exit`
kablam!   --> src/shim.rs:95:65
kablam!    |
kablam! 95 | 	pub fn freertos_rs_task_notify_wait(ulBitsToClearOnEntry: u32, ulBitsToClearOnExit: u32, pulNotificationValue: *mut u32, xTicksToWait: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                               ^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `ulBitsToClearOnExit`
kablam!   --> src/shim.rs:95:65
kablam!    |
kablam! 95 | 	pub fn freertos_rs_task_notify_wait(ulBitsToClearOnEntry: u32, ulBitsToClearOnExit: u32, pulNotificationValue: *mut u32, xTicksToWait: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                               ^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable `pulNotificationValue` should have a snake case name such as `pul_notification_value`
kablam!   --> src/shim.rs:95:91
kablam!    |
kablam! 95 | 	pub fn freertos_rs_task_notify_wait(ulBitsToClearOnEntry: u32, ulBitsToClearOnExit: u32, pulNotificationValue: *mut u32, xTicksToWait: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                                                         ^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `pulNotificationValue`
kablam!   --> src/shim.rs:95:91
kablam!    |
kablam! 95 | 	pub fn freertos_rs_task_notify_wait(ulBitsToClearOnEntry: u32, ulBitsToClearOnExit: u32, pulNotificationValue: *mut u32, xTicksToWait: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                                                         ^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable `xTicksToWait` should have a snake case name such as `x_ticks_to_wait`
kablam!   --> src/shim.rs:95:123
kablam!    |
kablam! 95 | 	pub fn freertos_rs_task_notify_wait(ulBitsToClearOnEntry: u32, ulBitsToClearOnExit: u32, pulNotificationValue: *mut u32, xTicksToWait: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                                                                                         ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `xTicksToWait`
kablam!   --> src/shim.rs:95:123
kablam!    |
kablam! 95 | 	pub fn freertos_rs_task_notify_wait(ulBitsToClearOnEntry: u32, ulBitsToClearOnExit: u32, pulNotificationValue: *mut u32, xTicksToWait: FreeRtosTickType) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                                                                                         ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `task`
kablam!   --> src/shim.rs:97:33
kablam!    |
kablam! 97 | 	pub fn freertos_rs_task_notify(task: FreeRtosTaskHandle, value: u32, action: u8) -> FreeRtosBaseType { 0 }
kablam!    | 	                               ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `value`
kablam!   --> src/shim.rs:97:59
kablam!    |
kablam! 97 | 	pub fn freertos_rs_task_notify(task: FreeRtosTaskHandle, value: u32, action: u8) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                         ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `action`
kablam!   --> src/shim.rs:97:71
kablam!    |
kablam! 97 | 	pub fn freertos_rs_task_notify(task: FreeRtosTaskHandle, value: u32, action: u8) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                                     ^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `task`
kablam!   --> src/shim.rs:98:37
kablam!    |
kablam! 98 | 	pub fn freertos_rs_task_notify_isr(task: FreeRtosTaskHandle, value: u32, action: u8, xHigherPriorityTaskWoken: FreeRtosBaseTypeMutPtr) -> FreeRtosBaseType { 0 }
kablam!    | 	                                   ^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `value`
kablam!   --> src/shim.rs:98:63
kablam!    |
kablam! 98 | 	pub fn freertos_rs_task_notify_isr(task: FreeRtosTaskHandle, value: u32, action: u8, xHigherPriorityTaskWoken: FreeRtosBaseTypeMutPtr) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                             ^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `action`
kablam!   --> src/shim.rs:98:75
kablam!    |
kablam! 98 | 	pub fn freertos_rs_task_notify_isr(task: FreeRtosTaskHandle, value: u32, action: u8, xHigherPriorityTaskWoken: FreeRtosBaseTypeMutPtr) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                                         ^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable `xHigherPriorityTaskWoken` should have a snake case name such as `x_higher_priority_task_woken`
kablam!   --> src/shim.rs:98:87
kablam!    |
kablam! 98 | 	pub fn freertos_rs_task_notify_isr(task: FreeRtosTaskHandle, value: u32, action: u8, xHigherPriorityTaskWoken: FreeRtosBaseTypeMutPtr) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `xHigherPriorityTaskWoken`
kablam!   --> src/shim.rs:98:87
kablam!    |
kablam! 98 | 	pub fn freertos_rs_task_notify_isr(task: FreeRtosTaskHandle, value: u32, action: u8, xHigherPriorityTaskWoken: FreeRtosBaseTypeMutPtr) -> FreeRtosBaseType { 0 }
kablam!    | 	                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `f`
kablam!    --> src/shim.rs:100:32
kablam!     |
kablam! 100 | 	pub fn freertos_rs_spawn_task(f: extern fn(FreeRtosMutVoidPtr) -> FreeRtosMutVoidPtr, value: FreeRtosMutVoidPtr, name: FreeRtosCharPtr, name_len: u8, stack_size: u16, priority: FreeRtosUBaseType, task_handle: FreeRtosMutTaskHandle) -> FreeRtosUBaseType { 0 }
kablam!     | 	                              ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `value`
kablam!    --> src/shim.rs:100:88
kablam!     |
kablam! 100 | 	pub fn freertos_rs_spawn_task(f: extern fn(FreeRtosMutVoidPtr) -> FreeRtosMutVoidPtr, value: FreeRtosMutVoidPtr, name: FreeRtosCharPtr, name_len: u8, stack_size: u16, priority: FreeRtosUBaseType, task_handle: FreeRtosMutTaskHandle) -> FreeRtosUBaseType { 0 }
kablam!     | 	                                                                                      ^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `name`
kablam!    --> src/shim.rs:100:115
kablam!     |
kablam! 100 | 	pub fn freertos_rs_spawn_task(f: extern fn(FreeRtosMutVoidPtr) -> FreeRtosMutVoidPtr, value: FreeRtosMutVoidPtr, name: FreeRtosCharPtr, name_len: u8, stack_size: u16, priority: FreeRtosUBaseType, task_handle: FreeRtosMutTaskHandle) -> FreeRtosUBaseType { 0 }
kablam!     | 	                                                                                                                 ^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `name_len`
kablam!    --> src/shim.rs:100:138
kablam!     |
kablam! 100 | 	pub fn freertos_rs_spawn_task(f: extern fn(FreeRtosMutVoidPtr) -> FreeRtosMutVoidPtr, value: FreeRtosMutVoidPtr, name: FreeRtosCharPtr, name_len: u8, stack_size: u16, priority: FreeRtosUBaseType, task_handle: FreeRtosMutTaskHandle) -> FreeRtosUBaseType { 0 }
kablam!     | 	                                                                                                                                        ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `stack_size`
kablam!    --> src/shim.rs:100:152
kablam!     |
kablam! 100 | 	pub fn freertos_rs_spawn_task(f: extern fn(FreeRtosMutVoidPtr) -> FreeRtosMutVoidPtr, value: FreeRtosMutVoidPtr, name: FreeRtosCharPtr, name_len: u8, stack_size: u16, priority: FreeRtosUBaseType, task_handle: FreeRtosMutTaskHandle) -> FreeRtosUBaseType { 0 }
kablam!     | 	                                                                                                                                                      ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `priority`
kablam!    --> src/shim.rs:100:169
kablam!     |
kablam! 100 | 	pub fn freertos_rs_spawn_task(f: extern fn(FreeRtosMutVoidPtr) -> FreeRtosMutVoidPtr, value: FreeRtosMutVoidPtr, name: FreeRtosCharPtr, name_len: u8, stack_size: u16, priority: FreeRtosUBaseType, task_handle: FreeRtosMutTaskHandle) -> FreeRtosUBaseType { 0 }
kablam!     | 	                                                                                                                                                                       ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `task_handle`
kablam!    --> src/shim.rs:100:198
kablam!     |
kablam! 100 | 	pub fn freertos_rs_spawn_task(f: extern fn(FreeRtosMutVoidPtr) -> FreeRtosMutVoidPtr, value: FreeRtosMutVoidPtr, name: FreeRtosCharPtr, name_len: u8, stack_size: u16, priority: FreeRtosUBaseType, task_handle: FreeRtosMutTaskHandle) -> FreeRtosUBaseType { 0 }
kablam!     | 	                                                                                                                                                                                                    ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `task`
kablam!    --> src/shim.rs:101:33
kablam!     |
kablam! 101 | 	pub fn freertos_rs_delete_task(task: FreeRtosTaskHandle) { }
kablam!     | 	                               ^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `task`
kablam!    --> src/shim.rs:102:35
kablam!     |
kablam! 102 | 	pub fn freertos_rs_task_get_name(task: FreeRtosTaskHandle) -> FreeRtosCharPtr { 0 as _ }
kablam!     | 	                                 ^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!    --> src/task.rs:194:9
kablam!     |
kablam! 194 |           unsafe {
kablam!     |  _________^ starting here...
kablam! 195 | |             let t = freertos_rs_get_current_task();
kablam! 196 | |             if t != 0 as *const _ {
kablam! 197 | |                 Ok(Task { task_handle: t })
kablam! 198 | |             } else {
kablam! 199 | |                 Err(FreeRtosError::TaskNotFound)
kablam! 200 | |             }
kablam! 201 | |         }
kablam!     | |_________^ ...ending here
kablam!     |
kablam!     = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!    --> src/task.rs:211:9
kablam!     |
kablam! 211 |           unsafe {
kablam!     |  _________^ starting here...
kablam! 212 | |             let n = notification.to_freertos();
kablam! 213 | |             freertos_rs_task_notify(self.task_handle, n.0, n.1);
kablam! 214 | |         }
kablam!     | |_________^ ...ending here
kablam!     |
kablam!     = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!    --> src/task.rs:238:9
kablam!     |
kablam! 238 |         unsafe { freertos_rs_task_notify_take(if clear { 1 } else { 0 }, wait_for.to_ticks()) }
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!    --> src/task.rs:247:9
kablam!     |
kablam! 247 |         unsafe {
kablam!     |         ^
kablam!     |
kablam!     = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!    --> src/task.rs:267:9
kablam!     |
kablam! 267 |         unsafe { freertos_rs_xTaskGetTickCount() }
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!    --> src/task.rs:272:9
kablam!     |
kablam! 272 |           unsafe {
kablam!     |  _________^ starting here...
kablam! 273 | |             freertos_rs_vTaskDelay(delay.to_ticks());
kablam! 274 | |         }
kablam!     | |_________^ ...ending here
kablam!     |
kablam!     = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: variant is never used: `Finished`
kablam!   --> src/compute_task.rs:94:5
kablam!    |
kablam! 94 |     Finished,
kablam!    |     ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/queue.rs:23:22
kablam!    |
kablam! 23 |         let handle = unsafe { freertos_rs_queue_create(max_size as u32, item_size as u32) };
kablam!    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/queue.rs:37:9
kablam!    |
kablam! 37 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 38 | |             if freertos_rs_queue_send(self.queue,
kablam! 39 | |                                       &item as *const _ as FreeRtosVoidPtr,
kablam! 40 | |                                       max_wait.to_ticks()) != 0 {
kablam! 41 | |                 Err(FreeRtosError::QueueFull)
kablam! 42 | |             } else {
kablam! 43 | |                 Ok(())
kablam! 44 | |             }
kablam! 45 | |         }
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/queue.rs:82:9
kablam!    |
kablam! 82 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 83 | |             freertos_rs_queue_delete(self.queue);
kablam! 84 | |         }
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/semaphore.rs:16:9
kablam!    |
kablam! 16 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 17 | |             let s = freertos_rs_create_binary_semaphore();
kablam! 18 | |             if s == 0 as *const _ {
kablam! 19 | |                 return Err(FreeRtosError::OutOfMemory);
kablam! 20 | |             }
kablam! 21 | |             Ok(Semaphore { semaphore: s })
kablam! 22 | |         }
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/semaphore.rs:27:9
kablam!    |
kablam! 27 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 28 | |             let s = freertos_rs_create_counting_semaphore(max, initial);
kablam! 29 | |             if s == 0 as *const _ {
kablam! 30 | |                 return Err(FreeRtosError::OutOfMemory);
kablam! 31 | |             }
kablam! 32 | |             Ok(Semaphore { semaphore: s })
kablam! 33 | |         }
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/semaphore.rs:45:9
kablam!    |
kablam! 45 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 46 | |             let res = freertos_rs_take_mutex(self.semaphore, max_wait.to_ticks());
kablam! 47 | |
kablam! 48 | |             if res != 0 {
kablam! 49 | |                 return Err(FreeRtosError::Timeout);
kablam! 50 | |             }
kablam! 51 | |
kablam! 52 | |             Ok(SemaphoreGuard { __semaphore: self.semaphore })
kablam! 53 | |         }
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/semaphore.rs:59:9
kablam!    |
kablam! 59 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 60 | |             freertos_rs_delete_semaphore(self.semaphore);
kablam! 61 | |         }
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/semaphore.rs:72:9
kablam!    |
kablam! 72 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 73 | |             freertos_rs_give_mutex(self.__semaphore);
kablam! 74 | |         }
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/mutex.rs:28:9
kablam!    |
kablam! 28 |         unsafe {
kablam!    |         ^
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/mutex.rs:60:9
kablam!    |
kablam! 60 |         unsafe {
kablam!    |         ^
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!    --> src/mutex.rs:99:9
kablam!     |
kablam! 99  |           unsafe {
kablam!     |  _________^ starting here...
kablam! 100 | |             freertos_rs_delete_semaphore(self.mutex);
kablam! 101 | |         }
kablam!     | |_________^ ...ending here
kablam!     |
kablam!     = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!    --> src/mutex.rs:128:9
kablam!     |
kablam! 128 |           unsafe {
kablam!     |  _________^ starting here...
kablam! 129 | |             if self.__recursive {
kablam! 130 | |                 freertos_rs_give_recursive_mutex(self.__mutex);
kablam! 131 | |             } else {
kablam! 132 | |                 freertos_rs_give_mutex(self.__mutex);
kablam! 133 | |             }
kablam! 134 | |         }
kablam!     | |_________^ ...ending here
kablam!     |
kablam!     = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/units.rs:26:43
kablam!    |
kablam! 26 |             Duration::Milliseconds(ms) => unsafe { ms / freertos_rs_get_portTICK_PERIOD_MS() },
kablam!    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/units.rs:27:35
kablam!    |
kablam! 27 |             Duration::Infinite => unsafe { freertos_rs_max_wait() },
kablam!    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/utils.rs:22:22
kablam!    |
kablam! 22 |         let c_size = unsafe { freertos_rs_sizeof(check.0) };
kablam!    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/isr.rs:25:9
kablam!    |
kablam! 25 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 26 | |             if self.x_higher_priority_task_woken == 1 {
kablam! 27 | |                 freertos_rs_isr_yield();
kablam! 28 | |             }
kablam! 29 | |         }
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam! warning: unnecessary `unsafe` block
kablam!   --> src/delays.rs:22:9
kablam!    |
kablam! 22 |           unsafe {
kablam!    |  _________^ starting here...
kablam! 23 | |             freertos_rs_vTaskDelayUntil(&mut self.last_wake_time as *mut FreeRtosTickType,
kablam! 24 | |                                         delay.to_ticks());
kablam! 25 | |         }
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(unused_unsafe)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.15 secs
boom! running `docker rm -f 85ceadec2f2a5c152e2ba15a281d374e996f96adc5edf67b59f53fcf1c90470d`
blam! 85ceadec2f2a5c152e2ba15a281d374e996f96adc5edf67b59f53fcf1c90470d
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! cd8e0db52e19e96361e9f8139c6bcb274fc2b4bd85394b52cc87f81e5e121f7b
boom! running `docker start -a cd8e0db52e19e96361e9f8139c6bcb274fc2b4bd85394b52cc87f81e5e121f7b`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/freertos_rs-e857320e0ee5d56f
blam! 
blam! running 0 tests
blam! 
kablam!    Doc-tests freertos_rs
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
blam! 
blam! running 4 tests
blam! test /source/src/lib.rs -  (line 47) ... ok
blam! test /source/src/lib.rs -  (line 37) ... ok
blam! test /source/src/lib.rs -  (line 24) ... ok
blam! test /source/src/compute_task.rs - compute_task::ComputeTask (line 75) ... ok
blam! 
blam! test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f cd8e0db52e19e96361e9f8139c6bcb274fc2b4bd85394b52cc87f81e5e121f7b`
blam! cd8e0db52e19e96361e9f8139c6bcb274fc2b4bd85394b52cc87f81e5e121f7b
