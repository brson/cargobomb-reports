boom! testing rtps-0.2.3 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! bdf39c6adc92613dfd5f8af93979aa2fa84be1d811aaf50e39a865631a8b4329
boom! running `docker start -a bdf39c6adc92613dfd5f8af93979aa2fa84be1d811aaf50e39a865631a8b4329`
kablam!    Compiling rtps v0.2.3 (file:///source)
kablam! error: handle read amount returned or use `Read::read_exact` instead
kablam!   --> src/cdr/de/mod.rs:39:9
kablam!    |
kablam! 39 |         try!(self.data.read(&mut buf));
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[deny(unused_io_amount)] on by default
kablam!    = help: for further information visit https://github.com/Manishearth/rust-clippy/wiki#unused_io_amount
kablam!    = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error: handle read amount returned or use `Read::read_exact` instead
kablam!   --> src/cdr/de/mod.rs:45:9
kablam!    |
kablam! 45 |         try!(self.data.read(&mut buf));
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[deny(unused_io_amount)] on by default
kablam!    = help: for further information visit https://github.com/Manishearth/rust-clippy/wiki#unused_io_amount
kablam!    = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error: handle read amount returned or use `Read::read_exact` instead
kablam!   --> src/cdr/de/mod.rs:52:9
kablam!    |
kablam! 52 |         try!(self.data.read(&mut buf));
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[deny(unused_io_amount)] on by default
kablam!    = help: for further information visit https://github.com/Manishearth/rust-clippy/wiki#unused_io_amount
kablam!    = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error: handle read amount returned or use `Read::read_exact` instead
kablam!   --> src/cdr/de/mod.rs:59:9
kablam!    |
kablam! 59 |         try!(self.data.read(&mut buf));
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[deny(unused_io_amount)] on by default
kablam!    = help: for further information visit https://github.com/Manishearth/rust-clippy/wiki#unused_io_amount
kablam!    = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error: handle read amount returned or use `Read::read_exact` instead
kablam!   --> src/cdr/de/mod.rs:70:9
kablam!    |
kablam! 70 |         try!(self.data.read(&mut buf));
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[deny(unused_io_amount)] on by default
kablam!    = help: for further information visit https://github.com/Manishearth/rust-clippy/wiki#unused_io_amount
kablam!    = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error: handle read amount returned or use `Read::read_exact` instead
kablam!   --> src/cdr/de/mod.rs:80:9
kablam!    |
kablam! 80 |         try!(self.data.read(&mut buf));
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[deny(unused_io_amount)] on by default
kablam!    = help: for further information visit https://github.com/Manishearth/rust-clippy/wiki#unused_io_amount
kablam!    = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error: handle read amount returned or use `Read::read_exact` instead
kablam!    --> src/cdr/de/mod.rs:119:9
kablam!     |
kablam! 119 |         try!(self.data.read(&mut buf));
kablam!     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[deny(unused_io_amount)] on by default
kablam!     = help: for further information visit https://github.com/Manishearth/rust-clippy/wiki#unused_io_amount
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: you don't need to add `&` to all patterns
kablam!   --> src/common_types/locator.rs:59:9
kablam!    |
kablam! 59 |           match self {
kablam!    |  _________^ starting here...
kablam! 60 | |             &Locator::KIND_UDPv4(port, addr) => format!("{}.{}.{}.{}:{}", addr[12], addr[13], addr[14], addr[15], port),
kablam! 61 | |             _ => "no se".to_owned()
kablam! 62 | |
kablam! 63 | |         }
kablam!    | |_________^ ...ending here
kablam!    |
kablam!    = note: #[warn(match_ref_pats)] on by default
kablam! help: instead of prefixing all patterns with `&`, you can dereference the expression
kablam!    |         match *self { .. }
kablam!    = help: for further information visit https://github.com/Manishearth/rust-clippy/wiki#match_ref_pats
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/entity/reader/stateless_reader.rs:36:13
kablam!    |
kablam! 36 |         let mut reader = StatelessReader {
kablam!    |             ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: Consider using an AtomicBool instead of a Mutex here. If you just want the locking behaviour and not the internal type, consider using Mutex<()>.
kablam!   --> src/entity/reader/stateless_reader.rs:47:45
kablam!    |
kablam! 47 |             reader_cache_condvar: Arc::new((Mutex::new(false), Condvar::new())),
kablam!    |                                             ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(mutex_atomic)] on by default
kablam!    = help: for further information visit https://github.com/Manishearth/rust-clippy/wiki#mutex_atomic
kablam! 
kablam! warning: it is more idiomatic to loop over `&self.writer_locators` instead of `self.writer_locators.iter()`
kablam!   --> src/entity/reader/stateless_reader.rs:76:31
kablam!    |
kablam! 76 |         for writer_locator in self.writer_locators.iter() {
kablam!    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(explicit_iter_loop)] on by default
kablam! help: to write this more concisely, try looping over
kablam!    |         for writer_locator in &self.writer_locators {
kablam!    = help: for further information visit https://github.com/Manishearth/rust-clippy/wiki#explicit_iter_loop
kablam! 
kablam! warning: unused variable: `reader_id`
kablam!    --> src/entity/reader/stateless_reader.rs:125:42
kablam!     |
kablam! 125 |                 SubmessageVariant::Data{ reader_id, writer_id, writer_sn, serialized_payload } => {
kablam!     |                                          ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `writer_sn`
kablam!    --> src/entity/reader/stateless_reader.rs:125:64
kablam!     |
kablam! 125 |                 SubmessageVariant::Data{ reader_id, writer_id, writer_sn, serialized_payload } => {
kablam!     |                                                                ^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/entity/reader/stateless_reader.rs:132:21
kablam!     |
kablam! 132 |                     self.reader_cache.add_change(&change);
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: Consider using an AtomicBool instead of a Mutex here. If you just want the locking behaviour and not the internal type, consider using Mutex<()>.
kablam!    --> src/entity/reader/stateless_reader.rs:134:40
kablam!     |
kablam! 134 |                     let mut has_data = self.reader_cache_condvar.0.lock().unwrap();
kablam!     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(mutex_atomic)] on by default
kablam!     = help: for further information visit https://github.com/Manishearth/rust-clippy/wiki#mutex_atomic
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/entity/writer/stateless_writer.rs:232:13
kablam!     |
kablam! 232 |         let mut reader = io::Cursor::new(data);
kablam!     |             ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `reader`
kablam!    --> src/entity/writer/stateless_writer.rs:232:13
kablam!     |
kablam! 232 |         let mut reader = io::Cursor::new(data);
kablam!     |             ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! error: aborting due to 7 previous errors
kablam! 
kablam! error: Could not compile `rtps`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f bdf39c6adc92613dfd5f8af93979aa2fa84be1d811aaf50e39a865631a8b4329`
blam! bdf39c6adc92613dfd5f8af93979aa2fa84be1d811aaf50e39a865631a8b4329
