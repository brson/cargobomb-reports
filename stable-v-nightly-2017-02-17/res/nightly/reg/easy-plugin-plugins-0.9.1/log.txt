boom! testing easy-plugin-plugins-0.9.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 616fa92452a9ea23312964cc8e95d770787bf73369b36628794f8674fd6be45c
boom! running `docker start -a 616fa92452a9ea23312964cc8e95d770787bf73369b36628794f8674fd6be45c`
kablam!    Compiling synthax v0.3.6
kablam! error[E0061]: this function takes 1 parameter but 0 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/synthax-0.3.6/src/lib.rs:240:39
kablam!     |
kablam! 240 |                 token_tree!(delimited.open_tt());
kablam!     |                 ----------------------^^^^^^^----
kablam!     |                 |                     |
kablam!     |                 |                     expected 1 parameter
kablam!     |                 in this macro invocation
kablam! 
kablam! error[E0061]: this function takes 1 parameter but 0 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/synthax-0.3.6/src/lib.rs:242:39
kablam!     |
kablam! 242 |                 token_tree!(delimited.close_tt());
kablam!     |                 ----------------------^^^^^^^^----
kablam!     |                 |                     |
kablam!     |                 |                     expected 1 parameter
kablam!     |                 in this macro invocation
kablam! 
kablam! error[E0061]: this function takes 1 parameter but 0 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/synthax-0.3.6/src/lib.rs:310:81
kablam!     |
kablam! 310 |     etts.push(ExpandedTokenTree::TokenTree(mk_expr_tt(context, span, &delimited.open_tt())));
kablam!     |                                                                                 ^^^^^^^ expected 1 parameter
kablam! 
kablam! error[E0061]: this function takes 1 parameter but 0 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/synthax-0.3.6/src/lib.rs:312:81
kablam!     |
kablam! 312 |     etts.push(ExpandedTokenTree::TokenTree(mk_expr_tt(context, span, &delimited.close_tt())));
kablam!     |                                                                                 ^^^^^^^^ expected 1 parameter
kablam! 
kablam! error: no field `open_span` on type `&syntax::tokenstream::Delimited`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/synthax-0.3.6/src/expr.rs:50:71
kablam!     |
kablam! 50  |         vec![$(mk_field($context, $span, stringify!($field), $struct_.$field.to_expr($context, $span))), +]
kablam!     |                                                                       ^
kablam! ...
kablam! 186 |         let fields = fields!(context, span, self, [delim, open_span, tts, close_span]);
kablam!     |                      ----------------------------------------------------------------- in this macro invocation
kablam! 
kablam! error: no field `close_span` on type `&syntax::tokenstream::Delimited`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/synthax-0.3.6/src/expr.rs:50:71
kablam!     |
kablam! 50  |         vec![$(mk_field($context, $span, stringify!($field), $struct_.$field.to_expr($context, $span))), +]
kablam!     |                                                                       ^
kablam! ...
kablam! 186 |         let fields = fields!(context, span, self, [delim, open_span, tts, close_span]);
kablam!     |                      ----------------------------------------------------------------- in this macro invocation
kablam! 
kablam! error: aborting due to 6 previous errors
kablam! 
kablam! error: Could not compile `synthax`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 616fa92452a9ea23312964cc8e95d770787bf73369b36628794f8674fd6be45c`
blam! 616fa92452a9ea23312964cc8e95d770787bf73369b36628794f8674fd6be45c
