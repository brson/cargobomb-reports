boom! testing geo-0.3.2 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 08c9a6cdbc8a6d348887927c8d2c2a09c39dc15097b82704f48c9abf98467646
boom! running `docker start -a 08c9a6cdbc8a6d348887927c8d2c2a09c39dc15097b82704f48c9abf98467646`
kablam!    Compiling geo v0.3.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.15 secs
boom! running `docker rm -f 08c9a6cdbc8a6d348887927c8d2c2a09c39dc15097b82704f48c9abf98467646`
blam! 08c9a6cdbc8a6d348887927c8d2c2a09c39dc15097b82704f48c9abf98467646
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 5d743de46802b91b0959803c77370a70fb876ec0f49da134635d8317c8294520
boom! running `docker start -a 5d743de46802b91b0959803c77370a70fb876ec0f49da134635d8317c8294520`
kablam!    Compiling geo v0.3.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 5.90 secs
boom! running `docker rm -f 5d743de46802b91b0959803c77370a70fb876ec0f49da134635d8317c8294520`
blam! 5d743de46802b91b0959803c77370a70fb876ec0f49da134635d8317c8294520
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 8ec801106bcd5c7851137c78e7005a69975357faf975434faa7ea5b7f0317061
boom! running `docker start -a 8ec801106bcd5c7851137c78e7005a69975357faf975434faa7ea5b7f0317061`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/geo-09545fa2924b6f5d
blam! 
blam! running 88 tests
blam! test algorithm::area::test::area_empty_polygon_test ... ok
blam! test algorithm::area::test::area_multipolygon_test ... ok
blam! test algorithm::area::test::area_one_point_polygon_test ... ok
blam! test algorithm::area::test::area_polygon_inner_test ... ok
blam! test algorithm::boundingbox::test::linestring_one_point_test ... ok
blam! test algorithm::area::test::area_polygon_test ... ok
blam! test algorithm::area::test::bbox_test ... ok
blam! test algorithm::boundingbox::test::multipoint_test ... ok
blam! test algorithm::boundingbox::test::empty_linestring_test ... ok
blam! test algorithm::boundingbox::test::linestring_test ... ok
blam! test algorithm::boundingbox::test::multilinestring_test ... ok
blam! test algorithm::boundingbox::test::multipolygon_test ... ok
blam! test algorithm::centroid::test::bbox_test ... ok
blam! test algorithm::boundingbox::test::polygon_test ... ok
blam! test algorithm::centroid::test::empty_linestring_test ... ok
blam! test algorithm::centroid::test::empty_multipolygon_polygon_test ... ok
blam! test algorithm::centroid::test::linestring_test ... ok
blam! test algorithm::centroid::test::empty_polygon_test ... ok
blam! test algorithm::centroid::test::linestring_one_point_test ... ok
blam! test algorithm::centroid::test::polygon_one_point_test ... ok
blam! test algorithm::centroid::test::multipolygon_one_polygon_test ... ok
blam! test algorithm::centroid::test::polygon_test ... ok
blam! test algorithm::contains::test::bbox_in_inner_bbox_test ... ok
blam! test algorithm::contains::test::empty_linestring_test ... ok
blam! test algorithm::contains::test::empty_multipolygon_test ... ok
blam! test algorithm::contains::test::empty_multipolygon_two_polygons_test ... ok
blam! test algorithm::contains::test::empty_polygon_test ... ok
blam! test algorithm::contains::test::linestring_in_polygon_with_linestring_is_boundary_test ... ok
blam! test algorithm::contains::test::linestring_in_inner_polygon_test ... ok
blam! test algorithm::contains::test::linestring_outside_polygon_test ... ok
blam! test algorithm::contains::test::linestring_point_is_vertex_test ... ok
blam! test algorithm::contains::test::empty_multipolygon_two_polygons_and_inner_test ... ok
blam! test algorithm::contains::test::linestring_test ... ok
blam! test algorithm::contains::test::point_in_polygon_test ... ok
blam! test algorithm::contains::test::point_out_polygon_test ... ok
blam! test algorithm::contains::test::point_polygon_with_inner_test ... ok
blam! test algorithm::contains::test::polygon_with_one_point_is_vertex_test ... ok
blam! test algorithm::contains::test::polygon_with_point_on_boundary_test ... ok
blam! test algorithm::contains::test::polygon_with_one_point_test ... ok
blam! test algorithm::distance::test::distance1_test ... ok
blam! test algorithm::distance::test::distance2_test ... ok
blam! test algorithm::distance::test::line_segment_distance_test ... ok
blam! test algorithm::distance::test::point_linestring_contains_test ... ok
blam! test algorithm::distance::test::point_linestring_empty_test ... ok
blam! test algorithm::distance::test::point_linestring_triangle_test ... ok
blam! test algorithm::distance::test::point_polygon_distance_inside_test ... ok
blam! test algorithm::distance::test::point_polygon_distance_outside_test ... ok
blam! test algorithm::distance::test::point_linestring_distance_test ... ok
blam! test algorithm::distance::test::point_polygon_empty_test ... ok
blam! test algorithm::distance::test::point_polygon_distance_boundary_test ... ok
blam! test algorithm::distance::test::point_polygon_interior_cutout_test ... ok
blam! test algorithm::intersects::test::bbox_test ... ok
blam! test algorithm::intersects::test::empty_all_linestring_test ... ok
blam! test algorithm::intersects::test::empty_linestring1_test ... ok
blam! test algorithm::intersects::test::empty_linestring2_test ... ok
blam! test algorithm::intersects::test::intersect_linestring_test ... ok
blam! test algorithm::intersects::test::linestring_in_inner_polygon_test ... ok
blam! test algorithm::intersects::test::linestring_in_polygon_test ... ok
blam! test algorithm::intersects::test::intersect_linestring_polygon_test ... ok
blam! test algorithm::intersects::test::linestring_on_boundary_polygon_test ... ok
blam! test algorithm::intersects::test::linestring_outside_polygon_test ... ok
blam! test algorithm::intersects::test::linestring_in_inner_with_2_inner_polygon_test ... ok
blam! test algorithm::intersects::test::linestring_traverse_polygon_test ... ok
blam! test algorithm::intersects::test::parallel_linestrings_test ... ok
blam! test algorithm::intersects::test::polygons_conincident ... ok
blam! test algorithm::intersects::test::polygon_contained ... ok
blam! test algorithm::intersects::test::polygons_overlap ... ok
blam! test algorithm::length::test::empty_linestring_test ... ok
blam! test algorithm::intersects::test::polygon_intersects_bbox_test ... ok
blam! test algorithm::length::test::linestring_one_point_test ... ok
blam! test algorithm::length::test::multilinestring_test ... ok
blam! test algorithm::intersects::test::polygons_do_not_intersect ... ok
blam! test algorithm::simplify::test::perpdistance_test ... ok
blam! test algorithm::length::test::linestring_test ... ok
blam! test algorithm::simplify::test::rdp_test ... ok
blam! test algorithm::simplify::test::rdp_test_empty_linestring ... ok
blam! test algorithm::simplify::test::rdp_test_two_point_linestring ... ok
blam! test algorithm::simplifyvw::test::visvalingam_test_empty_linestring ... ok
blam! test algorithm::simplifyvw::test::visvalingam_test_two_point_linestring ... ok
blam! test algorithm::simplifyvw::test::visvalingam_test ... ok
blam! test test_helpers::within_epsilon_false_if_floats_far ... ok
blam! test test_helpers::within_epsilon_true_if_floats_close ... ok
blam! test test_helpers::within_epsilon_false_if_floats_infinite_or_nan ... ok
blam! test types::test::polygon_new_test ... ok
blam! test test_helpers::within_epsilon_true_if_floats_equal ... ok
blam! test types::test::type_test ... ok
blam! test algorithm::simplifyvw::test::visvalingam_test_long ... ok
blam! test algorithm::centroid::test::multipolygon_two_polygons_test ... ok
blam! 
blam! test result: ok. 88 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests geo
blam! 
blam! running 25 tests
blam! test /source/src/algorithm/area.rs - algorithm::area::Area::area (line 11) ... ok
blam! test /source/src/algorithm/boundingbox.rs - algorithm::boundingbox::BoundingBox::bbox (line 10) ... ok
blam! test /source/src/algorithm/centroid.rs - algorithm::centroid::Centroid::centroid (line 11) ... ok
blam! test /source/src/algorithm/contains.rs - algorithm::contains::Contains::contains (line 12) ... ok
blam! test /source/src/algorithm/intersects.rs - algorithm::intersects::Intersects::intersects (line 10) ... ok
blam! test /source/src/algorithm/distance.rs - algorithm::distance::Distance::distance (line 18) ... ok
blam! test /source/src/algorithm/length.rs - algorithm::length::Length::length (line 11) ... ok
blam! test /source/src/algorithm/simplify.rs - algorithm::simplify::Simplify::simplify (line 53) ... ok
blam! test /source/src/types.rs - types::Bbox<T>::add (line 241) ... ok
blam! test /source/src/types.rs - types::Bbox<T>::add_assign (line 268) ... ok
blam! test /source/src/types.rs - types::Point<T>::add (line 201) ... ok
blam! test /source/src/algorithm/simplifyvw.rs - algorithm::simplifyvw::SimplifyVW::simplifyvw (line 152) ... ok
blam! test /source/src/types.rs - types::Point<T>::dot (line 161) ... ok
blam! test /source/src/types.rs - types::Point<T>::lng (line 106) ... ok
blam! test /source/src/types.rs - types::Point<T>::lat (line 133) ... ok
blam! test /source/src/types.rs - types::Point<T>::neg (line 181) ... ok
blam! test /source/src/types.rs - types::Point<T>::new (line 36) ... ok
blam! test /source/src/types.rs - types::Point<T>::set_lng (line 119) ... ok
blam! test /source/src/types.rs - types::Point<T>::set_lat (line 146) ... ok
blam! test /source/src/types.rs - types::Point<T>::set_x (line 63) ... ok
blam! test /source/src/types.rs - types::Point<T>::set_y (line 91) ... ok
blam! test /source/src/types.rs - types::Point<T>::sub (line 221) ... ok
blam! test /source/src/types.rs - types::Point<T>::x (line 50) ... ok
blam! test /source/src/types.rs - types::Point<T>::y (line 78) ... ok
blam! test /source/src/types.rs - types::Polygon<T>::new (line 311) ... ok
blam! 
blam! test result: ok. 25 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 8ec801106bcd5c7851137c78e7005a69975357faf975434faa7ea5b7f0317061`
blam! 8ec801106bcd5c7851137c78e7005a69975357faf975434faa7ea5b7f0317061
