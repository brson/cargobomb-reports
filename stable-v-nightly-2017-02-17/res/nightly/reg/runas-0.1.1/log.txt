boom! testing runas-0.1.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! ac2652f9ba1c3926c0a5dd099a2ed148369fa2fd7e0c1b372c2987b041a4050f
boom! running `docker start -a ac2652f9ba1c3926c0a5dd099a2ed148369fa2fd7e0c1b372c2987b041a4050f`
kablam!    Compiling runas v0.1.1 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.66 secs
boom! running `docker rm -f ac2652f9ba1c3926c0a5dd099a2ed148369fa2fd7e0c1b372c2987b041a4050f`
blam! ac2652f9ba1c3926c0a5dd099a2ed148369fa2fd7e0c1b372c2987b041a4050f
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 536c211249a4c246a2e855ed8b454d316d63422a7685d6048ce8663d02119b7b
boom! running `docker start -a 536c211249a4c246a2e855ed8b454d316d63422a7685d6048ce8663d02119b7b`
kablam!    Compiling runas v0.1.1 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.88 secs
boom! running `docker rm -f 536c211249a4c246a2e855ed8b454d316d63422a7685d6048ce8663d02119b7b`
blam! 536c211249a4c246a2e855ed8b454d316d63422a7685d6048ce8663d02119b7b
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 4a77f2f18221b26b9ae873323db321204c65d12ee71202220bab6157f33bfa21
boom! running `docker start -a 4a77f2f18221b26b9ae873323db321204c65d12ee71202220bab6157f33bfa21`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/runas-5679297d329d4fda
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
kablam!    Doc-tests runas
blam! 
blam! 
blam! running 2 tests
blam! test /source/src/lib.rs - Command (line 56) ... ok
blam! test /source/src/lib.rs -  (line 16) ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- /source/src/lib.rs -  (line 16) stdout ----
blam! 	error[E0308]: mismatched types
blam!  --> <anon>:5:14
blam!   |
blam! 5 |   let status = try!(Command::new("rm")
blam!   |  ______________^ starting here...
blam! 6 | |     .arg("/usr/local/my-app")
blam! 7 | |     .status());
blam!   | |______________^ ...ending here: expected (), found enum `std::result::Result`
blam!   |
blam!   = note: expected type `()`
blam!              found type `std::result::Result<_, _>`
blam!   = help: here are some functions which might fulfill your needs:
blam!           - .unwrap()
blam!           - .unwrap_err()
blam!           - .unwrap_or_default()
blam!   = note: this error originates in a macro outside of the current crate
blam! 
blam! error: aborting due to previous error(s)
blam! 
blam! thread 'rustc' panicked at 'Box<Any>', /buildslave/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/librustc/session/mod.rs:203
blam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
blam! 
blam! 
blam! failures:
blam!     /source/src/lib.rs -  (line 16)
blam! 
blam! test result: FAILED. 1 passed; 1 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f 4a77f2f18221b26b9ae873323db321204c65d12ee71202220bab6157f33bfa21`
blam! 4a77f2f18221b26b9ae873323db321204c65d12ee71202220bab6157f33bfa21
