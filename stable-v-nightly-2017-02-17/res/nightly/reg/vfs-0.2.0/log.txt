boom! testing vfs-0.2.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 5afc4b390df7b91bb281539acbb11475661867ceeffbac03e0aad07ec7c76460
boom! running `docker start -a 5afc4b390df7b91bb281539acbb11475661867ceeffbac03e0aad07ec7c76460`
kablam!    Compiling vfs v0.2.0 (file:///source)
kablam! warning: variable `openOptions` should have a snake case name such as `open_options`
kablam!   --> src/lib.rs:65:33
kablam!    |
kablam! 65 |     fn open_with_options(&self, openOptions: &OpenOptions) -> Result<Box<VFile>>;
kablam!    |                                 ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 3.31 secs
boom! running `docker rm -f 5afc4b390df7b91bb281539acbb11475661867ceeffbac03e0aad07ec7c76460`
blam! 5afc4b390df7b91bb281539acbb11475661867ceeffbac03e0aad07ec7c76460
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 9b4aff65cd8a705f5e03bc7e1af5dd2370f72c47a8129115dd448d3cd6a3b443
boom! running `docker start -a 9b4aff65cd8a705f5e03bc7e1af5dd2370f72c47a8129115dd448d3cd6a3b443`
kablam!    Compiling vfs v0.2.0 (file:///source)
kablam! warning: variable `openOptions` should have a snake case name such as `open_options`
kablam!   --> src/lib.rs:65:33
kablam!    |
kablam! 65 |     fn open_with_options(&self, openOptions: &OpenOptions) -> Result<Box<VFile>>;
kablam!    |                                 ^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 7.37 secs
boom! running `docker rm -f 9b4aff65cd8a705f5e03bc7e1af5dd2370f72c47a8129115dd448d3cd6a3b443`
blam! 9b4aff65cd8a705f5e03bc7e1af5dd2370f72c47a8129115dd448d3cd6a3b443
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 269719d1ddbd4c0c16f318d2ef54d378eb106d296be1df24e937d1f74fb0b810
boom! running `docker start -a 269719d1ddbd4c0c16f318d2ef54d378eb106d296be1df24e937d1f74fb0b810`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/vfs-289e7f8e95fb8508
blam! 
blam! running 20 tests
blam! test memory::tests::mkdir ... ok
blam! test memory::tests::file_name ... ok
blam! test memory::tests::mkdir_fails_for_file ... ok
blam! test memory::tests::parent ... ok
blam! test memory::tests::append ... ok
blam! test memory::tests::path_buf ... ok
blam! test memory::tests::read_dir ... ok
blam! test memory::tests::access_directory_as_file ... ok
blam! test memory::tests::read_empty_file ... ok
blam! test memory::tests::rmdir ... ok
blam! test memory::tests::resolve ... ok
blam! test memory::tests::write_and_read_file ... ok
blam! test memory::tests::rm ... ok
blam! test memory::tests::rmrf ... ok
blam! test physical::tests::file_name ... ok
blam! test physical::tests::read_dir ... ok
blam! test physical::tests::read_file ... ok
blam! test physical::tests::parent ... ok
blam! test physical::tests::to_path_buf ... ok
blam! test util::tests::mkdir ... ok
blam! 
blam! test result: ok. 20 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests vfs
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 269719d1ddbd4c0c16f318d2ef54d378eb106d296be1df24e937d1f74fb0b810`
blam! 269719d1ddbd4c0c16f318d2ef54d378eb106d296be1df24e937d1f74fb0b810
