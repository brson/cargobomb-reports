boom! testing mnist-0.2.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 7c2a41e4373ae502ef95720251511a64841466fda37a5a08efa9f07c2c24730f
boom! running `docker start -a 7c2a41e4373ae502ef95720251511a64841466fda37a5a08efa9f07c2c24730f`
kablam!    Compiling mnist v0.2.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.57 secs
boom! running `docker rm -f 7c2a41e4373ae502ef95720251511a64841466fda37a5a08efa9f07c2c24730f`
blam! 7c2a41e4373ae502ef95720251511a64841466fda37a5a08efa9f07c2c24730f
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 59dbe89a20e3ab0a030144826e177f0a4df811556e8fdd7042b1ed3e8ca18851
boom! running `docker start -a 59dbe89a20e3ab0a030144826e177f0a4df811556e8fdd7042b1ed3e8ca18851`
kablam!    Compiling mnist v0.2.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 2.43 secs
boom! running `docker rm -f 59dbe89a20e3ab0a030144826e177f0a4df811556e8fdd7042b1ed3e8ca18851`
blam! 59dbe89a20e3ab0a030144826e177f0a4df811556e8fdd7042b1ed3e8ca18851
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! c58d06d3e6fd8f49c0928bbd193fb913f45aea80880fbe6a4ebd9ca674628f23
boom! running `docker start -a c58d06d3e6fd8f49c0928bbd193fb913f45aea80880fbe6a4ebd9ca674628f23`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/mnist-42336e3c1beb6153
blam! 
blam! running 14 tests
blam! test tests::test_01 ... FAILED
blam! test tests::test_00 ... FAILED
blam! test tests::test_03 ... ok
blam! test tests::test_02 ... ok
blam! test tests::test_04 ... ok
blam! test tests::test_05 ... ok
blam! test tests::test_06 ... FAILED
blam! test tests::test_08 ... ok
blam! test tests::test_07 ... ok
blam! test tests::test_09 ... ok
blam! test tests::test_11 ... FAILED
blam! test tests::test_12 ... FAILED
blam! test tests::test_10 ... FAILED
blam! test tests::test_example ... FAILED
blam! 
blam! failures:
blam! 
blam! ---- tests::test_01 stdout ----
blam! 	thread 'tests::test_01' panicked at 'Unable to find path to images at "data/train-images.idx3-ubyte".: Error { repr: Os { code: 2, message: "No such file or directory" } }', /buildslave/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/libcore/result.rs:860
blam! 
blam! ---- tests::test_00 stdout ----
blam! 	thread 'tests::test_00' panicked at 'Unable to find path to images at "data/train-images.idx3-ubyte".: Error { repr: Os { code: 2, message: "No such file or directory" } }', /buildslave/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/libcore/result.rs:860
blam! 
blam! ---- tests::test_06 stdout ----
blam! 	thread 'tests::test_06' panicked at 'Unable to find path to images at "data_sets/mnist/training_images".: Error { repr: Os { code: 2, message: "No such file or directory" } }', /buildslave/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/libcore/result.rs:860
blam! 
blam! ---- tests::test_11 stdout ----
blam! 	thread 'tests::test_11' panicked at 'Unable to find path to images at "data/train-images.idx3-ubyte".: Error { repr: Os { code: 2, message: "No such file or directory" } }', /buildslave/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/libcore/result.rs:860
blam! note: Panic did not include expected string 'Unable to find path to images at "data/test".'
blam! ---- tests::test_12 stdout ----
blam! 	thread 'tests::test_12' panicked at 'Unable to find path to images at "data/train-images.idx3-ubyte".: Error { repr: Os { code: 2, message: "No such file or directory" } }', /buildslave/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/libcore/result.rs:860
blam! note: Panic did not include expected string 'Unable to find path to labels at "data/test".'
blam! ---- tests::test_10 stdout ----
blam! 	thread 'tests::test_10' panicked at 'Unable to find path to images at "data/train-images.idx3-ubyte".: Error { repr: Os { code: 2, message: "No such file or directory" } }', /buildslave/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/libcore/result.rs:860
blam! note: Panic did not include expected string 'Unable to find path to labels at "data/test".'
blam! ---- tests::test_example stdout ----
blam! 	thread 'tests::test_example' panicked at 'Unable to find path to images at "data/train-images.idx3-ubyte".: Error { repr: Os { code: 2, message: "No such file or directory" } }', /buildslave/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/libcore/result.rs:860
blam! 
blam! 
blam! failures:
blam!     tests::test_00
blam!     tests::test_01
blam!     tests::test_06
blam!     tests::test_10
blam!     tests::test_11
blam!     tests::test_12
blam!     tests::test_example
blam! 
blam! test result: FAILED. 7 passed; 7 failed; 0 ignored; 0 measured
blam! 
kablam! error: test failed
boom! running `docker rm -f c58d06d3e6fd8f49c0928bbd193fb913f45aea80880fbe6a4ebd9ca674628f23`
blam! c58d06d3e6fd8f49c0928bbd193fb913f45aea80880fbe6a4ebd9ca674628f23
