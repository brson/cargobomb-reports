boom! testing mqtt-protocol-0.1.1 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 23a0fa96c9e91867d2f9aca2554439521555ae210c49890e5af0a6186bdd2f02
boom! running `docker start -a 23a0fa96c9e91867d2f9aca2554439521555ae210c49890e5af0a6186bdd2f02`
kablam!    Compiling mqtt-protocol v0.1.1 (file:///source)
kablam! warning: unused `#[macro_use]` import
kablam!  --> src/lib.rs:2:1
kablam!   |
kablam! 2 | #[macro_use]
kablam!   | ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Write`
kablam!  --> src/control/variable_header/mod.rs:3:21
kablam!   |
kablam! 3 | use std::io::{self, Write};
kablam!   |                     ^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable `Cond` should have a snake case name such as `cond`
kablam!   --> src/encodable.rs:25:45
kablam!    |
kablam! 25 |     fn decode_with<R: Read>(reader: &mut R, Cond: Option<Self::Cond>) -> Result<Self, Self::Err>;
kablam!    |                                             ^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 4.21 secs
boom! running `docker rm -f 23a0fa96c9e91867d2f9aca2554439521555ae210c49890e5af0a6186bdd2f02`
blam! 23a0fa96c9e91867d2f9aca2554439521555ae210c49890e5af0a6186bdd2f02
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 98d55c8e4d45d51fb179ea2c3df1ec5d2bfcae4c3297766833321daab7164b06
boom! running `docker start -a 98d55c8e4d45d51fb179ea2c3df1ec5d2bfcae4c3297766833321daab7164b06`
kablam!    Compiling mqtt-protocol v0.1.1 (file:///source)
kablam! warning: unused `#[macro_use]` import
kablam!  --> src/lib.rs:2:1
kablam!   |
kablam! 2 | #[macro_use]
kablam!   | ^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Write`
kablam!  --> src/control/variable_header/mod.rs:3:21
kablam!   |
kablam! 3 | use std::io::{self, Write};
kablam!   |                     ^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable `Cond` should have a snake case name such as `cond`
kablam!   --> src/encodable.rs:25:45
kablam!    |
kablam! 25 |     fn decode_with<R: Read>(reader: &mut R, Cond: Option<Self::Cond>) -> Result<Self, Self::Err>;
kablam!    |                                             ^^^^
kablam!    |
kablam!    = note: #[warn(non_snake_case)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 12.26 secs
boom! running `docker rm -f 98d55c8e4d45d51fb179ea2c3df1ec5d2bfcae4c3297766833321daab7164b06`
blam! 98d55c8e4d45d51fb179ea2c3df1ec5d2bfcae4c3297766833321daab7164b06
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! d99eb7cfe8ce846713d027201765ff0dcad59761acd08751faa9e49ee02abc1a
boom! running `docker start -a d99eb7cfe8ce846713d027201765ff0dcad59761acd08751faa9e49ee02abc1a`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/mqtt-4c47c63da4e6c96a
blam! 
blam! running 11 tests
blam! test control::fixed_header::test::test_decode_fixed_header ... ok
blam! test control::fixed_header::test::test_encode_fixed_header ... ok
blam! test packet::connack::test::test_connack_packet_basic ... ok
blam! test packet::connect::test::test_connect_packet_decode_basic ... ok
blam! test packet::connect::test::test_connect_packet_encode_basic ... ok
blam! test control::fixed_header::test::test_decode_too_long_fixed_header ... ok
blam! test packet::connect::test::test_connect_packet_user_name ... ok
blam! test packet::test::test_variable_packet_basic ... ok
blam! test packet::publish::test::test_publish_packet_basic ... ok
blam! test topic_name::test::test_topic_name_basic ... ok
blam! test topic_filter::test::test_topic_filter_validate ... ok
blam! 
blam! test result: ok. 11 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests mqtt
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f d99eb7cfe8ce846713d027201765ff0dcad59761acd08751faa9e49ee02abc1a`
blam! d99eb7cfe8ce846713d027201765ff0dcad59761acd08751faa9e49ee02abc1a
