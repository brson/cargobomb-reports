boom! testing nlp-io-0.1.2 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 4111fa79f52634695c2694423006d302e75d63636408901a8f40aeb435de7d07
boom! running `docker start -a 4111fa79f52634695c2694423006d302e75d63636408901a8f40aeb435de7d07`
kablam!    Compiling nlp-annotations v0.1.2
kablam!    Compiling nlp-io v0.1.2 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 10.12 secs
boom! running `docker rm -f 4111fa79f52634695c2694423006d302e75d63636408901a8f40aeb435de7d07`
blam! 4111fa79f52634695c2694423006d302e75d63636408901a8f40aeb435de7d07
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! c7afb726a5cbff3bd68e172f341d0536cea13d73b0deb40e6a6cd0b2eea1d220
boom! running `docker start -a c7afb726a5cbff3bd68e172f341d0536cea13d73b0deb40e6a6cd0b2eea1d220`
kablam!    Compiling nlp-io v0.1.2 (file:///source)
kablam! error[E0109]: type parameters are not allowed on this type
kablam!    --> src/conll/parsers.rs:395:32
kablam!     |
kablam! 395 |         let expected = Token::<PtbTag>::Word {
kablam!     |                                ^^^^^^ type parameter not allowed
kablam! 
kablam! error[E0109]: type parameters are not allowed on this type
kablam!    --> src/conll/parsers.rs:439:32
kablam!     |
kablam! 439 |         let expected = Token::<PtbTag>::Word {
kablam!     |                                ^^^^^^ type parameter not allowed
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:119:24
kablam!     |
kablam! 119 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:113:13
kablam!     |
kablam! 113 |             Token {
kablam!     |             ^ expected struct `conll::x::Sentence`, found struct `conll::x::Token`
kablam!     |
kablam!     = note: expected type `_`
kablam!                found type `conll::x::Token<nlp_annotations::pos::UTag, nlp_annotations::pos::PtbTag, _, nlp_annotations::deps::SdEng>`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:131:24
kablam!     |
kablam! 131 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:143:24
kablam!     |
kablam! 143 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:155:24
kablam!     |
kablam! 155 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:167:24
kablam!     |
kablam! 167 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:179:24
kablam!     |
kablam! 179 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:112:65
kablam!     |
kablam! 112 |         let tokens: Vec<Sentence<UTag, PtbTag, UFeat, SdEng>> = vec![
kablam!     |                                                                 ^ expected slice, found array of 6 elements
kablam!     |
kablam!     = note: expected type `std::boxed::Box<[conll::x::Sentence<nlp_annotations::pos::UTag, nlp_annotations::pos::PtbTag, nlp_annotations::morpho::UFeat, nlp_annotations::deps::SdEng>]>`
kablam!                found type `std::boxed::Box<[conll::x::Token<nlp_annotations::pos::UTag, nlp_annotations::pos::PtbTag, _, nlp_annotations::deps::SdEng>; 6]>`
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:186:43
kablam!     |
kablam! 186 |         let sentence = Sentence { tokens: tokens };
kablam!     |                                           ^^^^^^ expected struct `conll::x::Token`, found struct `conll::x::Sentence`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<conll::x::Token<_, _, _, _>>`
kablam!                found type `std::vec::Vec<conll::x::Sentence<nlp_annotations::pos::UTag, nlp_annotations::pos::PtbTag, nlp_annotations::morpho::UFeat, nlp_annotations::deps::SdEng>>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:206:24
kablam!     |
kablam! 206 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:200:13
kablam!     |
kablam! 200 |             Token {
kablam!     |             ^ expected struct `conll::x::Sentence`, found struct `conll::x::Token`
kablam!     |
kablam!     = note: expected type `_`
kablam!                found type `conll::x::Token<nlp_annotations::pos::UTag, nlp_annotations::pos::PtbTag, _, nlp_annotations::deps::SdEng>`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:218:24
kablam!     |
kablam! 218 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:230:24
kablam!     |
kablam! 230 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:242:24
kablam!     |
kablam! 242 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:254:24
kablam!     |
kablam! 254 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:266:24
kablam!     |
kablam! 266 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:199:66
kablam!     |
kablam! 199 |         let tokens1: Vec<Sentence<UTag, PtbTag, UFeat, SdEng>> = vec![
kablam!     |                                                                  ^ expected slice, found array of 6 elements
kablam!     |
kablam!     = note: expected type `std::boxed::Box<[conll::x::Sentence<nlp_annotations::pos::UTag, nlp_annotations::pos::PtbTag, nlp_annotations::morpho::UFeat, nlp_annotations::deps::SdEng>]>`
kablam!                found type `std::boxed::Box<[conll::x::Token<nlp_annotations::pos::UTag, nlp_annotations::pos::PtbTag, _, nlp_annotations::deps::SdEng>; 6]>`
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:280:24
kablam!     |
kablam! 280 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:274:13
kablam!     |
kablam! 274 |             Token {
kablam!     |             ^ expected struct `conll::x::Sentence`, found struct `conll::x::Token`
kablam!     |
kablam!     = note: expected type `_`
kablam!                found type `conll::x::Token<nlp_annotations::pos::UTag, nlp_annotations::pos::PtbTag, _, nlp_annotations::deps::SdEng>`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:287:44
kablam!     |
kablam! 287 |         let expected1 = Sentence { tokens: tokens1 };
kablam!     |                                            ^^^^^^^ expected struct `conll::x::Token`, found struct `conll::x::Sentence`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<conll::x::Token<_, _, _, _>>`
kablam!                found type `std::vec::Vec<conll::x::Sentence<nlp_annotations::pos::UTag, nlp_annotations::pos::PtbTag, nlp_annotations::morpho::UFeat, nlp_annotations::deps::SdEng>>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:288:44
kablam!     |
kablam! 288 |         let expected2 = Sentence { tokens: tokens2 };
kablam!     |                                            ^^^^^^^ expected struct `conll::x::Token`, found struct `conll::x::Sentence`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<conll::x::Token<_, _, _, _>>`
kablam!                found type `std::vec::Vec<conll::x::Sentence<nlp_annotations::pos::UTag, nlp_annotations::pos::PtbTag, nlp_annotations::morpho::UFeat, nlp_annotations::deps::SdEng>>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .to_vec()
kablam! 
kablam! error: aborting due to 23 previous errors
kablam! 
kablam! error: Could not compile `nlp-io`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f c7afb726a5cbff3bd68e172f341d0536cea13d73b0deb40e6a6cd0b2eea1d220`
blam! c7afb726a5cbff3bd68e172f341d0536cea13d73b0deb40e6a6cd0b2eea1d220
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 954f4ccd0ae030105c56b9b37a32372d6cde1fb720537576f3d6fe06543fc67d
boom! running `docker start -a 954f4ccd0ae030105c56b9b37a32372d6cde1fb720537576f3d6fe06543fc67d`
kablam!    Compiling nlp-io v0.1.2 (file:///source)
kablam! error[E0109]: type parameters are not allowed on this type
kablam!    --> src/conll/parsers.rs:395:32
kablam!     |
kablam! 395 |         let expected = Token::<PtbTag>::Word {
kablam!     |                                ^^^^^^ type parameter not allowed
kablam! 
kablam! error[E0109]: type parameters are not allowed on this type
kablam!    --> src/conll/parsers.rs:439:32
kablam!     |
kablam! 439 |         let expected = Token::<PtbTag>::Word {
kablam!     |                                ^^^^^^ type parameter not allowed
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:119:24
kablam!     |
kablam! 119 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:113:13
kablam!     |
kablam! 113 |             Token {
kablam!     |             ^ expected struct `conll::x::Sentence`, found struct `conll::x::Token`
kablam!     |
kablam!     = note: expected type `_`
kablam!                found type `conll::x::Token<nlp_annotations::pos::UTag, nlp_annotations::pos::PtbTag, _, nlp_annotations::deps::SdEng>`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:131:24
kablam!     |
kablam! 131 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:143:24
kablam!     |
kablam! 143 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:155:24
kablam!     |
kablam! 155 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:167:24
kablam!     |
kablam! 167 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:179:24
kablam!     |
kablam! 179 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:112:65
kablam!     |
kablam! 112 |         let tokens: Vec<Sentence<UTag, PtbTag, UFeat, SdEng>> = vec![
kablam!     |                                                                 ^ expected slice, found array of 6 elements
kablam!     |
kablam!     = note: expected type `std::boxed::Box<[conll::x::Sentence<nlp_annotations::pos::UTag, nlp_annotations::pos::PtbTag, nlp_annotations::morpho::UFeat, nlp_annotations::deps::SdEng>]>`
kablam!                found type `std::boxed::Box<[conll::x::Token<nlp_annotations::pos::UTag, nlp_annotations::pos::PtbTag, _, nlp_annotations::deps::SdEng>; 6]>`
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:186:43
kablam!     |
kablam! 186 |         let sentence = Sentence { tokens: tokens };
kablam!     |                                           ^^^^^^ expected struct `conll::x::Token`, found struct `conll::x::Sentence`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<conll::x::Token<_, _, _, _>>`
kablam!                found type `std::vec::Vec<conll::x::Sentence<nlp_annotations::pos::UTag, nlp_annotations::pos::PtbTag, nlp_annotations::morpho::UFeat, nlp_annotations::deps::SdEng>>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:206:24
kablam!     |
kablam! 206 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:200:13
kablam!     |
kablam! 200 |             Token {
kablam!     |             ^ expected struct `conll::x::Sentence`, found struct `conll::x::Token`
kablam!     |
kablam!     = note: expected type `_`
kablam!                found type `conll::x::Token<nlp_annotations::pos::UTag, nlp_annotations::pos::PtbTag, _, nlp_annotations::deps::SdEng>`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:218:24
kablam!     |
kablam! 218 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:230:24
kablam!     |
kablam! 230 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:242:24
kablam!     |
kablam! 242 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:254:24
kablam!     |
kablam! 254 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:266:24
kablam!     |
kablam! 266 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:199:66
kablam!     |
kablam! 199 |         let tokens1: Vec<Sentence<UTag, PtbTag, UFeat, SdEng>> = vec![
kablam!     |                                                                  ^ expected slice, found array of 6 elements
kablam!     |
kablam!     = note: expected type `std::boxed::Box<[conll::x::Sentence<nlp_annotations::pos::UTag, nlp_annotations::pos::PtbTag, nlp_annotations::morpho::UFeat, nlp_annotations::deps::SdEng>]>`
kablam!                found type `std::boxed::Box<[conll::x::Token<nlp_annotations::pos::UTag, nlp_annotations::pos::PtbTag, _, nlp_annotations::deps::SdEng>; 6]>`
kablam!     = note: this error originates in a macro outside of the current crate
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:280:24
kablam!     |
kablam! 280 |                 feats: None,
kablam!     |                        ^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<_>`
kablam!                found type `std::option::Option<_>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam!             - .unwrap_or_default()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:274:13
kablam!     |
kablam! 274 |             Token {
kablam!     |             ^ expected struct `conll::x::Sentence`, found struct `conll::x::Token`
kablam!     |
kablam!     = note: expected type `_`
kablam!                found type `conll::x::Token<nlp_annotations::pos::UTag, nlp_annotations::pos::PtbTag, _, nlp_annotations::deps::SdEng>`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:287:44
kablam!     |
kablam! 287 |         let expected1 = Sentence { tokens: tokens1 };
kablam!     |                                            ^^^^^^^ expected struct `conll::x::Token`, found struct `conll::x::Sentence`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<conll::x::Token<_, _, _, _>>`
kablam!                found type `std::vec::Vec<conll::x::Sentence<nlp_annotations::pos::UTag, nlp_annotations::pos::PtbTag, nlp_annotations::morpho::UFeat, nlp_annotations::deps::SdEng>>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/conll/x.rs:288:44
kablam!     |
kablam! 288 |         let expected2 = Sentence { tokens: tokens2 };
kablam!     |                                            ^^^^^^^ expected struct `conll::x::Token`, found struct `conll::x::Sentence`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<conll::x::Token<_, _, _, _>>`
kablam!                found type `std::vec::Vec<conll::x::Sentence<nlp_annotations::pos::UTag, nlp_annotations::pos::PtbTag, nlp_annotations::morpho::UFeat, nlp_annotations::deps::SdEng>>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .to_vec()
kablam! 
kablam! error: aborting due to 23 previous errors
kablam! 
kablam! error: Could not compile `nlp-io`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 954f4ccd0ae030105c56b9b37a32372d6cde1fb720537576f3d6fe06543fc67d`
blam! 954f4ccd0ae030105c56b9b37a32372d6cde1fb720537576f3d6fe06543fc67d
