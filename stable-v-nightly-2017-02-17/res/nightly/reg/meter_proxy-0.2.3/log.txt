boom! testing meter_proxy-0.2.3 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 7f31a13fdfabe456d2ed67bbbac3213404a114be8439687d0245ac5114fb3f2f
boom! running `docker start -a 7f31a13fdfabe456d2ed67bbbac3213404a114be8439687d0245ac5114fb3f2f`
kablam!    Compiling futures v0.1.10
kablam!    Compiling futures-cpupool v0.1.2
kablam!    Compiling tokio-core v0.1.4
kablam!    Compiling meter_proxy v0.2.3 (file:///source)
kablam! warning: unused `#[macro_use]` import
kablam!   --> src/lib.rs:16:1
kablam!    |
kablam! 16 | #[macro_use]
kablam!    | ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Yellow`
kablam!   --> src/proxy/sync/mod.rs:14:30
kablam!    |
kablam! 14 | use ansi_term::Colour::{Red, Yellow};
kablam!    |                              ^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `SocketAddr`
kablam!   --> src/proxy/sync/mod.rs:15:50
kablam!    |
kablam! 15 | use std::net::{TcpListener, TcpStream, Shutdown, SocketAddr,IpAddr};
kablam!    |                                                  ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `libc::setrlimit`
kablam!   --> src/proxy/sync/mod.rs:21:5
kablam!    |
kablam! 21 | use libc::setrlimit;
kablam!    |     ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::collections::HashMap`
kablam!   --> src/proxy/sync/mod.rs:22:5
kablam!    |
kablam! 22 | use std::collections::HashMap;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/proxy/sync/mod.rs:75:13
kablam!    |
kablam! 75 |         let mut time_vec = self.0.lock().unwrap();
kablam!    |             ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/proxy/sync/mod.rs:155:26
kablam!     |
kablam! 155 | 	                    let mut stream_c = stream.try_clone().unwrap();
kablam!     | 	                        ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:157:22
kablam!     |
kablam! 157 | 	                    stream_c2.set_read_timeout(Some(Duration::new(3, 0)));
kablam!     | 	                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:188:6
kablam!     |
kablam! 188 | 	    TcpStream::connect((targ_addr, self.front_port));
kablam!     | 	    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/proxy/sync/mod.rs:204:10
kablam!     |
kablam! 204 | 	    let mut back = match TcpStream::connect((targ_addr, target_port)) {
kablam!     | 	        ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:215:14
kablam!     |
kablam! 215 | 	            front.shutdown(Shutdown::Both);
kablam!     | 	            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable `timedOut` should have a snake case name such as `timed_out`
kablam!    --> src/proxy/sync/mod.rs:227:10
kablam!     |
kablam! 227 | 	    let timedOut = Arc::new(AtomicBool::new(false));
kablam!     | 	        ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `timedOut_c` should have a snake case name such as `timed_out_c`
kablam!    --> src/proxy/sync/mod.rs:228:10
kablam!     |
kablam! 228 | 	    let timedOut_c = timedOut.clone();
kablam!     | 	        ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `timedOut` should have a snake case name such as `timed_out`
kablam!    --> src/proxy/sync/mod.rs:252:31
kablam!     |
kablam! 252 | 	                             timedOut: Arc<AtomicBool>,
kablam!     | 	                             ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:255:6
kablam!     |
kablam! 255 | 	    front.set_read_timeout(Some(Duration::new(1000, 0)));
kablam!     | 	    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused variable: `err`
kablam!    --> src/proxy/sync/mod.rs:262:18
kablam!     |
kablam! 262 | 	            Err(ref err) => {
kablam!     | 	                ^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:271:18
kablam!     |
kablam! 271 | 	                front.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:272:18
kablam!     |
kablam! 272 | 	                back.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:290:18
kablam!     |
kablam! 290 | 	                front.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:291:18
kablam!     |
kablam! 291 | 	                back.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable `timedOut` should have a snake case name such as `timed_out`
kablam!    --> src/proxy/sync/mod.rs:309:31
kablam!     |
kablam! 309 | 	                             timedOut: Arc<AtomicBool>,
kablam!     | 	                             ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:312:6
kablam!     |
kablam! 312 | 	    back.set_read_timeout(Some(Duration::new(1000, 0)));
kablam!     | 	    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/proxy/sync/mod.rs:316:10
kablam!     |
kablam! 316 | 	    let mut seq_number = 0;
kablam!     | 	        ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `seq_number`
kablam!    --> src/proxy/sync/mod.rs:316:10
kablam!     |
kablam! 316 | 	    let mut seq_number = 0;
kablam!     | 	        ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `err`
kablam!    --> src/proxy/sync/mod.rs:321:18
kablam!     |
kablam! 321 | 	            Err(ref err) => {
kablam!     | 	                ^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:330:18
kablam!     |
kablam! 330 | 	                front.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:331:18
kablam!     |
kablam! 331 | 	                back.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused variable: `r`
kablam!    --> src/proxy/sync/mod.rs:341:8
kablam!     |
kablam! 341 | 				Ok(r) => {
kablam!     | 				   ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable `RecvError` should have a snake case name such as `recv_error`
kablam!    --> src/proxy/sync/mod.rs:345:5
kablam!     |
kablam! 345 | 				RecvError => {},
kablam!     | 				^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `RecvError`
kablam!    --> src/proxy/sync/mod.rs:345:5
kablam!     |
kablam! 345 | 				RecvError => {},
kablam!     | 				^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:357:22
kablam!     |
kablam! 357 | 	                    front.shutdown(Shutdown::Both);
kablam!     | 	                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:358:22
kablam!     |
kablam! 358 | 	                    back.shutdown(Shutdown::Both);
kablam!     | 	                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unreachable statement
kablam!    --> src/proxy/sync/mod.rs:369:10
kablam!     |
kablam! 369 | 	        drop(back);
kablam!     | 	        ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unreachable_code)] on by default
kablam! 
kablam! warning: unused import: `std::panic`
kablam!  --> src/proxy/async/mod.rs:1:5
kablam!   |
kablam! 1 | use std::panic;
kablam!   |     ^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::env`
kablam!  --> src/proxy/async/mod.rs:4:5
kablam!   |
kablam! 4 | use std::env;
kablam!   |     ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `IpAddr`
kablam!  --> src/proxy/async/mod.rs:6:28
kablam!   |
kablam! 6 | use std::net::{SocketAddr, IpAddr};
kablam!   |                            ^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::time::Duration`
kablam!  --> src/proxy/async/mod.rs:9:5
kablam!   |
kablam! 9 | use std::time::Duration;
kablam!   |     ^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Timeout`
kablam!   --> src/proxy/async/mod.rs:15:41
kablam!    |
kablam! 15 | use tokio_core::reactor::{Core, Handle, Timeout};
kablam!    |                                         ^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused imports: `Window`, `read_exact`, `write_all`
kablam!   --> src/proxy/async/mod.rs:17:26
kablam!    |
kablam! 17 | use tokio_core::io::{Io, read_exact, write_all, Window};
kablam!    |                          ^^^^^^^^^^  ^^^^^^^^^  ^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Io`
kablam!   --> src/proxy/async/mod.rs:17:22
kablam!    |
kablam! 17 | use tokio_core::io::{Io, read_exact, write_all, Window};
kablam!    |                      ^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `RwLock`
kablam!   --> src/proxy/async/mod.rs:18:29
kablam!    |
kablam! 18 | use std::sync::{Arc, Mutex, RwLock};
kablam!    |                             ^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: static item is never used: `ERROR`
kablam!   --> src/proxy/async/mod.rs:21:1
kablam!    |
kablam! 21 |   lazy_static! {
kablam!    |  _^ starting here...
kablam! 22 | |     static ref ERROR: Arc<Mutex<bool>>	= Arc::new(Mutex::new(false));
kablam! 23 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam!    = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/proxy/async/mod.rs:60:13
kablam!    |
kablam! 60 |         let mut core = Core::new().unwrap();
kablam!    |             ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `core`
kablam!   --> src/proxy/async/mod.rs:60:13
kablam!    |
kablam! 60 |         let mut core = Core::new().unwrap();
kablam!    |             ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `e`
kablam!   --> src/proxy/async/mod.rs:97:25
kablam!    |
kablam! 97 |                     Err(e) => {;
kablam!    |                         ^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `pool`
kablam!    --> src/proxy/async/mod.rs:158:13
kablam!     |
kablam! 158 |         let pool = self.pool.clone();
kablam!     |             ^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: field is never used: `num_bytes`
kablam!    --> src/proxy/async/mod.rs:221:5
kablam!     |
kablam! 221 |     num_bytes: Arc<Mutex<f64>>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `num_resp`
kablam!    --> src/proxy/async/mod.rs:222:5
kablam!     |
kablam! 222 |     num_resp: Arc<Mutex<f64>>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `other`
kablam!    --> src/proxy/async/mod.rs:378:1
kablam!     |
kablam! 378 |   fn other(desc: &str) -> io::Error {
kablam!     |  _^ starting here...
kablam! 379 | |     io::Error::new(io::ErrorKind::Other, desc)
kablam! 380 | | }
kablam!     | |_^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 13.72 secs
boom! running `docker rm -f 7f31a13fdfabe456d2ed67bbbac3213404a114be8439687d0245ac5114fb3f2f`
blam! 7f31a13fdfabe456d2ed67bbbac3213404a114be8439687d0245ac5114fb3f2f
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 56403adaa33e2025067d5c8844a340450881791e7305f96db31a76476bc59473
boom! running `docker start -a 56403adaa33e2025067d5c8844a340450881791e7305f96db31a76476bc59473`
kablam!    Compiling meter_proxy v0.2.3 (file:///source)
kablam! warning: unused `#[macro_use]` import
kablam!   --> src/lib.rs:16:1
kablam!    |
kablam! 16 | #[macro_use]
kablam!    | ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Yellow`
kablam!   --> src/proxy/sync/mod.rs:14:30
kablam!    |
kablam! 14 | use ansi_term::Colour::{Red, Yellow};
kablam!    |                              ^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `SocketAddr`
kablam!   --> src/proxy/sync/mod.rs:15:50
kablam!    |
kablam! 15 | use std::net::{TcpListener, TcpStream, Shutdown, SocketAddr,IpAddr};
kablam!    |                                                  ^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `libc::setrlimit`
kablam!   --> src/proxy/sync/mod.rs:21:5
kablam!    |
kablam! 21 | use libc::setrlimit;
kablam!    |     ^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::collections::HashMap`
kablam!   --> src/proxy/sync/mod.rs:22:5
kablam!    |
kablam! 22 | use std::collections::HashMap;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/proxy/sync/mod.rs:75:13
kablam!    |
kablam! 75 |         let mut time_vec = self.0.lock().unwrap();
kablam!    |             ^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/proxy/sync/mod.rs:155:26
kablam!     |
kablam! 155 | 	                    let mut stream_c = stream.try_clone().unwrap();
kablam!     | 	                        ^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:157:22
kablam!     |
kablam! 157 | 	                    stream_c2.set_read_timeout(Some(Duration::new(3, 0)));
kablam!     | 	                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:188:6
kablam!     |
kablam! 188 | 	    TcpStream::connect((targ_addr, self.front_port));
kablam!     | 	    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/proxy/sync/mod.rs:204:10
kablam!     |
kablam! 204 | 	    let mut back = match TcpStream::connect((targ_addr, target_port)) {
kablam!     | 	        ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:215:14
kablam!     |
kablam! 215 | 	            front.shutdown(Shutdown::Both);
kablam!     | 	            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable `timedOut` should have a snake case name such as `timed_out`
kablam!    --> src/proxy/sync/mod.rs:227:10
kablam!     |
kablam! 227 | 	    let timedOut = Arc::new(AtomicBool::new(false));
kablam!     | 	        ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `timedOut_c` should have a snake case name such as `timed_out_c`
kablam!    --> src/proxy/sync/mod.rs:228:10
kablam!     |
kablam! 228 | 	    let timedOut_c = timedOut.clone();
kablam!     | 	        ^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: variable `timedOut` should have a snake case name such as `timed_out`
kablam!    --> src/proxy/sync/mod.rs:252:31
kablam!     |
kablam! 252 | 	                             timedOut: Arc<AtomicBool>,
kablam!     | 	                             ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:255:6
kablam!     |
kablam! 255 | 	    front.set_read_timeout(Some(Duration::new(1000, 0)));
kablam!     | 	    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused variable: `err`
kablam!    --> src/proxy/sync/mod.rs:262:18
kablam!     |
kablam! 262 | 	            Err(ref err) => {
kablam!     | 	                ^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:271:18
kablam!     |
kablam! 271 | 	                front.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:272:18
kablam!     |
kablam! 272 | 	                back.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:290:18
kablam!     |
kablam! 290 | 	                front.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:291:18
kablam!     |
kablam! 291 | 	                back.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable `timedOut` should have a snake case name such as `timed_out`
kablam!    --> src/proxy/sync/mod.rs:309:31
kablam!     |
kablam! 309 | 	                             timedOut: Arc<AtomicBool>,
kablam!     | 	                             ^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:312:6
kablam!     |
kablam! 312 | 	    back.set_read_timeout(Some(Duration::new(1000, 0)));
kablam!     | 	    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: variable does not need to be mutable
kablam!    --> src/proxy/sync/mod.rs:316:10
kablam!     |
kablam! 316 | 	    let mut seq_number = 0;
kablam!     | 	        ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `seq_number`
kablam!    --> src/proxy/sync/mod.rs:316:10
kablam!     |
kablam! 316 | 	    let mut seq_number = 0;
kablam!     | 	        ^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `err`
kablam!    --> src/proxy/sync/mod.rs:321:18
kablam!     |
kablam! 321 | 	            Err(ref err) => {
kablam!     | 	                ^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:330:18
kablam!     |
kablam! 330 | 	                front.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:331:18
kablam!     |
kablam! 331 | 	                back.shutdown(Shutdown::Both);
kablam!     | 	                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused variable: `r`
kablam!    --> src/proxy/sync/mod.rs:341:8
kablam!     |
kablam! 341 | 				Ok(r) => {
kablam!     | 				   ^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: variable `RecvError` should have a snake case name such as `recv_error`
kablam!    --> src/proxy/sync/mod.rs:345:5
kablam!     |
kablam! 345 | 				RecvError => {},
kablam!     | 				^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(non_snake_case)] on by default
kablam! 
kablam! warning: unused variable: `RecvError`
kablam!    --> src/proxy/sync/mod.rs:345:5
kablam!     |
kablam! 345 | 				RecvError => {},
kablam!     | 				^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:357:22
kablam!     |
kablam! 357 | 	                    front.shutdown(Shutdown::Both);
kablam!     | 	                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unused result which must be used
kablam!    --> src/proxy/sync/mod.rs:358:22
kablam!     |
kablam! 358 | 	                    back.shutdown(Shutdown::Both);
kablam!     | 	                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unused_must_use)] on by default
kablam! 
kablam! warning: unreachable statement
kablam!    --> src/proxy/sync/mod.rs:369:10
kablam!     |
kablam! 369 | 	        drop(back);
kablam!     | 	        ^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(unreachable_code)] on by default
kablam! 
kablam! warning: unused import: `std::panic`
kablam!  --> src/proxy/async/mod.rs:1:5
kablam!   |
kablam! 1 | use std::panic;
kablam!   |     ^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::env`
kablam!  --> src/proxy/async/mod.rs:4:5
kablam!   |
kablam! 4 | use std::env;
kablam!   |     ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `IpAddr`
kablam!  --> src/proxy/async/mod.rs:6:28
kablam!   |
kablam! 6 | use std::net::{SocketAddr, IpAddr};
kablam!   |                            ^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `std::time::Duration`
kablam!  --> src/proxy/async/mod.rs:9:5
kablam!   |
kablam! 9 | use std::time::Duration;
kablam!   |     ^^^^^^^^^^^^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Timeout`
kablam!   --> src/proxy/async/mod.rs:15:41
kablam!    |
kablam! 15 | use tokio_core::reactor::{Core, Handle, Timeout};
kablam!    |                                         ^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused imports: `Window`, `read_exact`, `write_all`
kablam!   --> src/proxy/async/mod.rs:17:26
kablam!    |
kablam! 17 | use tokio_core::io::{Io, read_exact, write_all, Window};
kablam!    |                          ^^^^^^^^^^  ^^^^^^^^^  ^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `Io`
kablam!   --> src/proxy/async/mod.rs:17:22
kablam!    |
kablam! 17 | use tokio_core::io::{Io, read_exact, write_all, Window};
kablam!    |                      ^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: unused import: `RwLock`
kablam!   --> src/proxy/async/mod.rs:18:29
kablam!    |
kablam! 18 | use std::sync::{Arc, Mutex, RwLock};
kablam!    |                             ^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_imports)] on by default
kablam! 
kablam! warning: static item is never used: `ERROR`
kablam!   --> src/proxy/async/mod.rs:21:1
kablam!    |
kablam! 21 |   lazy_static! {
kablam!    |  _^ starting here...
kablam! 22 | |     static ref ERROR: Arc<Mutex<bool>>	= Arc::new(Mutex::new(false));
kablam! 23 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam!    = note: this error originates in a macro outside of the current crate
kablam! 
kablam! warning: variable does not need to be mutable
kablam!   --> src/proxy/async/mod.rs:60:13
kablam!    |
kablam! 60 |         let mut core = Core::new().unwrap();
kablam!    |             ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: unused variable: `core`
kablam!   --> src/proxy/async/mod.rs:60:13
kablam!    |
kablam! 60 |         let mut core = Core::new().unwrap();
kablam!    |             ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `e`
kablam!   --> src/proxy/async/mod.rs:97:25
kablam!    |
kablam! 97 |                     Err(e) => {;
kablam!    |                         ^
kablam!    |
kablam!    = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: unused variable: `pool`
kablam!    --> src/proxy/async/mod.rs:158:13
kablam!     |
kablam! 158 |         let pool = self.pool.clone();
kablam!     |             ^^^^
kablam!     |
kablam!     = note: #[warn(unused_variables)] on by default
kablam! 
kablam! warning: field is never used: `num_bytes`
kablam!    --> src/proxy/async/mod.rs:221:5
kablam!     |
kablam! 221 |     num_bytes: Arc<Mutex<f64>>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: field is never used: `num_resp`
kablam!    --> src/proxy/async/mod.rs:222:5
kablam!     |
kablam! 222 |     num_resp: Arc<Mutex<f64>>,
kablam!     |     ^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `other`
kablam!    --> src/proxy/async/mod.rs:378:1
kablam!     |
kablam! 378 |   fn other(desc: &str) -> io::Error {
kablam!     |  _^ starting here...
kablam! 379 | |     io::Error::new(io::ErrorKind::Other, desc)
kablam! 380 | | }
kablam!     | |_^ ...ending here
kablam!     |
kablam!     = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 5.78 secs
boom! running `docker rm -f 56403adaa33e2025067d5c8844a340450881791e7305f96db31a76476bc59473`
blam! 56403adaa33e2025067d5c8844a340450881791e7305f96db31a76476bc59473
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 56dbd76bddf6f37affd8fbfc2a784e478927199a16886a71daff400a6b9c0b69
boom! running `docker start -a 56dbd76bddf6f37affd8fbfc2a784e478927199a16886a71daff400a6b9c0b69`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/meter_proxy-0adf04333b47f4af
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests meter_proxy
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 56dbd76bddf6f37affd8fbfc2a784e478927199a16886a71daff400a6b9c0b69`
blam! 56dbd76bddf6f37affd8fbfc2a784e478927199a16886a71daff400a6b9c0b69
