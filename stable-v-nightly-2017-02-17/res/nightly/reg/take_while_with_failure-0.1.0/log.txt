boom! testing take_while_with_failure-0.1.0 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! db4b23e416ec0473ed6c4ca1b9dbfa59178b219f7fa8c409750cff63cb29be3c
boom! running `docker start -a db4b23e416ec0473ed6c4ca1b9dbfa59178b219f7fa8c409750cff63cb29be3c`
kablam!    Compiling take_while_with_failure v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.86 secs
boom! running `docker rm -f db4b23e416ec0473ed6c4ca1b9dbfa59178b219f7fa8c409750cff63cb29be3c`
blam! db4b23e416ec0473ed6c4ca1b9dbfa59178b219f7fa8c409750cff63cb29be3c
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! de04c03bc0e3a4681e40cbed1186445a979edfa2427b3e339f9ff4eae4be536c
boom! running `docker start -a de04c03bc0e3a4681e40cbed1186445a979edfa2427b3e339f9ff4eae4be536c`
kablam!    Compiling take_while_with_failure v0.1.0 (file:///source)
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.53 secs
boom! running `docker rm -f de04c03bc0e3a4681e40cbed1186445a979edfa2427b3e339f9ff4eae4be536c`
blam! de04c03bc0e3a4681e40cbed1186445a979edfa2427b3e339f9ff4eae4be536c
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! bb3dd0a2f4ee0c0bcfa76cfbe492751c3c838e09781a0819f7a9caaf34b2384f
boom! running `docker start -a bb3dd0a2f4ee0c0bcfa76cfbe492751c3c838e09781a0819f7a9caaf34b2384f`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/take_while_with_failure-d2921eae2cb14e18
blam! 
blam! running 4 tests
blam! test it_always_includes_the_first_element ... ok
blam! test it_works_on_empty_vecs ... ok
blam! test it_includes_all_when_true ... ok
blam! test it_includes_failure ... ok
blam! 
blam! test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured
blam! 
kablam!    Doc-tests take_while_with_failure
blam! 
blam! running 2 tests
blam! test /source/src/lib.rs - I::take_while_with_failure (line 54) ... ok
blam! test /source/src/lib.rs - I::take_while_with_failure (line 63) ... ok
blam! 
blam! test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f bb3dd0a2f4ee0c0bcfa76cfbe492751c3c838e09781a0819f7a9caaf34b2384f`
blam! bb3dd0a2f4ee0c0bcfa76cfbe492751c3c838e09781a0819f7a9caaf34b2384f
