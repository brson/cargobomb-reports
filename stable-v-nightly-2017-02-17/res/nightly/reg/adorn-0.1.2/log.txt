boom! testing adorn-0.1.2 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 16851b132c9d1601c30981120a99c85f988439164e41a447cb8ec2ef22a72564
boom! running `docker start -a 16851b132c9d1601c30981120a99c85f988439164e41a447cb8ec2ef22a72564`
kablam!    Compiling adorn v0.1.2 (file:///source)
kablam! error[E0432]: unresolved import `syntax::parse::token::intern`
kablam!   --> src/lib.rs:18:5
kablam!    |
kablam! 18 | use syntax::parse::token::intern;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `intern` in `parse::token`
kablam! 
kablam! error[E0432]: unresolved import `syntax::owned_slice::OwnedSlice`
kablam!   --> src/lib.rs:19:5
kablam!    |
kablam! 19 | use syntax::owned_slice::OwnedSlice;
kablam!    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Could not find `owned_slice` in `syntax`
kablam! 
kablam! error[E0531]: cannot find tuple struct/variant `MetaList` in this scope
kablam!   --> src/lib.rs:31:16
kablam!    |
kablam! 31 |         if let MetaList(_, ref l) = mitem.node {
kablam!    |                ^^^^^^^^ not found in this scope
kablam! 
kablam! error[E0531]: cannot find tuple struct/variant `MetaWord` in this scope
kablam!   --> src/lib.rs:34:21
kablam!    |
kablam! 34 |                     MetaWord(ref is) => (Ident::with_empty_ctxt(intern(&*is)), vec![]),
kablam!    |                     ^^^^^^^^ not found in this scope
kablam! 
kablam! error[E0531]: cannot find tuple struct/variant `MetaList` in this scope
kablam!   --> src/lib.rs:35:21
kablam!    |
kablam! 35 |                     MetaList(ref is, ref list) => {
kablam!    |                     ^^^^^^^^ not found in this scope
kablam! 
kablam! error[E0531]: cannot find tuple struct/variant `MetaNameValue` in this scope
kablam!   --> src/lib.rs:38:36
kablam!    |
kablam! 38 |                             if let MetaNameValue(_, ref l) = i.node {
kablam!    |                                    ^^^^^^^^^^^^^ not found in this scope
kablam! 
kablam! error[E0531]: cannot find tuple struct/variant `ItemFn` in this scope
kablam!   --> src/lib.rs:67:20
kablam!    |
kablam! 67 |             if let ItemFn(ref decl, unsafety, constness, abi, ref generics, _) = it.node {
kablam!    |                    ^^^^^^ not found in this scope
kablam!    |
kablam!    = help: possible candidates are found in other modules, you can import them into scope:
kablam!              `use rustc::hir::ItemFn;`
kablam!              `use rustc::hir::Item_::ItemFn;`
kablam!              `use rustc::hir::intravisit::FnKind::ItemFn;`
kablam!              `use syntax::visit::FnKind::ItemFn;`
kablam! 
kablam! error[E0425]: cannot find function `ItemFn` in this scope
kablam!   --> src/lib.rs:91:29
kablam!    |
kablam! 91 |                 let newfn = ItemFn(maindecl, unsafety, constness, abi, generics.clone(),
kablam!    |                             ^^^^^^ not found in this scope
kablam!    |
kablam!    = help: possible candidates are found in other modules, you can import them into scope:
kablam!              `use rustc::hir::ItemFn;`
kablam!              `use rustc::hir::Item_::ItemFn;`
kablam!              `use rustc::hir::intravisit::FnKind::ItemFn;`
kablam!              `use syntax::visit::FnKind::ItemFn;`
kablam! 
kablam! error[E0531]: cannot find tuple struct/variant `MetaList` in this scope
kablam!    --> src/lib.rs:107:27
kablam!     |
kablam! 107 |     let funcname = if let MetaList(_, ref l) = mitem.node {
kablam!     |                           ^^^^^^^^ not found in this scope
kablam! 
kablam! error[E0531]: cannot find tuple struct/variant `MetaWord` in this scope
kablam!    --> src/lib.rs:109:20
kablam!     |
kablam! 109 |             if let MetaWord(ref is) = l[0].node {
kablam!     |                    ^^^^^^^^ not found in this scope
kablam! 
kablam! error[E0531]: cannot find tuple struct/variant `ItemFn` in this scope
kablam!    --> src/lib.rs:128:20
kablam!     |
kablam! 128 |             if let ItemFn(ref decl, unsafety, constness, abi, ref generics, ref blk) = it.node {
kablam!     |                    ^^^^^^ not found in this scope
kablam!     |
kablam!     = help: possible candidates are found in other modules, you can import them into scope:
kablam!               `use rustc::hir::ItemFn;`
kablam!               `use rustc::hir::Item_::ItemFn;`
kablam!               `use rustc::hir::intravisit::FnKind::ItemFn;`
kablam!               `use syntax::visit::FnKind::ItemFn;`
kablam! 
kablam! error[E0531]: cannot find tuple struct/variant `Return` in this scope
kablam!    --> src/lib.rs:131:37
kablam!     |
kablam! 131 |                 let output = if let Return(ref t) = decl.output {
kablam!     |                                     ^^^^^^ not found in this scope
kablam!     |
kablam!     = help: possible candidates are found in other modules, you can import them into scope:
kablam!               `use rustc::hir::FunctionRetTy::Return;`
kablam!               `use rustc::hir::Return;`
kablam! 
kablam! error[E0425]: cannot find function `TyTup` in this scope
kablam!    --> src/lib.rs:159:74
kablam!     |
kablam! 159 |                 let decl = cx.fn_decl(inputs, output.unwrap_or(cx.ty(sp, TyTup(Vec::new()))));
kablam!     |                                                                          ^^^^^ not found in this scope
kablam!     |
kablam!     = help: possible candidates are found in other modules, you can import them into scope:
kablam!               `use rustc::hir::TyTup;`
kablam!               `use rustc::hir::Ty_::TyTup;`
kablam! 
kablam! error[E0425]: cannot find function `ItemFn` in this scope
kablam!    --> src/lib.rs:160:28
kablam!     |
kablam! 160 |                 let func = ItemFn(decl, unsafety, constness, abi, gen, blk.clone());
kablam!     |                            ^^^^^^ not found in this scope
kablam!     |
kablam!     = help: possible candidates are found in other modules, you can import them into scope:
kablam!               `use rustc::hir::ItemFn;`
kablam!               `use rustc::hir::Item_::ItemFn;`
kablam!               `use rustc::hir::intravisit::FnKind::ItemFn;`
kablam!               `use syntax::visit::FnKind::ItemFn;`
kablam! 
kablam! error[E0061]: this function takes 2 parameters but 3 parameters were supplied
kablam!   --> src/lib.rs:92:45
kablam!    |
kablam! 92 |                                    cx.block(sp, vec![inner], Some(call)));
kablam!    |                                             ^^ expected 2 parameters
kablam! 
kablam! error[E0560]: struct `syntax::ast::Path` has no field named `global`
kablam!    --> src/lib.rs:143:21
kablam!     |
kablam! 143 |                     global: false,
kablam!     |                     ^^^^^^^ `syntax::ast::Path` does not have this field
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> src/lib.rs:146:37
kablam!     |
kablam! 146 |                         parameters: PathParameters::Parenthesized(paramdata)
kablam!     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found enum `syntax::ast::PathParameters`
kablam!     |
kablam!     = note: expected type `std::option::Option<syntax::ptr::P<syntax::ast::PathParameters>>`
kablam!                found type `syntax::ast::PathParameters`
kablam! 
kablam! error[E0061]: this function takes 5 parameters but 4 parameters were supplied
kablam!    --> src/lib.rs:149:42
kablam!     |
kablam! 149 |                 let typaram = cx.typaram(sp, ty_ident, OwnedSlice::from_vec(vec![cx.typarambound(path)]), None);
kablam!     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 5 parameters
kablam! 
kablam! error[E0063]: missing field `span` in initializer of `syntax::ast::Generics`
kablam!    --> src/lib.rs:152:27
kablam!     |
kablam! 152 |                 let gen = Generics {
kablam!     |                           ^^^^^^^^ missing `span`
kablam! 
kablam! error: aborting due to 5 previous errors
kablam! 
kablam! error: Could not compile `adorn`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 16851b132c9d1601c30981120a99c85f988439164e41a447cb8ec2ef22a72564`
blam! 16851b132c9d1601c30981120a99c85f988439164e41a447cb8ec2ef22a72564
