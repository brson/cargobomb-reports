boom! testing https://github.com/nickmass/mass-nes#508a09226c095bb1a108a4dc78deacda1f131e8c against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 5fa9d3e15a62fc689427543da1aa354f4ef24bebcc3544214adad51a79c7b40f
boom! running `docker start -a 5fa9d3e15a62fc689427543da1aa354f4ef24bebcc3544214adad51a79c7b40f`
kablam!    Compiling backtrace-sys v0.1.5
kablam!    Compiling ogg v0.4.0
kablam!    Compiling nes_ntsc-sys v0.1.0 (file:///source/nes_ntsc/nes_ntsc-sys)
kablam!    Compiling wayland-scanner v0.5.11
kablam! warning: unused import: `std::env`
kablam!  --> nes_ntsc/nes_ntsc-sys/build.rs:3:5
kablam!   |
kablam! 3 | use std::env;
kablam!   |     ^^^^^^^^
kablam!   |
kablam!   = note: #[warn(unused_imports)] on by default
kablam! 
kablam!    Compiling x11-dl v2.12.0
kablam!    Compiling lewton v0.4.1
kablam!    Compiling alsa-sys v0.1.0
kablam!    Compiling blip_buf-sys v0.1.3
kablam!    Compiling wayland-client v0.5.12
kablam! error: failed to run custom build command for `alsa-sys v0.1.0`
kablam! process didn't exit successfully: `/target/debug/build/alsa-sys-3436ebb1ba4a2a08/build-script-build` (exit code: 101)
kablam! --- stderr
kablam! thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: "Failed to run `\"pkg-config\" \"--libs\" \"--cflags\" \"alsa\"`: No such file or directory (os error 2)"', /buildslave/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/libcore/result.rs:860
kablam! note: Run with `RUST_BACKTRACE=1` for a backtrace.
kablam! 
blam! Build failed, waiting for other jobs to finish...
kablam! error: build failed
boom! running `docker rm -f 5fa9d3e15a62fc689427543da1aa354f4ef24bebcc3544214adad51a79c7b40f`
blam! 5fa9d3e15a62fc689427543da1aa354f4ef24bebcc3544214adad51a79c7b40f
