boom! testing https://github.com/boinc-next/boinc-rpc-rs#77b9da412e12287f5883f93448e0620d94208a4e against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 7669f65a76e51b07b34888c8cdbec40a0f1f3c262991ad5d6e916237ba56733b
boom! running `docker start -a 7669f65a76e51b07b34888c8cdbec40a0f1f3c262991ad5d6e916237ba56733b`
kablam!    Compiling rust-crypto v0.2.36
kablam!    Compiling rand v0.3.14
kablam!    Compiling time v0.1.35
kablam!    Compiling boinc-rpc v0.1.0 (file:///source)
kablam! warning: enum is never used: `Component`
kablam!   --> src/models.rs:21:1
kablam!    |
kablam! 21 |   pub enum Component {
kablam!    |  _^ starting here...
kablam! 22 | |     CPU,
kablam! 23 | |     GPU,
kablam! 24 | |     Network,
kablam! 25 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: enum is never used: `RunMode`
kablam!   --> src/models.rs:27:1
kablam!    |
kablam! 27 |   pub enum RunMode {
kablam!    |  _^ starting here...
kablam! 28 | |     Always,
kablam! 29 | |     Auto,
kablam! 30 | |     Never,
kablam! 31 | |     Restore,
kablam! 32 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: enum is never used: `CpuSched`
kablam!   --> src/models.rs:34:1
kablam!    |
kablam! 34 |   pub enum CpuSched {
kablam!    |  _^ starting here...
kablam! 35 | |     Uninitialized,
kablam! 36 | |     Preempted,
kablam! 37 | |     Scheduled,
kablam! 38 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: enum is never used: `ResultState`
kablam!   --> src/models.rs:40:1
kablam!    |
kablam! 40 | pub enum ResultState {
kablam!    | ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: variant `ABORT_PENDING` should have a camel case name such as `AbortPending`
kablam!   --> src/models.rs:55:5
kablam!    |
kablam! 55 |     ABORT_PENDING = 5,
kablam!    |     ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `QUIT_PENDING` should have a camel case name such as `QuitPending`
kablam!   --> src/models.rs:56:5
kablam!    |
kablam! 56 |     QUIT_PENDING = 8,
kablam!    |     ^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: variant `COPY_PENDING` should have a camel case name such as `CopyPending`
kablam!   --> src/models.rs:57:5
kablam!    |
kablam! 57 |     COPY_PENDING = 10,
kablam!    |     ^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = note: #[warn(non_camel_case_types)] on by default
kablam! 
kablam! warning: enum is never used: `Process`
kablam!   --> src/models.rs:51:1
kablam!    |
kablam! 51 |   pub enum Process {
kablam!    |  _^ starting here...
kablam! 52 | |     UNINITIALIZED = 0,
kablam! 53 | |     EXECUTING = 1,
kablam! 54 | |     SUSPENDED = 9,
kablam! 55 | |     ABORT_PENDING = 5,
kablam! 56 | |     QUIT_PENDING = 8,
kablam! 57 | |     COPY_PENDING = 10,
kablam! 58 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `VersionInfo`
kablam!   --> src/models.rs:60:1
kablam!    |
kablam! 60 |   pub struct VersionInfo {
kablam!    |  _^ starting here...
kablam! 61 | |     major: std::option::Option<i64>,
kablam! 62 | |     minor: std::option::Option<i64>,
kablam! 63 | |     release: std::option::Option<i64>,
kablam! 64 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: struct is never used: `HostInfo`
kablam!   --> src/models.rs:66:1
kablam!    |
kablam! 66 | pub struct HostInfo {
kablam!    | ^
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `query_daemon_simple`
kablam!   --> src/rpc.rs:39:1
kablam!    |
kablam! 39 |   pub fn query_daemon_simple(host: &std::net::SocketAddr,
kablam!    |  _^ starting here...
kablam! 40 | |                            password: &String)
kablam! 41 | |                            -> Result<(), BoincError> {
kablam! 42 | |     query_daemon(host, password, &mut |_| Ok(false), &mut |_| Ok(false))
kablam! 43 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam! warning: function is never used: `query_daemon_request_only`
kablam!   --> src/rpc.rs:45:1
kablam!    |
kablam! 45 |   pub fn query_daemon_request_only<F>(host: &std::net::SocketAddr,
kablam!    |  _^ starting here...
kablam! 46 | |                                     password: &String,
kablam! 47 | |                                     request: &mut F)
kablam! 48 | |                                     -> Result<(), BoincError>
kablam! 49 | |     where F: FnMut(&Element) -> Result<bool, BoincError>
kablam! 50 | | {
kablam! 51 | |     query_daemon(host, password, request, &mut |_| Ok(false))
kablam! 52 | | }
kablam!    | |_^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 18.23 secs
boom! running `docker rm -f 7669f65a76e51b07b34888c8cdbec40a0f1f3c262991ad5d6e916237ba56733b`
blam! 7669f65a76e51b07b34888c8cdbec40a0f1f3c262991ad5d6e916237ba56733b
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 295f6e69264ab735dea425c585174c2dac34763c0046423b91356d0fee14f33f
boom! running `docker start -a 295f6e69264ab735dea425c585174c2dac34763c0046423b91356d0fee14f33f`
kablam!    Compiling boinc-rpc v0.1.0 (file:///source)
kablam! error[E0277]: the trait bound `sxd_document::QName<'_>: std::convert::From<fn() -> std::string::String {std::string::String::new}>` is not satisfied
kablam!    --> src/lib.rs:503:27
kablam!     |
kablam! 503 |         let fixture = doc.create_element(String::new);
kablam!     |                           ^^^^^^^^^^^^^^ the trait `std::convert::From<fn() -> std::string::String {std::string::String::new}>` is not implemented for `sxd_document::QName<'_>`
kablam!     |
kablam!     = help: the following implementations were found:
kablam!               <sxd_document::QName<'s> as std::convert::From<(&'s str, &'s str)>>
kablam!               <sxd_document::QName<'s> as std::convert::From<&'s str>>
kablam!     = note: required because of the requirements on the impl of `std::convert::Into<sxd_document::QName<'_>>` for `fn() -> std::string::String {std::string::String::new}`
kablam! 
kablam! error: aborting due to previous error
kablam! 
kablam! error: Could not compile `boinc-rpc`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 295f6e69264ab735dea425c585174c2dac34763c0046423b91356d0fee14f33f`
blam! 295f6e69264ab735dea425c585174c2dac34763c0046423b91356d0fee14f33f
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 85e4242cd540ee30bdb8c2b7e001cb5a934c7b1794fcb658ea2bf5f359301444
boom! running `docker start -a 85e4242cd540ee30bdb8c2b7e001cb5a934c7b1794fcb658ea2bf5f359301444`
kablam!    Compiling boinc-rpc v0.1.0 (file:///source)
kablam! error[E0277]: the trait bound `sxd_document::QName<'_>: std::convert::From<fn() -> std::string::String {std::string::String::new}>` is not satisfied
kablam!    --> src/lib.rs:503:27
kablam!     |
kablam! 503 |         let fixture = doc.create_element(String::new);
kablam!     |                           ^^^^^^^^^^^^^^ the trait `std::convert::From<fn() -> std::string::String {std::string::String::new}>` is not implemented for `sxd_document::QName<'_>`
kablam!     |
kablam!     = help: the following implementations were found:
kablam!               <sxd_document::QName<'s> as std::convert::From<(&'s str, &'s str)>>
kablam!               <sxd_document::QName<'s> as std::convert::From<&'s str>>
kablam!     = note: required because of the requirements on the impl of `std::convert::Into<sxd_document::QName<'_>>` for `fn() -> std::string::String {std::string::String::new}`
kablam! 
kablam! error: aborting due to previous error
kablam! 
kablam! error: Could not compile `boinc-rpc`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f 85e4242cd540ee30bdb8c2b7e001cb5a934c7b1794fcb658ea2bf5f359301444`
blam! 85e4242cd540ee30bdb8c2b7e001cb5a934c7b1794fcb658ea2bf5f359301444
