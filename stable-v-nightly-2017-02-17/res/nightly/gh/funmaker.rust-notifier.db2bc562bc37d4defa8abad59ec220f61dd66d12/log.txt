boom! testing https://github.com/funmaker/rust-notifier#db2bc562bc37d4defa8abad59ec220f61dd66d12 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! dbdc82a3b029d258e32cefa97e3eac3ab990e7548b099d19494e50e3ed80f609
boom! running `docker start -a dbdc82a3b029d258e32cefa97e3eac3ab990e7548b099d19494e50e3ed80f609`
kablam!    Compiling memchr v0.1.11
kablam!    Compiling net2 v0.2.26
kablam!    Compiling serde v0.8.15
kablam!    Compiling aster v0.27.0
kablam!    Compiling aho-corasick v0.5.3
kablam! error[E0432]: unresolved import `syntax::parse::token::keywords`
kablam!  --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/item.rs:8:5
kablam!   |
kablam! 8 | use syntax::parse::token::keywords;
kablam!   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `keywords` in `parse::token`
kablam! 
kablam! error[E0422]: cannot find struct, variant or union type `Attribute_` in module `ast`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:51:38
kablam!    |
kablam! 51 |         let attr = respan(self.span, ast::Attribute_ {
kablam!    |                                      ^^^^^^^^^^^^^^^ did you mean `ast::Attribute`?
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:171:11
kablam!     |
kablam! 171 |     name: token::InternedString,
kablam!     |           ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!     |
kablam!     = help: possible candidate is found in another module, you can import it into scope:
kablam!               `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:281:11
kablam!     |
kablam! 281 |     name: token::InternedString,
kablam!     |           ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!     |
kablam!     = help: possible candidate is found in another module, you can import it into scope:
kablam!               `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0423]: expected function, found struct `ast::Name`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/item.rs:734:38
kablam!     |
kablam! 734 |         self.builder.build_item_kind(ast::Name(0).to_ident(), item_mac)
kablam!     |                                      ^^^^^^^^^
kablam!     |                                      |
kablam!     |                                      did you mean `ast::Name { /* fields */ }`?
kablam!     |                                      constructor is not visible here due to private fields
kablam! 
kablam! error[E0425]: cannot find function `intern` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/name.rs:18:9
kablam!    |
kablam! 18 |         token::intern(*self)
kablam!    |         ^^^^^^^^^^^^^ not found in `token`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/str.rs:12:37
kablam!    |
kablam! 12 |     fn to_interned_string(&self) -> token::InternedString;
kablam!    |                                     ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/str.rs:15:27
kablam!    |
kablam! 15 | impl ToInternedString for token::InternedString {
kablam!    |                           ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/str.rs:16:37
kablam!    |
kablam! 16 |     fn to_interned_string(&self) -> token::InternedString {
kablam!    |                                     ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/str.rs:22:37
kablam!    |
kablam! 22 |     fn to_interned_string(&self) -> token::InternedString {
kablam!    |                                     ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0425]: cannot find function `intern_and_get_ident` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/str.rs:23:9
kablam!    |
kablam! 23 |         token::intern_and_get_ident(self)
kablam!    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/str.rs:28:37
kablam!    |
kablam! 28 |     fn to_interned_string(&self) -> token::InternedString {
kablam!    |                                     ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/str.rs:34:37
kablam!    |
kablam! 34 |     fn to_interned_string(&self) -> token::InternedString {
kablam!    |                                     ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/str.rs:40:37
kablam!    |
kablam! 40 |     fn to_interned_string(&self) -> token::InternedString {
kablam!    |                                     ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0412]: cannot find type `InternedString` in module `token`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/lib.rs:63:47
kablam!    |
kablam! 63 |     pub fn interned_string<S>(&self, s: S) -> token::InternedString
kablam!    |                                               ^^^^^^^^^^^^^^^^^^^^^ not found in `token`
kablam!    |
kablam!    = help: possible candidate is found in another module, you can import it into scope:
kablam!              `use syntax::symbol::InternedString;`
kablam! 
kablam! error[E0061]: this function takes 3 parameters but 4 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/mac.rs:110:31
kablam!     |
kablam! 110 |     let mut cx = ExtCtxt::new(sess, cfg, ecfg, macro_loader);
kablam!     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 3 parameters
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:57:30
kablam!    |
kablam! 57 |         self.callback.invoke(attr)
kablam!    |                              ^^^^ expected struct `syntax::ast::Attribute`, found struct `syntax::codemap::Spanned`
kablam!    |
kablam!    = note: expected type `syntax::ast::Attribute`
kablam!               found type `syntax::codemap::Spanned<_>`
kablam! 
kablam!    Compiling openssl-sys-extras v0.7.14
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:62:30
kablam!    |
kablam! 62 |         self.build_meta_item(item)
kablam!    |                              ^^^^ expected struct `syntax::ast::MetaItem`, found struct `syntax::codemap::Spanned`
kablam!    |
kablam!    = note: expected type `syntax::ptr::P<syntax::ast::MetaItem>`
kablam!               found type `syntax::ptr::P<syntax::codemap::Spanned<syntax::ast::MetaItemKind>>`
kablam!    = help: here are some functions which might fulfill your needs:
kablam!            - .unwrap()
kablam! 
kablam! error: `ast::MetaItemKind::Word` is being called, but it is not a function
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:68:31
kablam!    |
kablam! 68 |         self.build_meta_item_(ast::MetaItemKind::Word(word.to_interned_string()))
kablam!    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!    |
kablam!    = help: did you mean to write `ast::MetaItemKind::Word`?
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:199:60
kablam!     |
kablam! 199 |             respan(span, ast::NestedMetaItemKind::MetaItem(meta_item))
kablam!     |                                                            ^^^^^^^^^ expected struct `syntax::ast::MetaItem`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `syntax::ast::MetaItem`
kablam!                found type `syntax::ptr::P<syntax::ast::MetaItem>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam! 
kablam! error[E0271]: type mismatch resolving `<[closure@/cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:209:39: 209:67 span:_] as std::ops::FnOnce<(syntax::ast::MetaItemKind,)>>::Output == syntax::ptr::P<syntax::ast::MetaItem>`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:209:14
kablam!     |
kablam! 209 |         self.with_meta_items(iter.map(|item| P(respan(span, item))))
kablam!     |              ^^^^^^^^^^^^^^^ expected struct `syntax::codemap::Spanned`, found struct `syntax::ast::MetaItem`
kablam!     |
kablam!     = note: expected type `syntax::ptr::P<syntax::codemap::Spanned<syntax::ast::MetaItemKind>>`
kablam!                found type `syntax::ptr::P<syntax::ast::MetaItem>`
kablam!     = note: required because of the requirements on the impl of `std::iter::Iterator` for `std::iter::Map<<I as std::iter::IntoIterator>::IntoIter, [closure@/cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:209:39: 209:67 span:_]>`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:213:77
kablam!     |
kablam! 213 |         self.items.push(respan(self.span, ast::NestedMetaItemKind::MetaItem(item)));
kablam!     |                                                                             ^^^^ expected struct `syntax::ast::MetaItem`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `syntax::ast::MetaItem`
kablam!                found type `syntax::ptr::P<syntax::ast::MetaItem>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .unwrap()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:219:31
kablam!     |
kablam! 219 |         self.with_meta_item(P(respan(span, item)))
kablam!     |                               ^^^^^^^^^^^^^^^^^^ expected struct `syntax::ast::MetaItem`, found struct `syntax::codemap::Spanned`
kablam!     |
kablam!     = note: expected type `syntax::ast::MetaItem`
kablam!                found type `syntax::codemap::Spanned<syntax::ast::MetaItemKind>`
kablam! 
kablam! error: `ast::MetaItemKind::Word` is being called, but it is not a function
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:227:47
kablam!     |
kablam! 227 |         self.with_meta_items_(iter.map(|word| ast::MetaItemKind::Word(word.to_interned_string())))
kablam!     |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: did you mean to write `ast::MetaItemKind::Word`?
kablam! 
kablam! error: `ast::MetaItemKind::Word` is being called, but it is not a function
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:233:34
kablam!     |
kablam! 233 |         self.with_meta_item_kind(ast::MetaItemKind::Word(word.to_interned_string()))
kablam!     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kablam!     |
kablam!     = help: did you mean to write `ast::MetaItemKind::Word`?
kablam! 
kablam! error[E0061]: this function takes 1 parameter but 2 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:252:62
kablam!     |
kablam! 252 |         let item = respan(self.span, ast::MetaItemKind::List(self.name, self.items));
kablam!     |                                                              ^^^^^^^^^^^^^^^^^^^^^ expected 1 parameter
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:253:32
kablam!     |
kablam! 253 |         self.callback.invoke(P(item))
kablam!     |                                ^^^^ expected struct `syntax::ast::MetaItem`, found struct `syntax::codemap::Spanned`
kablam!     |
kablam!     = note: expected type `syntax::ast::MetaItem`
kablam!                found type `syntax::codemap::Spanned<syntax::ast::MetaItemKind>`
kablam! 
kablam! error[E0061]: this function takes 1 parameter but 2 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/attr.rs:288:49
kablam!     |
kablam! 288 |         let item = ast::MetaItemKind::NameValue(self.name, (*value).clone());
kablam!     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 parameter
kablam! 
kablam! error[E0061]: this function takes 2 parameters but 1 parameter was supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/expr.rs:422:51
kablam!     |
kablam! 422 |         self.build_expr_kind(ast::ExprKind::Break(None))
kablam!     |                                                   ^^^^ expected 2 parameters
kablam! 
kablam! error[E0061]: this function takes 2 parameters but 1 parameter was supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/expr.rs:429:51
kablam!     |
kablam! 429 |         self.build_expr_kind(ast::ExprKind::Break(Some(label)))
kablam!     |                                                   ^^^^^^^^^^^ expected 2 parameters
kablam! 
kablam! error[E0063]: missing fields `attrs`, `is_shorthand` in initializer of `syntax::ast::Field`
kablam!     --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/expr.rs:1078:21
kablam!      |
kablam! 1078 |         let field = ast::Field {
kablam!      |                     ^^^^^^^^^^ missing `attrs`, `is_shorthand`
kablam! 
kablam! error: no associated item named `Vec` found for type `syntax::ast::ExprKind` in the current scope
kablam!     --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/expr.rs:1782:38
kablam!      |
kablam! 1782 |         self.builder.build_expr_kind(ast::ExprKind::Vec(self.exprs))
kablam!      |                                      ^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error[E0308]: mismatched types
kablam!     --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/expr.rs:1942:92
kablam!      |
kablam! 1942 |         self.builder.build_expr_kind(ast::ExprKind::Closure(self.capture_by, self.fn_decl, block, self.span))
kablam!      |                                                                                            ^^^^^ expected struct `syntax::ast::Expr`, found struct `syntax::ast::Block`
kablam!      |
kablam!      = note: expected type `syntax::ptr::P<syntax::ast::Expr>`
kablam!                 found type `syntax::ptr::P<syntax::ast::Block>`
kablam!      = help: here are some functions which might fulfill your needs:
kablam!              - .unwrap()
kablam! 
kablam! error: no method named `into_vec` found for type `std::vec::Vec<syntax::ast::TyParam>` in the current scope
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/generics.rs:53:43
kablam!    |
kablam! 53 |             ty_params: generics.ty_params.into_vec(),
kablam!    |                                           ^^^^^^^^
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/generics.rs:203:31
kablam!     |
kablam! 203 |             ty_param.bounds = P::new();
kablam!     |                               ^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                found type `syntax::ptr::P<[_]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/generics.rs:216:24
kablam!     |
kablam! 216 |             ty_params: P::from_vec(self.ty_params),
kablam!     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParam>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TyParam]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/item.rs:889:13
kablam!     |
kablam! 889 |             P::from_vec(self.bounds),
kablam!     |             ^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TyParamBound]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!     --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/item.rs:1103:45
kablam!      |
kablam! 1103 |         let node = ast::TraitItemKind::Type(bounds, ty);
kablam!      |                                             ^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!      |
kablam!      = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                 found type `syntax::ptr::P<[syntax::ast::TyParamBound]>`
kablam!      = help: here are some functions which might fulfill your needs:
kablam!              - .into_vec()
kablam!              - .to_vec()
kablam! 
kablam!    Compiling openssl v0.7.14
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::LifetimeDef`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/lifetime.rs:43:9
kablam!    |
kablam! 43 |         ast::LifetimeDef {
kablam!    |         ^^^^^^^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::LifetimeDef`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/lifetime.rs:111:30
kablam!     |
kablam! 111 |         self.callback.invoke(ast::LifetimeDef {
kablam!     |                              ^^^^^^^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/lit.rs:61:42
kablam!    |
kablam! 61 |         self.build_lit(ast::LitKind::Int(value as u64, ast::LitIntType::Unsuffixed))
kablam!    |                                          ^^^^^^^^^^^^ expected u128, found u64
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/lit.rs:66:42
kablam!    |
kablam! 66 |         self.build_lit(ast::LitKind::Int(value as u64, ast::LitIntType::Signed(ty)))
kablam!    |                                          ^^^^^^^^^^^^ expected u128, found u64
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/lit.rs:94:42
kablam!    |
kablam! 94 |         self.build_lit(ast::LitKind::Int(value, ast::LitIntType::Unsuffixed))
kablam!    |                                          ^^^^^ expected u128, found u64
kablam! 
kablam! error[E0308]: mismatched types
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/lit.rs:98:42
kablam!    |
kablam! 98 |         self.build_lit(ast::LitKind::Int(value, ast::LitIntType::Unsigned(ty)))
kablam!    |                                          ^^^^^ expected u128, found u64
kablam! 
kablam! error[E0061]: this function takes 3 parameters but 2 parameters were supplied
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/pat.rs:124:49
kablam!     |
kablam! 124 |         self.build_pat_kind(ast::PatKind::Range(lhs, rhs))
kablam!     |                                                 ^^^^^^^^ expected 3 parameters
kablam! 
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::FieldPat`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/pat.rs:353:29
kablam!     |
kablam! 353 |         self.with_field_pat(ast::FieldPat {
kablam!     |                             ^^^^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::FieldPat`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/pat.rs:367:29
kablam!     |
kablam! 367 |         self.with_field_pat(ast::FieldPat {
kablam!     |                             ^^^^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::FieldPat`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/pat.rs:396:37
kablam!     |
kablam! 396 |         self.builder.with_field_pat(ast::FieldPat {
kablam!     |                                     ^^^^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error[E0560]: struct `syntax::ast::Path` has no field named `global`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/path.rs:159:13
kablam!     |
kablam! 159 |             global: self.global,
kablam!     |             ^^^^^^^ `syntax::ast::Path` does not have this field
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/path.rs:298:25
kablam!     |
kablam! 298 |             parameters: parameters,
kablam!     |                         ^^^^^^^^^^ expected enum `std::option::Option`, found enum `syntax::ast::PathParameters`
kablam!     |
kablam!     = note: expected type `std::option::Option<syntax::ptr::P<syntax::ast::PathParameters>>`
kablam!                found type `syntax::ast::PathParameters`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/path.rs:305:20
kablam!     |
kablam! 305 |             types: P::from_vec(self.tys),
kablam!     |                    ^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ptr::P<syntax::ast::Ty>>`
kablam!                found type `syntax::ptr::P<[syntax::ptr::P<syntax::ast::Ty>]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/path.rs:306:23
kablam!     |
kablam! 306 |             bindings: P::from_vec(self.bindings),
kablam!     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TypeBinding>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TypeBinding]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/path.rs:313:25
kablam!     |
kablam! 313 |             parameters: parameters,
kablam!     |                         ^^^^^^^^^^ expected enum `std::option::Option`, found enum `syntax::ast::PathParameters`
kablam!     |
kablam!     = note: expected type `std::option::Option<syntax::ptr::P<syntax::ast::PathParameters>>`
kablam!                found type `syntax::ast::PathParameters`
kablam! 
kablam! error[E0560]: struct `syntax::ast::Path` has no field named `global`
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/qpath.rs:95:13
kablam!    |
kablam! 95 |             global: false,
kablam!    |             ^^^^^^^ `syntax::ast::Path` does not have this field
kablam! 
kablam! error[E0560]: struct `syntax::ast::Path` has no field named `global`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/qpath.rs:106:13
kablam!     |
kablam! 106 |             global: false,
kablam!     |             ^^^^^^^ `syntax::ast::Path` does not have this field
kablam! 
kablam! error: no associated item named `Vec` found for type `syntax::ast::TyKind` in the current scope
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/ty.rs:142:28
kablam!     |
kablam! 142 |         self.build_ty_kind(ast::TyKind::Vec(ty))
kablam!     |                            ^^^^^^^^^^^^^^^^
kablam! 
kablam! error: no associated item named `ObjectSum` found for type `syntax::ast::TyKind` in the current scope
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/ty.rs:501:36
kablam!     |
kablam! 501 |         self.builder.build_ty_kind(ast::TyKind::ObjectSum(self.ty, bounds))
kablam!     |                                    ^^^^^^^^^^^^^^^^^^^^^^
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/ty.rs:567:59
kablam!     |
kablam! 567 |         self.builder.build_ty_kind(ast::TyKind::ImplTrait(bounds))
kablam!     |                                                           ^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TyParamBound]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error: no method named `into_vec` found for type `std::vec::Vec<syntax::ast::TyParamBound>` in the current scope
kablam!   --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/ty_param.rs:54:37
kablam!    |
kablam! 54 |             bounds: ty_param.bounds.into_vec(),
kablam!    |                                     ^^^^^^^^
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/ty_param.rs:106:21
kablam!     |
kablam! 106 |             bounds: P::from_vec(self.bounds),
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TyParamBound]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0063]: missing field `attrs` in initializer of `syntax::ast::TyParam`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/ty_param.rs:103:30
kablam!     |
kablam! 103 |         self.callback.invoke(ast::TyParam {
kablam!     |                              ^^^^^^^^^^^^ missing `attrs`
kablam! 
kablam! error[E0308]: mismatched types
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/where_predicate.rs:243:21
kablam!     |
kablam! 243 |             bounds: P::from_vec(self.bounds),
kablam!     |                     ^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `syntax::ptr::P`
kablam!     |
kablam!     = note: expected type `std::vec::Vec<syntax::ast::TyParamBound>`
kablam!                found type `syntax::ptr::P<[syntax::ast::TyParamBound]>`
kablam!     = help: here are some functions which might fulfill your needs:
kablam!             - .into_vec()
kablam!             - .to_vec()
kablam! 
kablam! error[E0560]: struct `syntax::ast::WhereEqPredicate` has no field named `path`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/where_predicate.rs:322:13
kablam!     |
kablam! 322 |             path: path,
kablam!     |             ^^^^^ `syntax::ast::WhereEqPredicate` does not have this field
kablam! 
kablam! error[E0560]: struct `syntax::ast::WhereEqPredicate` has no field named `ty`
kablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/aster-0.27.0/src/where_predicate.rs:323:13
kablam!     |
kablam! 323 |             ty: ty,
kablam!     |             ^^^ `syntax::ast::WhereEqPredicate` does not have this field
kablam! 
kablam! error: aborting due to 49 previous errors
kablam! 
kablam! error: Could not compile `aster`.
blam! Build failed, waiting for other jobs to finish...
kablam! error: build failed
boom! running `docker rm -f dbdc82a3b029d258e32cefa97e3eac3ab990e7548b099d19494e50e3ed80f609`
blam! dbdc82a3b029d258e32cefa97e3eac3ab990e7548b099d19494e50e3ed80f609
