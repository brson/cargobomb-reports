boom! testing https://github.com/jacquesrott/rust-pi#397b301b480d332e9d84346969af2a4b325ca5f4 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! d6eccc49e3d160445b5de2b68dec150a522ae8dfaf9e9573b5f1b1847a612042
boom! running `docker start -a d6eccc49e3d160445b5de2b68dec150a522ae8dfaf9e9573b5f1b1847a612042`
kablam!    Compiling pi v0.0.1 (file:///source)
kablam! error: expected expression, found reserved keyword `proc`
kablam!   --> src/main.rs:40:15
kablam!    |
kablam! 40 |         spawn(proc() {
kablam!    |               ^^^^
kablam! 
kablam! error: expected one of `)`, `.`, `;`, `<`, `?`, `break`, `continue`, `false`, `for`, `if`, `loop`, `match`, `move`, `return`, `true`, `unsafe`, `while`, `}`, or an operator, found `proc`
kablam!   --> src/main.rs:40:15
kablam!    |
kablam! 40 |         spawn(proc() {
kablam!    |               ^^^^
kablam! 
kablam! error: expected expression, found `]`
kablam!   --> src/main.rs:70:37
kablam!    |
kablam! 70 |         .map(|s| from_str::<uint>(s[])
kablam!    |                                     ^
kablam! 
kablam! error: expected one of `.`, `;`, `<`, `?`, `break`, `continue`, `false`, `for`, `if`, `loop`, `match`, `move`, `return`, `true`, `unsafe`, `while`, or an operator, found `]`
kablam!   --> src/main.rs:70:37
kablam!    |
kablam! 70 |         .map(|s| from_str::<uint>(s[])
kablam!    |                                     ^
kablam! 
kablam! error: aborting due to previous error
kablam! 
kablam! error: Could not compile `pi`.
kablam! 
kablam! To learn more, run the command again with --verbose.
boom! running `docker rm -f d6eccc49e3d160445b5de2b68dec150a522ae8dfaf9e9573b5f1b1847a612042`
blam! d6eccc49e3d160445b5de2b68dec150a522ae8dfaf9e9573b5f1b1847a612042
