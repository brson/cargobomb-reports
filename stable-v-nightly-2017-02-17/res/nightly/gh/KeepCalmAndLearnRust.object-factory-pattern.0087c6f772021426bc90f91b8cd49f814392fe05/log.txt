boom! testing https://github.com/KeepCalmAndLearnRust/object-factory-pattern#0087c6f772021426bc90f91b8cd49f814392fe05 against nightly for nightly
boom! running: cargo +nightly build --frozen
boom! creating container for: cargo +nightly build --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`
blam! 8d3aca6c60b8521e03a111ad68737e656690117a83ba080c62306fc113fa34f4
boom! running `docker start -a 8d3aca6c60b8521e03a111ad68737e656690117a83ba080c62306fc113fa34f4`
kablam!    Compiling object-factory-pattern v0.1.0 (file:///source)
kablam! warning: variable does not need to be mutable
kablam!   --> src/main.rs:13:13
kablam!    |
kablam! 13 |         let mut pool = vec![];
kablam!    |             ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: method is never used: `return_conn`
kablam!   --> src/main.rs:24:5
kablam!    |
kablam! 24 |       fn return_conn(&mut self, conn: T) {
kablam!    |  _____^ starting here...
kablam! 25 | |         self.pool.push(conn);
kablam! 26 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.11 secs
boom! running `docker rm -f 8d3aca6c60b8521e03a111ad68737e656690117a83ba080c62306fc113fa34f4`
blam! 8d3aca6c60b8521e03a111ad68737e656690117a83ba080c62306fc113fa34f4
boom! running: cargo +nightly test --frozen --no-run
boom! creating container for: cargo +nightly test --frozen --no-run
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen --no-run cargobomb`
blam! 44250b80ac065d6b7fcf063852b85f0ef890f6d63c3e0a5e8035095ffb89ed79
boom! running `docker start -a 44250b80ac065d6b7fcf063852b85f0ef890f6d63c3e0a5e8035095ffb89ed79`
kablam!    Compiling object-factory-pattern v0.1.0 (file:///source)
kablam! warning: variable does not need to be mutable
kablam!   --> src/main.rs:13:13
kablam!    |
kablam! 13 |         let mut pool = vec![];
kablam!    |             ^^^^^^^^
kablam!    |
kablam!    = note: #[warn(unused_mut)] on by default
kablam! 
kablam! warning: method is never used: `return_conn`
kablam!   --> src/main.rs:24:5
kablam!    |
kablam! 24 |       fn return_conn(&mut self, conn: T) {
kablam!    |  _____^ starting here...
kablam! 25 | |         self.pool.push(conn);
kablam! 26 | |     }
kablam!    | |_____^ ...ending here
kablam!    |
kablam!    = note: #[warn(dead_code)] on by default
kablam! 
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 1.19 secs
boom! running `docker rm -f 44250b80ac065d6b7fcf063852b85f0ef890f6d63c3e0a5e8035095ffb89ed79`
blam! 44250b80ac065d6b7fcf063852b85f0ef890f6d63c3e0a5e8035095ffb89ed79
boom! running: cargo +nightly test --frozen
boom! creating container for: cargo +nightly test --frozen
boom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly test --frozen cargobomb`
blam! 07a3f4b410cb4f5b17742e97a7f68a56fa4ede56ca75e131f0aef8fc4a103a39
boom! running `docker start -a 07a3f4b410cb4f5b17742e97a7f68a56fa4ede56ca75e131f0aef8fc4a103a39`
kablam!     Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs
kablam!      Running /target/debug/deps/object_factory_pattern-c76b316ba5c84fc9
blam! 
blam! running 0 tests
blam! 
blam! test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured
blam! 
boom! running `docker rm -f 07a3f4b410cb4f5b17742e97a7f68a56fa4ede56ca75e131f0aef8fc4a103a39`
blam! 07a3f4b410cb4f5b17742e97a7f68a56fa4ede56ca75e131f0aef8fc4a103a39
